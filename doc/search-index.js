var searchIndex = JSON.parse('{\
"ab_glyph_rasterizer":{"doc":"Coverage rasterization for lines, quadratic &amp; cubic …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Point","Rasterizer","add","add_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","default","dimensions","draw_cubic","draw_line","draw_quad","eq","fmt","fmt","for_each_pixel","for_each_pixel_2d","from","from","from","from","into","into","ne","new","partial_cmp","point","reset","sub","sub_assign","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["ab_glyph_rasterizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An (x, y) coordinate.","Coverage rasterizer for lines, quadratic &amp; cubic beziers.","Add rhs.x to x, rhs.y to y.","","","","","","Clears the rasterizer. This method behaves as if the …","","","","Returns the dimensions the rasterizer was built to draw to.","Adds a cubic Bézier curve from <code>p0</code> to <code>p3</code> to the outline …","Adds a straight line from <code>p0</code> to <code>p1</code> to the outline.","Adds a quadratic Bézier curve from <code>p0</code> to <code>p2</code> to the …","","","","Run a callback for each pixel <code>index</code> &amp; <code>alpha</code>, with indices …","Run a callback for each pixel x position, y position &amp; …","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Allocates a new rasterizer that can draw onto a <code>width</code> x …","","<code>Point</code> constructor.","Resets the rasterizer to an empty <code>width</code> x <code>height</code> alpha …","Subtract rhs.x from x, rhs.y from y.","","","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,2,1,1,1,2,2,2,2,1,2,1,2,2,2,1,1,1,2,1,1,2,1,0,2,1,1,1,2,1,2,1,2,1,1,1],"f":[null,null,[[["point",3],["point",3]],["point",3]],[[["point",3],["point",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rasterizer",3]]],[[["point",3]],["point",3]],[[["",0],["",0]]],[[],["point",3]],[[["rasterizer",3]]],[[["rasterizer",3],["point",3],["point",3],["point",3],["point",3]]],[[["rasterizer",3],["point",3],["point",3]]],[[["rasterizer",3],["point",3],["point",3],["point",3]]],[[["point",3],["point",3]],["bool",0]],[[["rasterizer",3],["formatter",3]],["result",6]],[[["point",3],["formatter",3]],["result",6]],[[["rasterizer",3],["fnmut",8]]],[[["rasterizer",3],["fnmut",8]]],[[]],[[],["point",3]],[[]],[[],["point",3]],[[]],[[]],[[["point",3],["point",3]],["bool",0]],[[["usize",0],["usize",0]],["rasterizer",3]],[[["point",3],["point",3]],["option",4,[["ordering",4]]]],[[["f32",0],["f32",0]],["point",3]],[[["rasterizer",3],["usize",0],["usize",0]]],[[["point",3],["point",3]],["point",3]],[[["point",3],["point",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[3,"Point"],[3,"Rasterizer"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","t":[3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Adler32","adler32_slice","borrow","borrow_mut","checksum","clone","default","finish","fmt","from","from_checksum","into","new","try_from","try_into","type_id","write","write_slice"],"q":["adler","","","","","","","","","","","","","","","","",""],"d":["Adler-32 checksum calculator.","Calculates the Adler-32 checksum of a byte slice.","","","Returns the calculated checksum at this point in time.","","","","","Returns the argument unchanged.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Calls <code>U::from(self)</code>.","Creates a new Adler-32 instance with default state.","","","","","Adds <code>bytes</code> to the checksum calculation."],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["u32",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["adler32",3]],["u32",0]],[[["adler32",3]],["adler32",3]],[[],["adler32",3]],[[["adler32",3]],["u64",0]],[[["adler32",3],["formatter",3]],["result",6]],[[]],[[["u32",0]],["adler32",3]],[[]],[[],["adler32",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["adler32",3]]],[[["adler32",3]]]],"p":[[3,"Adler32"]]},\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","t":[3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RollingAdler32","adler32","borrow","borrow_mut","clone","clone_into","default","from","from_buffer","from_value","hash","into","new","remove","to_owned","try_from","try_into","type_id","update","update_buffer"],"q":["adler32","","","","","","","","","","","","","","","","","","",""],"d":["A rolling version of the Adler32 hash, which can ‘forget…","Consume a Read object and returns the Adler32 hash.","","","","","","Returns the argument unchanged.","Convenience function initializing a context from the hash …","Creates an Adler32 context with the given initial value.","Returns the current hash.","Calls <code>U::from(self)</code>.","Creates an empty Adler32 context (with hash 1).","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …","","","","","Feeds a new <code>byte</code> to the algorithm to update the hash.","Feeds a vector of bytes to the algorithm to update the …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["read",8]],["result",6,[["u32",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rollingadler32",3]],["rollingadler32",3]],[[["",0],["",0]]],[[],["rollingadler32",3]],[[]],[[],["rollingadler32",3]],[[["u32",0]],["rollingadler32",3]],[[["rollingadler32",3]],["u32",0]],[[]],[[],["rollingadler32",3]],[[["rollingadler32",3],["usize",0],["u8",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["rollingadler32",3],["u8",0]]],[[["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"block":{"doc":"A Rust interface for Objective-C blocks.","t":[3,8,3,8,3,16,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Block","BlockArguments","ConcreteBlock","IntoConcreteBlock","RcBlock","Ret","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call_block","clone","clone","clone_into","clone_into","copy","copy","deref","deref","deref_mut","drop","from","from","from","into","into","into","into_concrete_block","new","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An Objective-C block that takes arguments of <code>A</code> when called …","Types that may be used as the arguments to an Objective-C …","An Objective-C block whose size is known at compile time …","Types that may be converted into a <code>ConcreteBlock</code>.","A reference-counted Objective-C block.","The return type of the resulting <code>ConcreteBlock</code>.","","","","","","","Call self with the given arguments.","Calls the given <code>Block</code> with self as the arguments.","","","","","Constructs an <code>RcBlock</code> by copying the given block.","Copy self onto the heap as an <code>RcBlock</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self to create a <code>ConcreteBlock</code>.","Construct an <code>RcBlock</code> for the given block without copying …","Constructs a <code>ConcreteBlock</code> with the given closure. When …","","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,3,4,2,3,4,2,5,3,4,3,4,3,4,3,4,4,3,2,3,4,2,3,4,1,3,4,3,4,2,3,4,2,3,4,2,3,4],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["block",3,[["blockarguments",8]]],["blockarguments",8]]],[[["block",0]]],[[["rcblock",3]],["rcblock",3]],[[["concreteblock",3]],["concreteblock",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["block",0]],["rcblock",3]],[[["concreteblock",3]],["rcblock",3]],[[["rcblock",3]],["block",3]],[[["concreteblock",3]],["block",3]],[[["concreteblock",3]],["block",3]],[[["rcblock",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["concreteblock",3]],[[["block",0]],["rcblock",3]],[[],["concreteblock",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[8,"IntoConcreteBlock"],[3,"Block"],[3,"RcBlock"],[3,"ConcreteBlock"],[8,"BlockArguments"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":[13,8,2,8,16,18,18,8,13,8,4,8,13,13,8,8,8,11,11,5,5,5,5,5,5,5,0,11,11,11,11,11,5,5,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,4,13,13,11,11,5,5,5,5,5,11,11,11,11,11,11,5,5,11,11,10,11,5,5,5,5,5,5,11,5,5,11,5,11,12],"n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","eq","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","zeroed","zeroed","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","ne","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","0"],"q":["bytemuck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytemuck::checked","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytemuck::checked::CheckedCastError"],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-[<code>Pod</code>] cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","",""],"i":[1,0,0,0,2,2,2,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,2,2,1,1,2,2,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,0,0,1,0,1,3,3,3,3,3,3,3,3,3,3,4,4,5,0,0,6,6,6,6,0,0,0,0,0,6,6,6,6,6,6,0,0,6,6,5,6,0,0,0,0,0,0,6,0,0,6,0,6,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["nouninit",8]],["anybitpattern",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,[[["podcasterror",4]],["podcasterror",4]],[[["podcasterror",4],["podcasterror",4]],["bool",0]],[[["podcasterror",4],["formatter",3]],["result",6]],[[["podcasterror",4],["formatter",3]],["result",6]],[[]],[[],["",0]],[[],["",0]],[[],["option",4]],[[],["option",4]],[[["podcasterror",4],["",0]]],[[]],[[]],[[]],null,null,[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["anybitpattern",8]],[[["nouninit",8]],["result",4,[["anybitpattern",8],["podcasterror",4]]]],[[["",0]],["result",4,[["podcasterror",4]]]],[[["",0]],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4,[["podcasterror",4]]]],[[],["result",4]],[[],["result",4,[["anybitpattern",8],["podcasterror",4]]]],[[["",0]],["typeid",3]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["nouninit",8]],["checkedbitpattern",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["checkedcasterror",4]],["checkedcasterror",4]],[[["checkedcasterror",4],["checkedcasterror",4]],["bool",0]],[[["checkedcasterror",4],["formatter",3]],["result",6]],[[["checkedcasterror",4],["formatter",3]],["result",6]],[[["podcasterror",4]],["checkedcasterror",4]],[[]],[[],["",0]],[[],["",0]],[[["checkedcasterror",4],["",0]]],[[]],[[],["bool",0]],[[["checkedcasterror",4],["checkedcasterror",4]],["bool",0]],[[],["anybitpattern",8]],[[["nouninit",8]],["result",4,[["checkedbitpattern",8],["checkedcasterror",4]]]],[[["",0]],["result",4,[["checkedcasterror",4]]]],[[["",0]],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4,[["checkedcasterror",4]]]],[[],["result",4]],[[],["result",4,[["checkedbitpattern",8],["checkedcasterror",4]]]],[[["",0]],["typeid",3]],null],"p":[[4,"PodCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"Zeroable"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[13,"PodCastError"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":["byteorderd":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,3,1,2,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,3,4,4,4,4,4,4,3,4,4,3,3,4,4,1,2,3,4,4,1,2,3,4,4,1,2,3,4,4,1,2,4,4,3,3,4,4,1,2,3,4,4,1,2,4,4,3,3,4,4,1,2,3,4,4,1,2,4,4,3,4,4,1,2,3,4,4,1,2,1,2,1,2,1,2,1,2,5,5,3,3,5,5,3,3,5,5,3,3,5,5,3,3,5,5,3,5,5,3,3,5,5,3,5,5,3,3,5,5,3,5,5,3,5,5,3,3,5,5,1,2,3,1,2,3,5,5,1,2,3,1,2,5,5,3,3,5,5,1,2,3,1,2,5,5,3,3,5,5,1,2,3,1,2,5,5,3,5,5,1,2,3,5,5,1,2],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bigendian",4]],["bigendian",4]],[[["littleendian",4]],["littleendian",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bigendian",4],["bigendian",4]],["ordering",4]],[[["littleendian",4],["littleendian",4]],["ordering",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4],["bigendian",4]],["bool",0]],[[["littleendian",4],["littleendian",4]],["bool",0]],[[["bigendian",4],["formatter",3]],["result",6]],[[["littleendian",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bigendian",4],["",0]]],[[["littleendian",4],["",0]]],[[]],[[]],[[["bigendian",4],["bigendian",4]],["option",4,[["ordering",4]]]],[[["littleendian",4],["littleendian",4]],["option",4,[["ordering",4]]]],[[["",0]],["result",6,[["f32",0]]]],[[["",0]],["result",6,[["f32",0]]]],[[],["f32",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["f64",0]]]],[[["",0]],["result",6,[["f64",0]]]],[[],["f64",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["i128",0]]]],[[["",0]],["result",6,[["i128",0]]]],[[],["i128",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["i16",0]]]],[[["",0]],["result",6,[["i16",0]]]],[[],["i16",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["i32",0]]]],[[["",0]],["result",6,[["i32",0]]]],[[],["i32",0]],[[["",0]],["result",6,[["i32",0]]]],[[["",0]],["result",6,[["i32",0]]]],[[],["i32",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["i64",0]]]],[[["",0]],["result",6,[["i64",0]]]],[[],["i64",0]],[[["",0]],["result",6,[["i64",0]]]],[[["",0]],["result",6,[["i64",0]]]],[[],["i64",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[["",0]],["result",6,[["i8",0]]]],[[["",0]],["result",6,[["i8",0]]]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0],["usize",0]],["result",6,[["i64",0]]]],[[["",0],["usize",0]],["result",6,[["i64",0]]]],[[["usize",0]],["i64",0]],[[["",0],["usize",0]],["result",6,[["i128",0]]]],[[["",0],["usize",0]],["result",6,[["i128",0]]]],[[["usize",0]],["i128",0]],[[],["u128",0]],[[["",0]],["result",6,[["u128",0]]]],[[["",0]],["result",6,[["u128",0]]]],[[],["u128",0]],[[],["u128",0]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[]],[[],["u16",0]],[[["",0]],["result",6,[["u16",0]]]],[[["",0]],["result",6,[["u16",0]]]],[[],["u16",0]],[[],["u16",0]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[]],[[["",0]],["result",6,[["u32",0]]]],[[["",0]],["result",6,[["u32",0]]]],[[],["u32",0]],[[],["u32",0]],[[["",0]],["result",6,[["u32",0]]]],[[["",0]],["result",6,[["u32",0]]]],[[],["u32",0]],[[],["u32",0]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[]],[[["",0]],["result",6,[["u64",0]]]],[[["",0]],["result",6,[["u64",0]]]],[[],["u64",0]],[[],["u64",0]],[[["",0]],["result",6,[["u64",0]]]],[[["",0]],["result",6,[["u64",0]]]],[[],["u64",0]],[[],["u64",0]],[[]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[]],[[]],[[["",0]],["result",6,[["u8",0]]]],[[["",0]],["result",6,[["u8",0]]]],[[["usize",0]],["u64",0]],[[["",0],["usize",0]],["result",6,[["u64",0]]]],[[["",0],["usize",0]],["result",6,[["u64",0]]]],[[["usize",0]],["u64",0]],[[["usize",0]],["u64",0]],[[["usize",0]],["u128",0]],[[["",0],["usize",0]],["result",6,[["u128",0]]]],[[["",0],["usize",0]],["result",6,[["u128",0]]]],[[["usize",0]],["u128",0]],[[["usize",0]],["u128",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["f32",0]],["result",6]],[[["",0],["f32",0]],["result",6]],[[["f32",0]]],[[]],[[["",0],["f64",0]],["result",6]],[[["",0],["f64",0]],["result",6]],[[["f64",0]]],[[]],[[["",0],["i128",0]],["result",6]],[[["",0],["i128",0]],["result",6]],[[["i128",0]]],[[]],[[["",0],["i16",0]],["result",6]],[[["",0],["i16",0]],["result",6]],[[["i16",0]]],[[]],[[["",0],["i32",0]],["result",6]],[[["",0],["i32",0]],["result",6]],[[["i32",0]]],[[["",0],["i32",0]],["result",6]],[[["",0],["i32",0]],["result",6]],[[["i32",0]]],[[]],[[["",0],["i64",0]],["result",6]],[[["",0],["i64",0]],["result",6]],[[["i64",0]]],[[["",0],["i64",0]],["result",6]],[[["",0],["i64",0]],["result",6]],[[["i64",0]]],[[]],[[["",0],["i8",0]],["result",6]],[[["",0],["i8",0]],["result",6]],[[]],[[["",0],["i64",0],["usize",0]],["result",6]],[[["",0],["i64",0],["usize",0]],["result",6]],[[["i64",0],["usize",0]]],[[["",0],["i128",0],["usize",0]],["result",6]],[[["",0],["i128",0],["usize",0]],["result",6]],[[["i128",0],["usize",0]]],[[["u128",0]]],[[["",0],["u128",0]],["result",6]],[[["",0],["u128",0]],["result",6]],[[["u128",0]]],[[["u128",0]]],[[]],[[]],[[]],[[["u16",0]]],[[["",0],["u16",0]],["result",6]],[[["",0],["u16",0]],["result",6]],[[["u16",0]]],[[["u16",0]]],[[]],[[]],[[]],[[["",0],["u32",0]],["result",6]],[[["",0],["u32",0]],["result",6]],[[["u32",0]]],[[["u32",0]]],[[["",0],["u32",0]],["result",6]],[[["",0],["u32",0]],["result",6]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[["",0],["u64",0]],["result",6]],[[["",0],["u64",0]],["result",6]],[[["u64",0]]],[[["u64",0]]],[[["",0],["u64",0]],["result",6]],[[["",0],["u64",0]],["result",6]],[[["u64",0]]],[[["u64",0]]],[[]],[[]],[[]],[[["",0],["u8",0]],["result",6]],[[["",0],["u8",0]],["result",6]],[[["u64",0],["usize",0]]],[[["",0],["u64",0],["usize",0]],["result",6]],[[["",0],["u64",0],["usize",0]],["result",6]],[[["u64",0],["usize",0]]],[[["u64",0],["usize",0]]],[[["u128",0],["usize",0]]],[[["",0],["u128",0],["usize",0]],["result",6]],[[["",0],["u128",0],["usize",0]],["result",6]],[[["u128",0],["usize",0]]],[[["u128",0],["usize",0]]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"cgl":{"doc":"","t":[5,6,6,6,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,6,5,5,6,6,5,5,5,5,5,5,6,5,5,17,17,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["CGLChoosePixelFormat","CGLContextEnable","CGLContextObj","CGLContextParameter","CGLCreateContext","CGLDescribePixelFormat","CGLDestroyContext","CGLDestroyPixelFormat","CGLDisable","CGLEnable","CGLError","CGLErrorString","CGLGetCurrentContext","CGLGetGlobalOption","CGLGetOption","CGLGetParameter","CGLGetPixelFormat","CGLGetPixelFormatRetainCount","CGLGetShareGroup","CGLGetVersion","CGLGlobalOption","CGLIsEnabled","CGLLockContext","CGLPixelFormatAttribute","CGLPixelFormatObj","CGLReleasePixelFormat","CGLRetainPixelFormat","CGLSetCurrentContext","CGLSetGlobalOption","CGLSetOption","CGLSetParameter","CGLShareGroupObj","CGLTexImageIOSurface2D","CGLUnlockContext","CORE_BOOLEAN_ATTRIBUTES","CORE_INTEGER_ATTRIBUTES","GLenum","GLint","GLsizei","GLuint","IOSurfaceRef","kCGLCECrashOnRemovedFunctions","kCGLCEDisplayListOptimization","kCGLCEMPEngine","kCGLCERasterization","kCGLCEStateValidation","kCGLCESurfaceBackingSize","kCGLCESwapLimit","kCGLCESwapRectangle","kCGLCPClientStorage","kCGLCPCurrentRendererID","kCGLCPDispatchTableSize","kCGLCPGPUFragmentProcessing","kCGLCPGPUVertexProcessing","kCGLCPHasDrawable","kCGLCPMPSwapsInFlight","kCGLCPReclaimResources","kCGLCPSurfaceBackingSize","kCGLCPSurfaceOpacity","kCGLCPSurfaceOrder","kCGLCPSurfaceSurfaceVolatile","kCGLCPSurfaceTexture","kCGLCPSwapInterval","kCGLCPSwapRectangle","kCGLGOClearFormatCache","kCGLGOFormatCacheSize","kCGLGOResetLibrary","kCGLGORetainRenderers","kCGLGOUseBuildCache","kCGLGOUseErrorHandler","kCGLNoError","kCGLPFAAccelerated","kCGLPFAAcceleratedCompute","kCGLPFAAccumSize","kCGLPFAAllRenderers","kCGLPFAAllowOfflineRenderers","kCGLPFAAlphaSize","kCGLPFAAuxBuffers","kCGLPFAAuxDepthStencil","kCGLPFABackingStore","kCGLPFAClosestPolicy","kCGLPFAColorFloat","kCGLPFAColorSize","kCGLPFACompliant","kCGLPFADepthSize","kCGLPFADisplayMask","kCGLPFADoubleBuffer","kCGLPFAFullScreen","kCGLPFAMPSafe","kCGLPFAMaximumPolicy","kCGLPFAMinimumPolicy","kCGLPFAMultiScreen","kCGLPFAMultisample","kCGLPFANoRecovery","kCGLPFAOffScreen","kCGLPFAOpenGLProfile","kCGLPFAPBuffer","kCGLPFARemotePBuffer","kCGLPFARendererID","kCGLPFARobust","kCGLPFASampleAlpha","kCGLPFASampleBuffers","kCGLPFASamples","kCGLPFASingleRenderer","kCGLPFAStencilSize","kCGLPFAStereo","kCGLPFASupersample","kCGLPFAVirtualScreenCount","kCGLPFAWindow"],"q":["cgl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"cocoa":{"doc":"","t":[0,0,14,0,0,10,10,6,6,10,3,6,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,5,13,18,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,7,8,13,13,13,4,4,13,13,13,13,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,4,6,13,13,13,13,4,17,4,18,13,17,8,13,17,17,18,8,7,8,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,8,18,13,8,13,18,17,17,17,18,13,8,17,7,17,8,4,4,13,13,13,3,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,4,18,18,3,4,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,7,7,17,7,13,18,7,7,7,7,7,7,18,18,18,7,7,13,17,18,17,8,13,13,13,4,13,7,7,4,13,13,13,13,13,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,13,17,17,17,13,18,13,18,8,8,17,13,18,13,18,13,18,13,7,8,17,8,18,4,13,13,17,13,18,13,18,13,18,7,17,8,13,13,13,18,13,13,13,13,13,13,13,13,13,13,8,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,4,13,13,13,8,8,13,18,13,18,13,18,7,7,17,17,8,8,8,8,8,13,13,13,13,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,4,13,17,13,18,4,7,13,17,17,17,7,7,13,5,17,13,4,17,18,17,13,18,13,18,13,18,13,13,13,13,7,7,8,8,8,13,17,13,18,17,13,13,18,13,8,7,8,17,8,8,17,7,17,13,18,17,4,13,13,13,13,13,13,13,13,7,4,8,8,4,13,18,13,18,7,13,13,13,8,18,13,13,18,8,13,3,18,18,18,18,18,18,18,7,17,18,17,17,7,17,8,17,4,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,8,18,18,4,13,3,18,18,18,18,18,18,18,18,18,18,6,13,13,13,13,13,13,3,18,3,18,3,4,13,13,13,13,4,13,13,4,13,13,13,13,13,13,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,10,10,6,11,11,11,6,17,17,6,11,11,11,11,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,8,6,4,8,18,3,18,18,18,18,3,18,18,3,18,18,18,3,18,3,18,8,7,8,18,3,18,8,3,6,17,17,3,13,13,13,3,8,3,3,4,13,13,13,13,8,3,8,6,6,8,18,3,10,18,18,18,18,6,10,3,10,18,18,18,10,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,10,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,12,10,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,12,10,11,11,11,11,11,11,11,11,10,12,10,10,10,10,10,11,10,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,10,11,12,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,10,10,10,10,10,10,10,12,12,3,18,13,13,13,3,3,3,3,6,6,3,6,13,4,4,3,3,4,13,18,18,18,13,13,18,18,18,18,18,18,18,18,18,13,13,13,13,13,13,18,13,13,13,13,18,13,13,13,13,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["appkit","base","delegate","foundation","quartzcore","CGColorSpace","CGEvent","CGFloat","CGLContextObj","CGLContextObj","CGPoint","GLint","NSAWTEventType","NSAlignAllEdgesInward","NSAlignAllEdgesNearest","NSAlignAllEdgesOutward","NSAlignHeightInward","NSAlignHeightNearest","NSAlignHeightOutward","NSAlignMaxXInward","NSAlignMaxXNearest","NSAlignMaxXOutward","NSAlignMaxYInward","NSAlignMaxYNearest","NSAlignMaxYOutward","NSAlignMinXInward","NSAlignMinXNearest","NSAlignMinXOutward","NSAlignMinYInward","NSAlignMinYNearest","NSAlignMinYOutward","NSAlignRectFlipped","NSAlignWidthInward","NSAlignWidthNearest","NSAlignWidthOutward","NSAlignmentOptions","NSAlphaShiftKeyMask","NSAlternateKeyMask","NSAnyEventMask","NSApp","NSAppKitDefined","NSAppKitDefinedMask","NSAppKitVersionNumber","NSAppKitVersionNumber10_0","NSAppKitVersionNumber10_1","NSAppKitVersionNumber10_10","NSAppKitVersionNumber10_10_2","NSAppKitVersionNumber10_10_3","NSAppKitVersionNumber10_10_4","NSAppKitVersionNumber10_10_5","NSAppKitVersionNumber10_10_Max","NSAppKitVersionNumber10_11","NSAppKitVersionNumber10_11_1","NSAppKitVersionNumber10_11_2","NSAppKitVersionNumber10_11_3","NSAppKitVersionNumber10_12","NSAppKitVersionNumber10_12_1","NSAppKitVersionNumber10_12_2","NSAppKitVersionNumber10_13","NSAppKitVersionNumber10_13_1","NSAppKitVersionNumber10_13_2","NSAppKitVersionNumber10_13_4","NSAppKitVersionNumber10_14","NSAppKitVersionNumber10_14_1","NSAppKitVersionNumber10_14_2","NSAppKitVersionNumber10_14_3","NSAppKitVersionNumber10_14_4","NSAppKitVersionNumber10_14_5","NSAppKitVersionNumber10_15","NSAppKitVersionNumber10_15_1","NSAppKitVersionNumber10_15_2","NSAppKitVersionNumber10_15_3","NSAppKitVersionNumber10_15_4","NSAppKitVersionNumber10_15_5","NSAppKitVersionNumber10_15_6","NSAppKitVersionNumber10_2","NSAppKitVersionNumber10_2_3","NSAppKitVersionNumber10_3","NSAppKitVersionNumber10_3_2","NSAppKitVersionNumber10_3_3","NSAppKitVersionNumber10_3_5","NSAppKitVersionNumber10_3_7","NSAppKitVersionNumber10_3_9","NSAppKitVersionNumber10_4","NSAppKitVersionNumber10_4_1","NSAppKitVersionNumber10_4_3","NSAppKitVersionNumber10_4_4","NSAppKitVersionNumber10_4_7","NSAppKitVersionNumber10_5","NSAppKitVersionNumber10_5_2","NSAppKitVersionNumber10_5_3","NSAppKitVersionNumber10_6","NSAppKitVersionNumber10_7","NSAppKitVersionNumber10_7_2","NSAppKitVersionNumber10_7_3","NSAppKitVersionNumber10_7_4","NSAppKitVersionNumber10_8","NSAppKitVersionNumber10_9","NSAppKitVersionNumber11_0","NSAppKitVersionNumber11_1","NSAppKitVersionNumber11_2","NSAppKitVersionNumber11_3","NSAppKitVersionNumber11_4","NSAppearanceNameVibrantDark","NSAppearanceNameVibrantLight","NSApplication","NSApplicationActivateAllWindows","NSApplicationActivateIgnoringOtherApps","NSApplicationActivatedEventType","NSApplicationActivationOptions","NSApplicationActivationPolicy","NSApplicationActivationPolicyAccessory","NSApplicationActivationPolicyERROR","NSApplicationActivationPolicyProhibited","NSApplicationActivationPolicyRegular","NSApplicationDeactivatedEventType","NSApplicationDefined","NSApplicationDefinedMask","NSApplicationPresentationAutoHideDock","NSApplicationPresentationAutoHideMenuBar","NSApplicationPresentationAutoHideToolbar","NSApplicationPresentationDefault","NSApplicationPresentationDisableAppleMenu","NSApplicationPresentationDisableForceQuit","NSApplicationPresentationDisableHideApplication","NSApplicationPresentationDisableMenuBarTransparency","NSApplicationPresentationDisableProcessSwitching","NSApplicationPresentationDisableSessionTermination","NSApplicationPresentationFullScreen","NSApplicationPresentationHideDock","NSApplicationPresentationHideMenuBar","NSApplicationPresentationOptions","NSApplicationTerminateReply","NSAutoresizingMaskOptions","NSBackgroundTab","NSBackingStoreBuffered","NSBackingStoreNonretained","NSBackingStoreRetained","NSBackingStoreType","NSBeginFunctionKey","NSBezelStyle","NSBorderlessWindowMask","NSBottomTabsBezelBorder","NSBreakFunctionKey","NSButton","NSCircularBezelStyle","NSClearDisplayFunctionKey","NSClearLineFunctionKey","NSClosableWindowMask","NSColor","NSColorPboardType","NSColorSpace","NSCommandKeyMask","NSCompositeClear","NSCompositeCopy","NSCompositeDestinationAtop","NSCompositeDestinationIn","NSCompositeDestinationOut","NSCompositeDestinationOver","NSCompositeHighlight","NSCompositePlusDarker","NSCompositePlusLighter","NSCompositeSourceAtop","NSCompositeSourceIn","NSCompositeSourceOut","NSCompositeSourceOver","NSCompositeXOR","NSCompositingOperation","NSControl","NSControlKeyMask","NSCriticalRequest","NSCursor","NSCursorUpdate","NSCursorUpdateMask","NSDeleteCharFunctionKey","NSDeleteFunctionKey","NSDeleteLineFunctionKey","NSDeviceIndependentModifierFlagsMask","NSDisclosureBezelStyle","NSDockTile","NSDownArrowFunctionKey","NSDragPboard","NSEndFunctionKey","NSEvent","NSEventButtonMask","NSEventGestureAxis","NSEventGestureAxisHorizontal","NSEventGestureAxisNone","NSEventGestureAxisVertical","NSEventMask","NSEventMaskBeginGesture","NSEventMaskEndGesture","NSEventMaskGesture","NSEventMaskPressure","NSEventMaskRotate","NSEventMaskSwipe","NSEventModifierFlags","NSEventPhase","NSEventPhaseBegan","NSEventPhaseCancelled","NSEventPhaseChanged","NSEventPhaseEnded","NSEventPhaseMayBegin","NSEventPhaseNone","NSEventPhaseStationary","NSEventSubtype","NSEventSwipeTrackingClampGestureAmount","NSEventSwipeTrackingLockDirection","NSEventSwipeTrackingOptions","NSEventType","NSEventTypeBeginGesture","NSEventTypeEndGesture","NSEventTypeGesture","NSEventTypeMagnify","NSEventTypePressure","NSEventTypeRotate","NSEventTypeSwipe","NSExecuteFunctionKey","NSF10FunctionKey","NSF11FunctionKey","NSF12FunctionKey","NSF13FunctionKey","NSF14FunctionKey","NSF15FunctionKey","NSF16FunctionKey","NSF17FunctionKey","NSF18FunctionKey","NSF19FunctionKey","NSF1FunctionKey","NSF20FunctionKey","NSF21FunctionKey","NSF22FunctionKey","NSF23FunctionKey","NSF24FunctionKey","NSF25FunctionKey","NSF26FunctionKey","NSF27FunctionKey","NSF28FunctionKey","NSF29FunctionKey","NSF2FunctionKey","NSF30FunctionKey","NSF31FunctionKey","NSF32FunctionKey","NSF33FunctionKey","NSF34FunctionKey","NSF35FunctionKey","NSF3FunctionKey","NSF4FunctionKey","NSF5FunctionKey","NSF6FunctionKey","NSF7FunctionKey","NSF8FunctionKey","NSF9FunctionKey","NSFileContentsPboardType","NSFilenamesPboardType","NSFilesPromisePboardType","NSFindFunctionKey","NSFindPboard","NSFlagsChanged","NSFlagsChangedMask","NSFontPboard","NSFontPboardType","NSFullScreenModeAllScreens","NSFullScreenModeApplicationPresentationOptions","NSFullScreenModeSetting","NSFullScreenModeWindowLevel","NSFullScreenWindowMask","NSFullSizeContentViewWindowMask","NSFunctionKeyMask","NSGeneralPboard","NSHTMLPboardType","NSHelpButtonBezelStyle","NSHelpFunctionKey","NSHelpKeyMask","NSHomeFunctionKey","NSImage","NSImageCacheAlways","NSImageCacheBySize","NSImageCacheDefault","NSImageCacheMode","NSImageCacheNever","NSImageHintCTM","NSImageHintInterpolation","NSImageLoadStatus","NSImageLoadStatusCancelled","NSImageLoadStatusCompleted","NSImageLoadStatusInvalidData","NSImageLoadStatusReadError","NSImageLoadStatusUnexpectedEOF","NSImageNameActionTemplate","NSImageNameAddTemplate","NSImageNameAdvanced","NSImageNameApplicationIcon","NSImageNameBluetoothTemplate","NSImageNameBonjour","NSImageNameBookmarksTemplate","NSImageNameCaution","NSImageNameColorPanel","NSImageNameColumnViewTemplate","NSImageNameComputer","NSImageNameDotMac","NSImageNameEnterFullScreenTemplate","NSImageNameEveryone","NSImageNameExitFullScreenTemplate","NSImageNameFlowViewTemplate","NSImageNameFolder","NSImageNameFolderBurnable","NSImageNameFolderSmart","NSImageNameFollowLinkFreestandingTemplate","NSImageNameFontPanel","NSImageNameGoLeftTemplate","NSImageNameGoRightTemplate","NSImageNameHomeTemplate","NSImageNameIChatTheaterTemplate","NSImageNameIconViewTemplate","NSImageNameInfo","NSImageNameInvalidDataFreestandingTemplate","NSImageNameLeftFacingTriangleTemplate","NSImageNameListViewTemplate","NSImageNameLockLockedTemplate","NSImageNameLockUnlockedTemplate","NSImageNameMenuMixedStateTemplate","NSImageNameMenuOnStateTemplate","NSImageNameMobileMe","NSImageNameMultipleDocuments","NSImageNameNetwork","NSImageNamePathTemplate","NSImageNamePreferencesGeneral","NSImageNameQuickLookTemplate","NSImageNameRefreshFreestandingTemplate","NSImageNameRefreshTemplate","NSImageNameRemoveTemplate","NSImageNameRevealFreestandingTemplate","NSImageNameRightFacingTriangleTemplate","NSImageNameShareTemplate","NSImageNameSlideshowTemplate","NSImageNameSmartBadgeTemplate","NSImageNameStatusAvailable","NSImageNameStatusNone","NSImageNameStatusPartiallyAvailable","NSImageNameStatusUnavailable","NSImageNameStopProgressFreestandingTemplate","NSImageNameStopProgressTemplate","NSImageNameTrashEmpty","NSImageNameTrashFull","NSImageNameUser","NSImageNameUserAccounts","NSImageNameUserGroup","NSImageNameUserGuest","NSImageView","NSInformationalRequest","NSInsertCharFunctionKey","NSInsertFunctionKey","NSInsertLineFunctionKey","NSKeyDown","NSKeyDownMask","NSKeyUp","NSKeyUpMask","NSLayoutConstraint","NSLayoutDimension","NSLeftArrowFunctionKey","NSLeftMouseDown","NSLeftMouseDownMask","NSLeftMouseDragged","NSLeftMouseDraggedMask","NSLeftMouseUp","NSLeftMouseUpMask","NSLeftTabsBezelBorder","NSMainMenuWindowLevel","NSMenu","NSMenuFunctionKey","NSMenuItem","NSMiniaturizableWindowMask","NSModalResponse","NSModalResponseCancel","NSModalResponseOk","NSModeSwitchFunctionKey","NSMouseEntered","NSMouseEnteredMask","NSMouseExited","NSMouseExitedMask","NSMouseMoved","NSMouseMovedMask","NSMultipleTextSelectionPboardType","NSNextFunctionKey","NSNib","NSNoTabsBezelBorder","NSNoTabsLineBorder","NSNoTabsNoBorder","NSNumericPadKeyMask","NSOpenGLCPCurrentRendererID","NSOpenGLCPGPUFragmentProcessing","NSOpenGLCPGPUVertexProcessing","NSOpenGLCPHasDrawable","NSOpenGLCPMPSwapsInFlight","NSOpenGLCPReclaimResources","NSOpenGLCPSurfaceBackingSize","NSOpenGLCPSurfaceOpacity","NSOpenGLCPSurfaceOrder","NSOpenGLCPSwapInterval","NSOpenGLContext","NSOpenGLContextParameter","NSOpenGLPFAAccelerated","NSOpenGLPFAAcceleratedCompute","NSOpenGLPFAAccumSize","NSOpenGLPFAAllRenderers","NSOpenGLPFAAllowOfflineRenderers","NSOpenGLPFAAlphaSize","NSOpenGLPFAAuxBuffers","NSOpenGLPFAAuxDepthStencil","NSOpenGLPFABackingStore","NSOpenGLPFAClosestPolicy","NSOpenGLPFAColorFloat","NSOpenGLPFAColorSize","NSOpenGLPFACompliant","NSOpenGLPFADepthSize","NSOpenGLPFADoubleBuffer","NSOpenGLPFAFullScreen","NSOpenGLPFAMPSafe","NSOpenGLPFAMaximumPolicy","NSOpenGLPFAMinimumPolicy","NSOpenGLPFAMultiScreen","NSOpenGLPFAMultisample","NSOpenGLPFANoRecovery","NSOpenGLPFAOffScreen","NSOpenGLPFAOpenGLProfile","NSOpenGLPFAOpenGLProfiles","NSOpenGLPFAPixelBuffer","NSOpenGLPFARemotePixelBuffer","NSOpenGLPFARendererID","NSOpenGLPFARobust","NSOpenGLPFASampleAlpha","NSOpenGLPFASampleBuffers","NSOpenGLPFASamples","NSOpenGLPFAScreenMask","NSOpenGLPFASingleRenderer","NSOpenGLPFAStencilSize","NSOpenGLPFAStereo","NSOpenGLPFASupersample","NSOpenGLPFATripleBuffer","NSOpenGLPFAVirtualScreenCount","NSOpenGLPFAWindow","NSOpenGLPixelFormat","NSOpenGLPixelFormatAttribute","NSOpenGLProfileVersion3_2Core","NSOpenGLProfileVersion4_1Core","NSOpenGLProfileVersionLegacy","NSOpenGLView","NSOpenPanel","NSOtherMouseDown","NSOtherMouseDownMask","NSOtherMouseDragged","NSOtherMouseDraggedMask","NSOtherMouseUp","NSOtherMouseUpMask","NSPDFPboardType","NSPICTPboardType","NSPageDownFunctionKey","NSPageUpFunctionKey","NSPanel","NSPasteboard","NSPasteboardItem","NSPasteboardItemDataProvider","NSPasteboardReading","NSPasteboardReadingAsData","NSPasteboardReadingAsKeyedArchive","NSPasteboardReadingAsPropertyList","NSPasteboardReadingAsString","NSPasteboardReadingOptions","NSPasteboardTypeColor","NSPasteboardTypeFindPanelSearchOptions","NSPasteboardTypeFont","NSPasteboardTypeHTML","NSPasteboardTypeMultipleTextSelection","NSPasteboardTypePDF","NSPasteboardTypePNG","NSPasteboardTypeRTF","NSPasteboardTypeRTFD","NSPasteboardTypeRuler","NSPasteboardTypeSound","NSPasteboardTypeString","NSPasteboardTypeTIFF","NSPasteboardTypeTabularText","NSPasteboardURLReadingContentsConformToTypesKey","NSPasteboardURLReadingFileURLsOnlyKey","NSPasteboardWriting","NSPasteboardWritingOptions","NSPasteboardWritingPromised","NSPauseFunctionKey","NSPeriodic","NSPeriodicMask","NSPointingDeviceType","NSPostScriptPboardType","NSPressedTab","NSPrevFunctionKey","NSPrintFunctionKey","NSPrintScreenFunctionKey","NSRTFDPboardType","NSRTFPboardType","NSRecessedBezelStyle","NSRectFill","NSRedoFunctionKey","NSRegularSquareBezelStyle","NSRequestUserAttentionType","NSResetFunctionKey","NSResizableWindowMask","NSRightArrowFunctionKey","NSRightMouseDown","NSRightMouseDownMask","NSRightMouseDragged","NSRightMouseDraggedMask","NSRightMouseUp","NSRightMouseUpMask","NSRightTabsBezelBorder","NSRoundRectBezelStyle","NSRoundedBezelStyle","NSRoundedDisclosureBezelStyle","NSRulerPboard","NSRulerPboardType","NSRunningApplication","NSSavePanel","NSScreen","NSScreenChangedEventType","NSScrollLockFunctionKey","NSScrollWheel","NSScrollWheelMask","NSSelectFunctionKey","NSSelectedTab","NSShadowlessSquareBezelStyle","NSShiftKeyMask","NSSmallSquareBezelStyle","NSSound","NSSoundPboardType","NSSpellChecker","NSSquareStatusItemLength","NSStatusBar","NSStatusItem","NSStopFunctionKey","NSStringPboardType","NSSysReqFunctionKey","NSSystemDefined","NSSystemDefinedMask","NSSystemFunctionKey","NSTIFFCompression","NSTIFFCompressionCCITTFAX3","NSTIFFCompressionCCITTFAX4","NSTIFFCompressionJPEG","NSTIFFCompressionLZW","NSTIFFCompressionNEXT","NSTIFFCompressionNone","NSTIFFCompressionOldJPEG","NSTIFFCompressionPackBits","NSTIFFPboardType","NSTabState","NSTabView","NSTabViewItem","NSTabViewType","NSTabletPoint","NSTabletPointMask","NSTabletProximity","NSTabletProximityMask","NSTabularTextPboardType","NSTerminateCancel","NSTerminateLater","NSTerminateNow","NSTextField","NSTexturedBackgroundWindowMask","NSTexturedRoundedBezelStyle","NSTexturedSquareBezelStyle","NSTitledWindowMask","NSToolbar","NSTopTabsBezelBorder","NSTouchPhase","NSTouchPhaseAny","NSTouchPhaseBegan","NSTouchPhaseCancelled","NSTouchPhaseEnded","NSTouchPhaseMoved","NSTouchPhaseStationary","NSTouchPhaseTouching","NSURLPboardType","NSUndoFunctionKey","NSUnifiedTitleAndToolbarWindowMask","NSUpArrowFunctionKey","NSUserFunctionKey","NSVCardPboardType","NSVariableStatusItemLength","NSView","NSViewHeightSizable","NSViewLayerContentsPlacement","NSViewLayerContentsPlacementBottom","NSViewLayerContentsPlacementBottomLeft","NSViewLayerContentsPlacementBottomRight","NSViewLayerContentsPlacementCenter","NSViewLayerContentsPlacementLeft","NSViewLayerContentsPlacementRight","NSViewLayerContentsPlacementScaleAxesIndependently","NSViewLayerContentsPlacementScaleProportionallyToFill","NSViewLayerContentsPlacementScaleProportionallyToFit","NSViewLayerContentsPlacementTop","NSViewLayerContentsPlacementTopLeft","NSViewLayerContentsPlacementTopRight","NSViewMaxXMargin","NSViewMaxYMargin","NSViewMinXMargin","NSViewMinYMargin","NSViewNotSizable","NSViewWidthSizable","NSWindow","NSWindowAbove","NSWindowBelow","NSWindowButton","NSWindowCloseButton","NSWindowCollectionBehavior","NSWindowCollectionBehaviorCanJoinAllSpaces","NSWindowCollectionBehaviorDefault","NSWindowCollectionBehaviorFullScreenAuxiliary","NSWindowCollectionBehaviorFullScreenPrimary","NSWindowCollectionBehaviorIgnoresCycle","NSWindowCollectionBehaviorManaged","NSWindowCollectionBehaviorMoveToActiveSpace","NSWindowCollectionBehaviorParticipatesInCycle","NSWindowCollectionBehaviorStationary","NSWindowCollectionBehaviorTransient","NSWindowDepth","NSWindowDocumentIconButton","NSWindowDocumentVersionsButton","NSWindowExposedEventType","NSWindowFullScreenButton","NSWindowMiniaturizeButton","NSWindowMovedEventType","NSWindowOcclusionState","NSWindowOcclusionStateVisible","NSWindowOrderingMode","NSWindowOut","NSWindowStyleMask","NSWindowTabbingMode","NSWindowTabbingModeAutomatic","NSWindowTabbingModeDisallowed","NSWindowTabbingModePreferred","NSWindowTitleHidden","NSWindowTitleVisibility","NSWindowTitleVisible","NSWindowToolbarButton","NSWindowToolbarStyle","NSWindowToolbarStyleAutomatic","NSWindowToolbarStyleExpanded","NSWindowToolbarStylePreference","NSWindowToolbarStyleUnified","NSWindowToolbarStyleUnifiedCompact","NSWindowZoomButton","TIFFRepresentation","TIFFRepresentationUsingCompression_factor_","URL","URLs","absoluteX","absoluteY","absoluteZ","acceptsMouseMovedEvents","accessibilityDescription","activateConstraints","activateIgnoringOtherApps_","activateWithOptions_","addItemWithTitle_action_keyEquivalent","addItem_","addRepresentation_","addRepresentations_","addSubview_","addTabViewItem_","addTabbedWindow_ordered_","addTypes_owner","adobeRGB1998ColorSpace","alignmentRect","all","all","all","all","all","all","all","all","all","all","all","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","alloc","allowsAutomaticWindowTabbing","allowsTruncatedLabels","alphaComponent","alphaValue","apply_transform","arrow_cursor","aspectRatio","autorecalculatesContentBorderThicknessForEdge_","availableTypeFromArray","backgroundColor","backgroundColor","backingAlignedRect_options_","backingAlignedRect_options_","backingScaleFactor","backingScaleFactor","badgeLabel","becomesKeyOnlyIfNeeded","bestRepresentationForRect_context_hints_","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blackComponent","blueComponent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","brightnessComponent","button","buttonMask","buttonNumber","cacheMode","canBecomeKeyWindow","canBecomeMainWindow","canHide","canInitWithPasteboard_","canInitWithPasteboard_","canReadItemWithDataConformingToTypes","canReadObjectForClasses_options","cancelIncrementalLoad","capabilityMask","cascadeTopLeftFromPoint_","center","changeCount","characters","charactersIgnoringModifiers","checkSpellingOfString_startingAt","checkSpellingOfString_startingAt_language_wrap_inSpellDocumentWithTag_wordCount","clearColor","clearContents","clearCurrentContext","clearDrawable","clickCount","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","closeSpellDocumentWithTag","closed_hand_cursor","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collectionBehavior","color","colorSpace","colorSpace","colorUsingColorSpace_","colorWithCalibratedRed_green_blue_alpha_","colorWithDeviceRed_green_blue_alpha_","colorWithDisplayP3Red_green_blue_alpha_","colorWithRed_green_blue_alpha_","colorWithSRGBRed_green_blue_alpha_","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","constrainFrameRect_toScreen_","constraintEqualToConstant","constraintGreaterThanOrEqualToConstant","constraintLessThanOrEqualToConstant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contentAspectRatio","contentBorderThicknessForEdge_","contentMaxSize","contentMinSize","contentRect","contentRectForFrameRect_","contentRectForFrameRect_styleMask_","contentResizeIncrements","contentSize","contentView","context","contextual_menu_cursor","controlSize","controlTint","convertPoint_fromView_","convertRectFromBacking_","convertRectFromBacking_","convertRectFromScreen_","convertRectToBacking","convertRectToBacking_","convertRectToBacking_","convertRectToScreen_","crosshair_cursor","currentApplication","currentContext","currentModifierFlags","currentTime","currentVirtualScreen","current_cursor","current_system_cursor","cyanComponent","data1","data2","dataForType","dataForType","declareTypes_owner","deepestScreen","deepestScreen","default","delegate","delegate","delegate","delegate","deltaX","deltaY","deltaZ","deminiaturize_","depth","deviceCMYKColorSpace","deviceDescription","deviceGrayColorSpace","deviceID","deviceRGBColorSpace","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","disappearing_item_cursor","displayP3ColorSpace","display_","display_","displaysWhenScreenProfileChanges","doubleClickInterval","drag_copy_cursor","drag_link_cursor","drawAtPoint_fromRect_operation_fraction_","drawInRect_","drawInRect_fromRect_operation_fraction_","drawInRect_fromRect_operation_fraction_respectFlipped_hints_","drawLabel_inRect_","drawRepresentation_inRect_","drawers","drawsBackground","duration","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eventNumber","eventRef","eventType","eventWithCGEvent_","eventWithEventRef_","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extendedGenericGamma22GrayColorSpace","extendedSRGBColorSpace","finishLaunching","firstResponder","floatingPanel","flushBuffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","frame","frame","frame","frameRectForContentRect_","frameRectForContentRect_styleMask_","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_type","generalPasteboard","genericCMYKColorSpace","genericGamma22GrayColorSpace","genericGrayColorSpace","genericRGBColorSpace","getValues_forAttribute_forVirtualScreen_","getValues_forParameter_","greenComponent","hasPreciseScrollingDeltas","hasShadow","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","heightAnchor","hidesOnDeactivate","hitTestRect_withImageDestinationRect_context_hints_flipped_","hueComponent","i_beam_cursor","i_beam_cursor_for_vertical_layout","identifier","ignoreWord_inSpellDocumentWithTag","ignoresMouseEvents","imageNamed_","imageTypes","imageUnfilteredTypes","inLiveResize","indexOfPasteboardItem","indexOfTabViewItemWithIdentifier_","indexOfTabViewItem_","init","initByReferencingFile_","initWithAttributes_","initWithCGColorSpace_","initWithCGLContextObj_","initWithContentRect_styleMask_backing_defer_","initWithContentRect_styleMask_backing_defer_screen_","initWithContentsOfFile_","initWithContentsOfFile_withReference_","initWithContentsOfURL_withReference_","initWithDataIgnoringOrientation_","initWithData_","initWithData_","initWithFormat_shareContext_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_pixelFormat_","initWithIdentifier_","initWithIdentifier_","initWithNibNamed_bundle_","initWithPasteboardPropertyList_ofType","initWithPasteboard_","initWithPasteboard_","initWithSize_","initWithSize_flipped_drawingHandler_","initWithTitle_","initWithTitle_action_keyEquivalent_","init_","initialFirstResponder","initialFirstResponder","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insertTabViewItem_atIndex_","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidateShadow","isARepeat","isDocumentEdited","isEnabled_","isKeyWindow","isMouseCoalescingEnabled","isSwipeTrackingFromScrollEventsEnabled","isValid","isVertical","isVisible","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","itemAtIndex_","keyCode","keyDown_","keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","keyRepeatDelay","keyRepeatInterval","label","layer","layerContentsForContentsScale_","layerContentsPlacement","length","level","localizedName","locationInNode_","locationInWindow","lockFocus","lockFocusFlipped_","loops","magentaComponent","magnification","mainMenu","mainScreen","makeCurrentContext","makeFirstResponder_","makeKeyAndOrderFront_","makeKeyWindow","makeMainWindow","matchesOnMultipleResolution","matchesOnlyOnBestFittingAxis","maxSize","menu","minFrameWidthWithTitle_styleMask_","minSize","miniaturize_","minimumSize","miniwindowImage","miniwindowTitle","modifierFlags","momentumPhase","mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","mouseLocation","mouseLocationOutsideOfEventStream","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","nextEventMatchingMask_untilDate_inMode_dequeue_","not","not","not","not","not","not","not","not","not","not","not","numberOfTabViewItems","numberOfVirtualScreens","occlusionState","openPanel","open_hand_cursor","operation_not_allowed_cursor","orderBack_","orderFrontRegardless","orderFrontWindow_relativeTo_","orderFront_","orderOut_","otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pasteboardByFilteringData_ofType","pasteboardByFilteringFile","pasteboardByFilteringTypesInPasteboard","pasteboardFinishedWithDataProvider","pasteboardItems","pasteboardPropertyListForType","pasteboardWithName","pasteboardWithUniqueName","pasteboard_item_provideDataForType","pause","performClose_","performMiniaturize_","performZoom_","phase","play","playbackDeviceIdentifier","playing","pointingDeviceID","pointingDeviceSerialNumber","pointingDeviceType","pointing_hand_cursor","postEvent_atStart_","prefersColorMatch","presentationOptions_","preservesContentDuringLiveResize","pressedMouseButtons","pressure","preventsApplicationTerminationWhenModal","propertyListForType","propertyListForType","readFileContentsType_toFile","readFileWrapper","readObjectsForClasses_options","readableTypesForPasteboard","readingOptionsForType_pasteboard","recache","recommendedLayerContentsScale_","redComponent","releaseGlobally","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","removeFromSuperview","removeMonitor_","removeRepresentation_","removeStatusItem_","removeTabViewItem_","representations","representedFilename","representedURL","requestUserAttention_","resizeFlags","resizeIncrements","resize_down_cursor","resize_left_cursor","resize_left_right_cursor","resize_right_cursor","resize_up_cursor","resize_up_down_cursor","resume","rotation","run","runModal","runToolbarCustomizationPalette","runningApplicationWithProcessIdentifier","sRGBColorSpace","saturationComponent","savePanel","screen","screens","screensHaveSeparateSpaces","scrollingDeltaX","scrollingDeltaY","selectFirstTabViewItem_","selectLastTabViewItem_","selectNextTabViewItem_","selectPreviousTabViewItem_","selectTabViewItemAtIndex_","selectTabViewItemWithIdentifier_","selectTabViewItem_","selectedTabViewItem","sendEvent_","separatorItem","set","set","set","set","set","set","set","set","set","set","set","setAcceptsMouseMovedEvents_","setAction_","setActivationPolicy_","setAllowsAutomaticWindowTabbing_","setAllowsMultipleSelection_","setAllowsTruncatedLabels_","setAlphaValue_","setApplicationIconImage_","setAspectRatio_","setAutoenablesItems","setAutorecalculatesContentBorderThickness_forEdge_","setAutoresizingMask_","setBackgroundColor_","setBadgeLabel_","setBecomesKeyOnlyIfNeeded","setBezelStyle_","setCanChooseDirectories_","setCanChooseFiles_","setCanCreateDirectories","setCanHide_","setCollectionBehavior_","setColorSpace_","setColor_","setContentAspectRatio_","setContentBorderThickness_forEdge_","setContentMaxSize_","setContentMinSize_","setContentResizeIncrements_","setContentSize_","setContentView_","setControlSize_","setControlTint_","setCurrentVirtualScreen_","setDataProvider_forTypes","setData_forType","setData_forType","setDelegate_","setDelegate_","setDirectoryURL","setDisplaysWhenScreenProfileChanges_","setDocumentEdited_","setDrawsBackground_","setEditable_","setEnabled_","setFloatingPanel","setFont_","setFrameOrigin","setFrameOrigin_","setFrameSize","setFrameTopLeftPoint_","setFrame_displayViews_","setFrame_display_","setFrame_display_animate_","setHasShadow_","setHidesOnDeactivate_","setIdentifier_","setIgnoresMouseEvents_","setImage_","setImage_","setInitialFirstResponder_","setInitialFirstResponder_","setKeyEquivalentModifierMask_","setLabel_","setLayer","setLayerContentsPlacement","setLength_","setLevel_","setMainMenu_","setMaxSize_","setMenu_","setMinSize_","setMiniwindowImage_","setMiniwindowTitle_","setMouseCoalescingEnabled_","setMovableByWindowBackground_","setMovable_","setName_","setOpaque_","setOpenGLContext_","setPixelFormat_","setPresentationOptions_","setPreservesContentDuringLiveResize_","setPreventsApplicationTerminationWhenModal_","setPropertyList_forType","setPropertyList_forType","setReleasedWhenClosed_","setRepresentedFilename_","setRepresentedURL_","setResizeIncrements_","setResolvesAliases_","setServicesMenu_","setShowsApplicatinBadge_","setShowsBaselineSeparator_","setShowsResizeIndicator_","setStringValue_","setString_forType","setString_forType","setStyleMask_","setSubmenu_","setTabViewType_","setTabbingMode_","setTarget_","setTarget_","setTitleVisibility_","setTitleWithRepresentedFilename_","setTitle_","setTitle_","setTitlebarAppearsTransparent_","setToolTip_","setToolbarStyle_","setToolbar_","setValues_forParameter_","setView_","setView_","setWantsBestResolutionOpenGLSurface_","setWantsLayer","setWindowController_","setWindowsMenu_","setWorksWhenModal","sharedApplication","sharedSpellChecker","showsApplicatinBadge","showsBaselineSeparator","showsResizeIndicator","size","sizeOfLabel_","soundNamed_","soundUnfilteredTypes","stage","standardWindowButton_","startPeriodicEventsAfterDelay_withPeriod_","statusBar","statusItemWithLength_","stop","stopPeriodicEvents","stop_","stringForType","stringForType","styleMask","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subtype","superview","supportedWindowDepths","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","systemStatusBar","systemTabletID","tabState","tabView","tabViewAtPoint_","tabViewItemAtIndex_","tabViewItems","tabViewType","tabbingIdentifier","tabbingMode","tabletID","takeSelectedTabViewItemFromSender_","tangentialPressure","template","tilt","timestamp","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggleFullScreen_","toggleTabBar_","toolbar","toolbarStyle","tooltip","touchesMatchingPhase_inView_","trackingArea","trackingNumber","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","typesFilterableTo","union","union","union","union","union","union","union","union","union","union","union","uniqueID","uniqueSpellDocumentTag","unlockFocus","update","userData","usesEPSOnResolutionMismatch","vendorDefined","vendorID","vendorPointingDeviceType","view","view","visibleFrame","volume","wantsLayer","whiteComponent","widthAnchor","window","windowController","windowNumber","windowNumberAtPoint_belowWindowWithWindowNumber_","worksWhenModal","writableTypesForPasteboard","writeFileContents","writeFileWrapper","writeObjects","writeToPasteboard_","writingOptionsForType_pasteboard","x","y","yellowComponent","zoom_","BOOL","CGColorSpace","CGEvent","CGLContextObj","Class","NO","Nil","SEL","TIFFRepresentation","TIFFRepresentationUsingCompression_factor_","URL","URLs","YES","absoluteX","absoluteY","absoluteZ","acceptsMouseMovedEvents","accessibilityDescription","activateConstraints","activateIgnoringOtherApps_","activateWithOptions_","addItemWithTitle_action_keyEquivalent","addItem_","addRepresentation_","addRepresentations_","addSubview_","addTabViewItem_","addTabbedWindow_ordered_","addTypes_owner","adobeRGB1998ColorSpace","alignmentRect","alloc","alloc","allowsAutomaticWindowTabbing","allowsTruncatedLabels","alphaComponent","alphaValue","arrow_cursor","aspectRatio","autorecalculatesContentBorderThicknessForEdge_","availableTypeFromArray","backgroundColor","backgroundColor","backingAlignedRect_options_","backingAlignedRect_options_","backingScaleFactor","backingScaleFactor","badgeLabel","becomesKeyOnlyIfNeeded","bestRepresentationForRect_context_hints_","blackComponent","blueComponent","bounds","brightnessComponent","button","buttonMask","buttonNumber","cacheMode","canBecomeKeyWindow","canBecomeMainWindow","canHide","canInitWithPasteboard_","canReadItemWithDataConformingToTypes","canReadObjectForClasses_options","cancelIncrementalLoad","capabilityMask","cascadeTopLeftFromPoint_","center","changeCount","characters","charactersIgnoringModifiers","checkSpellingOfString_startingAt","checkSpellingOfString_startingAt_language_wrap_inSpellDocumentWithTag_wordCount","clearColor","clearContents","clearCurrentContext","clearDrawable","clickCount","close","closeSpellDocumentWithTag","closed_hand_cursor","collectionBehavior","color","colorSpace","colorSpace","colorUsingColorSpace_","colorWithCalibratedRed_green_blue_alpha_","colorWithDeviceRed_green_blue_alpha_","colorWithDisplayP3Red_green_blue_alpha_","colorWithRed_green_blue_alpha_","colorWithSRGBRed_green_blue_alpha_","constrainFrameRect_toScreen_","constraintEqualToConstant","constraintGreaterThanOrEqualToConstant","constraintLessThanOrEqualToConstant","contentAspectRatio","contentBorderThicknessForEdge_","contentMaxSize","contentMinSize","contentRect","contentRectForFrameRect_","contentRectForFrameRect_styleMask_","contentResizeIncrements","contentSize","contentView","context","contextual_menu_cursor","controlSize","controlTint","convertPoint_fromView_","convertRectFromBacking_","convertRectFromBacking_","convertRectFromScreen_","convertRectToBacking","convertRectToBacking_","convertRectToBacking_","convertRectToScreen_","crosshair_cursor","currentContext","currentModifierFlags","currentTime","currentVirtualScreen","current_cursor","current_system_cursor","cyanComponent","data1","data2","dataForType","dataForType","declareTypes_owner","deepestScreen","deepestScreen","delegate","delegate","delegate","delegate","deltaX","deltaY","deltaZ","deminiaturize_","depth","deviceCMYKColorSpace","deviceDescription","deviceGrayColorSpace","deviceID","deviceRGBColorSpace","disappearing_item_cursor","displayP3ColorSpace","display_","display_","displaysWhenScreenProfileChanges","doubleClickInterval","drag_copy_cursor","drag_link_cursor","drawAtPoint_fromRect_operation_fraction_","drawInRect_","drawInRect_fromRect_operation_fraction_","drawInRect_fromRect_operation_fraction_respectFlipped_hints_","drawLabel_inRect_","drawRepresentation_inRect_","drawers","drawsBackground","duration","enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","eventNumber","eventRef","eventType","eventWithCGEvent_","eventWithEventRef_","extendedGenericGamma22GrayColorSpace","extendedSRGBColorSpace","finishLaunching","firstResponder","floatingPanel","flushBuffer","font","frame","frame","frame","frameRectForContentRect_","frameRectForContentRect_styleMask_","genericCMYKColorSpace","genericGamma22GrayColorSpace","genericGrayColorSpace","genericRGBColorSpace","getValues_forAttribute_forVirtualScreen_","getValues_forParameter_","greenComponent","hasPreciseScrollingDeltas","hasShadow","heightAnchor","hidesOnDeactivate","hitTestRect_withImageDestinationRect_context_hints_flipped_","hueComponent","i_beam_cursor","i_beam_cursor_for_vertical_layout","id","identifier","ignoreWord_inSpellDocumentWithTag","ignoresMouseEvents","imageTypes","imageUnfilteredTypes","inLiveResize","indexOfPasteboardItem","indexOfTabViewItemWithIdentifier_","indexOfTabViewItem_","init","initByReferencingFile_","initWithAttributes_","initWithCGColorSpace_","initWithCGLContextObj_","initWithContentRect_styleMask_backing_defer_","initWithContentRect_styleMask_backing_defer_screen_","initWithContentsOfFile_","initWithContentsOfFile_withReference_","initWithContentsOfURL_withReference_","initWithDataIgnoringOrientation_","initWithData_","initWithData_","initWithFormat_shareContext_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_","initWithFrame_pixelFormat_","initWithIdentifier_","initWithIdentifier_","initWithNibNamed_bundle_","initWithPasteboardPropertyList_ofType","initWithPasteboard_","initWithPasteboard_","initWithSize_","initWithSize_flipped_drawingHandler_","initWithTitle_","initWithTitle_action_keyEquivalent_","init_","initialFirstResponder","initialFirstResponder","insertTabViewItem_atIndex_","invalidateShadow","isARepeat","isDocumentEdited","isEnabled_","isKeyWindow","isMouseCoalescingEnabled","isSwipeTrackingFromScrollEventsEnabled","isValid","isVertical","isVisible","itemAtIndex_","keyCode","keyDown_","keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","keyRepeatDelay","keyRepeatInterval","label","layer","layerContentsForContentsScale_","layerContentsPlacement","length","level","localizedName","locationInNode_","locationInWindow","lockFocus","lockFocusFlipped_","loops","magentaComponent","magnification","mainMenu","mainScreen","makeCurrentContext","makeFirstResponder_","makeKeyAndOrderFront_","makeKeyWindow","makeMainWindow","matchesOnMultipleResolution","matchesOnlyOnBestFittingAxis","maxSize","menu","minFrameWidthWithTitle_styleMask_","minSize","miniaturize_","minimumSize","miniwindowImage","miniwindowTitle","modifierFlags","momentumPhase","mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","mouseLocation","mouseLocationOutsideOfEventStream","name","name","name","nextEventMatchingMask_untilDate_inMode_dequeue_","nil","numberOfTabViewItems","numberOfVirtualScreens","occlusionState","open_hand_cursor","operation_not_allowed_cursor","orderBack_","orderFrontRegardless","orderFrontWindow_relativeTo_","orderFront_","orderOut_","otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","pasteboardFinishedWithDataProvider","pasteboardItems","pasteboardPropertyListForType","pasteboard_item_provideDataForType","pause","performClose_","performMiniaturize_","performZoom_","phase","play","playbackDeviceIdentifier","playing","pointingDeviceID","pointingDeviceSerialNumber","pointingDeviceType","pointing_hand_cursor","postEvent_atStart_","prefersColorMatch","presentationOptions_","preservesContentDuringLiveResize","pressedMouseButtons","pressure","preventsApplicationTerminationWhenModal","propertyListForType","propertyListForType","readFileContentsType_toFile","readFileWrapper","readObjectsForClasses_options","readableTypesForPasteboard","readingOptionsForType_pasteboard","recache","recommendedLayerContentsScale_","redComponent","releaseGlobally","removeFromSuperview","removeMonitor_","removeRepresentation_","removeStatusItem_","removeTabViewItem_","representations","representedFilename","representedURL","requestUserAttention_","resizeFlags","resizeIncrements","resize_down_cursor","resize_left_cursor","resize_left_right_cursor","resize_right_cursor","resize_up_cursor","resize_up_down_cursor","resume","rotation","run","runModal","runToolbarCustomizationPalette","sRGBColorSpace","saturationComponent","screen","screens","screensHaveSeparateSpaces","scrollingDeltaX","scrollingDeltaY","selectFirstTabViewItem_","selectLastTabViewItem_","selectNextTabViewItem_","selectPreviousTabViewItem_","selectTabViewItemAtIndex_","selectTabViewItemWithIdentifier_","selectTabViewItem_","selectedTabViewItem","selector","sendEvent_","setAcceptsMouseMovedEvents_","setAction_","setActivationPolicy_","setAllowsAutomaticWindowTabbing_","setAllowsMultipleSelection_","setAllowsTruncatedLabels_","setAlphaValue_","setApplicationIconImage_","setAspectRatio_","setAutoenablesItems","setAutorecalculatesContentBorderThickness_forEdge_","setAutoresizingMask_","setBackgroundColor_","setBadgeLabel_","setBecomesKeyOnlyIfNeeded","setBezelStyle_","setCanChooseDirectories_","setCanChooseFiles_","setCanCreateDirectories","setCanHide_","setCollectionBehavior_","setColorSpace_","setColor_","setContentAspectRatio_","setContentBorderThickness_forEdge_","setContentMaxSize_","setContentMinSize_","setContentResizeIncrements_","setContentSize_","setContentView_","setControlSize_","setControlTint_","setCurrentVirtualScreen_","setDataProvider_forTypes","setData_forType","setData_forType","setDelegate_","setDelegate_","setDirectoryURL","setDisplaysWhenScreenProfileChanges_","setDocumentEdited_","setDrawsBackground_","setEditable_","setEnabled_","setFloatingPanel","setFont_","setFrameOrigin","setFrameOrigin_","setFrameSize","setFrameTopLeftPoint_","setFrame_displayViews_","setFrame_display_","setFrame_display_animate_","setHasShadow_","setHidesOnDeactivate_","setIdentifier_","setIgnoresMouseEvents_","setImage_","setImage_","setInitialFirstResponder_","setInitialFirstResponder_","setKeyEquivalentModifierMask_","setLabel_","setLayer","setLayerContentsPlacement","setLength_","setLevel_","setMainMenu_","setMaxSize_","setMenu_","setMinSize_","setMiniwindowImage_","setMiniwindowTitle_","setMouseCoalescingEnabled_","setMovableByWindowBackground_","setMovable_","setName_","setOpaque_","setOpenGLContext_","setPixelFormat_","setPresentationOptions_","setPreservesContentDuringLiveResize_","setPreventsApplicationTerminationWhenModal_","setPropertyList_forType","setPropertyList_forType","setReleasedWhenClosed_","setRepresentedFilename_","setRepresentedURL_","setResizeIncrements_","setResolvesAliases_","setServicesMenu_","setShowsApplicatinBadge_","setShowsBaselineSeparator_","setShowsResizeIndicator_","setStringValue_","setString_forType","setString_forType","setStyleMask_","setSubmenu_","setTabViewType_","setTabbingMode_","setTarget_","setTarget_","setTitleVisibility_","setTitleWithRepresentedFilename_","setTitle_","setTitle_","setTitlebarAppearsTransparent_","setToolTip_","setToolbarStyle_","setToolbar_","setValues_forParameter_","setView_","setView_","setWantsBestResolutionOpenGLSurface_","setWantsLayer","setWindowController_","setWindowsMenu_","setWorksWhenModal","sharedSpellChecker","showsApplicatinBadge","showsBaselineSeparator","showsResizeIndicator","size","sizeOfLabel_","stage","standardWindowButton_","startPeriodicEventsAfterDelay_withPeriod_","statusBar","statusItemWithLength_","stop","stopPeriodicEvents","stop_","stringForType","stringForType","styleMask","subtype","superview","supportedWindowDepths","systemTabletID","tabState","tabView","tabViewAtPoint_","tabViewItemAtIndex_","tabViewItems","tabViewType","tabbingIdentifier","tabbingMode","tabletID","takeSelectedTabViewItemFromSender_","tangentialPressure","template","tilt","timestamp","title","toggleFullScreen_","toggleTabBar_","toolbar","toolbarStyle","tooltip","touchesMatchingPhase_inView_","trackingArea","trackingNumber","types","types","uniqueID","uniqueSpellDocumentTag","unlockFocus","update","userData","usesEPSOnResolutionMismatch","vendorDefined","vendorID","vendorPointingDeviceType","view","view","visibleFrame","volume","wantsLayer","whiteComponent","widthAnchor","window","windowController","windowNumber","windowNumberAtPoint_belowWindowWithWindowNumber_","worksWhenModal","writableTypesForPasteboard","writeFileContents","writeFileWrapper","writeObjects","writeToPasteboard_","writingOptionsForType_pasteboard","yellowComponent","zoom_","NSArray","NSAutoreleasePool","NSBundle","NSComparator","NSComparisonResult","NSData","NSDataBase64DecodingIgnoreUnknownCharacters","NSDataBase64DecodingOptions","NSDataBase64Encoding64CharacterLineLength","NSDataBase64Encoding76CharacterLineLength","NSDataBase64EncodingEndLineWithCarriageReturn","NSDataBase64EncodingEndLineWithLineFeed","NSDataBase64EncodingOptions","NSDataReadingMappedAlways","NSDataReadingMappedIfSafe","NSDataReadingOptions","NSDataReadingUncached","NSDataSearchAnchored","NSDataSearchBackwards","NSDataSearchOptions","NSDataWritingAtomic","NSDataWritingOptions","NSDataWritingWithoutOverwriting","NSDate","NSDefaultRunLoopMode","NSDictionary","NSEnumerationConcurrent","NSEnumerationOptions","NSEnumerationReverse","NSFastEnumeration","NSFastIterator","NSInteger","NSIntegerMax","NSNotFound","NSOperatingSystemVersion","NSOrderedAscending","NSOrderedDescending","NSOrderedSame","NSPoint","NSProcessInfo","NSRange","NSRect","NSRectEdge","NSRectMaxXEdge","NSRectMaxYEdge","NSRectMinXEdge","NSRectMinYEdge","NSRunLoop","NSSize","NSString","NSTimeInterval","NSUInteger","NSURL","NSURLBookmarkCreationMinimalBookmark","NSURLBookmarkCreationOptions","NSURLBookmarkCreationOptions","NSURLBookmarkCreationPreferFileIDResolution","NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","NSURLBookmarkCreationSuitableForBookmarkFile","NSURLBookmarkCreationWithSecurityScope","NSURLBookmarkFileCreationOptions","NSURLBookmarkFileCreationOptions","NSURLBookmarkResolutionOptions","NSURLBookmarkResolutionOptions","NSURLBookmarkResolutionWithSecurityScope","NSURLBookmarkResolutionWithoutMounting","NSURLBookmarkResolutionWithoutUI","NSURLResourceKey","NSUserDefaults","NSValue","URLByAppendingPathComponent_","URLByAppendingPathComponent_isDirectory_","URLByAppendingPathExtension_","URLByDeletingLastPathComponent","URLByDeletingPathExtension","URLByResolvingAliasFileAtURL_options_error_","URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","URLByResolvingSymlinksInPath","URLByStandardizingPath","URLWithDataRepresentation_relativeToURL_","URLWithString_","URLWithString_relativeToURL_","UTF8String","absoluteString","absoluteURL","absoluteURLWithDataRepresentation_relativeToURL_","all","all","all","all","all","all","all","all","allKeys","allKeysForObject_","allValues","alloc","alloc","array","arrayByAddingObjectFromArray","arrayByAddingObjectsFromArray","arrayWithObject","arrayWithObjects","as_CGRect","autorelease","base64EncodedDataWithOptions_","base64EncodedStringWithOptions_","baseURL","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bookmarkDataWithContentsOfURL_error_","bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","bool_forKey_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","checkResourceIsReachableAndReturnError_","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","count","count","currentRunLoop","data","dataRepresentation","dataWithBytesNoCopy_length_","dataWithBytesNoCopy_length_freeWhenDone_","dataWithBytes_length_","dataWithContentsOfFile_","dataWithContentsOfFile_options_error_","dataWithContentsOfURL_","dataWithContentsOfURL_options_error_","dataWithData_","description","description","descriptionInStringsFileFormat","descriptionWithLocale_","descriptionWithLocale_indent_","dictionary","dictionaryWithContentsOfFile_","dictionaryWithContentsOfURL_","dictionaryWithDictionary_","dictionaryWithObject_forKey_","dictionaryWithObjectsAndKeys_","dictionaryWithObjects_forKeys_","dictionaryWithObjects_forKeys_count_","difference","difference","difference","difference","difference","difference","difference","difference","distantFuture","distantPast","drain","empty","empty","empty","empty","empty","empty","empty","empty","encode","encode","encode","enumerateByteRangesUsingBlock_","enumerateKeysAndObjectsUsingBlock_","enumerateKeysAndObjectsWithOptions_usingBlock_","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","fileCreationDate","fileExtensionHidden","fileGroupOwnerAccountID","fileGroupOwnerAccountName","fileIsAppendOnly","fileIsImmutable","fileModificationDate","fileOwnerAccountID","fileOwnerAccountName","filePathURL","filePosixPermissions","fileReferenceURL","fileSize","fileSystemFileNumber","fileSystemNumber","fileType","fileURLWithPathComponents_","fileURLWithPath_","fileURLWithPath_isDirectory_","fileURLWithPath_isDirectory_relativeToURL_","fileURLWithPath_relativeToURL_","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","getBytes_length_","getBytes_range_","hasDirectoryPath","hash","hash","hash","hash","hash","hash","hash","hash","height","host","init","init","initAbsoluteURLWithDataRepresentation_relativeToURL_","initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","initFileURLWithPath_","initFileURLWithPath_isDirectory_","initFileURLWithPath_isDirectory_relativeToURL_","initFileURLWithPath_relativeToURL_","initWithBase64EncodedData_options_","initWithBase64EncodedString_options_","initWithBytesNoCopy_length_","initWithBytesNoCopy_length_deallocator_","initWithBytesNoCopy_length_freeWhenDone_","initWithBytes_length_","initWithContentsOfFile_","initWithContentsOfFile_","initWithContentsOfFile_options_error","initWithContentsOfURL_","initWithContentsOfURL_","initWithContentsOfURL_options_error_","initWithDataRepresentation_relativeToURL_","initWithData_","initWithDictionary_","initWithDictionary_copyItems_","initWithObjectsAndKeys_","initWithObjects_forKeys_","initWithObjects_forKeys_count_","initWithString_","initWithString_relativeToURL_","init_str","insert","insert","insert","insert","insert","insert","insert","insert","inset","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","isEqualToData_","isEqualToDictionary_","isEqualToString","isEqual_","isFileReferenceURL","isFileURL","isOperatingSystemAtLeastVersion","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","keyEnumerator","keysOfEntriesPassingTest_","keysOfEntriesWithOptions_PassingTest_","keysSortedByValueUsingComparator_","keysSortedByValueUsingSelector_","keysSortedByValueWithOptions_usingComparator_","lastPathComponent","len","length","length","loadNibNamed_owner_topLevelObjects_","location","mainBundle","majorVersion","minorVersion","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","next","not","not","not","not","not","not","not","not","objectAtIndex","objectEnumerator","objectForKey_","objectForKeyedSubscript_","objectsForKeys_notFoundMarker_","operatingSystemVersion","origin","parameterString","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","password","patchVersion","path","pathComponents","pathExtension","performSelector_target_argument_order_modes_","port","processInfo","processName","query","rangeOfData_options_range_","relativePath","relativeString","remove","remove","remove","remove","remove","remove","remove","remove","removeObject_forKey_","resourceSpecifier","scheme","set","set","set","set","set","set","set","set","setBool_forKey_","sharedKeySetForKeys_","size","standardUserDefaults","standardizedURL","startAccessingSecurityScopedResource","stopAccessingSecurityScopedResource","stringByAppendingString_","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subdataWithRange_","substringWithRange","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","user","valueForKey_","valueWithPoint","valueWithSize","width","writeBookmarkData_toURL_options_error_","writeToFile_atomically_","writeToFile_atomically_","writeToFile_options_error_","writeToURL_atomically_","writeToURL_atomically_","writeToURL_options_error_","x","y","AutoresizingMask","BOTTOM_EDGE","Bottom","BottomLeft","BottomRight","CALayer","CARenderer","CATransform3D","CVSMPTETime","CVSMPTETimeFlags","CVSMPTETimeType","CVTimeStamp","CVTimeStampFlags","Center","ContentsFormat","ContentsGravity","CornerMask","EdgeAntialiasingMask","Filter","Gray8Uint","HEIGHT_SIZABLE","IDENTITY","LEFT_EDGE","Left","Linear","MAX_X_MARGIN","MAX_X_MAX_Y_CORNER","MAX_X_MIN_Y_CORNER","MAX_Y_MARGIN","MIN_X_MARGIN","MIN_X_MAX_Y_CORNER","MIN_X_MIN_Y_CORNER","MIN_Y_MARGIN","NOT_SIZABLE","Nearest","Other","Other","Other","RGBA16Float","RGBA8Uint","RIGHT_EDGE","Resize","ResizeAspect","ResizeAspectFill","Right","TOP_EDGE","Top","TopLeft","TopRight","Trilinear","WIDTH_SIZABLE","action_for_key","actions","add_animation_for_key","add_sublayer","add_update_rect","affine","affine_transform","all","all","all","anchor_point","anchor_point_z","animation_for_key","animation_keys","autoresizing_mask","background_color","background_filters","begin_frame_at","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","border_color","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","compositing_filter","contains","contains","contains","contains_point","contents","contents_are_flipped","contents_center","contents_format","contents_gravity","contents_rect","contents_scale","convert_point_from_layer","convert_point_to_layer","convert_rect_from_layer","convert_rect_to_layer","convert_time_from_layer","convert_time_to_layer","corner_radius","counter","current_media_time","default_action_for_key","default_value_for_key","delegate","difference","difference","difference","display","display_if_needed","draw_in_context","draws_asynchronously","drop","drop","edge_antialiasing_mask","empty","empty","empty","end_frame","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","filters","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frames","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_cgl_context","from_iter","from_iter","from_iter","from_layer","from_metal_texture","from_rotation","from_scale","from_translation","hash","hash","hash","hit_test","hostTime","hours","id","id","insert","insert","insert","insert_sublayer_above","insert_sublayer_at_index","insert_sublayer_below","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","invert","is_affine","is_all","is_all","is_all","is_double_sided","is_empty","is_empty","is_empty","is_geometry_flipped","is_hidden","is_identity","is_opaque","kCVSMPTETimeRunning","kCVSMPTETimeType24","kCVSMPTETimeType25","kCVSMPTETimeType2997","kCVSMPTETimeType2997Drop","kCVSMPTETimeType30","kCVSMPTETimeType30Drop","kCVSMPTETimeType5994","kCVSMPTETimeType60","kCVSMPTETimeValid","kCVTimeStampBottomField","kCVTimeStampHostTimeValid","kCVTimeStampIsInterlaced","kCVTimeStampRateScalarValid","kCVTimeStampSMPTETimeValid","kCVTimeStampTopField","kCVTimeStampVideoHostTimeValid","kCVTimeStampVideoRefreshPeriodValid","kCVTimeStampVideoTimeValid","layer","layout_if_needed","layout_manager","layout_sublayers","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","magnification_filter","mask","masked_corners","masks_to_bounds","minification_filter","minification_filter_bias","minutes","model_layer","mul","name","ne","ne","ne","ne","ne","ne","needs_display","needs_display_for_key","needs_display_on_bounds_change","needs_layout","new","next_frame_time","not","not","not","opacity","partial_cmp","partial_cmp","partial_cmp","position","preferred_frame_size","presentation_layer","rasterization_scale","rateScalar","reload_value_for_key_path","remove","remove","remove","remove_all_animation","remove_animation_for_key","remove_from_superlayer","render","render_in_context","replace_sublayer_with","reserved","resize_sublayers_with_old_size","resize_with_old_superlayer_size","rotate","scale","seconds","set","set","set","set_actions","set_affine_transform","set_anchor_point","set_anchor_point_z","set_autoresizing_mask","set_background_color","set_background_filters","set_border_color","set_border_width","set_bounds","set_bounds","set_compositing_filter","set_contents","set_contents_center","set_contents_format","set_contents_gravity","set_contents_opaque","set_contents_rect","set_contents_scale","set_corner_radius","set_delegate","set_destination","set_double_sided","set_draws_asynchronously","set_edge_antialiasing_mask","set_filters","set_frame","set_geometry_flipped","set_hidden","set_layer","set_layout_manager","set_magnification_filter","set_mask","set_masked_corners","set_masks_to_bounds","set_minification_filter","set_minification_filter_bias","set_name","set_needs_display","set_needs_display_in_rect","set_needs_display_on_bounds_change","set_needs_layout","set_opacity","set_opaque","set_position","set_rasterization_scale","set_shadow_color","set_shadow_offset","set_shadow_opacity","set_shadow_path","set_shadow_radius","set_should_rasterize","set_style","set_sublayer_transform","set_transform","set_z_position","shadow_color","shadow_offset","shadow_opacity","shadow_path","shadow_radius","should_archive_value_for_key","should_rasterize","smpteTime","style","sub","sub","sub","sub_assign","sub_assign","sub_assign","subframeDivisor","subframes","sublayer_transform","sublayers","superlayer","symmetric_difference","symmetric_difference","symmetric_difference","time_type","to_affine","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","transaction","transform","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","update_bounds","version","videoRefreshPeriod","videoTime","videoTimeScale","z_position","0","0","0","animation_duration","animation_timing_function","begin","commit","completion_block","disable_actions","flush","lock","set_animation_duration","set_animation_timing_function","set_completion_block","set_disable_actions","set_value_for_key","unlock","value_for_key"],"q":["cocoa","","","","","cocoa::appkitcocoa::basecocoa::foundationcocoa::quartzcorecocoa::quartzcore::ContentsFormat","cocoa::quartzcore::ContentsGravity","cocoa::quartzcore::Filter","cocoa::quartzcore::transaction","","","","","","","","","","","","","",""],"d":["","","Creates a Cocoa delegate to use e.g. with …eturns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagseturns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Objective-C <code>BOOL</code> type.","","","","","The equivalent of false for Objective-C’s <code>BOOL</code> type.","","","","","","","The equivalent of true for Objective-C’s <code>BOOL</code> typeconvenience method to convert the name of a selector to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,0,0,3,0,0,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,7,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,4,0,0,10,10,10,10,4,8,7,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,12,13,13,13,0,0,0,14,15,0,0,16,0,0,14,0,0,0,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,6,18,0,8,7,0,0,0,6,16,0,0,0,0,0,0,0,19,19,19,0,7,7,7,7,7,7,0,0,20,20,20,20,20,20,20,0,21,21,0,0,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,0,0,0,0,14,14,6,0,0,16,0,6,0,0,22,22,22,0,22,0,0,0,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,8,7,8,7,0,0,0,8,7,8,7,8,7,15,0,0,0,0,14,0,24,24,0,8,7,8,7,8,7,0,0,0,15,15,15,6,25,25,25,25,25,25,25,25,25,25,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,27,27,27,0,0,8,7,8,7,8,7,0,0,0,0,0,0,0,0,0,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,8,7,0,0,12,0,0,0,0,0,16,0,0,16,0,0,14,0,8,7,8,7,8,7,15,16,16,16,0,0,0,0,0,4,0,8,7,0,12,16,6,16,0,0,0,0,0,0,0,0,0,8,7,0,0,30,30,30,30,30,30,30,30,0,0,0,0,0,8,7,8,7,0,31,31,31,0,14,16,16,14,0,15,0,32,32,32,32,32,32,32,0,0,14,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,0,34,34,0,35,0,36,36,36,36,36,36,36,36,36,36,0,35,35,4,35,35,4,0,37,0,34,0,0,38,38,38,39,0,39,35,0,40,40,40,40,40,35,41,41,42,43,2,2,2,44,41,45,46,47,48,48,41,41,49,50,44,51,1,41,11,14,34,5,36,37,21,20,32,7,6,1,52,48,53,44,54,49,55,56,3,57,58,59,41,60,61,62,63,44,50,64,44,65,52,44,44,51,44,41,44,66,44,66,67,54,41,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,64,64,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,49,64,70,2,2,41,44,44,44,41,71,51,51,41,2,44,44,51,2,2,72,72,64,51,3,3,2,65,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,65,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,44,72,52,11,14,34,5,36,37,21,20,32,7,6,44,61,44,66,64,64,64,64,64,64,11,14,34,5,36,37,21,20,32,7,6,44,73,73,73,11,14,34,5,36,37,21,20,32,7,6,44,44,44,44,50,44,44,44,44,44,2,52,50,50,49,44,66,44,49,44,66,44,52,47,3,2,71,3,52,52,64,2,2,51,74,51,44,66,65,44,41,71,50,2,2,2,44,66,1,66,1,2,1,11,14,34,5,36,37,21,20,32,7,6,52,1,49,55,44,2,52,52,41,41,41,41,61,41,44,50,71,11,14,34,5,36,37,21,20,32,7,6,2,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,2,2,2,2,2,11,14,34,5,36,37,21,20,32,7,6,1,1,46,44,54,3,65,10,9,31,11,11,11,11,11,14,14,14,14,14,39,38,13,34,34,34,34,34,5,5,5,5,5,26,27,25,35,16,18,28,29,36,36,36,36,36,37,37,37,37,37,24,33,21,21,21,21,21,20,20,20,20,20,32,32,32,32,32,8,7,7,7,7,7,6,6,6,6,6,17,22,30,23,50,44,49,66,44,44,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,7,51,1,1,1,1,56,3,64,2,44,11,14,34,5,36,37,21,20,32,7,6,49,44,41,64,52,52,61,72,44,41,41,41,44,51,50,50,49,41,56,1,3,44,44,41,71,71,41,41,71,3,49,57,58,59,60,50,55,61,62,63,75,41,71,41,41,48,53,62,44,61,11,14,34,5,36,37,21,20,32,7,6,50,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,44,2,44,57,44,2,2,41,76,44,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,48,2,44,2,2,2,61,49,41,49,70,44,1,2,2,41,41,71,64,2,46,66,3,44,44,44,44,41,41,44,70,44,44,44,50,44,44,2,2,2,2,44,51,41,71,11,14,34,5,36,37,21,20,32,7,6,65,48,53,50,61,46,11,14,34,5,36,37,21,20,32,7,6,50,56,44,43,52,52,44,44,44,44,44,2,11,14,34,5,36,37,21,20,32,7,6,51,51,51,77,51,78,51,51,77,71,44,44,44,2,71,71,71,2,2,2,52,46,41,46,44,2,2,44,51,74,51,51,51,75,75,41,41,64,51,11,14,34,5,36,37,21,20,32,7,6,49,2,41,76,50,41,44,44,46,44,44,52,52,52,52,52,52,71,2,46,42,44,47,1,64,42,44,66,66,2,2,50,50,50,50,50,50,50,50,46,53,11,14,34,5,36,37,21,20,32,7,6,44,59,46,44,43,50,44,46,44,48,44,49,44,67,54,59,43,43,42,44,44,44,61,44,44,44,44,44,44,44,50,50,3,74,51,74,44,50,42,44,44,50,60,57,54,50,49,44,49,44,44,44,44,44,44,61,44,58,59,44,61,53,61,49,49,70,44,46,44,70,44,44,44,2,44,44,41,44,55,55,46,44,44,51,74,44,44,44,44,43,46,67,62,44,60,51,74,44,53,50,44,53,59,44,44,44,59,44,61,44,44,3,3,61,49,49,44,46,54,46,72,67,62,44,41,61,71,71,2,44,2,70,76,71,2,46,51,74,44,11,14,34,5,36,37,21,20,32,7,6,11,14,34,5,36,37,21,20,32,7,6,2,49,66,11,14,34,5,36,37,21,20,32,7,6,76,2,61,61,50,50,50,50,44,44,2,50,2,41,2,2,44,65,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,11,14,34,5,36,37,21,20,32,7,6,44,44,44,44,61,2,2,2,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,65,40,19,68,69,4,15,12,10,9,31,11,14,39,38,13,34,5,26,27,25,35,16,18,28,29,36,37,24,33,21,20,32,8,7,6,17,22,30,23,51,74,51,11,14,34,5,36,37,21,20,32,7,6,2,72,41,3,2,41,2,2,2,3,61,66,71,49,64,49,2,44,2,44,44,78,51,51,51,71,78,65,65,64,44,0,79,79,79,0,0,0,0,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,80,0,81,81,81,81,0,82,82,0,82,83,83,0,84,0,84,0,0,0,85,0,85,0,0,0,0,0,0,86,86,86,0,0,0,0,0,87,87,87,87,0,0,0,0,0,0,88,0,89,88,88,88,88,0,89,0,89,90,90,90,89,0,0,89,89,89,89,89,89,89,89,89,89,89,89,91,89,89,89,85,88,90,82,81,80,84,83,92,92,92,89,91,93,93,93,93,93,94,95,96,96,89,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,89,89,97,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,96,89,99,100,94,101,102,85,86,88,90,82,81,80,84,83,99,100,94,101,102,85,86,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,93,92,103,96,89,96,96,96,96,96,96,96,96,92,96,92,92,92,92,92,92,92,92,92,92,92,85,88,90,82,81,80,84,83,104,104,95,85,88,90,82,81,80,84,83,99,100,94,96,92,92,85,86,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,92,92,92,92,92,92,92,92,92,89,92,89,92,92,92,92,89,89,89,89,89,85,85,85,85,85,86,88,88,88,88,88,90,90,90,90,90,82,82,82,82,82,81,81,81,81,81,80,80,80,80,80,84,84,84,84,84,83,83,83,83,83,89,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,96,96,89,85,88,90,82,81,80,84,83,100,89,93,92,89,89,89,89,89,89,96,96,96,96,96,96,92,96,96,92,96,96,89,96,92,92,92,92,92,89,89,91,85,88,90,82,81,80,84,83,94,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,98,96,92,91,89,89,89,105,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,106,92,92,92,92,92,92,89,91,96,101,107,101,107,102,102,85,88,90,82,81,80,84,83,95,99,100,94,101,102,98,85,88,90,82,81,80,84,83,93,92,92,92,92,105,94,89,85,88,90,82,81,80,84,83,89,102,89,89,89,103,89,105,105,89,96,89,89,85,88,90,82,81,80,84,83,97,89,89,85,88,90,82,81,80,84,83,97,92,94,97,89,89,89,91,85,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,96,91,85,88,90,82,81,80,84,83,99,100,94,101,102,85,86,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,87,98,99,100,94,101,102,85,86,88,90,82,81,80,84,83,85,88,90,82,81,80,84,83,89,92,108,108,100,89,92,96,96,92,96,96,99,99,0,109,110,110,110,0,0,0,0,0,0,0,0,110,0,0,0,0,0,111,112,113,109,110,114,112,115,115,112,112,115,115,112,112,114,110,111,114,111,111,109,110,110,110,110,109,110,110,110,114,112,116,116,116,116,117,113,116,109,115,112,116,116,116,116,116,116,116,117,109,115,112,109,115,112,109,115,112,109,115,112,109,115,112,109,115,112,109,115,112,116,116,116,117,110,111,114,109,115,112,113,118,119,116,117,110,111,114,109,115,112,113,118,119,116,117,116,117,110,111,114,109,115,112,113,118,119,116,117,110,111,114,109,115,112,113,118,119,109,115,112,109,115,112,116,109,115,112,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,119,0,116,116,116,109,115,112,116,116,116,116,116,117,116,109,115,112,117,110,111,114,109,115,112,113,109,115,112,116,118,119,110,111,114,109,109,109,109,109,115,115,115,115,115,112,112,112,112,112,116,119,116,117,110,111,114,109,115,112,113,118,119,109,115,112,109,115,112,109,115,112,117,109,115,112,116,117,113,113,113,109,115,112,116,118,119,116,117,109,115,112,116,116,116,109,115,112,109,115,112,116,117,110,111,114,109,115,112,113,118,119,113,113,109,115,112,116,109,115,112,116,116,113,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,116,116,116,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,116,116,116,116,116,116,119,116,113,116,110,111,114,109,115,112,116,116,116,116,116,117,109,115,112,116,109,115,112,116,116,116,116,118,116,109,115,112,116,116,116,117,116,116,118,116,116,113,113,119,109,115,112,116,116,116,116,116,116,116,116,116,116,117,116,116,116,116,116,116,116,116,116,116,117,116,116,116,116,116,116,116,117,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,118,116,109,115,112,109,115,112,119,119,116,116,116,109,115,112,119,113,116,117,110,111,114,109,115,112,113,118,119,109,115,112,0,116,113,116,117,110,111,114,109,115,112,113,118,119,116,117,110,111,114,109,115,112,113,118,119,116,117,110,111,114,109,115,112,113,118,119,109,115,112,117,118,118,118,118,116,120,121,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,[[],["c_void",0]],[[],["c_void",0]],null,null,[[],["cglcontextobj",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[["nstiffcompression",4],["f32",0]],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nsinteger",6]],[[],["nsinteger",6]],[[],["nsinteger",6]],[[],["bool",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["bool",6]]],[[["nsapplicationactivationoptions",4]],["bool",6]],[[["id",6],["sel",6],["id",6]],["id",6]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6],["nswindoworderingmode",3]]],[[["id",6],["id",6]],["nsinteger",6]],[[],["id",6]],[[],["nsrect",3]],[[],["nsapplicationpresentationoptions",3]],[[],["nswindowstylemask",3]],[[],["nswindoworderingmode",3]],[[],["nsalignmentoptions",3]],[[],["nswindowcollectionbehavior",3]],[[],["nswindowocclusionstate",3]],[[],["nseventswipetrackingoptions",3]],[[],["nseventphase",3]],[[],["nstouchphase",3]],[[],["nseventmask",3]],[[],["nseventmodifierflags",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[],["bool",6]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[["cgpoint",3],["cgaffinetransform",3]],["cgpoint",3]],[[],["id",6]],[[],["nssize",3]],[[["nsrectedge",4]],["bool",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[["nsrect",3],["nsalignmentoptions",3]],["nsrect",3]],[[["nsrect",3],["nsalignmentoptions",3]],["nsrect",3]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[],["id",6]],[[],["bool",6]],[[["nsrect",3],["id",6],["id",6]],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[["nsapplicationpresentationoptions",3]],["nsuinteger",6]],[[["nswindowstylemask",3]],["nsuinteger",6]],[[["nswindoworderingmode",3]],["nsinteger",6]],[[["nsalignmentoptions",3]],["c_ulonglong",6]],[[["nswindowcollectionbehavior",3]],["nsuinteger",6]],[[["nswindowocclusionstate",3]],["nsuinteger",6]],[[["nseventswipetrackingoptions",3]],["nsuinteger",6]],[[["nseventphase",3]],["nsuinteger",6]],[[["nstouchphase",3]],["nsuinteger",6]],[[["nseventmask",3]],["c_ulonglong",6]],[[["nseventmodifierflags",3]],["nsuinteger",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[],["cgfloat",6]],[[],["cgfloatnsrect",3]],[[],["cgfloat",6]],[[],["id",6]],[[],["nseventbuttonmask",4]],[[],["nsinteger",6]],[[],["nsimagecachemode",4]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[]],[[],["nsuinteger",6]],[[["nspoint",3]],["nspoint",3]],[[]],[[],["nsinteger",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["nsinteger",6]],["nsrange",3]],[[["id",6],["nsinteger",6],["id",6],["bool",6],["nsinteger",6]]],[[],["id",6]],[[],["nsinteger",6]],[[]],[[]],[[],["nsinteger",6]],[[["cgpoint",3]],["cgpoint",3]],[[["nsapplicationactivationpolicy",4]],["nsapplicationactivationpolicy",4]],[[["nsapplicationactivationoptions",4]],["nsapplicationactivationoptions",4]],[[["nsapplicationterminatereply",4]],["nsapplicationterminatereply",4]],[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindowtitlevisibility",4]],["nswindowtitlevisibility",4]],[[["nswindowtabbingmode",4]],["nswindowtabbingmode",4]],[[["nsbackingstoretype",4]],["nsbackingstoretype",4]],[[["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nsopenglpixelformatattribute",4]],["nsopenglpixelformatattribute",4]],[[["nsopenglpfaopenglprofiles",4]],["nsopenglpfaopenglprofiles",4]],[[["nsopenglcontextparameter",4]],["nsopenglcontextparameter",4]],[[["nswindowbutton",4]],["nswindowbutton",4]],[[["nsbezelstyle",4]],["nsbezelstyle",4]],[[["nsrequestuserattentiontype",4]],["nsrequestuserattentiontype",4]],[[["nspasteboardreadingoptions",4]],["nspasteboardreadingoptions",4]],[[["nspasteboardwritingoptions",4]],["nspasteboardwritingoptions",4]],[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nsmodalresponse",4]],["nsmodalresponse",4]],[[["nsviewlayercontentsplacement",4]],["nsviewlayercontentsplacement",4]],[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3]],["nstouchphase",3]],[[["nseventtype",4]],["nseventtype",4]],[[["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nscompositingoperation",4]],["nscompositingoperation",4]],[[["nsimagecachemode",4]],["nsimagecachemode",4]],[[["nstiffcompression",4]],["nstiffcompression",4]],[[["nsimageloadstatus",4]],["nsimageloadstatusnsinteger",6]]],[[],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["ordering",4]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["ordering",4]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["ordering",4]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["ordering",4]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["ordering",4]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["ordering",4]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["ordering",4]],[[["nseventphase",3],["nseventphase",3]],["ordering",4]],[[["nstouchphase",3],["nstouchphase",3]],["ordering",4]],[[["nseventmask",3],["nseventmask",3]],["ordering",4]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["ordering",4]],[[],["nswindowcollectionbehavior",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsrect",3],["id",6]]],[[["cgfloat",6]],["id",6]],[[["cgfloat",6]],["id",6]],[[["cgfloat",6]],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["bool",0]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["bool",0]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["bool",0]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3],["nseventphase",3]],["bool",0]],[[["nstouchphase",3],["nstouchphase",3]],["bool",0]],[[["nseventmask",3],["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["bool",0]],[[],["nssize",3]],[[["nsrectedge",4]],["cgfloat",6]],[[],["nssize",3]],[[],["nssize",3]],[[],["id",6]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3],["nswindowstylemask",3]],["nsrect",3]],[[],["nssize",3]],[[],["nssize",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["nspoint",3],["id",6]],["nspoint",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nseventmodifierflags",3]],[[],["nstimeinterval",6]],[[],["glint",6]],[[],["id",6]],[[],["id",6]],[[],["cgfloat",6]],[[],["nsinteger",6]],[[],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["nsinteger",6]],[[],["id",6]],[[],["id",6]],[[],["cgpoint",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[["id",6]]],[[],["nswindowdepth",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nsuinteger",6]],[[],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[],["id",6]],[[],["id",6]],[[]],[[]],[[],["bool",6]],[[],["nstimeinterval",6]],[[],["id",6]],[[],["id",6]],[[["nspoint",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6]]],[[["nsrect",3]]],[[["nsrect",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6]]],[[["nsrect",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6],["bool",6],["id",6]]],[[["bool",6],["nsrect",3]]],[[["id",6],["nsrect",3]]],[[],["id",6]],[[],["bool",6]],[[],["nstimeinterval",6]],[[],["nsapplicationpresentationoptions",3]],[[],["nswindowstylemask",3]],[[],["nswindoworderingmode",3]],[[],["nsalignmentoptions",3]],[[],["nswindowcollectionbehavior",3]],[[],["nswindowocclusionstate",3]],[[],["nseventswipetrackingoptions",3]],[[],["nseventphase",3]],[[],["nstouchphase",3]],[[],["nseventmask",3]],[[],["nseventmodifierflags",3]],[[["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nsinteger",6],["nsinteger",6],["c_void",0]],["id",6]],[[["nsapplicationactivationpolicy",4],["nsapplicationactivationpolicy",4]],["bool",0]],[[["nsapplicationactivationoptions",4],["nsapplicationactivationoptions",4]],["bool",0]],[[["nsapplicationterminatereply",4],["nsapplicationterminatereply",4]],["bool",0]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["bool",0]],[[["nswindowtitlevisibility",4],["nswindowtitlevisibility",4]],["bool",0]],[[["nswindowtabbingmode",4],["nswindowtabbingmode",4]],["bool",0]],[[["nsbackingstoretype",4],["nsbackingstoretype",4]],["bool",0]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["bool",0]],[[["nsopenglpixelformatattribute",4],["nsopenglpixelformatattribute",4]],["bool",0]],[[["nsopenglpfaopenglprofiles",4],["nsopenglpfaopenglprofiles",4]],["bool",0]],[[["nsopenglcontextparameter",4],["nsopenglcontextparameter",4]],["bool",0]],[[["nswindowbutton",4],["nswindowbutton",4]],["bool",0]],[[["nsbezelstyle",4],["nsbezelstyle",4]],["bool",0]],[[["nsrequestuserattentiontype",4],["nsrequestuserattentiontype",4]],["bool",0]],[[["nspasteboardreadingoptions",4],["nspasteboardreadingoptions",4]],["bool",0]],[[["nspasteboardwritingoptions",4],["nspasteboardwritingoptions",4]],["bool",0]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["bool",0]],[[["nsmodalresponse",4],["nsmodalresponse",4]],["bool",0]],[[["nsviewlayercontentsplacement",4],["nsviewlayercontentsplacement",4]],["bool",0]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3],["nseventphase",3]],["bool",0]],[[["nstouchphase",3],["nstouchphase",3]],["bool",0]],[[["nseventtype",4],["nseventtype",4]],["bool",0]],[[["nseventmask",3],["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["bool",0]],[[["nscompositingoperation",4],["nscompositingoperation",4]],["bool",0]],[[["nsimagecachemode",4],["nsimagecachemode",4]],["bool",0]],[[["nstiffcompression",4],["nstiffcompression",4]],["bool",0]],[[["nsimageloadstatus",4],["nsimageloadstatus",4]],["bool",0]],[[],["nsinteger",6]],[[],["c_void",0]],[[],["nseventtype",4]],[[["c_void",0]],["id",6]],[[["c_void",0]],["id",6]],[[["nsapplicationpresentationoptions",3],["intoiterator",8]]],[[["nswindowstylemask",3],["intoiterator",8]]],[[["nswindoworderingmode",3],["intoiterator",8]]],[[["nsalignmentoptions",3],["intoiterator",8]]],[[["nswindowcollectionbehavior",3],["intoiterator",8]]],[[["nswindowocclusionstate",3],["intoiterator",8]]],[[["nseventswipetrackingoptions",3],["intoiterator",8]]],[[["nseventphase",3],["intoiterator",8]]],[[["nstouchphase",3],["intoiterator",8]]],[[["nseventmask",3],["intoiterator",8]]],[[["nseventmodifierflags",3],["intoiterator",8]]],[[],["id",6]],[[],["id",6]],[[]],[[],["id",6]],[[],["bool",6]],[[]],[[["cgpoint",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsapplicationactivationpolicy",4],["formatter",3]],["result",6]],[[["nsapplicationactivationoptions",4],["formatter",3]],["result",6]],[[["nsapplicationterminatereply",4],["formatter",3]],["result",6]],[[["nsapplicationpresentationoptions",3],["formatter",3]],["result",6]],[[["nsapplicationpresentationoptions",3],["formatter",3]],["result",6]],[[["nsapplicationpresentationoptions",3],["formatter",3]],["result",6]],[[["nsapplicationpresentationoptions",3],["formatter",3]],["result",6]],[[["nsapplicationpresentationoptions",3],["formatter",3]],["result",6]],[[["nswindowstylemask",3],["formatter",3]],["result",6]],[[["nswindowstylemask",3],["formatter",3]],["result",6]],[[["nswindowstylemask",3],["formatter",3]],["result",6]],[[["nswindowstylemask",3],["formatter",3]],["result",6]],[[["nswindowstylemask",3],["formatter",3]],["result",6]],[[["nswindowtitlevisibility",4],["formatter",3]],["result",6]],[[["nswindowtabbingmode",4],["formatter",3]],["result",6]],[[["nsbackingstoretype",4],["formatter",3]],["result",6]],[[["nswindoworderingmode",3],["formatter",3]],["result",6]],[[["nswindoworderingmode",3],["formatter",3]],["result",6]],[[["nswindoworderingmode",3],["formatter",3]],["result",6]],[[["nswindoworderingmode",3],["formatter",3]],["result",6]],[[["nswindoworderingmode",3],["formatter",3]],["result",6]],[[["nsalignmentoptions",3],["formatter",3]],["result",6]],[[["nsalignmentoptions",3],["formatter",3]],["result",6]],[[["nsalignmentoptions",3],["formatter",3]],["result",6]],[[["nsalignmentoptions",3],["formatter",3]],["result",6]],[[["nsalignmentoptions",3],["formatter",3]],["result",6]],[[["nsopenglpixelformatattribute",4],["formatter",3]],["result",6]],[[["nsopenglpfaopenglprofiles",4],["formatter",3]],["result",6]],[[["nsopenglcontextparameter",4],["formatter",3]],["result",6]],[[["nswindowbutton",4],["formatter",3]],["result",6]],[[["nsbezelstyle",4],["formatter",3]],["result",6]],[[["nsrequestuserattentiontype",4],["formatter",3]],["result",6]],[[["nspasteboardreadingoptions",4],["formatter",3]],["result",6]],[[["nspasteboardwritingoptions",4],["formatter",3]],["result",6]],[[["nswindowcollectionbehavior",3],["formatter",3]],["result",6]],[[["nswindowcollectionbehavior",3],["formatter",3]],["result",6]],[[["nswindowcollectionbehavior",3],["formatter",3]],["result",6]],[[["nswindowcollectionbehavior",3],["formatter",3]],["result",6]],[[["nswindowcollectionbehavior",3],["formatter",3]],["result",6]],[[["nswindowocclusionstate",3],["formatter",3]],["result",6]],[[["nswindowocclusionstate",3],["formatter",3]],["result",6]],[[["nswindowocclusionstate",3],["formatter",3]],["result",6]],[[["nswindowocclusionstate",3],["formatter",3]],["result",6]],[[["nswindowocclusionstate",3],["formatter",3]],["result",6]],[[["nsmodalresponse",4],["formatter",3]],["result",6]],[[["nsviewlayercontentsplacement",4],["formatter",3]],["result",6]],[[["nseventswipetrackingoptions",3],["formatter",3]],["result",6]],[[["nseventswipetrackingoptions",3],["formatter",3]],["result",6]],[[["nseventswipetrackingoptions",3],["formatter",3]],["result",6]],[[["nseventswipetrackingoptions",3],["formatter",3]],["result",6]],[[["nseventswipetrackingoptions",3],["formatter",3]],["result",6]],[[["nseventphase",3],["formatter",3]],["result",6]],[[["nseventphase",3],["formatter",3]],["result",6]],[[["nseventphase",3],["formatter",3]],["result",6]],[[["nseventphase",3],["formatter",3]],["result",6]],[[["nseventphase",3],["formatter",3]],["result",6]],[[["nstouchphase",3],["formatter",3]],["result",6]],[[["nstouchphase",3],["formatter",3]],["result",6]],[[["nstouchphase",3],["formatter",3]],["result",6]],[[["nstouchphase",3],["formatter",3]],["result",6]],[[["nstouchphase",3],["formatter",3]],["result",6]],[[["nseventtype",4],["formatter",3]],["result",6]],[[["nseventmask",3],["formatter",3]],["result",6]],[[["nseventmask",3],["formatter",3]],["result",6]],[[["nseventmask",3],["formatter",3]],["result",6]],[[["nseventmask",3],["formatter",3]],["result",6]],[[["nseventmask",3],["formatter",3]],["result",6]],[[["nseventmodifierflags",3],["formatter",3]],["result",6]],[[["nseventmodifierflags",3],["formatter",3]],["result",6]],[[["nseventmodifierflags",3],["formatter",3]],["result",6]],[[["nseventmodifierflags",3],["formatter",3]],["result",6]],[[["nseventmodifierflags",3],["formatter",3]],["result",6]],[[["nscompositingoperation",4],["formatter",3]],["result",6]],[[["nsimagecachemode",4],["formatter",3]],["result",6]],[[["nstiffcompression",4],["formatter",3]],["result",6]],[[["nsimageloadstatus",4],["formatter",3]],["result",6]],[[],["id",6]],[[],["nsrect",3]],[[],["nsrect",3]],[[],["nsrect",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrect",3],["nswindowstylemask",3]],["nsrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nsuinteger",6]],["option",4,[["nsapplicationpresentationoptions",3]]]],[[["nsuinteger",6]],["option",4,[["nswindowstylemask",3]]]],[[["nsinteger",6]],["option",4,[["nswindoworderingmode",3]]]],[[["c_ulonglong",6]],["option",4,[["nsalignmentoptions",3]]]],[[["nsuinteger",6]],["option",4,[["nswindowcollectionbehavior",3]]]],[[["nsuinteger",6]],["option",4,[["nswindowocclusionstate",3]]]],[[["nsuinteger",6]],["option",4,[["nseventswipetrackingoptions",3]]]],[[["nsuinteger",6]],["option",4,[["nseventphase",3]]]],[[["nsuinteger",6]],["option",4,[["nstouchphase",3]]]],[[["c_ulonglong",6]],["option",4,[["nseventmask",3]]]],[[["nsuinteger",6]],["option",4,[["nseventmodifierflags",3]]]],[[["nsuinteger",6]],["nsapplicationpresentationoptions",3]],[[["nsuinteger",6]],["nswindowstylemask",3]],[[["nsinteger",6]],["nswindoworderingmode",3]],[[["c_ulonglong",6]],["nsalignmentoptions",3]],[[["nsuinteger",6]],["nswindowcollectionbehavior",3]],[[["nsuinteger",6]],["nswindowocclusionstate",3]],[[["nsuinteger",6]],["nseventswipetrackingoptions",3]],[[["nsuinteger",6]],["nseventphase",3]],[[["nsuinteger",6]],["nstouchphase",3]],[[["c_ulonglong",6]],["nseventmask",3]],[[["nsuinteger",6]],["nseventmodifierflags",3]],[[["nsuinteger",6]],["nsapplicationpresentationoptions",3]],[[["nsuinteger",6]],["nswindowstylemask",3]],[[["nsinteger",6]],["nswindoworderingmode",3]],[[["c_ulonglong",6]],["nsalignmentoptions",3]],[[["nsuinteger",6]],["nswindowcollectionbehavior",3]],[[["nsuinteger",6]],["nswindowocclusionstate",3]],[[["nsuinteger",6]],["nseventswipetrackingoptions",3]],[[["nsuinteger",6]],["nseventphase",3]],[[["nsuinteger",6]],["nstouchphase",3]],[[["c_ulonglong",6]],["nseventmask",3]],[[["nsuinteger",6]],["nseventmodifierflags",3]],[[["intoiterator",8]],["nsapplicationpresentationoptions",3]],[[["intoiterator",8]],["nswindowstylemask",3]],[[["intoiterator",8]],["nswindoworderingmode",3]],[[["intoiterator",8]],["nsalignmentoptions",3]],[[["intoiterator",8]],["nswindowcollectionbehavior",3]],[[["intoiterator",8]],["nswindowocclusionstate",3]],[[["intoiterator",8]],["nseventswipetrackingoptions",3]],[[["intoiterator",8]],["nseventphase",3]],[[["intoiterator",8]],["nstouchphase",3]],[[["intoiterator",8]],["nseventmask",3]],[[["intoiterator",8]],["nseventmodifierflags",3]],[[["nseventtype",4]],["nseventmask",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["glint",0],["nsopenglpixelformatattribute",4],["glint",6]]],[[["glint",0],["nsopenglcontextparameter",4]]],[[],["cgfloat",6]],[[],["bool",6]],[[],["bool",6]],[[["nsapplicationpresentationoptions",3],["",0]]],[[["nswindowstylemask",3],["",0]]],[[["nswindoworderingmode",3],["",0]]],[[["nsalignmentoptions",3],["",0]]],[[["nswindowcollectionbehavior",3],["",0]]],[[["nswindowocclusionstate",3],["",0]]],[[["nseventswipetrackingoptions",3],["",0]]],[[["nseventphase",3],["",0]]],[[["nstouchphase",3],["",0]]],[[["nseventmask",3],["",0]]],[[["nseventmodifierflags",3],["",0]]],[[],["id",6]],[[],["bool",6]],[[["nsrect",3],["nsrect",3],["id",6],["id",6],["bool",6]],["bool",6]],[[],["cgfloat",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["nsinteger",6]]],[[],["bool",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[["c_void",0]],["id",6]],[[["cglcontextobj",6]],["id",6]],[[["nsrect",3],["nswindowstylemask",3],["nsbackingstoretype",4],["bool",6]],["id",6]],[[["nsrect",3],["nswindowstylemask",3],["nsbackingstoretype",4],["bool",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3]],["id",6]],[[["nsrect",3],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["nssize",3]],["id",6]],[[["nssize",3],["bool",6],["block",0]]],[[["id",6]],["id",6]],[[["id",6],["sel",6],["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[["id",6],["nsinteger",6]]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["bool",0]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["bool",0]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["bool",0]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3],["nseventphase",3]],["bool",0]],[[["nstouchphase",3],["nstouchphase",3]],["bool",0]],[[["nseventmask",3],["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3]],["bool",0]],[[["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3]],["bool",0]],[[["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3]],["bool",0]],[[["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3]],["bool",0]],[[["nstouchphase",3]],["bool",0]],[[["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3]],["bool",0]],[[["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3]],["bool",0]],[[["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3]],["bool",0]],[[["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3]],["bool",0]],[[["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3]],["bool",0]],[[["nstouchphase",3]],["bool",0]],[[["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3]],["bool",0]],[[["nsinteger",6]],["id",6]],[[],["c_ushort",6]],[[["id",6]]],[[["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["id",6],["id",6],["bool",6],["c_ushort",6]],["id",6]],[[],["nstimeinterval",6]],[[],["nstimeinterval",6]],[[],["id",6]],[[],["id",6]],[[["cgfloat",6]],["id",6]],[[],["nsviewlayercontentsplacement",4]],[[],["cgfloat",6]],[[],["nsinteger",6]],[[],["id",6]],[[["id",6]],["cgpoint",3]],[[],["nspoint",3]],[[]],[[["bool",6]]],[[],["bool",6]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[],["id",6]],[[],["id",6]],[[]],[[["id",6]],["bool",6]],[[["id",6]]],[[]],[[]],[[],["bool",6]],[[],["bool",6]],[[],["nssize",3]],[[],["id",6]],[[["id",6],["nswindowstylemask",3]],["cgfloat",6]],[[],["nssize",3]],[[["id",6]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nseventmodifierflags",3]],[[],["nseventphase",3]],[[["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nsinteger",6],["nsinteger",6],["c_float",6]],["id",6]],[[],["nspoint",3]],[[],["nspoint",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["bool",0]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["bool",0]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["bool",0]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["bool",0]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["bool",0]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["bool",0]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["bool",0]],[[["nseventphase",3],["nseventphase",3]],["bool",0]],[[["nstouchphase",3],["nstouchphase",3]],["bool",0]],[[["nseventmask",3],["nseventmask",3]],["bool",0]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["bool",0]],[[["f64",0],["f64",0]],["cgpoint",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["nsuinteger",6],["id",6],["id",6],["bool",6]],["id",6]],[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[],["id",6]],[[],["glint",6]],[[],["nswindowocclusionstate",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6]]],[[]],[[["nswindoworderingmode",3],["nsinteger",6]]],[[["id",6]]],[[["id",6]]],[[["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nseventsubtype",4],["nsinteger",6],["nsinteger",6]],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["option",4,[["ordering",4]]]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["option",4,[["ordering",4]]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["option",4,[["ordering",4]]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["option",4,[["ordering",4]]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["option",4,[["ordering",4]]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["option",4,[["ordering",4]]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["option",4,[["ordering",4]]]],[[["nseventphase",3],["nseventphase",3]],["option",4,[["ordering",4]]]],[[["nstouchphase",3],["nstouchphase",3]],["option",4,[["ordering",4]]]],[[["nseventmask",3],["nseventmask",3]],["option",4,[["ordering",4]]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["option",4,[["ordering",4]]]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[["id",6],["id",6],["id",6]]],[[],["bool",6]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[],["nseventphase",3]],[[],["bool",6]],[[],["id",6]],[[],["bool",6]],[[],["nsuinteger",6]],[[],["nsuinteger",6]],[[],["nspointingdevicetype",4]],[[],["id",6]],[[["id",6],["bool",6]]],[[],["bool",6]],[[],["nsapplicationpresentationoptions",3]],[[],["bool",6]],[[],["nsuinteger",6]],[[],["c_float",6]],[[],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["nspasteboardreadingoptions",4]],[[]],[[["cgfloat",6]],["cgfloat",6]],[[],["cgfloat",6]],[[]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["nsrequestuserattentiontype",4]]],[[],["nsinteger",6]],[[],["nssize",3]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[],["c_float",6]],[[]],[[],["nsmodalresponse",4]],[[["id",6]]],[[["pid_t",6]],["id",6]],[[],["id",6]],[[],["cgfloat",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[],["cgfloat",6]],[[],["cgfloat",6]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[],["id",6]],[[["id",6]]],[[],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3],["bool",0]]],[[["nswindowstylemask",3],["nswindowstylemask",3],["bool",0]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3],["bool",0]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3],["bool",0]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3],["bool",0]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3],["bool",0]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3],["bool",0]]],[[["nseventphase",3],["nseventphase",3],["bool",0]]],[[["nstouchphase",3],["nstouchphase",3],["bool",0]]],[[["nseventmask",3],["nseventmask",3],["bool",0]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3],["bool",0]]],[[["bool",6]]],[[["sel",3]]],[[["nsapplicationactivationpolicy",4]],["bool",6]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["cgfloat",6]]],[[["id",6]]],[[["nssize",3]]],[[["bool",6]]],[[["bool",6],["nsrectedge",4]],["bool",6]],[[["nsautoresizingmaskoptions",6]]],[[["id",6]]],[[["id",6]],["id",6]],[[["bool",6]]],[[["nsbezelstyle",4]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["nswindowcollectionbehavior",3]]],[[["id",6]]],[[["id",6]]],[[["nssize",3]]],[[["cgfloat",6],["nsrectedge",4]]],[[["nssize",3]]],[[["nssize",3]]],[[["nssize",3]]],[[["nssize",3]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["glint",6]]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]],["bool",6]],[[["bool",6]]],[[["id",6]]],[[["nspoint",3]]],[[["nspoint",3]]],[[["nssize",3]]],[[["nspoint",3]]],[[["nsrect",3],["bool",6]]],[[["nsrect",3],["bool",6]]],[[["nsrect",3],["bool",6],["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["id",6]]],[[["bool",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["nseventmodifierflags",3]]],[[["id",6]]],[[["id",6]]],[[["nsviewlayercontentsplacement",4]]],[[["cgfloat",6]]],[[["nsinteger",6]]],[[["id",6]]],[[["nssize",3]]],[[["id",6]]],[[["nssize",3]]],[[["id",6]]],[[["id",6]]],[[["bool",6]]],[[["bool",6]]],[[["bool",6]]],[[["id",6]],["bool",6]],[[["bool",6]]],[[["id",6]]],[[["id",6]]],[[["nsapplicationpresentationoptions",3]],["bool",6]],[[["bool",6]]],[[["bool",6]]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["bool",6]]],[[["id",6]]],[[["id",6]]],[[["nssize",3]]],[[["bool",6]]],[[["id",6]]],[[["bool",6]],["id",6]],[[["bool",6]]],[[["bool",6]]],[[["id",6]]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["nswindowstylemask",3]]],[[["id",6]]],[[["nstabviewtype",4]]],[[["nswindowtabbingmode",4]]],[[["id",6]]],[[["id",6]]],[[["nswindowtitlevisibility",4]]],[[["id",6]]],[[["id",6]]],[[["id",6]]],[[["bool",6]]],[[["id",6]]],[[["nswindowtoolbarstyle",4]]],[[["id",6]]],[[["glint",0],["nsopenglcontextparameter",4]]],[[["id",6]]],[[["id",6]]],[[["bool",6]]],[[["bool",6]]],[[["id",6]]],[[["id",6]]],[[["bool",6]]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[],["nssize",3]],[[["bool",6]]],[[["id",6]],["id",6]],[[],["id",6]],[[],["nsinteger",6]],[[["nswindowbutton",4]],["id",6]],[[["nstimeinterval",6],["nstimeinterval",6]]],[[],["id",6]],[[["cgfloat",6]],["id",6]],[[],["bool",6]],[[]],[[["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[],["nswindowstylemask",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[],["nseventsubtype",4]],[[],["id",6]],[[],["nswindowdepth",0]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[],["id",6]],[[],["nsuinteger",6]],[[],["nstabstate",4]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["nstabviewtype",4]],[[],["id",6]],[[],["nswindowtabbingmode",4]],[[],["nsuinteger",6]],[[["id",6]]],[[],["c_float",6]],[[],["bool",6]],[[],["nspoint",3]],[[],["nstimeinterval",6]],[[],["id",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]]],[[["nswindowstylemask",3],["nswindowstylemask",3]]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]]],[[["nseventphase",3],["nseventphase",3]]],[[["nstouchphase",3],["nstouchphase",3]]],[[["nseventmask",3],["nseventmask",3]]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]]],[[["id",6]]],[[["id",6]]],[[],["id",6]],[[],["nswindowtoolbarstyle",4]],[[],["id",6]],[[["nstouchphase",3],["id",6]],["id",6]],[[],["id",6]],[[],["nsinteger",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["nsapplicationpresentationoptions",3],["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]],[[["nswindowstylemask",3],["nswindowstylemask",3]],["nswindowstylemask",3]],[[["nswindoworderingmode",3],["nswindoworderingmode",3]],["nswindoworderingmode",3]],[[["nsalignmentoptions",3],["nsalignmentoptions",3]],["nsalignmentoptions",3]],[[["nswindowcollectionbehavior",3],["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]],[[["nswindowocclusionstate",3],["nswindowocclusionstate",3]],["nswindowocclusionstate",3]],[[["nseventswipetrackingoptions",3],["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]],[[["nseventphase",3],["nseventphase",3]],["nseventphase",3]],[[["nstouchphase",3],["nstouchphase",3]],["nstouchphase",3]],[[["nseventmask",3],["nseventmask",3]],["nseventmask",3]],[[["nseventmodifierflags",3],["nseventmodifierflags",3]],["nseventmodifierflags",3]],[[],["c_ulonglong",6]],[[],["nsinteger",6]],[[]],[[]],[[],["c_void",0]],[[],["bool",6]],[[],["id",6]],[[],["nsuinteger",6]],[[],["nsuinteger",6]],[[],["id",6]],[[],["id",6]],[[],["nsrect",3]],[[],["f32",0]],[[],["bool",6]],[[],["cgfloat",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nsinteger",6]],[[["nspoint",3],["nsinteger",6]],["nsinteger",6]],[[],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]]],[[["id",6],["id",6]],["nspasteboardwritingoptions",4]],null,null,[[],["cgfloat",6]],[[["id",6]]],null,[[["id",6]],["c_void",0]],[[["id",6]],["c_void",0]],[[["id",6]],["cglcontextobj",6]],null,null,null,null,[[["id",6]],["id",6]],[[["id",6],["nstiffcompression",4],["f32",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],null,[[["id",6]],["nsinteger",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["bool",6]]],[[["id",6],["nsapplicationactivationoptions",4]],["bool",6]],[[["id",6],["id",6],["sel",6],["id",6]],["id",6]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6],["nswindoworderingmode",3]]],[[["id",6],["id",6],["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["nsrect",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["nssize",3]],[[["id",6],["nsrectedge",4]],["bool",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsrect",3],["nsalignmentoptions",3]],["nsrect",3]],[[["id",6],["nsrect",3],["nsalignmentoptions",3]],["nsrect",3]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6],["nsrect",3],["id",6],["id",6]],["id",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["nsrect",3]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["nseventbuttonmask",4]],[[["id",6]],["nsinteger",6]],[[["id",6]],["nsimagecachemode",4]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6]]],[[["id",6]],["nsuinteger",6]],[[["id",6],["nspoint",3]],["nspoint",3]],[[["id",6]]],[[["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["nsinteger",6]],["nsrange",3]],[[["id",6],["id",6],["nsinteger",6],["id",6],["bool",6],["nsinteger",6]]],[[["id",6]],["id",6]],[[["id",6]],["nsinteger",6]],[[["id",6]]],[[["id",6]]],[[["id",6]],["nsinteger",6]],[[["id",6]]],[[["id",6],["nsinteger",6]]],[[["id",6]],["id",6]],[[["id",6]],["nswindowcollectionbehavior",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["id",6]],[[["id",6],["nsrect",3],["id",6]]],[[["id",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6]],["id",6]],[[["id",6],["cgfloat",6]],["id",6]],[[["id",6]],["nssize",3]],[[["id",6],["nsrectedge",4]],["cgfloat",6]],[[["id",6]],["nssize",3]],[[["id",6]],["nssize",3]],[[["id",6]],["id",6]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3],["nswindowstylemask",3]],["nsrect",3]],[[["id",6]],["nssize",3]],[[["id",6]],["nssize",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nspoint",3],["id",6]],["nspoint",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nseventmodifierflags",3]],[[["id",6]],["nstimeinterval",6]],[[["id",6]],["glint",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["nsinteger",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6],["id",6]]],[[["id",6]],["nswindowdepth",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]]],[[["id",6]]],[[["id",6]],["bool",6]],[[["id",6]],["nstimeinterval",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nspoint",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6]]],[[["id",6],["nsrect",3]]],[[["id",6],["nsrect",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6]]],[[["id",6],["nsrect",3],["nsrect",3],["nscompositingoperation",4],["cgfloat",6],["bool",6],["id",6]]],[[["id",6],["bool",6],["nsrect",3]]],[[["id",6],["id",6],["nsrect",3]]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["nstimeinterval",6]],[[["id",6],["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nsinteger",6],["nsinteger",6],["c_void",0]],["id",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["c_void",0]],[[["id",6]],["nseventtype",4]],[[["id",6],["c_void",0]],["id",6]],[[["id",6],["c_void",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["nsrect",3]],[[["id",6]],["nsrect",3]],[[["id",6]],["nsrect",3]],[[["id",6],["nsrect",3]],["nsrect",3]],[[["id",6],["nsrect",3],["nswindowstylemask",3]],["nsrect",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["glint",0],["nsopenglpixelformatattribute",4],["glint",6]]],[[["id",6],["glint",0],["nsopenglcontextparameter",4]]],[[["id",6]],["cgfloat",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6],["nsrect",3],["nsrect",3],["id",6],["id",6],["bool",6]],["bool",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],null,[[["id",6]],["id",6]],[[["id",6],["id",6],["nsinteger",6]]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6],["id",6]],["nsinteger",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["c_void",0]],["id",6]],[[["id",6],["cglcontextobj",6]],["id",6]],[[["id",6],["nsrect",3],["nswindowstylemask",3],["nsbackingstoretype",4],["bool",6]],["id",6]],[[["id",6],["nsrect",3],["nswindowstylemask",3],["nsbackingstoretype",4],["bool",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3]],["id",6]],[[["id",6],["nsrect",3],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["nssize",3]],["id",6]],[[["id",6],["nssize",3],["bool",6],["block",0]]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["sel",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["nsinteger",6]]],[[["id",6]]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6],["nsinteger",6]],["id",6]],[[["id",6]],["c_ushort",6]],[[["id",6],["id",6]]],[[["id",6],["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["id",6],["id",6],["bool",6],["c_ushort",6]],["id",6]],[[["id",6]],["nstimeinterval",6]],[[["id",6]],["nstimeinterval",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["cgfloat",6]],["id",6]],[[["id",6]],["nsviewlayercontentsplacement",4]],[[["id",6]],["cgfloat",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["cgpoint",3]],[[["id",6]],["nspoint",3]],[[["id",6]]],[[["id",6],["bool",6]]],[[["id",6]],["bool",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]]],[[["id",6]]],[[["id",6]]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["nssize",3]],[[["id",6]],["id",6]],[[["id",6],["id",6],["nswindowstylemask",3]],["cgfloat",6]],[[["id",6]],["nssize",3]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nseventmodifierflags",3]],[[["id",6]],["nseventphase",3]],[[["id",6],["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nsinteger",6],["nsinteger",6],["c_float",6]],["id",6]],[[["id",6]],["nspoint",3]],[[["id",6]],["nspoint",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsuinteger",6],["id",6],["id",6],["bool",6]],["id",6]],null,[[["id",6]],["id",6]],[[["id",6]],["glint",6]],[[["id",6]],["nswindowocclusionstate",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]]],[[["id",6]]],[[["id",6],["nswindoworderingmode",3],["nsinteger",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nseventtype",4],["nspoint",3],["nseventmodifierflags",3],["nstimeinterval",6],["nsinteger",6],["id",6],["nseventsubtype",4],["nsinteger",6],["nsinteger",6]],["id",6]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6],["id",6]]],[[["id",6]],["bool",6]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6]],["nseventphase",3]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nspointingdevicetype",4]],[[["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]]],[[["id",6]],["bool",6]],[[["id",6]],["nsapplicationpresentationoptions",3]],[[["id",6]],["bool",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["c_float",6]],[[["id",6]],["bool",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["nspasteboardreadingoptions",4]],[[["id",6]]],[[["id",6],["cgfloat",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6]]],[[["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsrequestuserattentiontype",4]]],[[["id",6]],["nsinteger",6]],[[["id",6]],["nssize",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["c_float",6]],[[["id",6]]],[[["id",6]],["nsmodalresponse",4]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["cgfloat",6]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["str",0]],["sel",3]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["sel",3]]],[[["id",6],["nsapplicationactivationpolicy",4]],["bool",6]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["cgfloat",6]]],[[["id",6],["id",6]]],[[["id",6],["nssize",3]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6],["nsrectedge",4]],["bool",6]],[[["id",6],["nsautoresizingmaskoptions",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]],["id",6]],[[["id",6],["bool",6]]],[[["id",6],["nsbezelstyle",4]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["nswindowcollectionbehavior",3]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nssize",3]]],[[["id",6],["cgfloat",6],["nsrectedge",4]]],[[["id",6],["nssize",3]]],[[["id",6],["nssize",3]]],[[["id",6],["nssize",3]]],[[["id",6],["nssize",3]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["glint",6]]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]],["bool",6]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["nspoint",3]]],[[["id",6],["nspoint",3]]],[[["id",6],["nssize",3]]],[[["id",6],["nspoint",3]]],[[["id",6],["nsrect",3],["bool",6]]],[[["id",6],["nsrect",3],["bool",6]]],[[["id",6],["nsrect",3],["bool",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nseventmodifierflags",3]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nsviewlayercontentsplacement",4]]],[[["id",6],["cgfloat",6]]],[[["id",6],["nsinteger",6]]],[[["id",6],["id",6]]],[[["id",6],["nssize",3]]],[[["id",6],["id",6]]],[[["id",6],["nssize",3]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nsapplicationpresentationoptions",3]],["bool",6]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nssize",3]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]],["id",6]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["id",6],["id",6]],["bool",6]],[[["id",6],["nswindowstylemask",3]]],[[["id",6],["id",6]]],[[["id",6],["nstabviewtype",4]]],[[["id",6],["nswindowtabbingmode",4]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["nswindowtitlevisibility",4]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["nswindowtoolbarstyle",4]]],[[["id",6],["id",6]]],[[["id",6],["glint",0],["nsopenglcontextparameter",4]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6],["bool",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6],["bool",6]]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["nssize",3]],[[["id",6],["bool",6]]],[[["id",6]],["nsinteger",6]],[[["id",6],["nswindowbutton",4]],["id",6]],[[["id",6],["nstimeinterval",6],["nstimeinterval",6]]],[[["id",6]],["id",6]],[[["id",6],["cgfloat",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]]],[[["id",6],["id",6]]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["nswindowstylemask",3]],[[["id",6]],["nseventsubtype",4]],[[["id",6]],["id",6]],[[["id",6]],["nswindowdepth",0]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nstabstate",4]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nstabviewtype",4]],[[["id",6]],["id",6]],[[["id",6]],["nswindowtabbingmode",4]],[[["id",6]],["nsuinteger",6]],[[["id",6],["id",6]]],[[["id",6]],["c_float",6]],[[["id",6]],["bool",6]],[[["id",6]],["nspoint",3]],[[["id",6]],["nstimeinterval",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["nswindowtoolbarstyle",4]],[[["id",6]],["id",6]],[[["id",6],["nstouchphase",3],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["c_ulonglong",6]],[[["id",6]],["nsinteger",6]],[[["id",6]]],[[["id",6]]],[[["id",6]],["c_void",0]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nsrect",3]],[[["id",6]],["f32",0]],[[["id",6]],["bool",6]],[[["id",6]],["cgfloat",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nsinteger",6]],[[["id",6],["nspoint",3],["nsinteger",6]],["nsinteger",6]],[[["id",6]],["bool",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["id",6]]],[[["id",6],["id",6],["id",6]],["nspasteboardwritingoptions",4]],[[["id",6]],["cgfloat",6]],[[["id",6],["id",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["nsurlbookmarkcreationoptions",3]],null,null,null,null,null,[[],["nsurlbookmarkcreationoptions",3]],null,[[],["nsurlbookmarkresolutionoptions",3]],null,null,null,[[],["object",0]],null,null,[[["object",0]],["object",0]],[[["object",0],["i8",0]],["object",0]],[[["object",0]],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0],["nsurlbookmarkresolutionoptions",3],["object",0]],["object",0]],[[["object",0],["nsurlbookmarkresolutionoptions",3],["object",0],["i8",0],["object",0]],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[],["i8",0]],[[],["object",0]],[[],["object",0]],[[["object",0],["object",0]],["object",0]],[[],["nsenumerationoptions",3]],[[],["nsurlbookmarkcreationoptions",3]],[[],["nsurlbookmarkresolutionoptions",3]],[[],["nsdatareadingoptions",3]],[[],["nsdatabase64encodingoptions",3]],[[],["nsdatabase64decodingoptions",3]],[[],["nsdatawritingoptions",3]],[[],["nsdatasearchoptions",3]],[[],["object",0]],[[["object",0]],["object",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[],["object",0]],[[["nsrect",3]],["cgrect",3]],[[]],[[["nsdatabase64encodingoptions",3]],["object",0]],[[["nsdatabase64encodingoptions",3]],["object",0]],[[],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsenumerationoptions",3]],["u64",0]],[[["nsurlbookmarkcreationoptions",3]],["u64",0]],[[["nsurlbookmarkresolutionoptions",3]],["u64",0]],[[["nsdatareadingoptions",3]],["u64",0]],[[["nsdatabase64encodingoptions",3]],["u64",0]],[[["nsdatabase64decodingoptions",3]],["u64",0]],[[["nsdatawritingoptions",3]],["u64",0]],[[["nsdatasearchoptions",3]],["u64",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["object",0],["object",0]],["object",0]],[[["nsurlbookmarkcreationoptions",3],["object",0],["object",0],["object",0]],["object",0]],[[["object",0]],["ic_void",0]],[[["object",0]],["i8",0]],[[["nspoint",3]],["nspoint",3]],[[["nssize",3]],["nssize",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrange",3]],["nsrange",3]],[[["nsoperatingsystemversion",3]],["nsoperatingsystemversion",3]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nscomparisonresult",4]],["nscomparisonresult",4]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["ordering",4]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["ordering",4]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["ordering",4]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["ordering",4]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["ordering",4]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["ordering",4]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["ordering",4]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["ordering",4]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[],["u64",0]],[[],["u64",0]],[[]],[[],["object",0]],[[],["object",0]],[[["c_void",0],["u64",0]],["object",0]],[[["c_void",0],["u64",0],["i8",0]],["object",0]],[[["c_void",0],["u64",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["nsdatareadingoptions",3],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["nsdatareadingoptions",3],["object",0]],["object",0]],[[["object",0]],["object",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0]],["object",0]],[[["object",0],["u64",0]],["object",0]],[[],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0],["object",0],["u64",0]],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[],["object",0]],[[],["object",0]],[[]],[[],["nsenumerationoptions",3]],[[],["nsurlbookmarkcreationoptions",3]],[[],["nsurlbookmarkresolutionoptions",3]],[[],["nsdatareadingoptions",3]],[[],["nsdatabase64encodingoptions",3]],[[],["nsdatabase64decodingoptions",3]],[[],["nsdatawritingoptions",3]],[[],["nsdatasearchoptions",3]],[[],["encoding",3]],[[],["encoding",3]],[[],["encoding",3]],[[["block",0]]],[[["block",0]]],[[["nsenumerationoptions",3],["block",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nscomparisonresult",4],["nscomparisonresult",4]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3]]],[[],["object",0]],[[],["i8",0]],[[],["object",0]],[[],["object",0]],[[],["i8",0]],[[],["i8",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[],["u64",0]],[[],["object",0]],[[],["u64",0]],[[],["u64",0]],[[],["i64",0]],[[],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["i8",0]],["object",0]],[[["object",0],["i8",0],["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["nsenumerationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsenumerationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsenumerationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsenumerationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsenumerationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nscomparisonresult",4],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatareadingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatareadingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatareadingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatareadingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatareadingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatawritingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatawritingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatawritingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatawritingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatawritingoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatasearchoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatasearchoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatasearchoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatasearchoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[["nsdatasearchoptions",3],["formatter",3]],["result",4,[["error",3]]]],[[],["object",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",0]],["option",4,[["nsenumerationoptions",3]]]],[[["u64",0]],["option",4,[["nsurlbookmarkcreationoptions",3]]]],[[["u64",0]],["option",4,[["nsurlbookmarkresolutionoptions",3]]]],[[["u64",0]],["option",4,[["nsdatareadingoptions",3]]]],[[["u64",0]],["option",4,[["nsdatabase64encodingoptions",3]]]],[[["u64",0]],["option",4,[["nsdatabase64decodingoptions",3]]]],[[["u64",0]],["option",4,[["nsdatawritingoptions",3]]]],[[["u64",0]],["option",4,[["nsdatasearchoptions",3]]]],[[["u64",0]],["nsenumerationoptions",3]],[[["u64",0]],["nsurlbookmarkcreationoptions",3]],[[["u64",0]],["nsurlbookmarkresolutionoptions",3]],[[["u64",0]],["nsdatareadingoptions",3]],[[["u64",0]],["nsdatabase64encodingoptions",3]],[[["u64",0]],["nsdatabase64decodingoptions",3]],[[["u64",0]],["nsdatawritingoptions",3]],[[["u64",0]],["nsdatasearchoptions",3]],[[["u64",0]],["nsenumerationoptions",3]],[[["u64",0]],["nsurlbookmarkcreationoptions",3]],[[["u64",0]],["nsurlbookmarkresolutionoptions",3]],[[["u64",0]],["nsdatareadingoptions",3]],[[["u64",0]],["nsdatabase64encodingoptions",3]],[[["u64",0]],["nsdatabase64decodingoptions",3]],[[["u64",0]],["nsdatawritingoptions",3]],[[["u64",0]],["nsdatasearchoptions",3]],[[],["nsenumerationoptions",3]],[[],["nsurlbookmarkcreationoptions",3]],[[],["nsurlbookmarkresolutionoptions",3]],[[],["nsdatareadingoptions",3]],[[],["nsdatabase64encodingoptions",3]],[[],["nsdatabase64decodingoptions",3]],[[],["nsdatawritingoptions",3]],[[],["nsdatasearchoptions",3]],[[["c_void",0],["u64",0]]],[[["c_void",0],["nsrange",3]]],[[],["i8",0]],[[["nsenumerationoptions",3],["",0]]],[[["nsurlbookmarkcreationoptions",3],["",0]]],[[["nsurlbookmarkresolutionoptions",3],["",0]]],[[["nsdatareadingoptions",3],["",0]]],[[["nsdatabase64encodingoptions",3],["",0]]],[[["nsdatabase64decodingoptions",3],["",0]]],[[["nsdatawritingoptions",3],["",0]]],[[["nsdatasearchoptions",3],["",0]]],null,[[],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0],["nsurlbookmarkresolutionoptions",3],["object",0],["i8",0],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["i8",0]],["object",0]],[[["object",0],["i8",0],["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0],["nsdatabase64decodingoptions",3]],["object",0]],[[["object",0],["nsdatabase64decodingoptions",3]],["object",0]],[[["c_void",0],["u64",0]],["object",0]],[[["c_void",0],["u64",0],["block",0]],["object",0]],[[["c_void",0],["u64",0],["i8",0]],["object",0]],[[["c_void",0],["u64",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["nsdatareadingoptions",3],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["nsdatareadingoptions",3],["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["i8",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["object",0],["object",0],["u64",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[["str",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsrect",3],["f64",0],["f64",0]],["nsrect",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["object",0]],["object",0]],[[["object",0]],["i8",0]],[[["str",0]],["bool",0]],[[["object",0]],["i8",0]],[[],["i8",0]],[[],["i8",0]],[[["nsoperatingsystemversion",3]],["bool",0]],[[["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3]],["bool",0]],[[["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3]],["bool",0]],[[],["nsfastiterator",3]],[[],["object",0]],[[["block",0]],["object",0]],[[["nsenumerationoptions",3],["block",0]],["object",0]],[[["block",0]],["object",0]],[[["sel",3]],["object",0]],[[["nsenumerationoptions",3],["block",0]],["object",0]],[[],["object",0]],[[],["usize",0]],[[],["u64",0]],null,[[["object",0],["object",0],["object",0]],["i8",0]],null,[[]],null,null,[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[],["object",0]],[[["f64",0],["f64",0]],["nspoint",3]],[[["f64",0],["f64",0]],["nssize",3]],[[["nspoint",3],["nssize",3]],["nsrect",3]],[[["u64",0],["u64",0]],["nsrange",3]],[[["u64",0],["u64",0],["u64",0]],["nsoperatingsystemversion",3]],[[["nsfastiterator",3]],["option",4,[["object",0]]]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["u64",0]],["object",0]],[[],["object",0]],[[["object",0]],["object",0]],[[["object",0]],["object",0]],[[["object",0],["object",0]],["object",0]],[[],["nsoperatingsystemversion",3]],null,[[],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["option",4,[["ordering",4]]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["option",4,[["ordering",4]]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["option",4,[["ordering",4]]]],[[],["object",0]],null,[[],["object",0]],[[],["object",0]],[[],["object",0]],[[["sel",3],["object",0],["object",0],["u64",0],["object",0]]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[],["object",0]],[[["object",0],["nsdatasearchoptions",3],["nsrange",3]],["nsrange",3]],[[],["object",0]],[[],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["object",0]]],[[],["object",0]],[[],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3],["bool",0]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3],["bool",0]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3],["bool",0]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3],["bool",0]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3],["bool",0]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3],["bool",0]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3],["bool",0]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3],["bool",0]]],[[["i8",0],["object",0]]],[[["object",0]],["object",0]],null,[[]],[[],["object",0]],[[],["i8",0]],[[]],[[["object",0]],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsrange",3]],["object",0]],[[["nsrange",3]],["object",0]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[],["object",0]],[[["object",0]],["object",0]],[[["nspoint",3]],["object",0]],[[["nssize",3]],["object",0]],null,[[["object",0],["object",0],["nsurlbookmarkcreationoptions",3],["object",0]],["object",0]],[[["object",0],["i8",0]],["i8",0]],[[["object",0],["i8",0]],["i8",0]],[[["object",0],["nsdatawritingoptions",3],["object",0]],["i8",0]],[[["object",0],["i8",0]],["i8",0]],[[["object",0],["i8",0]],["i8",0]],[[["object",0],["nsdatawritingoptions",3],["object",0]],["i8",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["calayer",3],["str",0]],["id",6]],[[["calayer",3]],["cfdictionary",3,[["cfstringref",6],["cftyperef",6]]]],[[["calayer",3],["id",6],["option",4,[["str",0]]]]],[[["calayer",3],["calayer",3]]],[[["carenderer",3],["cgrect",3]]],[[["cgaffinetransform",3]],["catransform3d",3]],[[["calayer",3]],["cgaffinetransform",3]],[[],["edgeantialiasingmask",3]],[[],["cornermask",3]],[[],["autoresizingmask",3]],[[["calayer",3]],["cgpoint",3]],[[["calayer",3]],["cgfloat",6]],[[["calayer",3],["str",0]],["id",6]],[[["calayer",3]],["vec",3,[["string",3]]]],[[["calayer",3]],["autoresizingmask",3]],[[["calayer",3]],["option",4,[["cgcolor",3]]]],[[["calayer",3]],["option",4,[["cfarray",3]]]],[[["carenderer",3],["cftimeinterval",6],["option",4,[["cvtimestamp",3]]]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],[[["edgeantialiasingmask",3]],["u32",0]],[[["cornermask",3]],["nsuinteger",6]],[[["autoresizingmask",3]],["u32",0]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],[[["calayer",3]],["option",4,[["cgcolor",3]]]],[[["calayer",3]],["cgfloat",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["calayer",3]],["cgrect",3]],[[["carenderer",3]],["cgrect",3]],[[["calayer",3]],["calayer",3]],[[["carenderer",3]],["carenderer",3]],[[["contentsgravity",4]],["contentsgravity",4]],[[["contentsformat",4]],["contentsformat",4]],[[["filter",4]],["filter",4]],[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3]],["autoresizingmask",3]],[[["catransform3d",3]],["catransform3d",3]],[[["cvtimestamp",3]],["cvtimestamp",3]],[[["cvsmptetime",3]],["cvsmptetime",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["ordering",4]],[[["cornermask",3],["cornermask",3]],["ordering",4]],[[["autoresizingmask",3],["autoresizingmask",3]],["ordering",4]],[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3]],["autoresizingmask",3]],[[["calayer",3]],["id",6]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3],["cornermask",3]],["bool",0]],[[["autoresizingmask",3],["autoresizingmask",3]],["bool",0]],[[["calayer",3],["cgpoint",3]],["bool",0]],[[["calayer",3]],["id",6]],[[["calayer",3]],["bool",0]],[[["calayer",3]],["cgrect",3]],[[["calayer",3]],["contentsformat",4]],[[["calayer",3]],["contentsgravity",4]],[[["calayer",3]],["cgrect",3]],[[["calayer",3]],["cgfloat",6]],[[["calayer",3],["cgpoint",3],["option",4,[["calayer",3]]]],["cgpoint",3]],[[["calayer",3],["cgpoint",3],["option",4,[["calayer",3]]]],["cgpoint",3]],[[["calayer",3],["cgrect",3],["option",4,[["calayer",3]]]],["cgrect",3]],[[["calayer",3],["cgrect",3],["option",4,[["calayer",3]]]],["cgrect",3]],[[["calayer",3],["cftimeinterval",6],["option",4,[["calayer",3]]]],["cftimeinterval",6]],[[["calayer",3],["cftimeinterval",6],["option",4,[["calayer",3]]]],["cftimeinterval",6]],[[["calayer",3]],["cgfloat",6]],null,[[],["cftimeinterval",6]],[[["str",0]],["id",6]],[[["cfstring",3]],["id",6]],[[["calayer",3]],["id",6]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["calayer",3]]],[[["calayer",3]]],[[["calayer",3],["cgcontext",3]]],[[["calayer",3]],["bool",0]],[[["calayer",3]]],[[["carenderer",3]]],[[["calayer",3]],["edgeantialiasingmask",3]],[[],["edgeantialiasingmask",3]],[[],["cornermask",3]],[[],["autoresizingmask",3]],[[["carenderer",3]]],[[["contentsgravity",4],["contentsgravity",4]],["bool",0]],[[["contentsformat",4],["contentsformat",4]],["bool",0]],[[["filter",4],["filter",4]],["bool",0]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3],["cornermask",3]],["bool",0]],[[["autoresizingmask",3],["autoresizingmask",3]],["bool",0]],[[["catransform3d",3],["catransform3d",3]],["bool",0]],[[["edgeantialiasingmask",3],["intoiterator",8]]],[[["cornermask",3],["intoiterator",8]]],[[["autoresizingmask",3],["intoiterator",8]]],[[["calayer",3]],["option",4,[["cfarray",3]]]],null,null,[[["contentsgravity",4],["formatter",3]],["result",6]],[[["contentsformat",4],["formatter",3]],["result",6]],[[["filter",4],["formatter",3]],["result",6]],[[["edgeantialiasingmask",3],["formatter",3]],["result",6]],[[["edgeantialiasingmask",3],["formatter",3]],["result",6]],[[["edgeantialiasingmask",3],["formatter",3]],["result",6]],[[["edgeantialiasingmask",3],["formatter",3]],["result",6]],[[["edgeantialiasingmask",3],["formatter",3]],["result",6]],[[["cornermask",3],["formatter",3]],["result",6]],[[["cornermask",3],["formatter",3]],["result",6]],[[["cornermask",3],["formatter",3]],["result",6]],[[["cornermask",3],["formatter",3]],["result",6]],[[["cornermask",3],["formatter",3]],["result",6]],[[["autoresizingmask",3],["formatter",3]],["result",6]],[[["autoresizingmask",3],["formatter",3]],["result",6]],[[["autoresizingmask",3],["formatter",3]],["result",6]],[[["autoresizingmask",3],["formatter",3]],["result",6]],[[["autoresizingmask",3],["formatter",3]],["result",6]],[[["calayer",3]],["cgrect",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["option",4,[["edgeantialiasingmask",3]]]],[[["nsuinteger",6]],["option",4,[["cornermask",3]]]],[[["u32",0]],["option",4,[["autoresizingmask",3]]]],[[["u32",0]],["edgeantialiasingmask",3]],[[["nsuinteger",6]],["cornermask",3]],[[["u32",0]],["autoresizingmask",3]],[[["u32",0]],["edgeantialiasingmask",3]],[[["nsuinteger",6]],["cornermask",3]],[[["u32",0]],["autoresizingmask",3]],[[["cglcontextobj",6],["option",4,[["cgcolorspace",3]]]],["carenderer",3]],[[["intoiterator",8]],["edgeantialiasingmask",3]],[[["intoiterator",8]],["cornermask",3]],[[["intoiterator",8]],["autoresizingmask",3]],[[["calayer",3]],["calayer",3]],[[["id",6],["id",6],["option",4,[["cgcolorspace",3]]]],["carenderer",3]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],[[["edgeantialiasingmask",3],["",0]]],[[["cornermask",3],["",0]]],[[["autoresizingmask",3],["",0]]],[[["calayer",3],["cgpoint",3]],["option",4,[["calayer",3]]]],null,null,[[["calayer",3]],["id",6]],[[["carenderer",3]],["id",6]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],[[["calayer",3],["calayer",3],["calayer",3]]],[[["calayer",3],["calayer",3],["u32",0]]],[[["calayer",3],["calayer",3],["calayer",3]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3],["cornermask",3]],["bool",0]],[[["autoresizingmask",3],["autoresizingmask",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["catransform3d",3]],["catransform3d",3]],[[["catransform3d",3]],["bool",0]],[[["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3]],["bool",0]],[[["autoresizingmask",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3]],["bool",0]],[[["autoresizingmask",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[["catransform3d",3]],["bool",0]],[[["calayer",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["carenderer",3]],["option",4,[["calayer",3]]]],[[["calayer",3]]],[[["calayer",3]],["id",6]],[[["calayer",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["calayer",3]],["filter",4]],[[["calayer",3]],["option",4,[["calayer",3]]]],[[["calayer",3]],["cornermask",3]],[[["calayer",3]],["bool",0]],[[["calayer",3]],["filter",4]],[[["calayer",3]],["f32",0]],null,[[["calayer",3]],["calayer",3]],[[["catransform3d",3],["catransform3d",3]],["catransform3d",3]],[[["calayer",3]],["string",3]],[[["contentsgravity",4],["contentsgravity",4]],["bool",0]],[[["contentsformat",4],["contentsformat",4]],["bool",0]],[[["filter",4],["filter",4]],["bool",0]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["bool",0]],[[["cornermask",3],["cornermask",3]],["bool",0]],[[["autoresizingmask",3],["autoresizingmask",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[["cfstring",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[["calayer",3]],["bool",0]],[[],["calayer",3]],[[["carenderer",3]],["cftimeinterval",6]],[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3]],["autoresizingmask",3]],[[["calayer",3]],["f32",0]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["option",4,[["ordering",4]]]],[[["cornermask",3],["cornermask",3]],["option",4,[["ordering",4]]]],[[["autoresizingmask",3],["autoresizingmask",3]],["option",4,[["ordering",4]]]],[[["calayer",3]],["cgpoint",3]],[[["calayer",3]],["cgsize",3]],[[["calayer",3]],["calayer",3]],[[["calayer",3]],["cgfloat",6]],null,[[["calayer",3],["str",0]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],[[["calayer",3]]],[[["calayer",3],["str",0]]],[[["calayer",3]]],[[["carenderer",3]]],[[["calayer",3],["cgcontext",3]]],[[["calayer",3],["calayer",3],["calayer",3]]],null,[[["calayer",3],["cgsize",3]]],[[["calayer",3],["cgsize",3]]],[[["catransform3d",3],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],[[["catransform3d",3],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],null,[[["edgeantialiasingmask",3],["edgeantialiasingmask",3],["bool",0]]],[[["cornermask",3],["cornermask",3],["bool",0]]],[[["autoresizingmask",3],["autoresizingmask",3],["bool",0]]],[[["calayer",3],["cfdictionary",3,[["cfstringref",6],["cftyperef",6]]]]],[[["calayer",3],["cgaffinetransform",3]]],[[["calayer",3],["cgpoint",3]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["autoresizingmask",3]]],[[["calayer",3],["option",4,[["cgcolor",3]]]]],[[["calayer",3],["option",4,[["cfarray",3]]]]],[[["calayer",3],["option",4,[["cgcolor",3]]]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["cgrect",3]]],[[["carenderer",3],["cgrect",3]]],[[["calayer",3],["id",6]]],[[["calayer",3],["id",6]]],[[["calayer",3],["cgrect",3]]],[[["calayer",3],["contentsformat",4]]],[[["calayer",3],["contentsgravity",4]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["cgrect",3]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["id",6]]],[[["carenderer",3],["id",6]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["edgeantialiasingmask",3]]],[[["calayer",3],["option",4,[["cfarray",3]]]]],[[["calayer",3],["cgrect",3]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["bool",0]]],[[["carenderer",3],["option",4,[["calayer",3]]]]],[[["calayer",3],["id",6]]],[[["calayer",3],["filter",4]]],[[["calayer",3],["option",4,[["calayer",3]]]]],[[["calayer",3],["cornermask",3]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["filter",4]]],[[["calayer",3],["f32",0]]],[[["calayer",3],["str",0]]],[[["calayer",3]]],[[["calayer",3],["cgrect",3]]],[[["calayer",3],["bool",0]]],[[["calayer",3]]],[[["calayer",3],["f32",0]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["cgpoint",3]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["option",4,[["cgcolor",3]]]]],[[["calayer",3],["cgsize",3]]],[[["calayer",3],["f32",0]]],[[["calayer",3],["option",4,[["cgpath",3]]]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3],["bool",0]]],[[["calayer",3],["option",4,[["cfdictionary",3]]]]],[[["calayer",3],["catransform3d",3]]],[[["calayer",3],["catransform3d",3]]],[[["calayer",3],["cgfloat",6]]],[[["calayer",3]],["option",4,[["cgcolor",3]]]],[[["calayer",3]],["cgsize",3]],[[["calayer",3]],["f32",0]],[[["calayer",3]],["option",4,[["cgpath",3]]]],[[["calayer",3]],["cgfloat",6]],[[["cfstring",3]],["bool",0]],[[["calayer",3]],["bool",0]],null,[[["calayer",3]],["option",4,[["cfdictionary",3]]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],null,null,[[["calayer",3]],["catransform3d",3]],[[["calayer",3]],["cfarray",3,[["calayer",3]]]],[[["calayer",3]],["option",4,[["calayer",3]]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],null,[[["catransform3d",3]],["cgaffinetransform",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]]],[[["cornermask",3],["cornermask",3]]],[[["autoresizingmask",3],["autoresizingmask",3]]],null,[[["calayer",3]],["catransform3d",3]],[[["catransform3d",3],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["catransform3d",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["edgeantialiasingmask",3],["edgeantialiasingmask",3]],["edgeantialiasingmask",3]],[[["cornermask",3],["cornermask",3]],["cornermask",3]],[[["autoresizingmask",3],["autoresizingmask",3]],["autoresizingmask",3]],[[["carenderer",3]],["cgrect",3]],null,null,null,null,[[["calayer",3]],["cgfloat",6]],null,null,null,[[],["cftimeinterval",6]],[[],["id",6]],[[]],[[]],[[],["option",4,[["rcblock",3]]]],[[],["bool",0]],[[]],[[]],[[["cftimeinterval",6]]],[[["id",6]]],[[["concreteblock",3]]],[[["bool",0]]],[[["id",6],["str",0]]],[[]],[[["str",0]],["id",6]]],"p":[[8,"NSColorSpace"],[8,"NSEvent"],[8,"NSOpenGLContext"],[4,"NSEventSubtype"],[3,"NSAlignmentOptions"],[3,"NSEventModifierFlags"],[3,"NSEventMask"],[4,"NSEventType"],[4,"NSApplicationActivationOptions"],[4,"NSApplicationActivationPolicy"],[3,"NSApplicationPresentationOptions"],[4,"NSTabState"],[4,"NSBackingStoreType"],[3,"NSWindowStyleMask"],[4,"NSTabViewType"],[4,"NSBezelStyle"],[4,"NSCompositingOperation"],[4,"NSRequestUserAttentionType"],[4,"NSEventGestureAxis"],[3,"NSEventPhase"],[3,"NSEventSwipeTrackingOptions"],[4,"NSImageCacheMode"],[4,"NSImageLoadStatus"],[4,"NSModalResponse"],[4,"NSOpenGLContextParameter"],[4,"NSOpenGLPixelFormatAttribute"],[4,"NSOpenGLPFAOpenGLProfiles"],[4,"NSPasteboardReadingOptions"],[4,"NSPasteboardWritingOptions"],[4,"NSTIFFCompression"],[4,"NSApplicationTerminateReply"],[3,"NSTouchPhase"],[4,"NSViewLayerContentsPlacement"],[3,"NSWindowOrderingMode"],[4,"NSWindowButton"],[3,"NSWindowCollectionBehavior"],[3,"NSWindowOcclusionState"],[4,"NSWindowTabbingMode"],[4,"NSWindowTitleVisibility"],[4,"NSWindowToolbarStyle"],[8,"NSImage"],[8,"NSSavePanel"],[8,"NSOpenPanel"],[8,"NSWindow"],[8,"NSLayoutConstraint"],[8,"NSApplication"],[8,"NSRunningApplication"],[8,"NSMenu"],[8,"NSView"],[8,"NSTabView"],[8,"NSPasteboard"],[8,"NSCursor"],[8,"NSMenuItem"],[8,"NSPanel"],[8,"NSOpenGLView"],[8,"NSOpenGLPixelFormat"],[8,"NSControl"],[8,"NSImageView"],[8,"NSButton"],[8,"NSTextField"],[8,"NSTabViewItem"],[8,"NSToolbar"],[8,"NSNib"],[8,"NSColor"],[3,"CGPoint"],[8,"NSScreen"],[8,"NSDockTile"],[4,"NSPointingDeviceType"],[4,"NSEventButtonMask"],[8,"NSStatusItem"],[8,"NSSound"],[8,"NSSpellChecker"],[8,"NSLayoutDimension"],[8,"NSPasteboardItem"],[8,"NSPasteboardReading"],[8,"NSStatusBar"],[8,"NSPasteboardItemDataProvider"],[8,"NSPasteboardWriting"],[6,"id"],[3,"NSDataBase64DecodingOptions"],[3,"NSDataBase64EncodingOptions"],[3,"NSDataReadingOptions"],[3,"NSDataSearchOptions"],[3,"NSDataWritingOptions"],[3,"NSEnumerationOptions"],[4,"NSComparisonResult"],[4,"NSRectEdge"],[3,"NSURLBookmarkCreationOptions"],[8,"NSURL"],[3,"NSURLBookmarkResolutionOptions"],[8,"NSString"],[8,"NSDictionary"],[8,"NSArray"],[3,"NSRect"],[8,"NSAutoreleasePool"],[8,"NSData"],[8,"NSUserDefaults"],[3,"NSFastIterator"],[3,"NSPoint"],[3,"NSSize"],[3,"NSRange"],[3,"NSOperatingSystemVersion"],[8,"NSRunLoop"],[8,"NSDate"],[8,"NSProcessInfo"],[8,"NSFastEnumeration"],[8,"NSBundle"],[8,"NSValue"],[3,"EdgeAntialiasingMask"],[4,"ContentsGravity"],[4,"ContentsFormat"],[3,"AutoresizingMask"],[3,"CATransform3D"],[4,"Filter"],[3,"CornerMask"],[3,"CALayer"],[3,"CARenderer"],[3,"CVTimeStamp"],[3,"CVSMPTETime"],[13,"Other"],[13,"Other"],[13,"Other"]]},\
"cocoa_foundation":{"doc":"","tn":["base","foundation","BOOL","Class","NO","NSURLBookmarkCreationOptions","NSURLBookmarkFileCreationOptions","NSURLBookmarkResolutionOptions","NSURLResourceKey","Nil","SEL","URLByAppendingPathComponent_","URLByAppendingPathComponent_isDirectory_","URLByAppendingPathExtension_","URLByDeletingLastPathComponent","URLByDeletingPathExtension","URLByResolvingAliasFileAtURL_options_error_","URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","URLByResolvingSymlinksInPath","URLByStandardizingPath","URLWithDataRepresentation_relativeToURL_","URLWithString_","URLWithString_relativeToURL_","UTF8String","YES","absoluteString","absoluteURL","absoluteURLWithDataRepresentation_relativeToURL_","allKeys","allKeysForObject_","allValues","alloc","arrayByAddingObjectFromArray","arrayByAddingObjectsFromArray","autorelease","base64EncodedDataWithOptions_","base64EncodedStringWithOptions_","baseURL","bookmarkDataWithContentsOfURL_error_","bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","bool_forKey_","bytes","checkResourceIsReachableAndReturnError_","count","count","currentRunLoop","dataRepresentation","description","description","descriptionInStringsFileFormat","descriptionWithLocale_","descriptionWithLocale_indent_","drain","enumerateByteRangesUsingBlock_","enumerateKeysAndObjectsUsingBlock_","enumerateKeysAndObjectsWithOptions_usingBlock_","fileCreationDate","fileExtensionHidden","fileGroupOwnerAccountID","fileGroupOwnerAccountName","fileIsAppendOnly","fileIsImmutable","fileModificationDate","fileOwnerAccountID","fileOwnerAccountName","filePathURL","filePosixPermissions","fileReferenceURL","fileSize","fileSystemFileNumber","fileSystemNumber","fileType","fileURLWithPathComponents_","fileURLWithPath_","fileURLWithPath_isDirectory_","fileURLWithPath_isDirectory_relativeToURL_","fileURLWithPath_relativeToURL_","fragment","getBytes_length_","getBytes_range_","hasDirectoryPath","host","id","init","init","initAbsoluteURLWithDataRepresentation_relativeToURL_","initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","initFileURLWithPath_","initFileURLWithPath_isDirectory_","initFileURLWithPath_isDirectory_relativeToURL_","initFileURLWithPath_relativeToURL_","initWithBase64EncodedData_options_","initWithBase64EncodedString_options_","initWithBytesNoCopy_length_","initWithBytesNoCopy_length_deallocator_","initWithBytesNoCopy_length_freeWhenDone_","initWithBytes_length_","initWithContentsOfFile_","initWithContentsOfFile_","initWithContentsOfFile_options_error","initWithContentsOfURL_","initWithContentsOfURL_","initWithContentsOfURL_options_error_","initWithDataRepresentation_relativeToURL_","initWithData_","initWithDictionary_","initWithDictionary_copyItems_","initWithObjectsAndKeys_","initWithObjects_forKeys_","initWithObjects_forKeys_count_","initWithString_","initWithString_relativeToURL_","init_str","isEqualToData_","isEqualToDictionary_","isEqualToString","isEqual_","isFileReferenceURL","isFileURL","isOperatingSystemAtLeastVersion","iter","keyEnumerator","keysOfEntriesPassingTest_","keysOfEntriesWithOptions_PassingTest_","keysSortedByValueUsingComparator_","keysSortedByValueUsingSelector_","keysSortedByValueWithOptions_usingComparator_","lastPathComponent","len","length","loadNibNamed_owner_topLevelObjects_","mainBundle","nil","objectAtIndex","objectEnumerator","objectForKey_","objectForKeyedSubscript_","objectsForKeys_notFoundMarker_","operatingSystemVersion","parameterString","password","path","pathComponents","pathExtension","performSelector_target_argument_order_modes_","port","processName","query","rangeOfData_options_range_","relativePath","relativeString","removeObject_forKey_","resourceSpecifier","scheme","selector","setBool_forKey_","standardUserDefaults","standardizedURL","startAccessingSecurityScopedResource","stopAccessingSecurityScopedResource","stringByAppendingString_","subdataWithRange_","substringWithRange","user","valueForKey_","writeBookmarkData_toURL_options_error_","writeToFile_atomically_","writeToFile_atomically_","writeToFile_options_error_","writeToURL_atomically_","writeToURL_atomically_","writeToURL_options_error_","NSArray","NSAutoreleasePool","NSBundle","NSComparator","NSComparisonResult","NSData","NSDataBase64DecodingIgnoreUnknownCharacters","NSDataBase64DecodingOptions","NSDataBase64Encoding64CharacterLineLength","NSDataBase64Encoding76CharacterLineLength","NSDataBase64EncodingEndLineWithCarriageReturn","NSDataBase64EncodingEndLineWithLineFeed","NSDataBase64EncodingOptions","NSDataReadingMappedAlways","NSDataReadingMappedIfSafe","NSDataReadingOptions","NSDataReadingUncached","NSDataSearchAnchored","NSDataSearchBackwards","NSDataSearchOptions","NSDataWritingAtomic","NSDataWritingOptions","NSDataWritingWithoutOverwriting","NSDate","NSDefaultRunLoopMode","NSDictionary","NSEnumerationConcurrent","NSEnumerationOptions","NSEnumerationReverse","NSFastEnumeration","NSFastIterator","NSInteger","NSIntegerMax","NSNotFound","NSOperatingSystemVersion","NSOrderedAscending","NSOrderedDescending","NSOrderedSame","NSPoint","NSProcessInfo","NSRange","NSRect","NSRectEdge","NSRectMaxXEdge","NSRectMaxYEdge","NSRectMinXEdge","NSRectMinYEdge","NSRunLoop","NSSize","NSString","NSTimeInterval","NSUInteger","NSURL","NSURLBookmarkCreationMinimalBookmark","NSURLBookmarkCreationOptions","NSURLBookmarkCreationOptions","NSURLBookmarkCreationPreferFileIDResolution","NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","NSURLBookmarkCreationSuitableForBookmarkFile","NSURLBookmarkCreationWithSecurityScope","NSURLBookmarkFileCreationOptions","NSURLBookmarkFileCreationOptions","NSURLBookmarkResolutionOptions","NSURLBookmarkResolutionOptions","NSURLBookmarkResolutionWithSecurityScope","NSURLBookmarkResolutionWithoutMounting","NSURLBookmarkResolutionWithoutUI","NSURLResourceKey","NSUserDefaults","NSValue","URLByAppendingPathComponent_","URLByAppendingPathComponent_isDirectory_","URLByAppendingPathExtension_","URLByDeletingLastPathComponent","URLByDeletingPathExtension","URLByResolvingAliasFileAtURL_options_error_","URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","URLByResolvingSymlinksInPath","URLByStandardizingPath","URLWithDataRepresentation_relativeToURL_","URLWithString_","URLWithString_relativeToURL_","UTF8String","absoluteString","absoluteURL","absoluteURLWithDataRepresentation_relativeToURL_","all","all","all","all","all","all","all","all","allKeys","allKeysForObject_","allValues","alloc","alloc","array","arrayByAddingObjectFromArray","arrayByAddingObjectsFromArray","arrayWithObject","arrayWithObjects","as_CGRect","autorelease","base64EncodedDataWithOptions_","base64EncodedStringWithOptions_","baseURL","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bookmarkDataWithContentsOfURL_error_","bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","bool_forKey_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","checkResourceIsReachableAndReturnError_","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","count","count","currentRunLoop","data","dataRepresentation","dataWithBytesNoCopy_length_","dataWithBytesNoCopy_length_freeWhenDone_","dataWithBytes_length_","dataWithContentsOfFile_","dataWithContentsOfFile_options_error_","dataWithContentsOfURL_","dataWithContentsOfURL_options_error_","dataWithData_","description","description","descriptionInStringsFileFormat","descriptionWithLocale_","descriptionWithLocale_indent_","dictionary","dictionaryWithContentsOfFile_","dictionaryWithContentsOfURL_","dictionaryWithDictionary_","dictionaryWithObject_forKey_","dictionaryWithObjectsAndKeys_","dictionaryWithObjects_forKeys_","dictionaryWithObjects_forKeys_count_","difference","difference","difference","difference","difference","difference","difference","difference","distantFuture","distantPast","drain","empty","empty","empty","empty","empty","empty","empty","empty","encode","encode","encode","enumerateByteRangesUsingBlock_","enumerateKeysAndObjectsUsingBlock_","enumerateKeysAndObjectsWithOptions_usingBlock_","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","fileCreationDate","fileExtensionHidden","fileGroupOwnerAccountID","fileGroupOwnerAccountName","fileIsAppendOnly","fileIsImmutable","fileModificationDate","fileOwnerAccountID","fileOwnerAccountName","filePathURL","filePosixPermissions","fileReferenceURL","fileSize","fileSystemFileNumber","fileSystemNumber","fileType","fileURLWithPathComponents_","fileURLWithPath_","fileURLWithPath_isDirectory_","fileURLWithPath_isDirectory_relativeToURL_","fileURLWithPath_relativeToURL_","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","getBytes_length_","getBytes_range_","hasDirectoryPath","hash","hash","hash","hash","hash","hash","hash","hash","height","host","init","init","initAbsoluteURLWithDataRepresentation_relativeToURL_","initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","initFileURLWithPath_","initFileURLWithPath_isDirectory_","initFileURLWithPath_isDirectory_relativeToURL_","initFileURLWithPath_relativeToURL_","initWithBase64EncodedData_options_","initWithBase64EncodedString_options_","initWithBytesNoCopy_length_","initWithBytesNoCopy_length_deallocator_","initWithBytesNoCopy_length_freeWhenDone_","initWithBytes_length_","initWithContentsOfFile_","initWithContentsOfFile_","initWithContentsOfFile_options_error","initWithContentsOfURL_","initWithContentsOfURL_","initWithContentsOfURL_options_error_","initWithDataRepresentation_relativeToURL_","initWithData_","initWithDictionary_","initWithDictionary_copyItems_","initWithObjectsAndKeys_","initWithObjects_forKeys_","initWithObjects_forKeys_count_","initWithString_","initWithString_relativeToURL_","init_str","insert","insert","insert","insert","insert","insert","insert","insert","inset","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","isEqualToData_","isEqualToDictionary_","isEqualToString","isEqual_","isFileReferenceURL","isFileURL","isOperatingSystemAtLeastVersion","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","keyEnumerator","keysOfEntriesPassingTest_","keysOfEntriesWithOptions_PassingTest_","keysSortedByValueUsingComparator_","keysSortedByValueUsingSelector_","keysSortedByValueWithOptions_usingComparator_","lastPathComponent","len","length","length","loadNibNamed_owner_topLevelObjects_","location","mainBundle","majorVersion","minorVersion","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","next","not","not","not","not","not","not","not","not","objectAtIndex","objectEnumerator","objectForKey_","objectForKeyedSubscript_","objectsForKeys_notFoundMarker_","operatingSystemVersion","origin","parameterString","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","password","patchVersion","path","pathComponents","pathExtension","performSelector_target_argument_order_modes_","port","processInfo","processName","query","rangeOfData_options_range_","relativePath","relativeString","remove","remove","remove","remove","remove","remove","remove","remove","removeObject_forKey_","resourceSpecifier","scheme","set","set","set","set","set","set","set","set","setBool_forKey_","sharedKeySetForKeys_","size","standardUserDefaults","standardizedURL","startAccessingSecurityScopedResource","stopAccessingSecurityScopedResource","stringByAppendingString_","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subdataWithRange_","substringWithRange","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","user","valueForKey_","valueWithPoint","valueWithPoint","valueWithSize","valueWithSize","width","writeBookmarkData_toURL_options_error_","writeToFile_atomically_","writeToFile_atomically_","writeToFile_options_error_","writeToURL_atomically_","writeToURL_atomically_","writeToURL_options_error_","x","y"],"q":["cocoa_foundation","","cocoa_foundation::basecocoa_foundation::foundationd":["","","The Objective-C <code>BOOL</code> type.","","The equivalent of false for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","","","","","","","","","","The equivalent of true for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method to convert the name of a selector to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2,0,3,3,3,3,0,4,4,0,4,5,5,0,6,0,6,0,0,0,7,0,7,0,0,0,0,0,0,8,8,8,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,10,0,11,10,10,10,10,0,11,0,11,12,12,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,7,10,12,4,3,2,6,5,14,14,14,11,13,15,15,15,15,15,16,17,18,18,11,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,11,11,19,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,18,11,21,22,16,23,24,7,8,10,12,4,3,2,6,5,21,22,16,23,24,7,8,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,15,14,25,18,11,18,18,18,18,18,18,18,18,14,18,14,14,14,14,14,14,14,14,14,14,14,7,10,12,4,3,2,6,5,26,26,17,7,10,12,4,3,2,6,5,21,22,16,18,14,14,7,8,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,14,14,14,14,14,14,14,14,14,11,14,11,14,14,14,14,11,11,11,11,11,7,7,7,7,7,8,10,10,10,10,10,12,12,12,12,12,4,4,4,4,4,3,3,3,3,3,2,2,2,2,2,6,6,6,6,6,5,5,5,5,5,11,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,18,18,11,7,10,12,4,3,2,6,5,22,11,15,14,11,11,11,11,11,11,18,18,18,18,18,18,14,18,18,14,18,18,11,18,14,14,14,14,14,11,11,13,7,10,12,4,3,2,6,5,16,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,20,18,14,13,11,11,11,27,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,28,14,14,14,14,14,14,11,13,18,23,29,23,29,24,24,7,10,12,4,3,2,6,5,17,21,22,16,23,24,20,7,10,12,4,3,2,6,5,15,14,14,14,14,27,16,11,7,10,12,4,3,2,6,5,11,24,11,11,11,25,11,27,27,11,18,11,11,7,10,12,4,3,2,6,5,19,11,11,7,10,12,4,3,2,6,5,19,14,16,19,11,11,11,13,7,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,18,13,7,10,12,4,3,2,6,5,21,22,16,23,24,7,8,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,9,20,21,22,16,23,24,7,8,10,12,4,3,2,6,5,7,10,12,4,3,2,6,5,11,14,30,30,30,30,22,11,14,18,18,14,18,18,21,21],"f":[null,null,null,null,null,[[["id",6]],["nsurlbookmarkcreationoptions",3]],[[["id",6]],["nsurlbookmarkfilecreationoptions",6]],[[["id",6]],["nsurlbookmarkresolutionoptions",3]],[[["id",6]],["id",6]],null,null,[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["nsurlbookmarkresolutionoptions",3],["id",0]],["id",6]],[[["id",6],["id",6],["nsurlbookmarkresolutionoptions",3],["id",6],["bool",0],["id",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["c_char",0]],null,[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsdatabase64encodingoptions",3]],["id",6]],[[["id",6],["nsdatabase64encodingoptions",3]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["nsurlbookmarkcreationoptions",3],["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6]],["c_void",0]],[[["id",6],["id",6]],["bool",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nsuinteger",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsuinteger",6]],["id",6]],[[["id",6]]],[[["id",6],["block",0]]],[[["id",6],["block",0]]],[[["id",6],["nsenumerationoptions",3],["block",0]]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["id",6]],[[["id",6]],["c_ulonglong",6]],[[["id",6]],["nsuinteger",6]],[[["id",6]],["nsinteger",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6],["bool",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["c_void",0],["nsuinteger",6]]],[[["id",6],["c_void",0],["nsrange",3]]],[[["id",6]],["bool",6]],[[["id",6]],["id",6]],null,[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsurlbookmarkresolutionoptions",3],["id",6],["bool",0],["id",0]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6],["bool",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsdatabase64decodingoptions",3]],["id",6]],[[["id",6],["id",6],["nsdatabase64decodingoptions",3]],["id",6]],[[["id",6],["c_void",0],["nsuinteger",6]],["id",6]],[[["id",6],["c_void",0],["nsuinteger",6],["block",0]],["id",6]],[[["id",6],["c_void",0],["nsuinteger",6],["bool",6]],["id",6]],[[["id",6],["c_void",0],["nsuinteger",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6],["nsuinteger",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6],["str",0]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["bool",6]],[[["id",6],["str",0]],["bool",0]],[[["id",6],["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6]],["bool",6]],[[["id",6],["nsoperatingsystemversion",3]],["bool",0]],[[["id",6]],["nsfastiterator",3]],[[["id",6]],["id",6]],[[["id",6],["block",0]],["id",6]],[[["id",6],["nsenumerationoptions",3],["block",0]],["id",6]],[[["id",6],["nscomparator",6]],["id",6]],[[["id",6],["sel",6]],["id",6]],[[["id",6],["nsenumerationoptions",3],["nscomparator",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["usize",0]],[[["id",6]],["nsuinteger",6]],[[["id",6],["id",6],["id",6],["id",0]],["bool",6]],[[],["id",6]],null,[[["id",6],["nsuinteger",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["nsoperatingsystemversion",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["sel",6],["id",6],["id",6],["nsuinteger",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6],["nsdatasearchoptions",3],["nsrange",3]],["nsrange",3]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["str",0]],["sel",6]],[[["id",6],["bool",6],["id",6]]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["id",6]]],[[["id",6],["id",6]],["id",6]],[[["id",6],["nsrange",3]],["id",6]],[[["id",6],["nsrange",3]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["id",6],["nsurlbookmarkfilecreationoptions",6],["id",6]],["id",6]],[[["id",6],["id",6],["bool",6]],["bool",6]],[[["id",6],["id",6],["bool",6]],["bool",6]],[[["id",6],["id",6],["nsdatawritingoptions",3],["id",0]],["bool",6]],[[["id",6],["id",6],["bool",6]],["bool",6]],[[["id",6],["id",6],["bool",6]],["bool",6]],[[["id",6],["id",6],["nsdatawritingoptions",3],["id",0]],["bool",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["nsurlbookmarkcreationoptions",3]],null,null,null,null,null,[[],["nsurlbookmarkfilecreationoptions",6]],null,[[],["nsurlbookmarkresolutionoptions",3]],null,null,null,[[],["id",6]],null,null,[[["id",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["nsurlbookmarkresolutionoptions",3],["id",0]],["id",6]],[[["id",6],["nsurlbookmarkresolutionoptions",3],["id",6],["bool",0],["id",0]],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[],["c_char",0]],[[],["id",6]],[[],["id",6]],[[["id",6],["id",6]],["id",6]],[[],["nsenumerationoptions",3]],[[],["nsurlbookmarkcreationoptions",3]],[[],["nsurlbookmarkresolutionoptions",3]],[[],["nsdatareadingoptions",3]],[[],["nsdatabase64encodingoptions",3]],[[],["nsdatabase64decodingoptions",3]],[[],["nsdatawritingoptions",3]],[[],["nsdatasearchoptions",3]],[[],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[["nsrect",3]],["cgrect",3]],[[]],[[["nsdatabase64encodingoptions",3]],["id",6]],[[["nsdatabase64encodingoptions",3]],["id",6]],[[],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsenumerationoptions",3]],["c_ulonglong",6]],[[["nsurlbookmarkcreationoptions",3]],["nsuinteger",6]],[[["nsurlbookmarkresolutionoptions",3]],["nsuinteger",6]],[[["nsdatareadingoptions",3]],["c_ulonglong",6]],[[["nsdatabase64encodingoptions",3]],["c_ulonglong",6]],[[["nsdatabase64decodingoptions",3]],["c_ulonglong",6]],[[["nsdatawritingoptions",3]],["c_ulonglong",6]],[[["nsdatasearchoptions",3]],["c_ulonglong",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["id",6],["id",6]],["id",6]],[[["nsurlbookmarkcreationoptions",3],["id",6],["id",6],["id",6]],["id",6]],[[["id",6]],["boolc_void",0]],[[["id",6]],["bool",6]],[[["nspoint",3]],["nspoint",3]],[[["nssize",3]],["nssize",3]],[[["nsrect",3]],["nsrect",3]],[[["nsrange",3]],["nsrange",3]],[[["nsoperatingsystemversion",3]],["nsoperatingsystemversion",3]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nscomparisonresult",4]],["nscomparisonresult",4]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["ordering",4]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["ordering",4]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["ordering",4]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["ordering",4]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["ordering",4]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["ordering",4]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["ordering",4]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["ordering",4]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[],["nsuinteger",6]],[[],["nsuinteger",6]],[[]],[[],["id",6]],[[],["id",6]],[[["c_void",0],["nsuinteger",6]],["id",6]],[[["c_void",0],["nsuinteger",6],["bool",6]],["id",6]],[[["c_void",0],["nsuinteger",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6]],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsuinteger",6]],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",0],["id",0],["nsuinteger",6]],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[],["id",6]],[[],["id",6]],[[]],[[],["nsenumerationoptions",3]],[[],["nsurlbookmarkcreationoptions",3]],[[],["nsurlbookmarkresolutionoptions",3]],[[],["nsdatareadingoptions",3]],[[],["nsdatabase64encodingoptions",3]],[[],["nsdatabase64decodingoptions",3]],[[],["nsdatawritingoptions",3]],[[],["nsdatasearchoptions",3]],[[],["encoding",3]],[[],["encoding",3]],[[],["encoding",3]],[[["block",0]]],[[["block",0]]],[[["nsenumerationoptions",3],["block",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nscomparisonresult",4],["nscomparisonresult",4]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[["nsenumerationoptions",3],["intoiterator",8]]],[[["nsurlbookmarkcreationoptions",3],["intoiterator",8]]],[[["nsurlbookmarkresolutionoptions",3],["intoiterator",8]]],[[["nsdatareadingoptions",3],["intoiterator",8]]],[[["nsdatabase64encodingoptions",3],["intoiterator",8]]],[[["nsdatabase64decodingoptions",3],["intoiterator",8]]],[[["nsdatawritingoptions",3],["intoiterator",8]]],[[["nsdatasearchoptions",3],["intoiterator",8]]],[[],["id",6]],[[],["bool",6]],[[],["id",6]],[[],["id",6]],[[],["bool",6]],[[],["bool",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nsuinteger",6]],[[],["id",6]],[[],["c_ulonglong",6]],[[],["nsuinteger",6]],[[],["nsinteger",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6],["bool",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["nsenumerationoptions",3],["formatter",3]],["result",6]],[[["nsenumerationoptions",3],["formatter",3]],["result",6]],[[["nsenumerationoptions",3],["formatter",3]],["result",6]],[[["nsenumerationoptions",3],["formatter",3]],["result",6]],[[["nsenumerationoptions",3],["formatter",3]],["result",6]],[[["nscomparisonresult",4],["formatter",3]],["result",6]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkcreationoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",6]],[[["nsurlbookmarkresolutionoptions",3],["formatter",3]],["result",6]],[[["nsdatareadingoptions",3],["formatter",3]],["result",6]],[[["nsdatareadingoptions",3],["formatter",3]],["result",6]],[[["nsdatareadingoptions",3],["formatter",3]],["result",6]],[[["nsdatareadingoptions",3],["formatter",3]],["result",6]],[[["nsdatareadingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64encodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",6]],[[["nsdatabase64decodingoptions",3],["formatter",3]],["result",6]],[[["nsdatawritingoptions",3],["formatter",3]],["result",6]],[[["nsdatawritingoptions",3],["formatter",3]],["result",6]],[[["nsdatawritingoptions",3],["formatter",3]],["result",6]],[[["nsdatawritingoptions",3],["formatter",3]],["result",6]],[[["nsdatawritingoptions",3],["formatter",3]],["result",6]],[[["nsdatasearchoptions",3],["formatter",3]],["result",6]],[[["nsdatasearchoptions",3],["formatter",3]],["result",6]],[[["nsdatasearchoptions",3],["formatter",3]],["result",6]],[[["nsdatasearchoptions",3],["formatter",3]],["result",6]],[[["nsdatasearchoptions",3],["formatter",3]],["result",6]],[[],["id",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_ulonglong",6]],["option",4,[["nsenumerationoptions",3]]]],[[["nsuinteger",6]],["option",4,[["nsurlbookmarkcreationoptions",3]]]],[[["nsuinteger",6]],["option",4,[["nsurlbookmarkresolutionoptions",3]]]],[[["c_ulonglong",6]],["option",4,[["nsdatareadingoptions",3]]]],[[["c_ulonglong",6]],["option",4,[["nsdatabase64encodingoptions",3]]]],[[["c_ulonglong",6]],["option",4,[["nsdatabase64decodingoptions",3]]]],[[["c_ulonglong",6]],["option",4,[["nsdatawritingoptions",3]]]],[[["c_ulonglong",6]],["option",4,[["nsdatasearchoptions",3]]]],[[["c_ulonglong",6]],["nsenumerationoptions",3]],[[["nsuinteger",6]],["nsurlbookmarkcreationoptions",3]],[[["nsuinteger",6]],["nsurlbookmarkresolutionoptions",3]],[[["c_ulonglong",6]],["nsdatareadingoptions",3]],[[["c_ulonglong",6]],["nsdatabase64encodingoptions",3]],[[["c_ulonglong",6]],["nsdatabase64decodingoptions",3]],[[["c_ulonglong",6]],["nsdatawritingoptions",3]],[[["c_ulonglong",6]],["nsdatasearchoptions",3]],[[["c_ulonglong",6]],["nsenumerationoptions",3]],[[["nsuinteger",6]],["nsurlbookmarkcreationoptions",3]],[[["nsuinteger",6]],["nsurlbookmarkresolutionoptions",3]],[[["c_ulonglong",6]],["nsdatareadingoptions",3]],[[["c_ulonglong",6]],["nsdatabase64encodingoptions",3]],[[["c_ulonglong",6]],["nsdatabase64decodingoptions",3]],[[["c_ulonglong",6]],["nsdatawritingoptions",3]],[[["c_ulonglong",6]],["nsdatasearchoptions",3]],[[["intoiterator",8]],["nsenumerationoptions",3]],[[["intoiterator",8]],["nsurlbookmarkcreationoptions",3]],[[["intoiterator",8]],["nsurlbookmarkresolutionoptions",3]],[[["intoiterator",8]],["nsdatareadingoptions",3]],[[["intoiterator",8]],["nsdatabase64encodingoptions",3]],[[["intoiterator",8]],["nsdatabase64decodingoptions",3]],[[["intoiterator",8]],["nsdatawritingoptions",3]],[[["intoiterator",8]],["nsdatasearchoptions",3]],[[["c_void",0],["nsuinteger",6]]],[[["c_void",0],["nsrange",3]]],[[],["bool",6]],[[["nsenumerationoptions",3],["",0]]],[[["nsurlbookmarkcreationoptions",3],["",0]]],[[["nsurlbookmarkresolutionoptions",3],["",0]]],[[["nsdatareadingoptions",3],["",0]]],[[["nsdatabase64encodingoptions",3],["",0]]],[[["nsdatabase64decodingoptions",3],["",0]]],[[["nsdatawritingoptions",3],["",0]]],[[["nsdatasearchoptions",3],["",0]]],null,[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["nsurlbookmarkresolutionoptions",3],["id",6],["bool",0],["id",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6],["bool",6],["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]],[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]],[[["c_void",0],["nsuinteger",6]],["id",6]],[[["c_void",0],["nsuinteger",6],["block",0]],["id",6]],[[["c_void",0],["nsuinteger",6],["bool",6]],["id",6]],[[["c_void",0],["nsuinteger",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["nsdatareadingoptions",3],["id",0]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["bool",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["id",6],["id",6],["nsuinteger",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[["str",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsrect",3],["cgfloat",6],["cgfloat",6]],["nsrect",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["id",6]],["id",6]],[[["id",6]],["bool",6]],[[["str",0]],["bool",0]],[[["id",6]],["bool",6]],[[],["bool",6]],[[],["bool",6]],[[["nsoperatingsystemversion",3]],["bool",0]],[[["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3]],["bool",0]],[[["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3]],["bool",0]],[[],["nsfastiterator",3]],[[],["id",6]],[[["block",0]],["id",6]],[[["nsenumerationoptions",3],["block",0]],["id",6]],[[["nscomparator",6]],["id",6]],[[["sel",6]],["id",6]],[[["nsenumerationoptions",3],["nscomparator",6]],["id",6]],[[],["id",6]],[[],["usize",0]],[[],["nsuinteger",6]],null,[[["id",6],["id",6],["id",0]],["bool",6]],null,[[]],null,null,[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["bool",0]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["bool",0]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["bool",0]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["bool",0]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["bool",0]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["bool",0]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["bool",0]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["bool",0]],[[],["id",6]],[[["cgfloat",6],["cgfloat",6]],["nspoint",3]],[[["cgfloat",6],["cgfloat",6]],["nssize",3]],[[["nspoint",3],["nssize",3]],["nsrect",3]],[[["nsuinteger",6],["nsuinteger",6]],["nsrange",3]],[[["nsuinteger",6],["nsuinteger",6],["nsuinteger",6]],["nsoperatingsystemversion",3]],[[["nsfastiterator",3]],["option",4,[["id",6]]]],[[["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsuinteger",6]],["id",6]],[[],["id",6]],[[["id",6]],["id",6]],[[["id",6]],["id",6]],[[["id",6],["id",6]],["id",6]],[[],["nsoperatingsystemversion",3]],null,[[],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["option",4,[["ordering",4]]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["option",4,[["ordering",4]]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["option",4,[["ordering",4]]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["option",4,[["ordering",4]]]],[[],["id",6]],null,[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["sel",6],["id",6],["id",6],["nsuinteger",6],["id",6]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[["id",6],["nsdatasearchoptions",3],["nsrange",3]],["nsrange",3]],[[],["id",6]],[[],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["id",6]]],[[],["id",6]],[[],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3],["bool",0]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3],["bool",0]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3],["bool",0]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3],["bool",0]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3],["bool",0]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3],["bool",0]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3],["bool",0]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3],["bool",0]]],[[["bool",6],["id",6]]],[[["id",6]],["id",6]],null,[[]],[[],["id",6]],[[],["bool",6]],[[]],[[["id",6]],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[["nsrange",3]],["id",6]],[[["nsrange",3]],["id",6]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["nsenumerationoptions",3],["nsenumerationoptions",3]],["nsenumerationoptions",3]],[[["nsurlbookmarkcreationoptions",3],["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]],[[["nsurlbookmarkresolutionoptions",3],["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]],[[["nsdatareadingoptions",3],["nsdatareadingoptions",3]],["nsdatareadingoptions",3]],[[["nsdatabase64encodingoptions",3],["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]],[[["nsdatabase64decodingoptions",3],["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]],[[["nsdatawritingoptions",3],["nsdatawritingoptions",3]],["nsdatawritingoptions",3]],[[["nsdatasearchoptions",3],["nsdatasearchoptions",3]],["nsdatasearchoptions",3]],[[],["id",6]],[[["id",6]],["id",6]],[[["nspoint",3]],["id",6]],[[["nspoint",3]],["id",6]],[[["nssize",3]],["id",6]],[[["nssize",3]],["id",6]],null,[[["id",6],["id",6],["nsurlbookmarkfilecreationoptions",6],["id",6]],["id",6]],[[["id",6],["bool",6]],["bool",6]],[[["id",6],["bool",6]],["bool",6]],[[["id",6],["nsdatawritingoptions",3],["id",0]],["bool",6]],[[["id",6],["bool",6]],["bool",6]],[[["id",6],["bool",6]],["bool",6]],[[["id",6],["nsdatawritingoptions",3],["id",0]],["bool",6]],null,null],"p":[[6,"id"],[3,"NSDataBase64DecodingOptions"],[3,"NSDataBase64EncodingOptions"],[3,"NSDataReadingOptions"],[3,"NSDataSearchOptions"],[3,"NSDataWritingOptions"],[3,"NSEnumerationOptions"],[4,"NSComparisonResult"],[4,"NSRectEdge"],[3,"NSURLBookmarkCreationOptions"],[8,"NSURL"],[3,"NSURLBookmarkResolutionOptions"],[8,"NSString"],[8,"NSDictionary"],[8,"NSArray"],[3,"NSRect"],[8,"NSAutoreleasePool"],[8,"NSData"],[8,"NSUserDefaults"],[3,"NSFastIterator"],[3,"NSPoint"],[3,"NSSize"],[3,"NSRange"],[3,"NSOperatingSystemVersion"],[8,"NSRunLoop"],[8,"NSDate"],[8,"NSProcessInfo"],[8,"NSFastEnumeration"],[8,"NSBundle"],[8,"NSValue"]]},\
"color_quant":{"doc":"Color quantization library","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NeuQuant","borrow","borrow_mut","color_map_rgb","color_map_rgba","from","index_of","init","into","lookup","map_pixel","new","try_from","try_into","type_id"],"q":["color_quant","","","","","","","","","","","","","",""],"d":["","","","Returns the RGBA color map calculated from the sample.","Returns the RGBA color map calculated from the sample.","Returns the argument unchanged.","Finds the best-matching index in the color map.","Initializes the neuronal network and trains it with the …","Calls <code>U::from(self)</code>.","Lookup pixel values for color at <code>idx</code> in the colormap.","Maps the rgba-pixel in-place to the best-matching color in …","Creates a new neuronal network and trains it with the …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["neuquant",3]],["vec",3,[["u8",0]]]],[[["neuquant",3]],["vec",3,[["u8",0]]]],[[]],[[["neuquant",3]],["usize",0]],[[["neuquant",3]]],[[]],[[["neuquant",3],["usize",0]],["option",4]],[[["neuquant",3]]],[[["i32",0],["usize",0]],["neuquant",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"NeuQuant"]]},\
"core_foundation":{"doc":"This crate provides wrappers around the underlying …","t":[8,0,0,0,0,0,0,0,0,14,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,3,3,6,5,5,6,5,5,5,5,3,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,5,5,5,5,5,6,5,5,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,5,6,3,6,5,5,6,5,5,5,5,6,5,6,6,6,6,5,4,5,5,5,5,5,6,6,8,6,6,3,5,5,5,3,6,6,13,8,8,13,3,3,13,6,16,6,8,8,8,12,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,12,12,6,11,12,12,12,12,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,10,11,11,10,11,11,3,5,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,3,5,5,5,5,5,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,6,5,5,6,5,5,5,6,5,5,5,5,6,3,6,6,5,5,5,6,5,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,7,7,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,3,5,5,5,5,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,3,5,5,5,5,5,5,5,5,5,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,17,17,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,6,6,3,5,5,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,6,3,5,5,5,5,5,6,6,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,6,6,6,8,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,3,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,3,6,3,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,4,3,3,3,5,5,5,5,5,5,6,5,5,3,6,3,5,5,5,5,5,5,5,5,5,5,6,5,5,5,13,13,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,7,7,17,17,17,17,17,17,11,12,12,12,12,12,12,11,11,11,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,3,6,5,3,5,6,5,5,6,5,5,5,5,5,5,6,6,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,7,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,6,5,5,5,5,6,6,5,5,5,5,5,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,5,5,5,5,6,3,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ConcreteCFType","array","attributed_string","base","boolean","bundle","characterset","data","date","declare_TCFType","dictionary","error","filedescriptor","impl_CFComparison","impl_CFTypeDescription","impl_TCFType","mach_port","number","propertylist","runloop","set","string","timezone","url","uuid","CFArray","CFArrayCallBacks","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayEqualCallBack","CFArrayGetCount","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayIterator","CFArrayRef","CFArrayReleaseCallBack","CFArrayRetainCallBack","CFIndex","__CFArray","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","fmt","from","from","from","from","from_CFTypes","from_copyable","from_mut_void","from_void","get","get_all_values","get_unchecked","get_values","into","into","into","into","into_iter","into_iter","into_untyped","iter","kCFTypeArrayCallBacks","len","len","next","release","retain","to_owned","to_owned","to_untyped","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFAttributedString","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedString","CFMutableAttributedStringRef","__CFAttributedString","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","char_len","char_len","clone","clone","clone_into","clone_into","default","drop","drop","eq","eq","from","from","from","from_mut_void","from_mut_void","from_void","from_void","into","into","into","new","new","replace_str","set_attribute","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","Boolean","CFAllocator","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFIndexConvertible","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFType","CFTypeID","CFTypeRef","EqualTo","FromMutVoid","FromVoid","GreaterThan","ItemMutRef","ItemRef","LessThan","OSStatus","Ref","SInt32","TCFType","TCFTypeRef","ToVoid","allocate","as_CFType","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_void_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","copyDescription","deallocate","deref","deref","deref_mut","downcast","downcast_into","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void_ptr","info","init","instance_of","into","into","into","into","into","into","into","into","into_CFType","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","new","preferredSize","reallocate","release","retain","retain_count","show","to_CFIndex","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFBoolean","CFBooleanGetTypeID","CFBooleanRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","false_value","fmt","from","from","from_mut_void","from_void","into","kCFBooleanFalse","kCFBooleanTrue","to_owned","to_void","to_void","true_value","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBundle","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bundle_resources_url","bundle_url","bundle_with_identifier","clone","clone_into","drop","eq","executable_url","from","from","from_mut_void","from_void","function_pointer_for_name","info_dictionary","into","into","main_bundle","new","path","private_frameworks_url","resources_path","shared_support_url","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFCharacterSet","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","fmt","from","from","from_mut_void","from_void","into","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFData","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","deref","drop","eq","fmt","from","from","from_arc","from_buffer","from_mut_void","from_void","into","into","len","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDate","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","abs_time","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","fmt","from","from","from_mut_void","from_void","into","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","new","now","partial_cmp","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFDictionary","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionary","CFMutableDictionaryRef","__CFDictionary","add","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","contains_key","copyDescription","copyDescription","copy_with_capacity","default","drop","drop","eq","eq","equal","equal","find","find","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFType_pairs","from_mut_void","from_mut_void","from_void","from_void","get","get","get_keys_and_values","get_keys_and_values","hash","into","into","into","into","into","into_untyped","into_untyped","is_empty","is_empty","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","len","len","new","release","release","remove","remove_all","replace","retain","retain","set","to_immutable","to_mutable","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","with_capacity","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","CFError","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","description","description","domain","drop","eq","fmt","fmt","from","from","from_mut_void","from_void","into","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFFileDescriptor","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","as_CFTypeRef","as_concrete_TypeRef","as_raw_fd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","copyDescription","disable_callbacks","drop","enable_callbacks","eq","from","from","from","from_mut_void","from_void","info","into","into","into","invalidate","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","new","release","retain","to_owned","to_owned","to_run_loop_source","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","valid","version","wrap_under_create_rule","wrap_under_get_rule","CFAllocatorRef","CFIndex","CFMachPort","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_runloop_source","drop","eq","fmt","from","from","from_mut_void","from_void","into","into","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumber","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","fmt","from","from","from","from","from","from","from","from_mut_void","from_void","into","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","partial_cmp","to_f32","to_f64","to_i32","to_i64","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFPropertyList","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","CFPropertyListSubClass","as_CFType","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","create_data","create_with_data","downcast","downcast_into","drop","eq","fmt","from","instance_of","into","into_CFPropertyList","into_CFType","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","retain_count","show","to_CFPropertyList","to_owned","try_from","try_into","type_id","type_of","wrap_under_create_rule","wrap_under_get_rule","CFRunLoop","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopMode","CFRunLoopObserver","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopRunResult","CFRunLoopSource","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimer","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","Finished","HandledSource","Stopped","TimedOut","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","add_observer","add_source","add_timer","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains_observer","contains_source","contains_timer","copyDescription","copyDescription","copyDescription","copyDescription","current_mode","drop","drop","drop","drop","eq","eq","eq","eq","eq","equal","equal","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_file_descriptor","from_mut_void","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void","getPort","get_current","get_main","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","new","perform","perform","release","release","release","release","remove_observer","remove_source","remove_timer","retain","retain","retain","retain","run_current","run_in_mode","schedule","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFSet","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","fmt","from","from","from","from_mut_void","from_slice","from_void","hash","into","into","into","kCFTypeSetCallBacks","len","release","retain","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFString","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","char_len","clone","clone_into","drop","eq","eq","eq","fmt","fmt","from","from","from","from_mut_void","from_static_string","from_str","from_void","into","into","kCFStringEncodingUTF8","new","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFTimeZone","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","drop","eq","fmt","from","from","from_mut_void","from_void","into","into","name","new","seconds_from_gmt","system","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFURL","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","absolute","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","fmt","from","from","from_file_system_path","from_mut_void","from_path","from_void","get_file_system_path","get_string","into","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","to_owned","to_path","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFUUID","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone","clone_into","clone_into","default","default","drop","eq","fmt","from","from","from","from_mut_void","from_void","into","into","into","new","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule"],"q":["core_foundation","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::attributed_string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::basecore_foundation::boolean","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::characterset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::date","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::dictionary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::filedescriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::mach_port","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::propertylist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::runloopcore_foundation::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::timezone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation::uuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Heterogeneous immutable arrays.","","","A Boolean type.","Core Foundation Bundle Type","A set of Unicode compliant characters.","Core Foundation byte buffers.","Core Foundation date objects.","Declare a Rust type that wraps an underlying …","Dictionaries of key-value pairs.","Core Foundation errors.","","","Implement <code>std::fmt::Debug</code> for the given type.","Provide an implementation of the <code>TCFType</code> trait for the Rust","","Immutable numbers.","Core Foundation property lists","","An immutable bag of elements.","Immutable strings.","Core Foundation time zone objects.","A URL type for Core Foundation.","Core Foundation UUID objects.","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the same array, but with the type reset to void …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Superclass of all Core Foundation objects.","","","","A trait describing how to convert from the stored *mut …","A trait describing how to convert from the stored *const …","","A reference to a mutable element inside a container","A reference to an element inside a container","","","The reference type wrapped inside this type.","","All Core Foundation types implement this trait. The …","Trait for all types which are Core Foundation reference …","A trait describing how to convert from the stored *const …","","Returns the object as a wrapped <code>CFType</code>. The reference …","Returns the object as a raw <code>CFTypeRef</code>. The reference count …","","","Returns the object as its concrete TypeRef.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to downcast the <code>CFType</code> to a subclass. Checking if the …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","","","","","","","","Formats the value using <code>CFCopyDescription</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the object as a wrapped <code>CFType</code>. Consumes self and …","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Always use this method to construct a <code>CFIndex</code> value. It …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type ID for this class.","","","","","","","","","","Returns the type ID of this object.","","Returns an instance of the object, wrapping the underlying …","","","Returns an instance of the object, wrapping the underlying …","","","A Boolean type.","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A Bundle type.","","","","","","","","","","","","","","","","","","","","Bundle’s resources location","Bundle’s own location","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Bundle’s own location","","Bundle’s resources location","","","","","","","","","","","","","","","An immutable set of Unicde characters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A byte buffer.","","","","","","","","","","","","","","","Returns a pointer to the underlying bytes in this data. …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a CFData referencing <code>buffer</code> without creating a copy","Creates a CFData around a copy <code>buffer</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this byte buffer.","","","","","","","","","","","","","","","","A date.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the key-value pair to the dictionary if no such key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new mutable dictionary with the key-value pairs …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Panics","Panics","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the same dictionary, but with the types reset to …","Returns the same dictionary, but with the types reset to …","","","","","","","","","","Removes the value of the key from the dictionary.","","Replaces the value of the key in the dictionary.","","","Sets the value of the key in the dictionary.","Returns a <code>CFDictionary</code> pointing to the same underlying …","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error value.","","","","","","","","","","","","","","","Returns the code identifying this type of error.","Returns a human-presentable description of the error.","","Returns a string identifying the domain with which this …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A CFPropertyList struct. This is superclass to <code>CFData</code>, …","","","","","","Trait for all subclasses of <code>CFPropertyList</code>.","","","","","","","","","","Try to downcast the <code>CFPropertyList</code> to a subclass. Checking …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","Returns the argument unchanged.","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Equal to <code>to_CFPropertyList</code>, but consumes self and avoids …","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Create an instance of the superclass type <code>CFPropertyList</code> …","","","","","Returns the type ID of this object. Will be one of CFData, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable bag of elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new set from a list of <code>CFType</code> instances.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the number of elements in the CFSet","","","","","","","","","","","","","","","","","","","","","An immutable string in one of a variety of encodings.","","","","","","","","","","","","","","","","","","","","","","Returns the number of characters in the string.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Like <code>CFString::new</code>, but references a string that can be …","See also CFString::new for a variant of this which does …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>CFString</code> instance from a Rust string.","","","","","","","","","","","","","","","A time zone.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The timezone database ID that identifies the time zone. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A UUID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,3,4,2,1,3,4,1,4,1,4,4,1,1,4,1,2,1,3,4,1,1,1,1,1,1,1,1,2,1,3,4,1,3,1,1,0,1,3,3,4,4,1,4,1,5,1,1,2,1,3,4,2,1,3,4,2,1,1,3,4,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,7,6,7,8,6,7,8,6,7,6,7,6,7,6,7,7,6,7,6,7,8,6,7,6,7,6,7,8,6,7,6,7,7,7,6,7,9,10,6,6,7,7,8,6,7,8,6,7,8,6,6,7,7,6,7,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,11,0,0,11,0,12,0,0,0,0,13,12,12,14,15,12,14,15,16,17,18,11,19,13,14,15,17,18,11,19,13,14,15,11,19,13,14,15,11,19,13,14,15,13,13,17,18,18,14,14,14,15,17,18,11,14,15,17,18,11,14,17,18,11,19,13,14,15,20,14,15,21,14,15,16,13,19,12,17,18,11,11,19,13,14,15,12,0,0,0,0,0,0,0,0,19,19,0,15,13,13,13,13,12,12,22,11,19,13,14,15,23,24,14,14,15,15,17,18,11,19,13,14,15,17,18,11,19,13,14,15,12,17,18,11,19,13,14,14,15,15,12,13,12,14,15,12,14,15,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,27,26,27,26,26,26,26,26,26,26,26,26,27,26,26,26,26,26,27,26,26,26,26,26,26,26,26,28,26,26,27,26,27,26,27,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,30,29,30,29,29,29,29,29,29,30,29,29,29,30,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,31,29,29,30,29,30,29,30,29,29,29,29,0,0,0,0,0,0,0,0,0,32,32,33,32,33,32,32,32,32,32,32,32,32,33,32,32,32,32,32,33,32,32,32,34,32,32,33,32,33,32,33,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,35,35,35,36,35,36,35,35,35,35,35,35,35,36,35,35,35,36,35,0,0,35,35,35,35,37,35,35,36,35,36,35,36,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,38,39,38,40,39,38,41,42,40,39,38,41,42,39,38,41,42,39,38,41,42,39,38,41,42,38,38,39,38,39,38,41,42,39,38,39,38,40,39,38,38,41,42,39,38,39,38,39,38,39,38,39,38,41,40,39,38,41,42,39,38,39,38,0,0,39,38,38,41,42,38,38,38,41,42,38,38,39,39,38,41,42,39,38,43,44,39,39,38,38,40,39,38,41,42,40,39,38,41,42,40,39,39,38,38,41,42,41,42,38,39,38,39,38,0,0,0,0,0,0,0,45,45,46,45,46,45,45,45,45,45,45,45,45,45,45,45,46,45,45,45,46,45,0,0,0,0,45,45,47,45,45,46,45,46,45,46,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,49,50,48,49,50,48,50,48,50,48,48,50,48,48,48,48,49,50,48,48,48,50,49,50,48,48,0,0,48,50,50,50,48,48,51,48,48,49,50,48,49,50,48,49,50,48,48,48,50,48,48,0,0,0,0,0,0,0,0,52,52,53,52,53,52,52,52,52,52,52,52,53,52,52,52,53,52,52,54,55,52,52,53,52,53,52,53,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,57,58,56,57,58,56,56,56,56,56,56,56,57,58,56,56,56,56,56,56,56,57,58,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,59,60,56,56,57,58,56,57,58,56,57,58,56,56,56,56,0,0,0,0,0,0,0,61,61,61,61,61,61,61,0,0,61,61,61,61,61,61,61,61,62,61,0,0,0,0,0,0,61,61,62,61,61,61,61,61,61,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,63,63,63,0,0,0,0,64,64,64,64,65,66,67,64,65,66,67,68,69,70,71,72,73,74,75,64,63,65,66,67,68,69,70,71,72,73,74,75,64,63,65,66,67,71,64,63,65,66,67,64,63,65,66,67,64,64,64,71,72,73,74,64,64,65,66,67,64,63,65,66,67,71,72,64,63,68,69,70,71,72,73,74,75,64,63,65,66,67,66,64,65,66,67,64,65,66,67,72,64,64,71,72,71,72,73,74,68,69,70,71,72,73,74,75,64,63,65,66,67,0,0,0,0,0,0,0,0,0,0,0,0,0,65,71,72,71,72,73,74,64,64,64,71,72,73,74,64,64,71,64,64,63,65,66,67,76,77,78,79,64,64,65,65,66,66,67,67,68,69,70,71,72,73,74,75,64,63,65,66,67,68,69,70,71,72,73,74,75,64,63,65,66,67,68,69,70,71,72,73,74,75,64,64,63,65,65,66,66,67,67,71,72,73,74,64,65,66,67,64,65,66,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,81,82,80,81,82,80,82,80,82,82,80,80,82,80,80,81,82,80,80,80,82,80,81,82,0,80,82,82,80,82,80,80,83,80,81,82,80,81,82,80,80,81,82,82,80,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,85,84,85,84,84,84,84,84,84,84,84,84,84,85,84,84,84,84,84,84,85,84,0,84,84,84,86,84,84,85,84,85,84,85,84,84,84,84,0,0,0,0,0,0,0,0,0,87,87,88,87,88,87,87,87,87,87,87,87,88,87,87,87,88,87,87,87,87,87,87,89,87,87,88,87,88,87,88,87,87,87,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,91,90,91,90,90,90,90,90,90,91,90,90,90,90,90,90,90,91,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,92,90,90,91,90,91,90,91,90,90,90,90,0,0,0,0,0,0,0,0,93,93,94,95,93,94,95,93,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,93,95,93,95,93,93,93,93,94,95,93,93,93,94,95,93,93,95,93,96,93,93,94,95,93,94,95,93,94,95,93,93,93,93],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_void",0],["c_void",0],["isize",0],["cfarraycallbacks",0]],["__cfarray",0]],[[["c_void",0],["__cfarray",0]],["__cfarray",0]],null,[[["__cfarray",0]],["isize",0]],[[],["usize",0]],[[["__cfarray",0],["isize",0]],["c_void",0]],[[["__cfarray",0],["cfrange",3],["c_void",0]]],null,null,null,null,null,null,[[["cfarray",3]],["cftyperef",6]],[[["cfarray",3]],["cfarrayref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfarray",3]],["cfarray",3]],[[["cfarraycallbacks",3]],["cfarraycallbacks",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["cfarray",3]]],[[["cfarray",3],["cfarray",3]],["bool",0]],null,[[["cfarray",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["cfarray",3]],[[],["cfarray",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["cfarray",3],["cfindex",6]],["option",4,[["itemref",3]]]],[[["cfarray",3]],["vec",3,[["c_void",0]]]],[[["cfarray",3],["cfindex",6]],["itemref",3]],[[["cfarray",3],["cfrange",3]],["vec",3,[["c_void",0]]]],[[]],[[]],[[]],[[]],[[["cfarray",3]],["cfarrayiterator",3,[["fromvoid",8]]]],[[]],[[["cfarray",3]],["cfarray",3]],[[["cfarray",3]],["cfarrayiterator",3]],null,[[["cfarray",3]],["cfindex",6]],[[["cfarrayiterator",3,[["fromvoid",8]]]],["usize",0]],[[["cfarrayiterator",3,[["fromvoid",8]]]],["option",4,[["itemref",3,[["fromvoid",8]]]]]],null,null,[[["",0]]],[[["",0]]],[[["cfarray",3]],["cfarray",3]],[[["cfarrayref",6]],["c_void",0]],[[["cfarray",3]],["c_void",0]],[[["cfarray",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["cfarrayref",6]],["cfarray",3]],[[["cfarrayref",6]],["cfarray",3]],null,[[["c_void",0],["__cfstring",0],["__cfdictionary",0]],["__cfattributedstring",0]],[[["c_void",0],["isize",0]],["__cfattributedstring",0]],[[["c_void",0],["isize",0],["__cfattributedstring",0]],["__cfattributedstring",0]],[[["__cfattributedstring",0]],["isize",0]],[[],["usize",0]],null,[[["__cfattributedstring",0],["cfrange",3],["__cfstring",0]]],[[["__cfattributedstring",0],["cfrange",3],["__cfstring",0],["c_void",0]]],null,null,null,[[["cfattributedstring",3]],["cftyperef",6]],[[["cfmutableattributedstring",3]],["cftyperef",6]],[[["cfattributedstring",3]],["cfattributedstringref",6]],[[["cfmutableattributedstring",3]],["cfmutableattributedstringref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfattributedstring",3]],["cfindex",6]],[[["cfmutableattributedstring",3]],["cfindex",6]],[[["cfattributedstring",3]],["cfattributedstring",3]],[[["cfmutableattributedstring",3]],["cfmutableattributedstring",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["cfmutableattributedstring",3]],[[["cfattributedstring",3]]],[[["cfmutableattributedstring",3]]],[[["cfattributedstring",3],["cfattributedstring",3]],["bool",0]],[[["cfmutableattributedstring",3],["cfmutableattributedstring",3]],["bool",0]],[[]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[]],[[["cfstring",3]],["cfattributedstring",3]],[[],["cfmutableattributedstring",3]],[[["cfmutableattributedstring",3],["cfstring",3],["cfrange",3]]],[[["cfmutableattributedstring",3],["cfrange",3],["cfstringref",6],["",0]]],[[["",0]]],[[["",0]]],[[["cfattributedstringref",6]],["c_void",0]],[[["cfmutableattributedstringref",6]],["c_void",0]],[[["cfattributedstring",3]],["c_void",0]],[[["cfattributedstring",3]],["c_void",0]],[[["cfmutableattributedstring",3]],["c_void",0]],[[["cfmutableattributedstring",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfattributedstringref",6]],["cfattributedstring",3]],[[["cfmutableattributedstringref",6]],["cfmutableattributedstring",3]],[[["cfattributedstringref",6]],["cfattributedstring",3]],[[["cfmutableattributedstringref",6]],["cfmutableattributedstring",3]],null,null,[[["c_void",0],["isize",0],["usize",0]],["c_void",0]],null,null,null,[[["c_void",0],["cfallocatorcontext",0]],["c_void",0]],[[["c_void",0],["c_void",0]]],null,[[["c_void",0],["cfallocatorcontext",0]]],[[],["c_void",0]],[[["c_void",0],["isize",0],["usize",0]],["isize",0]],[[],["usize",0]],null,[[["c_void",0],["c_void",0],["isize",0],["usize",0]],["c_void",0]],null,null,null,null,[[["c_void",0]]],null,[[["c_void",0]],["__cfstring",0]],[[["c_void",0],["c_void",0]],["u8",0]],[[["c_void",0]],["isize",0]],[[["c_void",0]],["usize",0]],[[["c_void",0]],["usize",0]],null,null,null,null,null,null,[[["c_void",0]]],[[["c_void",0]],["c_void",0]],[[["c_void",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["cftype",3]],[[["",0]],["cftyperef",6]],[[["cftype",3]],["cftyperef",6]],[[["cfallocator",3]],["cftyperef",6]],[[["",0]]],[[["cftype",3]],["cftyperef",6]],[[["cfallocator",3]],["cfallocatorref",6]],[[["",0]],["c_void",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfcomparisonresult",4]],["cfcomparisonresult",4]],[[["cfrange",3]],["cfrange",3]],[[["cfallocatorcontext",3]],["cfallocatorcontext",3]],[[["cftype",3]],["cftype",3]],[[["cfallocator",3]],["cfallocator",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["itemref",3]],["",0]],[[["itemmutref",3]],["",0]],[[["itemmutref",3]],["",0]],[[["cftype",3]],["option",4,[["concretecftype",8]]]],[[["cftype",3]],["option",4,[["concretecftype",8]]]],[[["cftype",3]]],[[["cfallocator",3]]],[[["itemref",3,[["partialeq",8]]],["itemref",3,[["partialeq",8]]]],["bool",0]],[[["itemmutref",3,[["partialeq",8]]],["itemmutref",3,[["partialeq",8]]]],["bool",0]],[[["cfcomparisonresult",4],["cfcomparisonresult",4]],["bool",0]],[[["cftype",3],["cftype",3]],["bool",0]],[[["cfallocator",3],["cfallocator",3]],["bool",0]],[[["itemref",3,[["debug",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["itemmutref",3,[["debug",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["cfcomparisonresult",4],["formatter",3]],["result",4,[["error",3]]]],[[["cftype",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]]],null,[[["isize",0],["isize",0]],["cfrange",3]],[[["",0]],["bool",0]],[[]],[[]],[[["cfcomparisonresult",4]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[],["cftype",3]],null,null,null,null,null,null,null,null,null,null,null,[[["cfallocatorcontext",3]],["cfallocator",3]],null,null,null,null,[[["",0]],["cfindex",6]],[[["",0]]],[[],["cfindex",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["c_void",0]],[[["cftyperef",6]],["c_void",0]],[[["cftype",3]],["c_void",0]],[[["cftype",3]],["c_void",0]],[[["cfallocator",3]],["c_void",0]],[[["cfallocator",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["cftypeid",6]],null,[[]],[[["cftyperef",6]],["cftype",3]],[[["cfallocatorref",6]],["cfallocator",3]],[[]],[[["cftyperef",6]],["cftype",3]],[[["cfallocatorref",6]],["cfallocator",3]],null,[[],["usize",0]],null,[[["cfboolean",3]],["cftyperef",6]],[[["cfboolean",3]],["cfbooleanref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfboolean",3]],["cfboolean",3]],[[["",0],["",0]]],[[["cfboolean",3]]],[[["cfboolean",3],["cfboolean",3]],["bool",0]],[[],["cfboolean",3]],[[["cfboolean",3],["formatter",3]],["result",6]],[[]],[[["bool",0]],["cfboolean",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],null,null,[[["",0]]],[[["cfboolean",3]],["c_void",0]],[[["cfboolean",3]],["c_void",0]],[[],["cfboolean",3]],[[],["result",4]],[[],["result",4]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfbooleanref",6]],["cfboolean",3]],[[["cfbooleanref",6]],["cfboolean",3]],null,[[["__cfbundle",0]],["__cfurl",0]],[[["__cfbundle",0]],["__cfurl",0]],[[["__cfbundle",0]],["__cfurl",0]],[[["__cfbundle",0]],["__cfurl",0]],[[["__cfbundle",0]],["__cfurl",0]],[[["c_void",0],["__cfurl",0]],["__cfbundle",0]],[[["__cfstring",0]],["__cfbundle",0]],[[["__cfbundle",0],["__cfstring",0]],["c_void",0]],[[["__cfbundle",0]],["__cfdictionary",0]],[[],["__cfbundle",0]],[[],["usize",0]],null,null,[[["cfbundle",3]],["cftyperef",6]],[[["cfbundle",3]],["cfbundleref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfbundle",3]],["option",4,[["cfurl",3]]]],[[["cfbundle",3]],["option",4,[["cfurl",3]]]],[[["cfstring",3]],["option",4,[["cfbundle",3]]]],[[["cfbundle",3]],["cfbundle",3]],[[["",0],["",0]]],[[["cfbundle",3]]],[[["cfbundle",3],["cfbundle",3]],["bool",0]],[[["cfbundle",3]],["option",4,[["cfurl",3]]]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["cfbundle",3],["cfstring",3]],["c_void",0]],[[["cfbundle",3]],["cfdictionary",3,[["cfstring",3],["cftype",3]]]],[[]],[[]],[[],["cfbundle",3]],[[["cfurl",3]],["option",4,[["cfbundle",3]]]],[[["cfbundle",3]],["option",4,[["pathbuf",3]]]],[[["cfbundle",3]],["option",4,[["cfurl",3]]]],[[["cfbundle",3]],["option",4,[["pathbuf",3]]]],[[["cfbundle",3]],["option",4,[["cfurl",3]]]],[[["",0]]],[[["cfbundleref",6]],["c_void",0]],[[["cfbundle",3]],["c_void",0]],[[["cfbundle",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cfbundleref",6]],["cfbundle",3]],[[["cfbundleref",6]],["cfbundle",3]],null,[[["__cfcharacterset",0],["cfrange",3]]],[[["__cfcharacterset",0],["__cfstring",0]]],[[["c_void",0],["__cfcharacterset",0]],["__cfdata",0]],[[["c_void",0],["__cfcharacterset",0]],["__cfcharacterset",0]],[[["c_void",0]],["__cfcharacterset",0]],[[["c_void",0],["__cfcharacterset",0]],["__cfcharacterset",0]],[[["c_void",0],["__cfdata",0]],["__cfcharacterset",0]],[[["c_void",0],["cfrange",3]],["__cfcharacterset",0]],[[["c_void",0],["__cfstring",0]],["__cfcharacterset",0]],[[["isize",0]],["__cfcharacterset",0]],[[],["usize",0]],[[["__cfcharacterset",0],["__cfcharacterset",0]]],[[["__cfcharacterset",0]]],[[["__cfcharacterset",0],["u16",0]],["u8",0]],null,null,[[["__cfcharacterset",0],["cfrange",3]]],[[["__cfcharacterset",0],["__cfstring",0]]],[[["__cfcharacterset",0],["__cfcharacterset",0]]],null,null,[[["cfcharacterset",3]],["cftyperef",6]],[[["cfcharacterset",3]],["cfcharactersetref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfcharacterset",3]],["cfcharacterset",3]],[[["",0],["",0]]],[[["cfcharacterset",3]]],[[["cfcharacterset",3],["cfcharacterset",3]],["bool",0]],[[["cfcharacterset",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["cfcharactersetref",6]],["c_void",0]],[[["cfcharacterset",3]],["c_void",0]],[[["cfcharacterset",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfcharactersetref",6]],["cfcharacterset",3]],[[["cfcharactersetref",6]],["cfcharacterset",3]],null,[[["c_void",0],["u8",0],["isize",0]],["__cfdata",0]],[[["c_void",0],["u8",0],["isize",0],["c_void",0]],["__cfdata",0]],[[["__cfdata",0]],["u8",0]],[[["__cfdata",0],["cfrange",3],["u8",0]]],[[["__cfdata",0]],["isize",0]],[[],["usize",0]],null,null,[[["cfdata",3]],["cftyperef",6]],[[["cfdata",3]],["cfdataref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfdata",3]]],[[["cfdata",3]],["cfdata",3]],[[["",0],["",0]]],[[["cfdata",3]]],[[["cfdata",3]]],[[["cfdata",3],["cfdata",3]],["bool",0]],[[["cfdata",3],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["",26,[["asref",8],["sync",8],["send",8]]]]]],["cfdata",3]],[[],["cfdata",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[["cfdata",3]],["cfindex",6]],[[["",0]]],[[["cfdataref",6]],["c_void",0]],[[["cfdata",3]],["c_void",0]],[[["cfdata",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cfdataref",6]],["cfdata",3]],[[["cfdataref",6]],["cfdata",3]],null,[[],["f64",0]],null,[[["__cfdate",0],["__cfdate",0],["c_void",0]],["cfcomparisonresult",4]],[[["c_void",0],["f64",0]],["__cfdate",0]],[[["__cfdate",0]],["f64",0]],[[["__cfdate",0],["__cfdate",0]],["f64",0]],[[],["usize",0]],null,null,null,[[["cfdate",3]],["cfabsolutetime",6]],[[["cfdate",3]],["cftyperef",6]],[[["cfdate",3]],["cfdateref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfdate",3]],["cfdate",3]],[[["",0],["",0]]],[[["cfdate",3],["cfdate",3]],["ordering",4]],[[["cfdate",3]]],[[["cfdate",3],["cfdate",3]],["bool",0]],[[["cfdate",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],null,null,[[["cfabsolutetime",6]],["cfdate",3]],[[],["cfdate",3]],[[["cfdate",3],["cfdate",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["cfdateref",6]],["c_void",0]],[[["cfdate",3]],["c_void",0]],[[["cfdate",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfdateref",6]],["cfdate",3]],[[["cfdateref",6]],["cfdate",3]],null,[[["__cfdictionary",0],["c_void",0],["c_void",0]]],null,[[["__cfdictionary",0],["c_void",0]]],[[["__cfdictionary",0],["c_void",0]],["u8",0]],null,[[["c_void",0],["c_void",0],["c_void",0],["isize",0],["cfdictionarykeycallbacks",0],["cfdictionaryvaluecallbacks",0]],["__cfdictionary",0]],[[["c_void",0],["isize",0],["cfdictionarykeycallbacks",0],["cfdictionaryvaluecallbacks",0]],["__cfdictionary",0]],[[["c_void",0],["isize",0],["__cfdictionary",0]],["__cfdictionary",0]],null,[[["__cfdictionary",0]],["isize",0]],[[["__cfdictionary",0],["c_void",0],["c_void",0]]],[[],["usize",0]],[[["__cfdictionary",0],["c_void",0],["c_void",0]],["u8",0]],null,null,null,null,[[["__cfdictionary",0]]],[[["__cfdictionary",0],["c_void",0]]],[[["__cfdictionary",0],["c_void",0],["c_void",0]]],null,[[["__cfdictionary",0],["c_void",0],["c_void",0]]],null,null,null,null,[[["cfmutabledictionary",3],["",0],["",0]]],[[["cfdictionary",3]],["cftyperef",6]],[[["cfmutabledictionary",3]],["cftyperef",6]],[[["cfdictionary",3]],["cfdictionaryref",6]],[[["cfmutabledictionary",3]],["cfmutabledictionaryref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfdictionary",3]],["cfdictionary",3]],[[["cfmutabledictionary",3]],["cfmutabledictionary",3]],[[["cfdictionarykeycallbacks",3]],["cfdictionarykeycallbacks",3]],[[["cfdictionaryvaluecallbacks",3]],["cfdictionaryvaluecallbacks",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cfdictionary",3],["",0]],["bool",0]],[[["cfmutabledictionary",3],["c_void",0]],["bool",0]],null,null,[[["cfmutabledictionary",3],["isize",0]],["cfmutabledictionary",3]],[[],["cfmutabledictionary",3]],[[["cfdictionary",3]]],[[["cfmutabledictionary",3]]],[[["cfdictionary",3],["cfdictionary",3]],["bool",0]],[[["cfmutabledictionary",3],["cfmutabledictionary",3]],["bool",0]],null,null,[[["cfdictionary",3],["tovoid",8]],["option",4,[["itemref",3]]]],[[["cfmutabledictionary",3],["",0]],["option",4,[["itemref",3]]]],[[["cfdictionary",3],["formatter",3]],["result",6]],[[["cfmutabledictionary",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["cfdictionary",3]],["cfmutabledictionary",3]],[[]],[[]],[[],["cfdictionary",3]],[[],["cfmutabledictionary",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["cfdictionary",3],["tovoid",8]],["itemref",3]],[[["cfmutabledictionary",3],["",0]],["itemref",3]],[[["cfdictionary",3]]],[[["cfmutabledictionary",3]]],null,[[]],[[]],[[]],[[]],[[]],[[["cfdictionary",3]],["cfdictionary",3]],[[["cfmutabledictionary",3]],["cfmutabledictionary",3]],[[["cfdictionary",3]],["bool",0]],[[["cfmutabledictionary",3]],["bool",0]],null,null,[[["cfdictionary",3]],["usize",0]],[[["cfmutabledictionary",3]],["usize",0]],[[],["cfmutabledictionary",3]],null,null,[[["cfmutabledictionary",3]]],[[["cfmutabledictionary",3]]],[[["cfmutabledictionary",3]]],null,null,[[["cfmutabledictionary",3]]],[[["cfmutabledictionary",3]],["cfdictionary",3]],[[["cfdictionary",3]],["cfmutabledictionary",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["cfdictionary",3]],["cfdictionary",3]],[[["cfmutabledictionary",3]],["cfmutabledictionary",3]],[[["cfdictionaryref",6]],["c_void",0]],[[["cfmutabledictionaryref",6]],["c_void",0]],[[["cfdictionary",3]],["c_void",0]],[[["cfdictionary",3]],["c_void",0]],[[["cfmutabledictionary",3]],["c_void",0]],[[["cfmutabledictionary",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["isize",0]],["cfmutabledictionary",3]],[[["cfdictionaryref",6]],["cfdictionary",3]],[[["cfmutabledictionaryref",6]],["cfmutabledictionary",3]],[[["cfdictionaryref",6]],["cfdictionary",3]],[[["cfmutabledictionaryref",6]],["cfmutabledictionary",3]],null,[[["__cferror",0]],["__cfstring",0]],[[["__cferror",0]],["isize",0]],[[["__cferror",0]],["__cfstring",0]],[[],["usize",0]],null,null,[[["cferror",3]],["cftyperef",6]],[[["cferror",3]],["cferrorref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cferror",3]],["cferror",3]],[[["",0],["",0]]],[[["cferror",3]],["cfindex",6]],[[["cferror",3]],["cfstring",3]],[[["cferror",3]],["str",0]],[[["cferror",3]],["cfstring",3]],[[["cferror",3]]],[[["cferror",3],["cferror",3]],["bool",0]],[[["cferror",3],["formatter",3]],["result",6]],[[["cferror",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],null,null,null,null,[[["",0]]],[[["",0]],["string",3]],[[["cferrorref",6]],["c_void",0]],[[["cferror",3]],["c_void",0]],[[["cferror",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cferrorref",6]],["cferror",3]],[[["cferrorref",6]],["cferror",3]],null,null,null,[[["c_void",0],["i32",0],["u8",0],["cffiledescriptorcontext",0]],["__cffiledescriptor",0]],[[["c_void",0],["__cffiledescriptor",0],["isize",0]],["__cfrunloopsource",0]],[[["__cffiledescriptor",0],["usize",0]]],[[["__cffiledescriptor",0],["usize",0]]],[[["__cffiledescriptor",0],["cffiledescriptorcontext",0]]],[[["__cffiledescriptor",0]],["i32",0]],[[],["usize",0]],[[["__cffiledescriptor",0]]],[[["__cffiledescriptor",0]],["u8",0]],null,null,null,[[["cffiledescriptor",3]],["cftyperef",6]],[[["cffiledescriptor",3]],["cffiledescriptorref",6]],[[["cffiledescriptor",3]],["rawfd",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cffiledescriptorcontext",3]],["cffiledescriptorcontext",3]],[[["cffiledescriptor",3]],["cffiledescriptor",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cffiledescriptor",3]],["cffiledescriptorcontext",3]],null,[[["cffiledescriptor",3],["cfoptionflags",6]]],[[["cffiledescriptor",3]]],[[["cffiledescriptor",3],["cfoptionflags",6]]],[[["cffiledescriptor",3],["cffiledescriptor",3]],["bool",0]],[[]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],null,[[]],[[]],[[]],[[["cffiledescriptor",3]]],null,null,[[["rawfd",6],["bool",0],["cffiledescriptorcallback",6],["option",4,[["cffiledescriptorcontext",3]]]],["option",4,[["cffiledescriptor",3]]]],null,null,[[["",0]]],[[["",0]]],[[["cffiledescriptor",3],["cfindex",6]],["option",4,[["cfrunloopsource",3]]]],[[["cffiledescriptorref",6]],["c_void",0]],[[["cffiledescriptor",3]],["c_void",0]],[[["cffiledescriptor",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cffiledescriptor",3]],["bool",0]],null,[[["cffiledescriptorref",6]],["cffiledescriptor",3]],[[["cffiledescriptorref",6]],["cffiledescriptor",3]],null,null,null,[[["c_void",0],["__cfmachport",0],["isize",0]],["__cfrunloopsource",0]],[[],["usize",0]],null,null,null,[[["cfmachport",3]],["cftyperef",6]],[[["cfmachport",3]],["cfmachportref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfmachport",3]],["cfmachport",3]],[[["",0],["",0]]],[[["cfmachport",3],["cfindex",6]],["result",4,[["cfrunloopsource",3]]]],[[["cfmachport",3]]],[[["cfmachport",3],["cfmachport",3]],["bool",0]],[[["cfmachport",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[["",0]]],[[["cfallocatorref",6]],["c_void",0]],[[["cfmachportref",6]],["c_void",0]],[[["cfmachport",3]],["c_void",0]],[[["cfmachport",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cfmachportref",6]],["cfmachport",3]],[[["cfmachportref",6]],["cfmachport",3]],[[],["usize",0]],[[["__cfboolean",0]],["bool",0]],null,null,[[["__cfnumber",0],["__cfnumber",0],["c_void",0]],["cfcomparisonresult",4]],[[["c_void",0],["u32",0],["c_void",0]],["__cfnumber",0]],[[["__cfnumber",0]],["u32",0]],[[],["usize",0]],[[["__cfnumber",0],["u32",0],["c_void",0]],["bool",0]],null,null,null,null,[[["cfnumber",3]],["cftyperef",6]],[[["cfnumber",3]],["cfnumberref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfnumber",3]],["cfnumber",3]],[[["",0],["",0]]],[[["cfnumber",3],["cfnumber",3]],["ordering",4]],[[["cfnumber",3]]],[[["cfnumber",3],["cfnumber",3]],["bool",0]],[[["cfnumber",3],["formatter",3]],["result",6]],[[]],[[]],[[["i32",0]],["cfnumber",3]],[[["i64",0]],["cfnumber",3]],[[]],[[["f64",0]],["cfnumber",3]],[[["f32",0]],["cfnumber",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfnumber",3],["cfnumber",3]],["option",4,[["ordering",4]]]],[[["cfnumber",3]],["option",4,[["f32",0]]]],[[["cfnumber",3]],["option",4,[["f64",0]]]],[[["cfnumber",3]],["option",4,[["i32",0]]]],[[["cfnumber",3]],["option",4,[["i64",0]]]],[[["",0]]],[[["cfbooleanref",6]],["c_void",0]],[[["cfnumberref",6]],["c_void",0]],[[["cfnumber",3]],["c_void",0]],[[["cfnumber",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfnumberref",6]],["cfnumber",3]],[[["cfnumberref",6]],["cfnumber",3]],null,[[["c_void",0],["c_void",0],["isize",0],["usize",0],["__cferror",0]],["__cfdata",0]],[[["c_void",0],["__cfdata",0],["usize",0],["isize",0],["__cferror",0]],["c_void",0]],null,null,null,null,[[["cfpropertylist",3]],["cftype",3]],[[["cfpropertylist",3]],["cftyperef",6]],[[["cfpropertylist",3]],["cfpropertylistref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfpropertylist",3]],["cfpropertylist",3]],[[["",0],["",0]]],[[["c_void",0],["cfpropertylistformat",6]],["result",4,[["cfdata",3],["cferror",3]]]],[[["cfdata",3],["cfpropertylistmutabilityoptions",6]],["result",4,[["cferror",3]]]],[[["cfpropertylist",3]],["option",4,[["cfpropertylistsubclass",8]]]],[[["cfpropertylist",3]],["option",4,[["cfpropertylistsubclass",8]]]],[[["cfpropertylist",3]]],[[["cfpropertylist",3],["cfpropertylist",3]],["bool",0]],[[["cfpropertylist",3],["formatter",3]],["result",6]],[[]],[[["cfpropertylist",3]],["bool",0]],[[]],[[],["cfpropertylist",3]],[[["cfpropertylist",3]],["cftype",3]],null,null,null,null,null,null,[[["cfpropertylist",3]],["cfindex",6]],[[["cfpropertylist",3]]],[[["",0]],["cfpropertylist",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["cfpropertylist",3]],["cftypeid",6]],[[["cfpropertylistref",6]],["cfpropertylist",3]],[[["cfpropertylistref",6]],["cfpropertylist",3]],null,null,[[["__cfrunloop",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunloopobserver",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunloopsource",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunlooptimer",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunloopobserver",0],["__cfstring",0]],["u8",0]],[[["__cfrunloop",0],["__cfrunloopsource",0],["__cfstring",0]],["u8",0]],[[["__cfrunloop",0],["__cfrunlooptimer",0],["__cfstring",0]],["u8",0]],[[["__cfrunloop",0]],["__cfarray",0]],[[["__cfrunloop",0]],["__cfstring",0]],[[],["__cfrunloop",0]],[[],["__cfrunloop",0]],[[["__cfrunloop",0],["__cfstring",0]],["f64",0]],[[],["usize",0]],[[["__cfrunloop",0]],["u8",0]],null,null,null,null,[[["c_void",0],["usize",0],["u8",0],["isize",0],["cfrunloopobservercontext",0]],["__cfrunloopobserver",0]],[[["__cfrunloopobserver",0]],["u8",0]],[[["__cfrunloopobserver",0]],["usize",0]],[[["__cfrunloopobserver",0],["cfrunloopobservercontext",0]]],[[["__cfrunloopobserver",0]],["isize",0]],[[],["usize",0]],[[["__cfrunloopobserver",0]]],[[["__cfrunloopobserver",0]],["u8",0]],null,null,[[["__cfrunloop",0],["__cfrunloopobserver",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunloopsource",0],["__cfstring",0]]],[[["__cfrunloop",0],["__cfrunlooptimer",0],["__cfstring",0]]],[[]],[[["__cfstring",0],["f64",0],["u8",0]],["i32",0]],null,null,null,null,[[["c_void",0],["isize",0],["cfrunloopsourcecontext",0]],["__cfrunloopsource",0]],[[["__cfrunloopsource",0],["cfrunloopsourcecontext",0]]],[[["__cfrunloopsource",0]],["isize",0]],[[],["usize",0]],[[["__cfrunloopsource",0]]],[[["__cfrunloopsource",0]],["u8",0]],null,[[["__cfrunloopsource",0]]],[[["__cfrunloop",0]]],null,null,null,[[["c_void",0],["f64",0],["f64",0],["usize",0],["isize",0],["cfrunlooptimercontext",0]],["__cfrunlooptimer",0]],[[["__cfrunlooptimer",0]],["u8",0]],[[["__cfrunlooptimer",0],["cfrunlooptimercontext",0]]],[[["__cfrunlooptimer",0]],["f64",0]],[[["__cfrunlooptimer",0]],["f64",0]],[[["__cfrunlooptimer",0]],["isize",0]],[[["__cfrunlooptimer",0]],["f64",0]],[[],["usize",0]],[[["__cfrunlooptimer",0]]],[[["__cfrunlooptimer",0]],["u8",0]],null,[[["__cfrunlooptimer",0],["f64",0]]],[[["__cfrunlooptimer",0],["f64",0]]],[[["__cfrunloop",0]]],null,null,null,null,null,null,null,null,[[["cfrunloop",3],["cfrunloopobserver",3],["cfrunloopmode",6]]],[[["cfrunloop",3],["cfrunloopsource",3],["cfrunloopmode",6]]],[[["cfrunloop",3],["cfrunlooptimer",3],["cfrunloopmode",6]]],[[["cfrunloop",3]],["cftyperef",6]],[[["cfrunlooptimer",3]],["cftyperef",6]],[[["cfrunloopsource",3]],["cftyperef",6]],[[["cfrunloopobserver",3]],["cftyperef",6]],[[["cfrunloop",3]],["cfrunloopref",6]],[[["cfrunlooptimer",3]],["cfrunlooptimerref",6]],[[["cfrunloopsource",3]],["cfrunloopsourceref",6]],[[["cfrunloopobserver",3]],["cfrunloopobserverref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["cfrunloop",3]],["cfrunloop",3]],[[["cfrunlooprunresult",4]],["cfrunlooprunresult",4]],[[["cfrunlooptimer",3]],["cfrunlooptimer",3]],[[["cfrunloopsource",3]],["cfrunloopsource",3]],[[["cfrunloopobserver",3]],["cfrunloopobserver",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cfrunloop",3],["cfrunloopobserver",3],["cfrunloopmode",6]],["bool",0]],[[["cfrunloop",3],["cfrunloopsource",3],["cfrunloopmode",6]],["bool",0]],[[["cfrunloop",3],["cfrunlooptimer",3],["cfrunloopmode",6]],["bool",0]],null,null,null,null,[[["cfrunloop",3]],["option",4,[["string",3]]]],[[["cfrunloop",3]]],[[["cfrunlooptimer",3]]],[[["cfrunloopsource",3]]],[[["cfrunloopobserver",3]]],[[["cfrunloop",3],["cfrunloop",3]],["bool",0]],[[["cfrunlooprunresult",4],["cfrunlooprunresult",4]],["bool",0]],[[["cfrunlooptimer",3],["cfrunlooptimer",3]],["bool",0]],[[["cfrunloopsource",3],["cfrunloopsource",3]],["bool",0]],[[["cfrunloopobserver",3],["cfrunloopobserver",3]],["bool",0]],null,null,[[["cfrunloop",3],["formatter",3]],["result",6]],[[["cfrunlooprunresult",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cffiledescriptor",3],["cfindex",6]],["option",4,[["cfrunloopsource",3]]]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],null,[[],["cfrunloop",3]],[[],["cfrunloop",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfabsolutetime",6],["cftimeinterval",6],["cfoptionflags",6],["cfindex",6],["cfrunlooptimercallback",6],["cfrunlooptimercontext",0]],["cfrunlooptimer",3]],null,null,null,null,null,null,[[["cfrunloop",3],["cfrunloopobserver",3],["cfrunloopmode",6]]],[[["cfrunloop",3],["cfrunloopsource",3],["cfrunloopmode",6]]],[[["cfrunloop",3],["cfrunlooptimer",3],["cfrunloopmode",6]]],null,null,null,null,[[]],[[["cfstringref",6],["duration",3],["bool",0]],["cfrunlooprunresult",4]],null,[[["cfrunloop",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["cfrunloopref",6]],["c_void",0]],[[["cfrunloopsourceref",6]],["c_void",0]],[[["cfrunloopobserverref",6]],["c_void",0]],[[["cfrunlooptimerref",6]],["c_void",0]],[[["cfrunloop",3]],["c_void",0]],[[["cfrunloop",3]],["c_void",0]],[[["cfrunlooptimer",3]],["c_void",0]],[[["cfrunlooptimer",3]],["c_void",0]],[[["cfrunloopsource",3]],["c_void",0]],[[["cfrunloopsource",3]],["c_void",0]],[[["cfrunloopobserver",3]],["c_void",0]],[[["cfrunloopobserver",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],null,null,null,null,[[["cfrunloopref",6]],["cfrunloop",3]],[[["cfrunlooptimerref",6]],["cfrunlooptimer",3]],[[["cfrunloopsourceref",6]],["cfrunloopsource",3]],[[["cfrunloopobserverref",6]],["cfrunloopobserver",3]],[[["cfrunloopref",6]],["cfrunloop",3]],[[["cfrunlooptimerref",6]],["cfrunlooptimer",3]],[[["cfrunloopsourceref",6]],["cfrunloopsource",3]],[[["cfrunloopobserverref",6]],["cfrunloopobserver",3]],null,null,[[["__cfset",0],["c_void",0]]],null,[[["__cfset",0],["c_void",0]],["u8",0]],null,[[["c_void",0],["c_void",0],["isize",0],["cfsetcallbacks",0]],["__cfset",0]],[[["c_void",0],["__cfset",0]],["__cfset",0]],null,[[["__cfset",0]],["isize",0]],[[["__cfset",0],["c_void",0]],["isize",0]],[[],["usize",0]],[[["__cfset",0],["c_void",0]],["c_void",0]],[[["__cfset",0],["c_void",0],["c_void",0]],["u8",0]],[[["__cfset",0],["c_void",0]]],null,null,null,null,null,[[["cfset",3]],["cftyperef",6]],[[["cfset",3]],["cfsetref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfset",3]],["cfset",3]],[[["cfsetcallbacks",3]],["cfsetcallbacks",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["cfset",3]]],[[["cfset",3],["cfset",3]],["bool",0]],null,[[["cfset",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[],["cfset",3]],[[["c_void",0]],["itemref",3]],null,[[]],[[]],[[]],null,[[["cfset",3]],["usize",0]],null,null,[[["",0]]],[[["",0]]],[[["cfset",3]],["c_void",0]],[[["cfset",3]],["c_void",0]],[[["cfsetref",6]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["cfsetref",6]],["cfset",3]],[[["cfsetref",6]],["cfset",3]],null,null,[[["c_void",0],["u8",0],["isize",0],["u32",0],["u8",0]],["__cfstring",0]],[[["c_void",0],["u8",0],["isize",0],["u32",0],["u8",0],["c_void",0]],["__cfstring",0]],[[["c_void",0],["i8",0],["u32",0]],["__cfstring",0]],[[["c_void",0],["u16",0],["isize",0],["c_void",0]],["__cfstring",0]],null,null,[[["__cfstring",0],["cfrange",3],["u32",0],["u8",0],["u8",0],["u8",0],["isize",0],["isize",0]],["isize",0]],[[["__cfstring",0],["i8",0],["isize",0],["u32",0]],["u8",0]],[[["__cfstring",0],["u32",0]],["i8",0]],[[["__cfstring",0]],["isize",0]],[[],["usize",0]],null,null,null,[[["cfstring",3]],["cftyperef",6]],[[["cfstring",3]],["cfstringref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfstring",3]],["cfindex",6]],[[["cfstring",3]],["cfstring",3]],[[["",0],["",0]]],[[["cfstring",3]]],[[["cfstring",3],["str",0]],["bool",0]],[[["cfstring",3],["string",3]],["bool",0]],[[["cfstring",3],["cfstring",3]],["bool",0]],[[["cfstring",3],["formatter",3]],["result",6]],[[["cfstring",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["cfstring",3]],[[["c_void",0]],["itemmutref",3]],[[["str",0]],["cfstring",3]],[[["str",0]],["result",4,[["cfstring",3]]]],[[["c_void",0]],["itemref",3]],[[]],[[]],null,[[["str",0]],["cfstring",3]],[[["",0]]],[[["",0]],["string",3]],[[["cfstringref",6]],["c_void",0]],[[["cfstring",3]],["c_void",0]],[[["cfstring",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfstringref",6]],["cfstring",3]],[[["cfstringref",6]],["cfstring",3]],null,[[],["__cftimezone",0]],[[],["__cftimezone",0]],[[["c_void",0],["f64",0]],["__cftimezone",0]],[[["__cftimezone",0]],["__cfstring",0]],[[["__cftimezone",0],["f64",0]],["f64",0]],[[],["usize",0]],null,null,[[["cftimezone",3]],["cftyperef",6]],[[["cftimezone",3]],["cftimezoneref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cftimezone",3]],["cftimezone",3]],[[["",0],["",0]]],[[],["cftimezone",3]],[[["cftimezone",3]]],[[["cftimezone",3],["cftimezone",3]],["bool",0]],[[["cftimezone",3],["formatter",3]],["result",6]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[["cftimezone",3]],["cfstring",3]],[[["cftimeinterval",6]],["cftimezone",3]],[[["cftimezone",3],["cfdate",3]],["cftimeinterval",6]],[[],["cftimezone",3]],[[["",0]]],[[["cftimezoneref",6]],["c_void",0]],[[["cftimezone",3]],["c_void",0]],[[["cftimezone",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cftimezoneref",6]],["cftimezone",3]],[[["cftimezoneref",6]],["cftimezone",3]],null,null,null,null,[[["__cfurl",0]],["u8",0]],[[["__cfurl",0]]],[[["__cfurl",0]],["__cfurl",0]],[[["__cfurl",0],["isize",0]],["__cfstring",0]],[[["__cfurl",0],["__cfstring",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0],["__cfstring",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0],["__cfstring",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["__cfurl",0],["u8",0]],["__cfstring",0]],[[["__cfurl",0]],["__cfstring",0]],[[["c_void",0],["u8",0],["isize",0],["u32",0],["__cfurl",0],["u8",0]],["__cfurl",0]],[[["c_void",0],["__cfurl",0],["usize",0],["__cfarray",0],["__cfurl",0],["__cferror",0]],["__cfdata",0]],[[["c_void",0],["__cfdata",0]],["__cfdata",0]],[[["c_void",0],["__cfurl",0],["__cferror",0]],["__cfdata",0]],[[["c_void",0],["__cfdata",0],["usize",0],["__cfurl",0],["__cfarray",0],["u8",0],["__cferror",0]],["__cfurl",0]],[[["c_void",0],["__cfurl",0],["__cferror",0]],["__cfurl",0]],[[["c_void",0],["u8",0],["isize",0],["u8",0]],["__cfurl",0]],[[["c_void",0],["__cfarray",0],["__cfdata",0]],["__cfdictionary",0]],[[["c_void",0],["__cfstring",0],["__cfdata",0]],["c_void",0]],[[["c_void",0],["u8",0],["isize",0],["u32",0],["__cfurl",0]],["__cfurl",0]],[[["c_void",0],["__cfstring",0],["isize",0],["u8",0]],["__cfurl",0]],[[["c_void",0],["__cfstring",0],["isize",0],["u8",0],["__cfurl",0]],["__cfurl",0]],[[["__cfurl",0],["u8",0],["isize",0]],["isize",0]],[[["__cfurl",0],["u8",0],["u8",0],["isize",0]],["u8",0]],[[["__cfurl",0]],["i32",0]],[[["__cfurl",0]],["__cfstring",0]],[[],["usize",0]],[[["__cfurl",0]],["u8",0]],null,null,[[["__cfurl",0],["__cfstring",0],["c_void",0],["__cferror",0]],["u8",0]],[[["__cfurl",0]],["u8",0]],[[["__cfurl",0]]],[[["__cfdata",0],["__cfurl",0],["usize",0],["__cferror",0]],["u8",0]],null,[[["cfurl",3]],["cfurl",3]],[[["cfurl",3]],["cftyperef",6]],[[["cfurl",3]],["cfurlref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfurl",3]],["cfurl",3]],[[["",0],["",0]]],[[["cfurl",3]]],[[["cfurl",3],["cfurl",3]],["bool",0]],[[["cfurl",3],["formatter",3]],["result",6]],[[]],[[]],[[["cfstring",3],["cfurlpathstyle",6],["bool",0]],["cfurl",3]],[[["c_void",0]],["itemmutref",3]],[[["asref",8,[["path",3]]],["bool",0]],["option",4,[["cfurl",3]]]],[[["c_void",0]],["itemref",3]],[[["cfurl",3],["cfurlpathstyle",6]],["cfstring",3]],[[["cfurl",3]],["cfstring",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["cfurl",3]],["option",4,[["pathbuf",3]]]],[[["cfurlref",6]],["c_void",0]],[[["cfurl",3]],["c_void",0]],[[["cfurl",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfurlref",6]],["cfurl",3]],[[["cfurlref",6]],["cfurl",3]],null,null,[[["c_void",0]],["__cfuuid",0]],[[["c_void",0],["cfuuidbytes",3]],["__cfuuid",0]],[[],["usize",0]],[[["__cfuuid",0]],["cfuuidbytes",3]],null,null,[[["cfuuid",3]],["cftyperef",6]],[[["cfuuid",3]],["cfuuidref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfuuidbytes",3]],["cfuuidbytes",3]],[[["cfuuid",3]],["cfuuid",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["cfuuidbytes",3]],[[],["cfuuid",3]],[[["cfuuid",3]]],[[["cfuuid",3],["cfuuid",3]],["bool",0]],[[["cfuuid",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[]],[[]],[[],["cfuuid",3]],[[["",0]]],[[["",0]]],[[["cfuuidref",6]],["c_void",0]],[[["cfuuid",3]],["c_void",0]],[[["cfuuid",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cfuuidref",6]],["cfuuid",3]],[[["cfuuidref",6]],["cfuuid",3]]],"p":[[3,"CFArray"],[3,"__CFArray"],[3,"CFArrayIterator"],[3,"CFArrayCallBacks"],[6,"CFArrayRef"],[3,"CFAttributedString"],[3,"CFMutableAttributedString"],[3,"__CFAttributedString"],[6,"CFAttributedStringRef"],[6,"CFMutableAttributedStringRef"],[4,"CFComparisonResult"],[8,"TCFType"],[3,"CFAllocatorContext"],[3,"CFType"],[3,"CFAllocator"],[8,"TCFTypeRef"],[3,"ItemRef"],[3,"ItemMutRef"],[3,"CFRange"],[8,"FromMutVoid"],[8,"FromVoid"],[8,"CFIndexConvertible"],[8,"ToVoid"],[6,"CFTypeRef"],[3,"CFBoolean"],[3,"CFBundle"],[3,"__CFBundle"],[6,"CFBundleRef"],[3,"CFCharacterSet"],[3,"__CFCharacterSet"],[6,"CFCharacterSetRef"],[3,"CFData"],[3,"__CFData"],[6,"CFDataRef"],[3,"CFDate"],[3,"__CFDate"],[6,"CFDateRef"],[3,"CFMutableDictionary"],[3,"CFDictionary"],[3,"__CFDictionary"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[6,"CFDictionaryRef"],[6,"CFMutableDictionaryRef"],[3,"CFError"],[3,"__CFError"],[6,"CFErrorRef"],[3,"CFFileDescriptor"],[3,"__CFFileDescriptor"],[3,"CFFileDescriptorContext"],[6,"CFFileDescriptorRef"],[3,"CFMachPort"],[3,"__CFMachPort"],[6,"CFAllocatorRef"],[6,"CFMachPortRef"],[3,"CFNumber"],[3,"__CFBoolean"],[4,"__CFNumber"],[6,"CFBooleanRef"],[6,"CFNumberRef"],[3,"CFPropertyList"],[8,"CFPropertyListSubClass"],[4,"CFRunLoopRunResult"],[3,"CFRunLoop"],[3,"CFRunLoopTimer"],[3,"CFRunLoopSource"],[3,"CFRunLoopObserver"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"__CFRunLoopTimer"],[6,"CFRunLoopRef"],[6,"CFRunLoopSourceRef"],[6,"CFRunLoopObserverRef"],[6,"CFRunLoopTimerRef"],[3,"CFSet"],[3,"__CFSet"],[3,"CFSetCallBacks"],[6,"CFSetRef"],[3,"CFString"],[3,"__CFString"],[6,"CFStringRef"],[3,"CFTimeZone"],[3,"__CFTimeZone"],[6,"CFTimeZoneRef"],[3,"CFURL"],[3,"__CFURL"],[6,"CFURLRef"],[3,"CFUUID"],[3,"__CFUUID"],[3,"CFUUIDBytes"],[6,"CFUUIDRef"]]},\
"core_foundation_sys":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,5,6,5,5,5,5,6,6,6,3,11,11,11,11,11,11,12,12,11,11,11,11,7,12,12,11,11,11,11,11,11,11,12,5,5,5,5,5,6,5,5,6,3,11,11,11,11,11,11,11,6,5,6,3,6,5,5,6,5,5,5,5,6,5,6,6,6,6,5,4,5,5,5,5,5,6,6,6,6,3,5,5,5,6,6,13,13,13,6,6,8,12,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,10,12,11,11,11,11,11,7,7,7,7,7,7,7,7,12,12,6,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,6,3,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,6,5,5,5,5,5,5,6,6,3,11,11,11,11,7,7,11,11,11,5,6,5,5,6,5,5,5,6,5,5,5,5,6,3,6,6,5,5,5,6,5,3,6,3,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,7,7,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,6,3,11,11,11,11,7,7,7,7,11,11,11,6,3,5,5,5,5,5,5,5,5,5,6,6,3,11,11,11,11,11,11,12,11,11,12,11,11,17,17,12,12,11,11,11,11,11,11,11,12,2,2,5,5,6,2,3,11,11,11,11,11,11,11,6,3,5,5,5,5,5,5,5,5,6,5,5,6,5,5,5,3,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,12,5,5,6,5,5,5,5,5,6,6,3,4,11,11,11,11,11,11,11,11,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,5,5,6,6,6,17,17,17,17,17,17,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,3,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,3,3,5,5,5,5,5,5,6,5,5,6,3,5,5,5,5,5,5,5,5,5,5,6,5,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,17,17,17,17,17,7,7,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,6,5,3,5,6,5,5,6,5,5,5,5,5,5,6,6,6,6,3,11,11,11,11,11,11,12,12,11,11,12,11,11,7,12,12,11,11,11,11,11,11,11,12,6,5,5,5,5,6,6,5,5,5,5,5,6,6,3,11,11,11,11,7,11,11,11,5,5,5,5,5,5,6,3,11,11,11,11,11,11,11,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,3,11,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,17,11,11,11,3,5,5,5,5,6,3,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["array","attributed_string","base","bundle","characterset","data","date","dictionary","error","filedescriptor","mach_port","messageport","number","propertylist","runloop","set","string","timezone","url","uuid","CFArrayCallBacks","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayEqualCallBack","CFArrayGetCount","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayRef","CFArrayReleaseCallBack","CFArrayRetainCallBack","__CFArray","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","into","into","kCFTypeArrayCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedStringRef","__CFAttributedString","borrow","borrow_mut","from","into","try_from","try_into","type_id","Boolean","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFTypeID","CFTypeRef","EqualTo","GreaterThan","LessThan","OSStatus","SInt32","TCFTypeRef","allocate","as_void_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","copyDescription","deallocate","eq","fmt","from","from","from","from_void_ptr","info","init","into","into","into","into","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","preferredSize","reallocate","release","retain","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","borrow","borrow_mut","from","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","try_from","try_into","type_id","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","borrow","borrow_mut","from","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","try_from","try_into","type_id","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionaryRef","__CFDictionary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","copyDescription","equal","equal","from","from","from","hash","into","into","into","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","release","release","retain","retain","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","borrow","borrow_mut","from","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","try_from","try_into","type_id","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","from","from","info","into","into","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAllocatorRef","CFIndex","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFMessagePortCallBack","CFMessagePortContext","CFMessagePortCreateLocal","CFMessagePortCreateRemote","CFMessagePortCreateRunLoopSource","CFMessagePortGetContext","CFMessagePortGetInvalidationCallBack","CFMessagePortGetName","CFMessagePortGetTypeID","CFMessagePortInvalidate","CFMessagePortInvalidationCallBack","CFMessagePortIsRemote","CFMessagePortIsValid","CFMessagePortRef","CFMessagePortSendRequest","CFMessagePortSetInvalidationCallBack","CFMessagePortSetName","__CFMessagePort","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","fmt","from","from","info","into","into","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","try_from","try_from","try_into","try_into","type_id","type_id","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","copyDescription","copyDescription","copyDescription","copyDescription","equal","equal","from","from","from","from","from","from","from","from","getPort","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","perform","perform","release","release","release","release","retain","retain","retain","retain","schedule","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","hash","into","into","kCFTypeSetCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","borrow","borrow_mut","from","into","kCFStringEncodingUTF8","try_from","try_into","type_id","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","borrow","borrow_mut","from","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","try_from","try_into","type_id","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","borrow","borrow","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone_into","default","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["core_foundation_sys","","","","","","","","","","","","","","","","","","","","core_foundation_sys::array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::attributed_string","","","","","","","","","","","","","","","","","core_foundation_sys::base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::bundle","","","","","","","","","","","","","","","","","","","","core_foundation_sys::characterset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::data","","","","","","","","","","","","","","","core_foundation_sys::date","","","","","","","","","","","","","","","","","","","core_foundation_sys::dictionary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::error","","","","","","","","","","","","","","","","","core_foundation_sys::filedescriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::mach_port","","","","","","","","","","","","","","core_foundation_sys::messageport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::propertylist","","","","","","","","","","","core_foundation_sys::runloop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::string","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::timezone","","","","","","","","","","","","","","","core_foundation_sys::url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_foundation_sys::uuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for all types which are Core Foundation reference …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,2,2,2,2,1,2,1,2,0,2,2,2,1,2,1,2,1,2,2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,5,6,4,7,5,4,7,5,4,7,5,4,7,5,5,5,4,4,4,7,5,6,5,7,4,4,7,5,0,0,0,0,0,0,0,0,7,7,0,5,5,5,5,4,7,5,4,7,5,4,7,5,4,7,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,14,12,13,14,13,14,13,14,13,14,13,14,12,13,14,13,12,13,14,0,0,13,14,13,14,13,14,12,13,14,12,13,14,12,13,14,13,14,0,0,0,0,0,0,15,15,15,15,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,16,17,17,17,17,16,17,17,16,17,0,0,17,17,17,16,17,16,17,16,17,17,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,19,20,20,20,20,20,19,20,20,19,20,20,20,20,19,20,19,20,19,20,20,0,0,0,0,0,0,0,0,0,0,0,0,21,22,21,22,21,22,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,21,22,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,27,28,29,30,23,24,25,26,27,28,29,30,26,26,27,28,29,26,27,23,24,25,26,27,28,29,30,27,26,27,26,27,28,29,23,24,25,26,27,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,26,27,26,27,28,29,26,27,28,29,26,23,24,25,26,27,28,29,30,23,24,25,26,27,28,29,30,23,24,25,26,27,28,29,30,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,32,31,32,32,32,32,32,31,32,32,31,32,0,32,32,32,31,32,31,32,31,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,0,33,33,33,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,0,0,0,0,0,0,0,36,37,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,36,37,36,37,37,36,37,36,37,36,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfarraycallbacks",3]],["cfarraycallbacks",3]],[[["",0],["",0]]],null,null,[[]],[[]],[[]],[[]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["c_void",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfcomparisonresult",4]],["cfcomparisonresult",4]],[[["cfrange",3]],["cfrange",3]],[[["cfallocatorcontext",3]],["cfallocatorcontext",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["cfcomparisonresult",4],["cfcomparisonresult",4]],["bool",0]],[[["cfcomparisonresult",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["c_void",0]]],null,[[["cfindex",6],["cfindex",6]],["cfrange",3]],[[["cfcomparisonresult",4]],["ordering",4]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfdictionarykeycallbacks",3]],["cfdictionarykeycallbacks",3]],[[["cfdictionaryvaluecallbacks",3]],["cfdictionaryvaluecallbacks",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cffiledescriptorcontext",3]],["cffiledescriptorcontext",3]],[[["",0],["",0]]],null,[[]],[[]],null,[[]],[[]],null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfmessageportcontext",3]],["cfmessageportcontext",3]],[[["",0],["",0]]],null,[[["cfmessageportcontext",3],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cfsetcallbacks",3]],["cfsetcallbacks",3]],[[["",0],["",0]]],null,null,[[]],[[]],null,[[]],[[]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfuuidbytes",3]],["cfuuidbytes",3]],[[["",0],["",0]]],[[],["cfuuidbytes",3]],[[]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"__CFArray"],[3,"CFArrayCallBacks"],[3,"__CFAttributedString"],[4,"CFComparisonResult"],[3,"CFAllocatorContext"],[8,"TCFTypeRef"],[3,"CFRange"],[3,"__CFBundle"],[3,"__CFCharacterSet"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"CFFileDescriptorContext"],[3,"__CFMachPort"],[3,"__CFMessagePort"],[3,"CFMessagePortContext"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"__CFRunLoopTimer"],[3,"__CFSet"],[3,"CFSetCallBacks"],[3,"__CFString"],[3,"__CFTimeZone"],[3,"__CFURL"],[3,"__CFUUID"],[3,"CFUUIDBytes"]]},\
"core_graphics":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,4,3,3,4,13,13,13,13,13,4,13,13,13,4,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,6,3,6,6,6,6,6,6,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,3,5,5,6,3,5,6,6,5,6,5,5,5,5,5,5,5,4,6,3,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,3,3,7,7,3,5,6,6,5,5,5,6,13,13,13,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,13,18,3,6,18,18,18,18,18,18,18,18,18,18,3,6,3,3,6,4,4,4,6,4,6,4,6,18,18,13,18,18,13,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,18,13,18,13,18,18,18,3,13,13,18,18,13,13,13,13,13,18,18,18,18,18,18,18,18,18,18,18,13,13,18,13,13,13,18,18,18,18,18,18,18,18,18,13,13,13,13,18,18,18,18,18,18,18,18,18,18,3,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,13,13,13,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,17,17,17,17,12,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,3,3,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,3,3,4,3,13,13,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,5,5,5,5,5,6,6,5,5,5,5,5,17,7,7,17,17,17,7,17,17,17,17,17,17,7,7,17,17,17,17,17,17,7,7,7,7,7,17,17,17,7,7,7],"n":["base","color","color_space","context","data_provider","display","event","event_source","font","geometry","gradient","image","path","private","sys","window","CGError","CGFloat","CGGlyph","boolean_t","kCGBitmapByteOrder16Big","kCGBitmapByteOrder16Host","kCGBitmapByteOrder16Little","kCGBitmapByteOrder32Big","kCGBitmapByteOrder32Host","kCGBitmapByteOrder32Little","kCGBitmapByteOrderDefault","kCGImageAlphaFirst","kCGImageAlphaLast","kCGImageAlphaNone","kCGImageAlphaNoneSkipFirst","kCGImageAlphaNoneSkipLast","kCGImageAlphaPremultipliedFirst","kCGImageAlphaPremultipliedLast","kCGRenderingIntentAbsoluteColorimetric","kCGRenderingIntentDefault","kCGRenderingIntentPerceptual","kCGRenderingIntentRelativeColorimetric","kCGRenderingIntentSaturation","CGColor","SysCGColorRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","from","from_mut_void","from_void","into","rgb","to_owned","to_void","to_void","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CGColorSpace","CGColorSpaceRef","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_device_gray","create_device_rgb","create_with_name","deref","deref_mut","drop","from","from","into","into","kCGColorSpaceAdobeRGB1998","kCGColorSpaceGenericCMYK","kCGColorSpaceGenericGray","kCGColorSpaceGenericGrayGamma2_2","kCGColorSpaceGenericRGB","kCGColorSpaceGenericRGBLinear","kCGColorSpaceSRGB","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGBlendMode","CGContext","CGContextRef","CGInterpolationQuality","CGInterpolationQualityDefault","CGInterpolationQualityHigh","CGInterpolationQualityLow","CGInterpolationQualityMedium","CGInterpolationQualityNone","CGLineCap","CGLineCapButt","CGLineCapRound","CGLineCapSquare","CGLineJoin","CGLineJoinBevel","CGLineJoinMiter","CGLineJoinRound","CGPathDrawingMode","CGPathEOFill","CGPathEOFillStroke","CGPathFill","CGPathFillStroke","CGPathStroke","CGTextClip","CGTextDrawingMode","CGTextFill","CGTextFillClip","CGTextFillStroke","CGTextFillStrokeClip","CGTextInvisible","CGTextStroke","CGTextStrokeClip","Clear","Color","ColorBurn","ColorDodge","Copy","Darken","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","Difference","Exclusion","HardLight","Hue","Lighten","Luminosity","Multiply","Normal","Overlay","PlusDarker","PlusLighter","Saturation","Screen","SoftLight","SourceAtop","SourceIn","SourceOut","Xor","add_curve_to_point","add_line_to_point","add_path","add_quad_curve_to_point","as_ref","begin_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clear_rect","clip","clip_bounding_box","clip_to_mask","clip_to_rect","clip_to_rects","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_path","concat_ctm","create_bitmap_context","create_image","data","deref","deref_mut","draw_image","draw_linear_gradient","draw_path","draw_radial_gradient","drop","eo_clip","eo_fill_path","fill_ellipse_in_rect","fill_path","fill_rect","fill_rects","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_existing_context_ptr","get_ctm","get_interpolation_quality","height","into","into","into","into","into","into","into","into","move_to_point","replace_path_with_stroked_path","restore","rotate","save","scale","set_allows_antialiasing","set_allows_font_smoothing","set_allows_font_subpixel_positioning","set_allows_font_subpixel_quantization","set_blend_mode","set_fill_color","set_font","set_font_size","set_font_smoothing_style","set_gray_fill_color","set_interpolation_quality","set_line_cap","set_line_dash","set_line_join","set_line_width","set_miter_limit","set_rgb_fill_color","set_rgb_stroke_color","set_shadow","set_shadow_with_color","set_should_antialias","set_should_smooth_fonts","set_should_subpixel_position_fonts","set_should_subpixel_quantize_fonts","set_text_drawing_mode","set_text_matrix","set_text_position","show_glyphs_at_positions","stroke_ellipse_in_rect","stroke_line_segments","stroke_path","stroke_rect","stroke_rect_with_width","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","CGDataProvider","CGDataProviderGetBytePointerCallback","CGDataProviderGetBytesAtOffsetCallback","CGDataProviderGetBytesAtPositionCallback","CGDataProviderGetBytesCallback","CGDataProviderRef","CGDataProviderReleaseBytePointerCallback","CGDataProviderReleaseDataCallback","CGDataProviderReleaseInfoCallback","CGDataProviderRewindCallback","CGDataProviderSkipBytesCallback","CGDataProviderSkipForwardCallback","CustomData","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_data","deref","deref_mut","drop","from","from","from_buffer","from_custom_data","from_slice","into","into","len","ptr","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CFArray","CFArrayGetCount","CFArrayGetValueAtIndex","CFArrayRef","CFDictionary","CFDictionaryGetValueIfPresent","CFDictionaryRef","CFIndex","CFRelease","CFTypeRef","CGAssociateMouseAndMouseCursorPosition","CGBeginDisplayConfiguration","CGCancelDisplayConfiguration","CGCompleteDisplayConfiguration","CGConfigureDisplayMirrorOfDisplay","CGConfigureDisplayOrigin","CGConfigureDisplayWithDisplayMode","CGConfigureOption","CGDirectDisplayID","CGDisplay","CGDisplayBounds","CGDisplayConfigRef","CGDisplayCopyAllDisplayModes","CGDisplayCopyDisplayMode","CGDisplayCreateImage","CGDisplayHideCursor","CGDisplayIsActive","CGDisplayIsAlwaysInMirrorSet","CGDisplayIsAsleep","CGDisplayIsBuiltin","CGDisplayIsInHWMirrorSet","CGDisplayIsInMirrorSet","CGDisplayIsMain","CGDisplayIsOnline","CGDisplayIsStereo","CGDisplayMirrorsDisplay","CGDisplayMode","CGDisplayModeCopyPixelEncoding","CGDisplayModeGetHeight","CGDisplayModeGetIODisplayModeID","CGDisplayModeGetIOFlags","CGDisplayModeGetPixelHeight","CGDisplayModeGetPixelWidth","CGDisplayModeGetRefreshRate","CGDisplayModeGetWidth","CGDisplayModeRef","CGDisplayModeRelease","CGDisplayModelNumber","CGDisplayMoveCursorToPoint","CGDisplayPixelsHigh","CGDisplayPixelsWide","CGDisplayPrimaryDisplay","CGDisplayRotation","CGDisplayScreenSize","CGDisplaySerialNumber","CGDisplayShowCursor","CGDisplayUnitNumber","CGDisplayUsesOpenGLAcceleration","CGDisplayVendorNumber","CGError","CGGetActiveDisplayList","CGGetDisplaysWithRect","CGMainDisplayID","CGPoint","CGRect","CGRectInfinite","CGRectNull","CGSize","CGWarpMouseCursorPosition","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","ConfigureForAppOnly","ConfigureForSession","ConfigurePermanently","IO16BitDirectPixels","IO1BitIndexedPixels","IO2BitIndexedPixels","IO32BitDirectPixels","IO4BitIndexedPixels","IO8BitIndexedPixels","IO8BitOverlayPixels","IOYUV422Pixels","active_display_count","active_displays","all_display_modes","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_ref","associate_mouse_and_mouse_cursor_position","begin_configuration","bit_depth","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","cancel_configuration","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complete_configuration","configure_display_mirror_of_display","configure_display_origin","configure_display_with_display_mode","contains_key","deref","deref_mut","display_mode","drop","drop","drop","eq","eq","find","fmt","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFTypes","from_copyable","from_mut_void","from_mut_void","from_void","from_void","get","get","get_all_values","get_keys_and_values","get_unchecked","get_values","height","height","hide_cursor","id","image","into","into","into","into","into","into","into_iter","into_untyped","into_untyped","io_flags","is_active","is_always_in_mirror_set","is_asleep","is_builtin","is_empty","is_in_hw_mirror_set","is_in_mirror_set","is_main","is_online","is_stereo","iter","kCGDisplayShowDuplicateLowResolutionModes","kCGNullDirectDisplayID","kCGNullWindowID","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowListExcludeDesktopElements","kCGWindowListOptionAll","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kDisplayModeAcceleratorBackedFlag","kDisplayModeAlwaysShowFlag","kDisplayModeBuiltInFlag","kDisplayModeDefaultFlag","kDisplayModeInterlacedFlag","kDisplayModeNativeFlag","kDisplayModeNeverShowFlag","kDisplayModeNotGraphicsQualityFlag","kDisplayModeNotPresetFlag","kDisplayModeNotResizeFlag","kDisplayModeRequiresPanFlag","kDisplayModeSafeFlag","kDisplayModeSafetyFlags","kDisplayModeSimulscanFlag","kDisplayModeStretchedFlag","kDisplayModeTelevisionFlag","kDisplayModeValidFlag","kDisplayModeValidForAirPlayFlag","kDisplayModeValidForHiResFlag","kDisplayModeValidForMirroringFlag","kDisplayModeValidateAgainstDisplay","kIO16BitFloatPixels","kIO30BitDirectPixels","kIO32BitFloatPixels","kIO64BitDirectPixels","len","len","main","mirrors_display","mode_id","model_number","move_cursor_to_point","new","null_display","origin","pixel_encoding","pixel_height","pixel_width","pixels_high","pixels_wide","primary_display","refresh_rate","rotation","screen_size","screenshot","screenshot_from_windows","serial_number","show_cursor","size","to_mutable","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_number","uses_open_gl_acceleration","vendor_number","warp_mouse_cursor_position","width","width","window_list_info","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","x","y","AnnotatedSession","CAPS_LOCK","CGEvent","CGEventField","CGEventFlagAlphaShift","CGEventFlagAlternate","CGEventFlagCommand","CGEventFlagControl","CGEventFlagHelp","CGEventFlagNonCoalesced","CGEventFlagNull","CGEventFlagNumericPad","CGEventFlagSecondaryFn","CGEventFlagShift","CGEventFlags","CGEventMask","CGEventRef","CGEventTap","CGEventTapCallBackFn","CGEventTapLocation","CGEventTapOptions","CGEventTapPlacement","CGEventTapProxy","CGEventType","CGKeyCode","CGMouseButton","CGScrollEventUnit","COMMAND","CONTROL","Center","DELETE","DOWN_ARROW","Default","END","ESCAPE","EVENT_SOURCE_GROUP_ID","EVENT_SOURCE_STATE_ID","EVENT_SOURCE_UNIX_PROCESS_ID","EVENT_SOURCE_USER_DATA","EVENT_SOURCE_USER_ID","EVENT_TARGET_PROCESS_SERIAL_NUMBER","EVENT_TARGET_UNIX_PROCESS_ID","EventField","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F3","F4","F5","F6","F7","F8","F9","FORWARD_DELETE","FUNCTION","FlagsChanged","HELP","HID","HOME","HeadInsertEventTap","KEYBOARD_EVENT_AUTOREPEAT","KEYBOARD_EVENT_KEYBOARD_TYPE","KEYBOARD_EVENT_KEYCODE","KeyCode","KeyDown","KeyUp","LEFT_ARROW","LINE","Left","LeftMouseDown","LeftMouseDragged","LeftMouseUp","ListenOnly","MOUSE_EVENT_BUTTON_NUMBER","MOUSE_EVENT_CLICK_STATE","MOUSE_EVENT_DELTA_X","MOUSE_EVENT_DELTA_Y","MOUSE_EVENT_INSTANT_MOUSER","MOUSE_EVENT_NUMBER","MOUSE_EVENT_PRESSURE","MOUSE_EVENT_SUB_TYPE","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT","MUTE","MouseMoved","Null","OPTION","OtherMouseDown","OtherMouseDragged","OtherMouseUp","PAGE_DOWN","PAGE_UP","PIXEL","RETURN","RIGHT_ARROW","RIGHT_COMMAND","RIGHT_CONTROL","RIGHT_OPTION","RIGHT_SHIFT","Right","RightMouseDown","RightMouseDragged","RightMouseUp","SCROLL_WHEEL_EVENT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_INSTANT_MOUSER","SCROLL_WHEEL_EVENT_IS_CONTINUOUS","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2","SHIFT","SPACE","ScrollEventUnit","ScrollWheel","Session","TAB","TABLET_EVENT_DEVICE_ID","TABLET_EVENT_POINT_BUTTONS","TABLET_EVENT_POINT_PRESSURE","TABLET_EVENT_POINT_X","TABLET_EVENT_POINT_Y","TABLET_EVENT_POINT_Z","TABLET_EVENT_ROTATION","TABLET_EVENT_TANGENTIAL_PRESSURE","TABLET_EVENT_TILT_X","TABLET_EVENT_TILT_Y","TABLET_EVENT_VENDOR_1","TABLET_EVENT_VENDOR_2","TABLET_EVENT_VENDOR_3","TABLET_PROXIMITY_EVENT_CAPABILITY_MASK","TABLET_PROXIMITY_EVENT_DEVICE_ID","TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY","TABLET_PROXIMITY_EVENT_POINTER_ID","TABLET_PROXIMITY_EVENT_POINTER_TYPE","TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID","TABLET_PROXIMITY_EVENT_TABLET_ID","TABLET_PROXIMITY_EVENT_VENDOR_ID","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE","TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID","TabletPointer","TabletProximity","TailAppendEventTap","TapDisabledByTimeout","TapDisabledByUserInput","UP_ARROW","VOLUME_DOWN","VOLUME_UP","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_ref","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","deref","deref_mut","difference","drop","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_double_value_field","get_flags","get_integer_value_field","get_type","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","mach_port","ne","new","new","new_keyboard_event","new_mouse_event","not","partial_cmp","post","remove","set","set_double_value_field","set_flags","set_integer_value_field","set_string","set_string_from_utf16_unchecked","set_type","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","CGEventSource","CGEventSourceRef","CGEventSourceStateID","CombinedSessionState","HIDSystemState","Private","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref_mut","drop","fmt","from","from","from","into","into","into","new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CGFont","CGFontRef","CGGlyph","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_table_for_tag","copy_table_tags","copy_variation_axes","copy_variations","create_copy_from_variations","deref","deref_mut","drop","from","from","from_data_provider","from_name","get_glyph_advances","get_glyph_b_boxes","get_units_per_em","into","into","postscript_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y","CGGradient","CGGradientDrawingOptions","CGGradientDrawsAfterEndLocation","CGGradientDrawsBeforeStartLocation","CGGradientRef","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","create_with_color_components","create_with_colors","deref","deref_mut","difference","drop","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","CGImage","CGImageAlphaFirst","CGImageAlphaInfo","CGImageAlphaLast","CGImageAlphaNone","CGImageAlphaNoneSkipFirst","CGImageAlphaNoneSkipLast","CGImageAlphaOnly","CGImageAlphaPremultipliedFirst","CGImageAlphaPremultipliedLast","CGImageByteOrder16Big","CGImageByteOrder16Little","CGImageByteOrder32Big","CGImageByteOrder32Little","CGImageByteOrderInfo","CGImageByteOrderMask","CGImageRef","as_ref","bits_per_component","bits_per_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clone","clone_into","color_space","cropped","data","deref","deref_mut","drop","from","from","from","from","height","into","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width","AddCurveToPoint","AddLineToPoint","AddQuadCurveToPoint","CGPath","CGPathElement","CGPathElementRef","CGPathElementType","CGPathRef","CloseSubpath","MoveToPoint","SysCGPathRef","apply","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","drop","element_type","eq","fmt","fmt","from","from","from","from","from","from_rect","into","into","into","into","into","points","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","CGSRegion","CGSSurface","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","from_ids","from_rect","from_rects","id","into","into","set_shape","try_from","try_from","try_into","try_into","type_id","type_id","CGColorRef","CGColorSpace","CGColorSpaceRef","CGContext","CGContextRef","CGDataProvider","CGDataProviderRef","CGDisplayMode","CGDisplayModeRef","CGEvent","CGEventRef","CGEventSource","CGEventSourceRef","CGEventTap","CGEventTapRef","CGFont","CGFontRef","CGGradient","CGGradientRef","CGImage","CGImageRef","CGPath","CGPathRef","__CGColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CGWindowBackingType","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreate","CGWindowListCreateDescriptionFromArray","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","CGWindowSharingType","copy_window_info","create_description_from_array","create_image","create_image_from_array","create_window_list","kCGNullWindowID","kCGWindowAlpha","kCGWindowBackingLocationVideoMemory","kCGWindowBackingStoreBuffered","kCGWindowBackingStoreNonretained","kCGWindowBackingStoreRetained","kCGWindowBounds","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowIsOnscreen","kCGWindowLayer","kCGWindowListOptionAll","kCGWindowListOptionExcludeDesktopElements","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kCGWindowMemoryUsage","kCGWindowName","kCGWindowNumber","kCGWindowOwnerName","kCGWindowOwnerPID","kCGWindowSharingNone","kCGWindowSharingReadOnly","kCGWindowSharingReadWrite","kCGWindowSharingState","kCGWindowStoreType","kCGWindowWorkspace"],"q":["core_graphics","","","","","","","","","","","","","","","","core_graphics::base","","","","","","","","","","","","","","","","","","","","","","","core_graphics::color","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::color_space","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::contextcore_graphics::data_provider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::eventcore_graphics::event_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::gradient","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::private","","","","","","","","","","","","","","","","","","","","","","core_graphics::sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_graphics::window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Evil private APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>CGContext</code> instance from an existing <code>CGContextRef</code> …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encapsulates custom data that can be wrapped.","","","","","","","","","Creates a copy of the data from the underlying …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a data provider from the given reference-counted …","Creates a data provider from the given raw pointer, …","Creates a data prvider from a given slice. The data …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this custom data. This value must …","Returns a pointer to the start of the custom data. This …","","","","","","","","","","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides count of displays that are active (or drawable).","Provides a list of displays that are active (or drawable).","Returns all display modes for the specified display id.","","","","","","Connects or disconnects the mouse and cursor while an …","Begins a new set of display configuration changes.","Returns the number of bits per pixel of the specified …","","","","","","","","","","","","","","","Returns the bounds of a display in the global display …","Cancels a set of display configuration changes.","","","","","","","","","","","Completes a set of display configuration changes.","Changes the configuration of a mirroring set.","Configures the origin of a display in the global display …","Configures the display mode of a display.","","","","Returns information about a display’s current …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","Panics","","","","","Returns the height of the specified display mode.","","Hides the mouse cursor, and increments the hide cursor …","","Returns an image containing the contents of the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the same array, but with the type reset to void …","Returns the same dictionary, but with the types reset to …","Returns the I/O Kit flags of the specified display mode.","Returns a Boolean value indicating whether a display is …","Returns a boolean indicating whether a display is always …","Returns a boolean indicating whether a display is sleeping …","Returns a boolean indicating whether a display is …","","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is the main …","Returns a boolean indicating whether a display is …","Returns a boolean indicating whether a display is running …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the the main display.","For a secondary display in a mirroring set, returns the …","","Returns the model number of a display monitor.","Moves the mouse cursor to a specified point relative to …","","A value that will never correspond to actual hardware.","","Returns the pixel encoding of the specified display mode.","Returns the pixel height of the specified display mode.","Returns the pixel width of the specified display mode.","Returns the display height in pixel units.","Returns the display width in pixel units.","Returns the primary display in a hardware mirroring set.","","Returns the rotation angle of a display in degrees.","Returns the width and height of a display in millimeters.","Returns a composite image based on a dynamically generated …","Returns a composite image of the specified windows.","Returns the serial number of a display monitor.","Decrements the hide cursor count, and shows the mouse …","","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the logical unit number of a display.","Returns a boolean indicating whether Quartz is using …","Returns the vendor number of the specified display’s …","Moves the mouse cursor without generating events.","Returns the width of the specified display mode.","","Generates and returns information about the selected …","","","","","","","","","","","","","","","","","","","","","Flags for events","","","","","Possible tapping points for events.","","","","Constants that specify the different types of input events.","","","","","","","","","","","","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source state …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event target …","Key to access a field that contains the event target Unix …","Constants used as keys to access specialized fields in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field, non-zero when this is an …","Key to access an integer field that contains the keyboard …","Key to access an integer field that contains the virtual …","Key codes for keys that are independent of keyboard layout.","","","","","","","","","","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the …","Key to access an integer field that contains the vertical …","Key to access an integer field. The value is non-zero if …","Key to access an integer field that contains the mouse …","Key to access a double field that contains the mouse …","Key to access an integer field that encodes the mouse …","Added in 10.5; made public in 10.7.","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field that contains scrolling …","Key to access an integer field that contains scrolling …","Key to access a field that contains scrolling data. The …","Key to access a field that contains scrolling data. The …","Key to access an integer field that indicates whether the …","Key to access an integer field that indicates whether a …","Key to access an integer field that contains pixel-based …","Key to access an integer field that contains pixel-based …","","","","","","","Key to access an integer field that contains the …","Key to access an integer field that contains the tablet …","Key to access a double field that contains the tablet pen …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access a double field that contains the tablet pen …","Key to access a double field that contains the tangential …","Key to access a double field that contains the horizontal …","Key to access a double field that contains the vertical …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains the device …","Key to access an integer field that contains the …","Key to access an integer field that indicates whether the …","Key to access an integer field that contains the …","Key to access an integer field that contains the pointer …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Possible source states of an event source.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a cropped image. If the <code>rect</code> specifies a rectangle …","Returns the raw image bytes wrapped in <code>CFData</code>. Note, the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","This should always be memory-safe; the window server …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,3,2,3,2,2,2,2,2,2,2,2,2,3,2,3,0,0,0,0,0,0,0,2,3,2,3,2,3,2,2,3,0,0,0,0,4,4,4,4,4,0,5,5,5,0,6,6,6,0,7,7,7,7,7,8,0,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,11,10,8,9,5,6,7,4,11,11,10,8,9,5,6,7,4,11,10,10,10,10,10,10,10,10,9,5,6,7,4,11,9,5,6,7,4,11,10,10,11,10,11,11,11,10,10,10,10,11,10,10,10,10,10,10,10,9,5,6,7,4,8,9,5,6,7,4,11,10,11,10,10,10,8,9,5,6,7,4,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,5,6,7,4,11,10,10,8,9,5,6,7,4,11,10,8,9,5,6,7,4,11,10,8,9,5,6,7,4,11,11,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,13,12,13,12,12,13,12,12,12,12,13,12,12,12,12,13,14,14,12,13,12,13,12,13,12,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,16,16,17,18,19,18,19,17,16,16,17,0,18,19,15,16,17,17,20,18,19,15,16,17,20,16,16,18,19,15,16,17,18,19,15,16,17,16,16,16,16,19,17,17,16,18,19,17,18,19,19,18,19,16,18,19,15,16,17,20,19,18,18,18,19,18,19,18,19,18,19,18,18,17,21,16,16,16,18,19,15,16,17,20,18,18,19,17,16,16,16,16,19,16,16,16,16,16,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,16,16,17,16,16,16,16,22,17,17,17,16,16,16,17,16,16,16,16,16,16,22,19,18,19,15,16,17,20,18,19,18,18,19,19,18,19,15,16,17,20,18,19,15,16,17,20,18,18,19,19,15,16,17,20,16,16,16,16,17,21,16,18,19,18,19,23,23,24,25,0,0,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,27,25,25,28,25,25,29,29,29,29,29,29,29,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,30,25,24,25,31,29,29,29,0,30,30,25,32,27,30,30,30,28,29,29,29,29,29,29,29,29,29,29,25,30,30,25,30,30,30,25,25,32,25,25,25,25,25,25,27,30,30,30,29,29,29,29,29,29,29,29,25,25,0,30,24,25,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,31,30,30,25,25,25,26,33,26,26,26,26,26,26,26,25,32,29,34,26,30,27,24,31,28,33,33,35,25,32,29,34,26,30,27,24,31,28,33,35,34,26,30,27,24,31,28,33,26,30,27,24,31,28,33,26,26,26,33,33,26,33,26,34,26,26,26,26,26,26,26,30,27,24,31,28,25,32,29,34,26,30,27,24,31,28,33,35,26,26,26,26,33,33,33,33,26,26,26,26,25,32,29,34,26,30,27,24,31,28,33,35,26,26,33,34,26,34,33,33,33,26,26,33,26,26,33,33,33,33,33,33,26,26,26,26,30,27,24,31,28,33,35,26,25,32,29,34,26,30,27,24,31,28,33,35,25,32,29,34,26,30,27,24,31,28,33,35,25,32,29,34,26,30,27,24,31,28,33,33,35,26,0,0,0,36,36,36,37,36,37,37,38,36,37,38,36,37,36,37,37,37,37,36,36,37,38,36,37,38,37,36,37,38,36,37,38,36,37,38,36,37,37,38,0,0,0,39,39,39,40,39,40,39,39,39,39,39,39,39,39,39,39,39,40,39,39,39,39,39,39,40,39,39,40,39,40,39,40,39,39,40,0,0,0,0,0,0,0,0,41,21,23,22,41,21,23,22,41,21,23,22,41,41,21,23,22,41,21,23,22,41,41,21,23,22,41,21,23,22,41,21,23,22,41,22,21,22,21,23,22,41,41,22,22,21,23,22,41,22,22,21,23,22,41,21,23,22,41,21,23,22,41,41,41,21,23,22,41,21,23,23,0,0,42,42,0,42,43,42,42,42,42,42,42,42,42,43,43,44,42,43,44,42,43,42,43,42,42,42,43,43,43,43,42,43,42,42,42,42,42,42,42,42,42,43,44,42,42,42,42,42,42,42,42,42,43,44,42,42,42,42,42,42,42,42,42,42,42,43,44,42,42,43,44,42,43,44,42,43,44,42,0,45,0,45,45,45,45,45,45,45,46,46,46,46,0,46,0,47,48,48,45,46,47,47,48,45,46,47,48,48,47,47,48,48,48,47,47,47,45,46,47,48,48,45,46,47,48,47,47,48,45,46,47,48,45,46,47,48,45,46,47,47,48,48,49,49,49,0,0,0,0,0,49,49,0,50,50,51,52,50,50,53,49,51,52,50,53,49,50,49,50,49,51,50,50,50,52,49,52,49,51,52,50,53,49,50,51,52,50,53,49,52,50,53,49,51,52,50,53,49,51,52,50,53,49,51,52,50,50,53,49,0,0,54,55,54,55,54,54,55,55,54,54,55,54,55,55,54,55,54,55,54,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,68,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cgcolor",3]],["cftyperef",6]],[[["cgcolor",3]],["cgcolorref",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgcolor",3]],["cgcolor",3]],[[["",0],["",0]]],[[["cgcolor",3]]],[[["cgcolor",3],["cgcolor",3]],["bool",0]],[[]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["cgcolor",3]],[[["",0]]],[[["cgcolor",3]],["c_void",0]],[[["cgcolor",3]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["cgcolorref",6]],["cgcolor",3]],[[["cgcolorref",6]],["cgcolor",3]],null,null,[[["cgcolorspace",3]],["cgcolorspaceref",3]],[[["cgcolorspace",3]],["cgcolorspaceref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgcolorspace",3]],["cgcolorspace",3]],[[["",0],["",0]]],[[],["cgcolorspace",3]],[[],["cgcolorspace",3]],[[["cfstringref",6]],["option",4,[["cgcolorspace",3]]]],[[["cgcolorspace",3]],["cgcolorspaceref",3]],[[["cgcolorspace",3]],["cgcolorspaceref",3]],[[["cgcolorspace",3]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]]],[[["cgcolorspaceref",3]],["cgcolorspace",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cgcontextref",3],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["cgpathref",3]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]]],[[["cgcontext",3]],["cgcontextref",3]],[[["cgcontextref",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgcontext",3]],["cgcontextref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgcontextref",3]],["size_t",6]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3]],["cgrect",3]],[[["cgcontextref",3],["cgrect",3],["cgimage",3]]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3]]],[[["cgblendmode",4]],["cgblendmode",4]],[[["cglinecap",4]],["cglinecap",4]],[[["cglinejoin",4]],["cglinejoin",4]],[[["cgpathdrawingmode",4]],["cgpathdrawingmode",4]],[[["cginterpolationquality",4]],["cginterpolationquality",4]],[[["cgcontext",3]],["cgcontext",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgaffinetransform",3]]],[[["option",4,[["c_void",0]]],["size_t",6],["size_t",6],["size_t",6],["size_t",6],["cgcolorspace",3],["u32",0]],["cgcontext",3]],[[["cgcontextref",3]],["option",4,[["cgimage",3]]]],[[["cgcontext",3]]],[[["cgcontext",3]],["cgcontextref",3]],[[["cgcontext",3]],["cgcontextref",3]],[[["cgcontextref",3],["cgrect",3],["cgimage",3]]],[[["cgcontextref",3],["cggradient",3],["cgpoint",3],["cgpoint",3],["cggradientdrawingoptions",3]]],[[["cgcontextref",3],["cgpathdrawingmode",4]]],[[["cgcontextref",3],["cggradient",3],["cgpoint",3],["cgfloat",6],["cgpoint",3],["cgfloat",6],["cggradientdrawingoptions",3]]],[[["cgcontext",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3]]],[[["cgblendmode",4],["formatter",3]],["result",6]],[[["cglinecap",4],["formatter",3]],["result",6]],[[["cglinejoin",4],["formatter",3]],["result",6]],[[["cgpathdrawingmode",4],["formatter",3]],["result",6]],[[["cginterpolationquality",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cgcontext",0]],["cgcontext",3]],[[["cgcontextref",3]],["cgaffinetransform",3]],[[["cgcontextref",3]],["cginterpolationquality",4]],[[["cgcontextref",3]],["size_t",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgfloat",6]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["cgblendmode",4]]],[[["cgcontextref",3],["cgcolor",3]]],[[["cgcontextref",3],["cgfont",3]]],[[["cgcontextref",3],["cgfloat",6]]],[[["cgcontextref",3],["i32",0]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["cginterpolationquality",4]]],[[["cgcontextref",3],["cglinecap",4]]],[[["cgcontextref",3],["cgfloat",6]]],[[["cgcontextref",3],["cglinejoin",4]]],[[["cgcontextref",3],["cgfloat",6]]],[[["cgcontextref",3],["cgfloat",6]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3],["cgsize",3],["cgfloat",6]]],[[["cgcontextref",3],["cgsize",3],["cgfloat",6],["cgcolor",3]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["bool",0]]],[[["cgcontextref",3],["cgtextdrawingmode",4]]],[[["cgcontextref",3],["cgaffinetransform",3]]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3]]],[[["cgcontextref",3],["cgrect",3]]],[[["cgcontextref",3],["cgrect",3],["cgfloat",6]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["cgcontextref",3]],["cgcontext",3]],[[["cgcontextref",3],["cgfloat",6],["cgfloat",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["cgcontextref",3]],["size_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cgdataprovider",3]],["cgdataproviderref",3]],[[["cgdataprovider",3]],["cgdataproviderref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgdataprovider",3]],["cgdataprovider",3]],[[["",0],["",0]]],[[["cgdataproviderref",3]],["cfdata",3]],[[["cgdataprovider",3]],["cgdataproviderref",3]],[[["cgdataprovider",3]],["cgdataproviderref",3]],[[["cgdataprovider",3]]],[[]],[[]],[[["arc",3,[["",26,[["asref",8],["sync",8],["send",8]]]]]],["cgdataprovider",3]],[[["box",3,[["box",3,[["customdata",8]]]]]],["cgdataprovider",3]],[[],["cgdataprovider",3]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["u8",0]],[[["",0]]],[[["cgdataproviderref",3]],["cgdataprovider",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["__cfarray",0]],["isize",0]],[[["__cfarray",0],["isize",0]],["c_void",0]],null,null,[[["__cfdictionary",0],["c_void",0],["c_void",0]],["u8",0]],null,null,[[["c_void",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["u32",0],["cgerror",6]]]],[[],["result",4,[["vec",3,[["cgdirectdisplayid",6]]],["cgerror",6]]]],[[["cgdirectdisplayid",6],["cfdictionaryref",6]],["option",4,[["vec",3,[["cgdisplaymode",3]]]]]],[[["cfarray",3]],["c_void",0]],[[["cfdictionary",3]],["c_void",0]],[[["cfarray",3]],["__cfarray",0]],[[["cfdictionary",3]],["__cfdictionary",0]],[[["cgdisplaymode",3]],["cgdisplaymoderef",3]],[[["bool",0]],["result",4,[["cgerror",6]]]],[[["cgdisplay",3]],["result",4,[["cgdisplayconfigref",6],["cgerror",6]]]],[[["cgdisplaymode",3]],["usize",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgdisplaymode",3]],["cgdisplaymoderef",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgdisplay",3]],["cgrect",3]],[[["cgdisplay",3],["cgdisplayconfigref",6]],["result",4,[["cgerror",6]]]],[[["cfarray",3,[["c_void",0]]]],["cfarray",3,[["c_void",0]]]],[[["cfdictionary",3,[["c_void",0],["c_void",0]]]],["cfdictionary",3,[["c_void",0],["c_void",0]]]],[[["cgconfigureoption",4]],["cgconfigureoption",4]],[[["cgdisplay",3]],["cgdisplay",3]],[[["cgdisplaymode",3]],["cgdisplaymode",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cgdisplay",3],["cgdisplayconfigref",6],["cgconfigureoption",4]],["result",4,[["cgerror",6]]]],[[["cgdisplay",3],["cgdisplayconfigref",6],["cgdisplay",3]],["result",4,[["cgerror",6]]]],[[["cgdisplay",3],["cgdisplayconfigref",6],["i32",0],["i32",0]],["result",4,[["cgerror",6]]]],[[["cgdisplay",3],["cgdisplayconfigref",6],["cgdisplaymode",3]],["result",4,[["cgerror",6]]]],[[["cfdictionary",3],["",0]],["bool",0]],[[["cgdisplaymode",3]],["cgdisplaymoderef",3]],[[["cgdisplaymode",3]],["cgdisplaymoderef",3]],[[["cgdisplay",3]],["option",4,[["cgdisplaymode",3]]]],[[["cfarray",3]]],[[["cfdictionary",3]]],[[["cgdisplaymode",3]]],[[["cfarray",3,[["c_void",0]]],["cfarray",3]],["bool",0]],[[["cfdictionary",3,[["c_void",0],["c_void",0]]],["cfdictionary",3]],["bool",0]],[[["cfdictionary",3]],["option",4,[["itemref",3]]]],[[["cfarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["cfdictionary",3],["formatter",3]],["result",4,[["error",3]]]],[[["cgdisplay",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cfdictionary",3]],[[],["cfarray",3]],[[],["cfarray",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemmutref",3]],[[["c_void",0]],["itemref",3]],[[["c_void",0]],["itemref",3]],[[["cfarray",3],["isize",0]],["option",4,[["itemref",3]]]],[[["cfdictionary",3]],["itemref",3]],[[["cfarray",3]],["vec",3,[["c_void",0],["global",3]]]],[[["cfdictionary",3]]],[[["cfarray",3],["isize",0]],["itemref",3]],[[["cfarray",3],["cfrange",3]],["vec",3,[["c_void",0],["global",3]]]],[[["cgdisplaymode",3]],["u64",0]],null,[[["cgdisplay",3]],["result",4,[["cgerror",6]]]],null,[[["cgdisplay",3]],["option",4,[["cgimage",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cfarray",3]],["cfarrayiterator",3]],[[["cfarray",3]],["cfarray",3,[["c_void",0]]]],[[["cfdictionary",3]],["cfdictionary",3,[["c_void",0],["c_void",0]]]],[[["cgdisplaymode",3]],["u32",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cfdictionary",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["bool",0]],[[["cfarray",3]],["cfarrayiterator",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfarray",3]],["isize",0]],[[["cfdictionary",3]],["usize",0]],[[],["cgdisplay",3]],[[["cgdisplay",3]],["cgdirectdisplayid",6]],[[["cgdisplaymode",3]],["i32",0]],[[["cgdisplay",3]],["u32",0]],[[["cgdisplay",3],["cgpoint",3]],["result",4,[["cgerror",6]]]],[[["cgdirectdisplayid",6]],["cgdisplay",3]],[[],["cgdisplay",3]],null,[[["cgdisplaymode",3]],["cfstring",3]],[[["cgdisplaymode",3]],["u64",0]],[[["cgdisplaymode",3]],["u64",0]],[[["cgdisplay",3]],["u64",0]],[[["cgdisplay",3]],["u64",0]],[[["cgdisplay",3]],["cgdirectdisplayid",6]],[[["cgdisplaymode",3]],["f64",0]],[[["cgdisplay",3]],["f64",0]],[[["cgdisplay",3]],["cgsize",3]],[[["cgrect",3],["cgwindowlistoption",6],["cgwindowid",6],["cgwindowimageoption",6]],["option",4,[["cgimage",3]]]],[[["cgrect",3],["cfarray",3],["cgwindowimageoption",6]],["option",4,[["cgimage",3]]]],[[["cgdisplay",3]],["u32",0]],[[["cgdisplay",3]],["result",4,[["cgerror",6]]]],null,[[["cfdictionary",3]],["cfmutabledictionary",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["cgdisplaymoderef",3]],["cgdisplaymode",3]],[[["cfarray",3]],["cfarray",3,[["c_void",0]]]],[[["cfdictionary",3]],["cfdictionary",3,[["c_void",0],["c_void",0]]]],[[["cfarray",3,[["c_void",0]]]],["c_void",0]],[[["cfarray",3]],["c_void",0]],[[["cfdictionary",3]],["c_void",0]],[[["cfdictionary",3,[["c_void",0],["c_void",0]]]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["usize",0]],[[],["usize",0]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["cgdisplay",3]],["u32",0]],[[["cgdisplay",3]],["bool",0]],[[["cgdisplay",3]],["u32",0]],[[["cgpoint",3]],["result",4,[["cgerror",6]]]],[[["cgdisplaymode",3]],["u64",0]],null,[[["cgwindowlistoption",6],["option",4,[["cgwindowid",6]]]],["option",4,[["cfarray",3]]]],[[["__cfarray",0]],["cfarray",3]],[[["__cfdictionary",0]],["cfdictionary",3]],[[["__cfarray",0]],["cfarray",3]],[[["__cfdictionary",0]],["cfdictionary",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cgeventflags",3]],[[["cgevent",3]],["cgeventref",3]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]]],[[["cgeventflags",3]],["u64",0]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgevent",3]],["cgeventref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["cgeventflags",3]],["cgeventflags",3]],[[["cgeventtype",4]],["cgeventtype",4]],[[["cgmousebutton",4]],["cgmousebutton",4]],[[["cgeventtaplocation",4]],["cgeventtaplocation",4]],[[["cgeventtapplacement",4]],["cgeventtapplacement",4]],[[["cgeventtapoptions",4]],["cgeventtapoptions",4]],[[["cgevent",3]],["cgevent",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cgeventflags",3],["cgeventflags",3]],["ordering",4]],[[["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]],["bool",0]],[[["cgevent",3]],["cgeventref",3]],[[["cgevent",3]],["cgeventref",3]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgevent",3]]],[[],["cgeventflags",3]],[[["cgeventtap",3]]],[[["cgeventflags",3],["cgeventflags",3]],["bool",0]],[[["cgeventflags",3],["intoiterator",8]]],[[["cgeventflags",3],["formatter",3]],["result",6]],[[["cgeventflags",3],["formatter",3]],["result",6]],[[["cgeventflags",3],["formatter",3]],["result",6]],[[["cgeventflags",3],["formatter",3]],["result",6]],[[["cgeventflags",3],["formatter",3]],["result",6]],[[["cgeventtype",4],["formatter",3]],["result",6]],[[["cgmousebutton",4],["formatter",3]],["result",6]],[[["cgeventtaplocation",4],["formatter",3]],["result",6]],[[["cgeventtapplacement",4],["formatter",3]],["result",6]],[[["cgeventtapoptions",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",0]],["option",4,[["cgeventflags",3]]]],[[["u64",0]],["cgeventflags",3]],[[["u64",0]],["cgeventflags",3]],[[["intoiterator",8]],["cgeventflags",3]],[[["cgevent",3],["cgeventfield",6]],["f64",0]],[[["cgevent",3]],["cgeventflags",3]],[[["cgevent",3],["cgeventfield",6]],["i64",0]],[[["cgevent",3]],["cgeventtype",4]],[[["cgeventflags",3],["",0]]],[[["cgeventflags",3],["cgeventflags",3]]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cgeventflags",3]],["bool",0]],[[["cgeventflags",3]],["bool",0]],[[["cgevent",3]],["cgpoint",3]],null,[[["cgeventflags",3],["cgeventflags",3]],["bool",0]],[[["cgeventtaplocation",4],["cgeventtapplacement",4],["cgeventtapoptions",4],["vec",3,[["cgeventtype",4]]],["fn",8]],["result",4,[["cgeventtap",3]]]],[[["cgeventsource",3]],["result",4,[["cgevent",3]]]],[[["cgeventsource",3],["cgkeycode",6],["bool",0]],["result",4,[["cgevent",3]]]],[[["cgeventsource",3],["cgeventtype",4],["cgpoint",3],["cgmousebutton",4]],["result",4,[["cgevent",3]]]],[[["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]],["option",4,[["ordering",4]]]],[[["cgevent",3],["cgeventtaplocation",4]]],[[["cgeventflags",3],["cgeventflags",3]]],[[["cgeventflags",3],["cgeventflags",3],["bool",0]]],[[["cgevent",3],["cgeventfield",6],["f64",0]]],[[["cgevent",3],["cgeventflags",3]]],[[["cgevent",3],["cgeventfield",6],["i64",0]]],[[["cgevent",3],["str",0]]],[[["cgevent",3]]],[[["cgevent",3],["cgeventtype",4]]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["cgeventflags",3],["cgeventflags",3]]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["cgeventref",3]],["cgevent",3]],[[["cgeventflags",3],["cgeventflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cgeventflags",3],["cgeventflags",3]],["cgeventflags",3]],null,null,null,null,null,null,[[["cgeventsource",3]],["cgeventsourceref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgeventsource",3]],["cgeventsourceref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgeventsourcestateid",4]],["cgeventsourcestateid",4]],[[["cgeventsource",3]],["cgeventsource",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cgeventsource",3]],["cgeventsourceref",3]],[[["cgeventsource",3]],["cgeventsourceref",3]],[[["cgeventsource",3]]],[[["cgeventsourcestateid",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cgeventsourcestateid",4]],["result",4,[["cgeventsource",3]]]],[[["",0]]],[[["",0]]],[[["cgeventsourceref",3]],["cgeventsource",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["cgfont",3]],["cgfontref",3]],[[["",0]],["",0]],[[["cgfont",3]],["cgfontref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgfont",3]],["cgfont",3]],[[["",0],["",0]]],[[["cgfont",3],["u32",0]],["option",4,[["cfdata",3]]]],[[["cgfont",3]],["cfarray",3,[["u32",0]]]],[[["cgfont",3]],["option",4,[["cfarray",3,[["cfdictionary",3,[["cfstring",3],["cftype",3]]]]]]]],[[["cgfont",3]],["option",4,[["cfdictionary",3,[["cfstring",3],["cfnumber",3]]]]]],[[["cgfont",3],["cfdictionary",3]],["result",4,[["cgfont",3]]]],[[["cgfont",3]],["cgfontref",3]],[[["cgfont",3]],["cgfontref",3]],[[["cgfont",3]]],[[]],[[]],[[["cgdataprovider",3]],["result",4,[["cgfont",3]]]],[[["cfstring",3]],["result",4,[["cgfont",3]]]],[[["cgfont",3]],["bool",0]],[[["cgfont",3]],["bool",0]],[[["cgfont",3]],["c_int",6]],[[]],[[]],[[["cgfont",3]],["cfstring",3]],[[["",0]]],[[["cgfontref",3]],["cgfont",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["cgsize",3],["cgaffinetransform",3]],["cgsize",3]],[[["cgpoint",3],["cgaffinetransform",3]],["cgpoint",3]],[[["cgrect",3],["cgaffinetransform",3]],["cgrect",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["cgsize",3]],["cgsize",3]],[[["cgpoint",3]],["cgpoint",3]],[[["cgrect",3]],["cgrect",3]],[[["cgaffinetransform",3]],["cgaffinetransform",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["cgsize",3]],[[],["cgpoint",3]],[[],["cgrect",3]],[[],["cgaffinetransform",3]],[[["cgsize",3],["formatter",3]],["result",4,[["error",3]]]],[[["cgpoint",3],["formatter",3]],["result",4,[["error",3]]]],[[["cgrect",3],["formatter",3]],["result",4,[["error",3]]]],[[["cgaffinetransform",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["cfdictionary",3]],["option",4,[["cgrect",3]]]],null,[[["cgrect",3],["cgsize",3]],["cgrect",3]],[[]],[[]],[[]],[[]],[[["cgaffinetransform",3]],["cgaffinetransform",3]],[[["cgrect",3]],["bool",0]],[[["cgrect",3],["cgrect",3]],["bool",0]],[[["f64",0],["f64",0]],["cgsize",3]],[[["f64",0],["f64",0]],["cgpoint",3]],[[["cgpoint",3],["cgsize",3]],["cgrect",3]],[[["f64",0],["f64",0],["f64",0],["f64",0],["f64",0],["f64",0]],["cgaffinetransform",3]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[],["cggradientdrawingoptions",3]],[[["cggradient",3]],["cggradientref",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["cggradientdrawingoptions",3]],["u32",0]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cggradient",3]],["cggradientref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradient",3]],["cggradient",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["ordering",4]],[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["bool",0]],[[["cgcolorspace",3],["usize",0]],["cggradient",3]],[[["cgcolorspace",3],["cfarray",3]],["cggradient",3]],[[["cggradient",3]],["cggradientref",3]],[[["cggradient",3]],["cggradientref",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradient",3]]],[[],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["bool",0]],[[["cggradientdrawingoptions",3],["intoiterator",8]]],[[["cggradientdrawingoptions",3],["formatter",3]],["result",6]],[[["cggradientdrawingoptions",3],["formatter",3]],["result",6]],[[["cggradientdrawingoptions",3],["formatter",3]],["result",6]],[[["cggradientdrawingoptions",3],["formatter",3]],["result",6]],[[["cggradientdrawingoptions",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u32",0]],["option",4,[["cggradientdrawingoptions",3]]]],[[["u32",0]],["cggradientdrawingoptions",3]],[[["u32",0]],["cggradientdrawingoptions",3]],[[["intoiterator",8]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["",0]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["bool",0]],[[]],[[]],[[]],[[["cggradientdrawingoptions",3]],["bool",0]],[[["cggradientdrawingoptions",3]],["bool",0]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["bool",0]],[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["option",4,[["ordering",4]]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3],["bool",0]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],[[["",0]]],[[["",0]]],[[["cggradientref",3]],["cggradient",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["cggradientdrawingoptions",3],["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cgimage",3]],["cgimageref",3]],[[["cgimageref",3]],["size_t",6]],[[["cgimageref",3]],["size_t",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgimage",3]],["cgimageref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgimageref",3]],["size_t",6]],[[["cgimage",3]],["cgimage",3]],[[["",0],["",0]]],[[["cgimageref",3]],["cgcolorspace",3]],[[["cgimageref",3],["cgrect",3]],["option",4,[["cgimage",3]]]],[[["cgimageref",3]],["cfdata",3]],[[["cgimage",3]],["cgimageref",3]],[[["cgimage",3]],["cgimageref",3]],[[["cgimage",3]]],[[]],[[]],[[]],[[]],[[["cgimageref",3]],["size_t",6]],[[]],[[]],[[]],[[]],[[["size_t",6],["size_t",6],["size_t",6],["size_t",6],["size_t",6],["cgcolorspace",3],["u32",0],["cgdataprovider",3],["bool",0],["u32",0]],["cgimage",3]],[[["",0]]],[[["cgimageref",3]],["cgimage",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["cgimageref",3]],["size_t",6]],null,null,null,null,null,null,null,null,null,null,null,[[["cgpath",3],["",0]]],[[["cgpath",3]],["cgpathref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgpath",3]],["cgpathref",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgpath",3]],["cgpath",3]],[[["cgpathelementtype",4]],["cgpathelementtype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["cgpathelementref",3]],["cgpathelement",3]],[[["cgpath",3]],["cgpathref",3]],[[["cgpath",3]],["cgpathref",3]],[[["cgpath",3]]],null,[[["cgpathelementtype",4],["cgpathelementtype",4]],["bool",0]],[[["cgpathelement",3],["formatter",3]],["result",4,[["error",3]]]],[[["cgpathelementtype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["cgrect",3],["option",4,[["cgaffinetransform",3]]]],["cgpath",3]],[[]],[[]],[[]],[[]],[[]],[[["cgpathelement",3]]],[[["",0]]],[[["cgpathref",3]],["cgpath",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["cftypeid",6]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cgsregion",3]]],[[]],[[]],[[["c_uint",6],["c_int",6],["c_uint",6]],["cgssurface",3]],[[["cgrect",3]],["cgsregion",3]],[[],["cgsregion",3]],[[["cgssurface",3]],["c_uint",6]],[[]],[[]],[[["cgssurface",3],["cgsregion",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullcgcolorref",6]],["c_void",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["cgwindowlistoption",6],["cgwindowid",6]],["option",4,[["cfarray",3]]]],[[["cfarray",3,[["cgwindowid",6]]]],["option",4,[["cfarray",3,[["cfdictionary",3,[["cfstring",3],["cftype",3]]]]]]]],[[["cgrect",3],["cgwindowlistoption",6],["cgwindowid",6],["cgwindowimageoption",6]],["option",4,[["cgimage",3]]]],[[["cgrect",3],["cfarray",3],["cgwindowimageoption",6]],["option",4,[["cgimage",3]]]],[[["cgwindowlistoption",6],["cgwindowid",6]],["option",4,[["cfarray",3,[["cgwindowid",6]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"CGColor"],[3,"CGColorSpace"],[3,"CGColorSpaceRef"],[4,"CGInterpolationQuality"],[4,"CGLineCap"],[4,"CGLineJoin"],[4,"CGPathDrawingMode"],[4,"CGTextDrawingMode"],[4,"CGBlendMode"],[3,"CGContextRef"],[3,"CGContext"],[3,"CGDataProvider"],[3,"CGDataProviderRef"],[8,"CustomData"],[4,"CGConfigureOption"],[3,"CGDisplay"],[3,"CGDisplayMode"],[3,"CFArray"],[3,"CFDictionary"],[3,"CGDisplayModeRef"],[3,"CGSize"],[3,"CGRect"],[3,"CGPoint"],[4,"CGEventTapLocation"],[3,"KeyCode"],[3,"CGEventFlags"],[4,"CGMouseButton"],[4,"CGEventTapOptions"],[3,"EventField"],[4,"CGEventType"],[4,"CGEventTapPlacement"],[3,"ScrollEventUnit"],[3,"CGEvent"],[3,"CGEventTap"],[3,"CGEventRef"],[4,"CGEventSourceStateID"],[3,"CGEventSource"],[3,"CGEventSourceRef"],[3,"CGFont"],[3,"CGFontRef"],[3,"CGAffineTransform"],[3,"CGGradientDrawingOptions"],[3,"CGGradient"],[3,"CGGradientRef"],[4,"CGImageAlphaInfo"],[4,"CGImageByteOrderInfo"],[3,"CGImage"],[3,"CGImageRef"],[4,"CGPathElementType"],[3,"CGPath"],[3,"CGPathElementRef"],[3,"CGPathElement"],[3,"CGPathRef"],[3,"CGSRegion"],[3,"CGSSurface"],[4,"CGImage"],[3,"__CGColor"],[4,"CGColorSpace"],[4,"CGPath"],[4,"CGDataProvider"],[4,"CGFont"],[4,"CGContext"],[4,"CGGradient"],[4,"CGEventTap"],[4,"CGEvent"],[4,"CGEventSource"],[4,"CGDisplayMode"],[6,"CGColorRef"]]},\
"core_graphics_types":{"doc":"","t":[0,0,6,6,6,6,3,3,3,3,17,17,17,17,12,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12],"n":["base","geometry","CGError","CGFloat","CGGlyph","boolean_t","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y"],"q":["core_graphics_types","","core_graphics_types::base","","","","core_graphics_types::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,1,2,3,4,1,4,2,4,2,3,4,1,1,4,4,2,3,4,1,4,4,2,3,4,1,2,3,4,1,2,3,4,1,1,1,2,3,4,1,2,3,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cgsize",3],["cgaffinetransform",3]],["cgsize",3]],[[["cgpoint",3],["cgaffinetransform",3]],["cgpoint",3]],[[["cgrect",3],["cgaffinetransform",3]],["cgrect",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["cgsize",3]],["cgsize",3]],[[["cgpoint",3]],["cgpoint",3]],[[["cgrect",3]],["cgrect",3]],[[["cgaffinetransform",3]],["cgaffinetransform",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["cgsize",3]],[[],["cgpoint",3]],[[],["cgrect",3]],[[],["cgaffinetransform",3]],[[["cgsize",3],["formatter",3]],["result",6]],[[["cgpoint",3],["formatter",3]],["result",6]],[[["cgrect",3],["formatter",3]],["result",6]],[[["cgaffinetransform",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["cfdictionary",3]],["option",4,[["cgrect",3]]]],null,[[["cgrect",3],["cgsize",3]],["cgrect",3]],[[]],[[]],[[]],[[]],[[["cgaffinetransform",3]],["cgaffinetransform",3]],[[["cgrect",3]],["bool",0]],[[["cgrect",3],["cgrect",3]],["bool",0]],[[["cgfloat",6],["cgfloat",6]],["cgsize",3]],[[["cgfloat",6],["cgfloat",6]],["cgpoint",3]],[[["cgpoint",3],["cgsize",3]],["cgrect",3]],[[["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6],["cgfloat",6]],["cgaffinetransform",3]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null],"p":[[3,"CGAffineTransform"],[3,"CGSize"],[3,"CGPoint"],[3,"CGRect"]]},\
"core_video_sys":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,6,6,3,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,12,12,11,11,11,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,6,5,5,5,6,5,5,5,5,5,5,4,11,11,11,11,11,11,11,17,17,7,7,7,7,7,11,11,11,11,5,5,5,6,5,4,11,11,11,11,11,11,11,11,11,11,11,5,5,5,6,5,5,5,5,6,6,5,5,6,6,6,5,5,5,5,6,5,5,7,7,7,7,7,5,5,5,5,6,5,5,7,7,5,5,5,5,6,5,5,5,5,5,5,6,5,5,7,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,6,6,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,7,7,7,7,7,7,7,7,7,17,7,7,7,7,7,7,7,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,6,5,5,5,6,5,5,7,17,7,7,7,6,3,5,5,5,11,11,11,11,12,11,11,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,12,11,11,11,11,12,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["base","buffer","display_link","host_time","image_buffer","open_gl_es_texture","open_gl_es_texture_cache","opengl_buffer","opengl_buffer_pool","opengl_texture","opengl_texture_cache","pixel_buffer","pixel_buffer_pool","pixel_format_description","return_","CVOptionFlags","CVSMPTETime","CVSMPTETimeFlags","CVSMPTETimeType","CVTime","CVTimeFlags","CVTimeStamp","CVTimeStampFlags","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","counter","flags","flags","flags","fmt","fmt","fmt","frames","from","from","from","hostTime","hours","into","into","into","kCVIndefiniteTime","kCVSMPTETimeRunning","kCVSMPTETimeType24","kCVSMPTETimeType25","kCVSMPTETimeType2997","kCVSMPTETimeType2997Drop","kCVSMPTETimeType30","kCVSMPTETimeType30Drop","kCVSMPTETimeType5994","kCVSMPTETimeType60","kCVSMPTETimeValid","kCVTimeIsIndefinite","kCVTimeStampBottomField","kCVTimeStampHostTimeValid","kCVTimeStampIsInterlaced","kCVTimeStampRateScalarValid","kCVTimeStampSMPTETimeValid","kCVTimeStampTopField","kCVTimeStampVideoHostTimeValid","kCVTimeStampVideoRefreshPeriodValid","kCVTimeStampVideoTimeValid","kCVZeroTime","minutes","rateScalar","reserved","seconds","smpteTime","subframeDivisor","subframes","timeScale","timeValue","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","version","videoRefreshPeriod","videoTime","videoTimeScale","CVAttachmentMode","CVBufferGetAttachment","CVBufferGetAttachments","CVBufferPropagateAttachments","CVBufferRef","CVBufferRelease","CVBufferRemoveAllAttachments","CVBufferRemoveAttachment","CVBufferRetain","CVBufferSetAttachment","CVBufferSetAttachments","__CVBuffer","borrow","borrow_mut","clone","clone_into","fmt","from","into","kCVAttachmentMode_ShouldNotPropagate","kCVAttachmentMode_ShouldPropagate","kCVBufferMovieTimeKey","kCVBufferNonPropagatedAttachmentsKey","kCVBufferPropagatedAttachmentsKey","kCVBufferTimeScaleKey","kCVBufferTimeValueKey","to_owned","try_from","try_into","type_id","CVDisplayLinkCreateWithCGDisplay","CVDisplayLinkGetNominalOutputVideoRefreshPeriod","CVDisplayLinkGetTypeID","CVDisplayLinkRef","CVDisplayLinkRelease","__CVDisplayLink","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","CVGetCurrentHostTime","CVGetHostClockFrequency","CVGetHostClockMinimumTimeDelta","CVImageBufferRef","CVOpenGLESTextureGetName","CVOpenGLESTextureGetTarget","CVOpenGLESTextureGetTypeID","CVOpenGLESTextureIsFlipped","CVOpenGLESTextureRef","CVEAGLContext","CVOpenGLESTextureCacheCreate","CVOpenGLESTextureCacheCreateTextureFromImage","CVOpenGLESTextureCacheRef","CGLContextObj","CGLPixelFormatObj","CVOpenGLBufferAttach","CVOpenGLBufferCreate","CVOpenGLBufferGetAttributes","CVOpenGLBufferGetTypeID","CVOpenGLBufferRef","CVOpenGLBufferRelease","CVOpenGLBufferRetain","kCVOpenGLBufferHeight","kCVOpenGLBufferInternalFormat","kCVOpenGLBufferMaximumMipmapLevel","kCVOpenGLBufferTarget","kCVOpenGLBufferWidth","CVOpenGLBufferPoolCreate","CVOpenGLBufferPoolCreateOpenGLBuffer","CVOpenGLBufferPoolGetAttributes","CVOpenGLBufferPoolGetTypeID","CVOpenGLBufferPoolRef","CVOpenGLBufferPoolRelease","CVOpenGLBufferPoolRetain","kCVOpenGLBufferPoolMaximumBufferAgeKey","kCVOpenGLBufferPoolMinimumBufferCountKey","CVOpenGLTextureGetName","CVOpenGLTextureGetTarget","CVOpenGLTextureGetTypeID","CVOpenGLTextureIsFlipped","CVOpenGLTextureRef","CVOpenGLTextureRelease","CVOpenGLTextureRetain","CVOpenGLTextureCacheCreate","CVOpenGLTextureCacheCreateTextureFromImage","CVOpenGLTextureCacheFlush","CVOpenGLTextureCacheGetTypeID","CVOpenGLTextureCacheRef","CVOpenGLTextureCacheRelease","CVOpenGLTextureCacheRetain","kCVOpenGLTextureCacheChromaSamplingModeAutomatic","kCVOpenGLTextureCacheChromaSamplingModeBestPerformance","kCVOpenGLTextureCacheChromaSamplingModeHighestQuality","kCVOpenGLTextureCacheChromaSamplingModeKey","CVBufferGetTypeID","CVPixelBufferCreate","CVPixelBufferCreateResolvedAttributesDictionary","CVPixelBufferFillExtendedPixels","CVPixelBufferGetBaseAddress","CVPixelBufferGetBaseAddressOfPlane","CVPixelBufferGetBytesPerRow","CVPixelBufferGetBytesPerRowOfPlane","CVPixelBufferGetExtendedPixels","CVPixelBufferGetHeight","CVPixelBufferGetHeightOfPlane","CVPixelBufferGetPixelFormatType","CVPixelBufferGetPlaneCount","CVPixelBufferGetWidth","CVPixelBufferGetWidthOfPlane","CVPixelBufferIsPlanar","CVPixelBufferLockBaseAddress","CVPixelBufferLockFlags","CVPixelBufferRef","CVPixelBufferRelease","CVPixelBufferReleaseBytesCallback","CVPixelBufferReleasePlanarBytesCallback","CVPixelBufferRetain","CVPixelBufferUnlockBaseAddress","CVPlanarComponentInfo","CVPlanarPixelBufferInfo","CVPlanarPixelBufferInfo_YCbCrBiPlanar","CVPlanarPixelBufferInfo_YCbCrPlanar","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","componentInfo","componentInfoCb","componentInfoCbCr","componentInfoCr","componentInfoY","componentInfoY","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","kCVPixelBufferBytesPerRowAlignmentKey","kCVPixelBufferCGBitmapContextCompatibilityKey","kCVPixelBufferCGImageCompatibilityKey","kCVPixelBufferExtendedPixelsBottomKey","kCVPixelBufferExtendedPixelsLeftKey","kCVPixelBufferExtendedPixelsRightKey","kCVPixelBufferExtendedPixelsTopKey","kCVPixelBufferHeightKey","kCVPixelBufferIOSurfacePropertiesKey","kCVPixelBufferLock_ReadOnly","kCVPixelBufferMemoryAllocatorKey","kCVPixelBufferMetalCompatibilityKey","kCVPixelBufferOpenGLCompatibilityKey","kCVPixelBufferOpenGLESCompatibilityKey","kCVPixelBufferOpenGLESTextureCacheCompatibilityKey","kCVPixelBufferOpenGLTextureCacheCompatibilityKey","kCVPixelBufferPixelFormatTypeKey","kCVPixelBufferPlaneAlignmentKey","kCVPixelBufferWidthKey","kCVPixelFormatType_128RGBAFloat","kCVPixelFormatType_14Bayer_BGGR","kCVPixelFormatType_14Bayer_GBRG","kCVPixelFormatType_14Bayer_GRBG","kCVPixelFormatType_14Bayer_RGGB","kCVPixelFormatType_16BE555","kCVPixelFormatType_16BE565","kCVPixelFormatType_16Gray","kCVPixelFormatType_16LE555","kCVPixelFormatType_16LE5551","kCVPixelFormatType_16LE565","kCVPixelFormatType_1IndexedGray_WhiteIsZero","kCVPixelFormatType_1Monochrome","kCVPixelFormatType_24BGR","kCVPixelFormatType_24RGB","kCVPixelFormatType_2Indexed","kCVPixelFormatType_2IndexedGray_WhiteIsZero","kCVPixelFormatType_30RGB","kCVPixelFormatType_30RGBLEPackedWideGamut","kCVPixelFormatType_32ABGR","kCVPixelFormatType_32ARGB","kCVPixelFormatType_32AlphaGray","kCVPixelFormatType_32BGRA","kCVPixelFormatType_32RGBA","kCVPixelFormatType_420YpCbCr10BiPlanarFullRange","kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange","kCVPixelFormatType_420YpCbCr8BiPlanarFullRange","kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange","kCVPixelFormatType_420YpCbCr8Planar","kCVPixelFormatType_420YpCbCr8PlanarFullRange","kCVPixelFormatType_422YpCbCr10","kCVPixelFormatType_422YpCbCr10BiPlanarFullRange","kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange","kCVPixelFormatType_422YpCbCr16","kCVPixelFormatType_422YpCbCr8","kCVPixelFormatType_422YpCbCr8FullRange","kCVPixelFormatType_422YpCbCr8_yuvs","kCVPixelFormatType_422YpCbCr_4A_8BiPlanar","kCVPixelFormatType_4444AYpCbCr16","kCVPixelFormatType_4444AYpCbCr8","kCVPixelFormatType_4444YpCbCrA8","kCVPixelFormatType_4444YpCbCrA8R","kCVPixelFormatType_444YpCbCr10","kCVPixelFormatType_444YpCbCr10BiPlanarFullRange","kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange","kCVPixelFormatType_444YpCbCr8","kCVPixelFormatType_48RGB","kCVPixelFormatType_4Indexed","kCVPixelFormatType_4IndexedGray_WhiteIsZero","kCVPixelFormatType_64ARGB","kCVPixelFormatType_64RGBAHalf","kCVPixelFormatType_8Indexed","kCVPixelFormatType_8IndexedGray_WhiteIsZero","kCVPixelFormatType_ARGB2101010LEPacked","kCVPixelFormatType_DepthFloat16","kCVPixelFormatType_DepthFloat32","kCVPixelFormatType_DisparityFloat16","kCVPixelFormatType_DisparityFloat32","kCVPixelFormatType_OneComponent16Half","kCVPixelFormatType_OneComponent32Float","kCVPixelFormatType_OneComponent8","kCVPixelFormatType_TwoComponent16Half","kCVPixelFormatType_TwoComponent32Float","kCVPixelFormatType_TwoComponent8","offset","rowBytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CVPixelBufferPoolCreate","CVPixelBufferPoolCreatePixelBuffer","CVPixelBufferPoolCreatePixelBufferWithAuxAttributes","CVPixelBufferPoolFlush","CVPixelBufferPoolFlushFlags","CVPixelBufferPoolGetAttributes","CVPixelBufferPoolGetPixelBufferAttributes","CVPixelBufferPoolGetTypeID","CVPixelBufferPoolRef","CVPixelBufferPoolRelease","CVPixelBufferPoolRetain","kCVPixelBufferPoolAllocationThresholdKey","kCVPixelBufferPoolFlushExcessBuffers","kCVPixelBufferPoolFreeBufferNotification","kCVPixelBufferPoolMaximumBufferAgeKey","kCVPixelBufferPoolMinimumBufferCountKey","CVFillExtendedPixelsCallBack","CVFillExtendedPixelsCallBackData","CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes","CVPixelFormatDescriptionCreateWithPixelFormatType","CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType","borrow","borrow_mut","clone","clone_into","fillCallBack","fmt","from","into","kCVPixelFormatBitsPerBlock","kCVPixelFormatBlackBlock","kCVPixelFormatBlockHeight","kCVPixelFormatBlockHorizontalAlignment","kCVPixelFormatBlockVerticalAlignment","kCVPixelFormatBlockWidth","kCVPixelFormatCGBitmapContextCompatibility","kCVPixelFormatCGBitmapInfo","kCVPixelFormatCGImageCompatibility","kCVPixelFormatCodecType","kCVPixelFormatComponentRange","kCVPixelFormatComponentRange_FullRange","kCVPixelFormatComponentRange_VideoRange","kCVPixelFormatComponentRange_WideRange","kCVPixelFormatConstant","kCVPixelFormatContainsAlpha","kCVPixelFormatContainsRGB","kCVPixelFormatContainsYCbCr","kCVPixelFormatFillExtendedPixelsCallback","kCVPixelFormatFourCC","kCVPixelFormatHorizontalSubsampling","kCVPixelFormatName","kCVPixelFormatOpenGLCompatibility","kCVPixelFormatOpenGLESCompatibility","kCVPixelFormatOpenGLFormat","kCVPixelFormatOpenGLInternalFormat","kCVPixelFormatOpenGLType","kCVPixelFormatPlanes","kCVPixelFormatQDCompatibility","kCVPixelFormatVerticalSubsampling","refCon","to_owned","try_from","try_into","type_id","version","CVReturn","kCVReturnAllocationFailed","kCVReturnDisplayLinkAlreadyRunning","kCVReturnDisplayLinkCallbacksNotSet","kCVReturnDisplayLinkNotRunning","kCVReturnError","kCVReturnFirst","kCVReturnInvalidArgument","kCVReturnInvalidDisplay","kCVReturnInvalidPixelBufferAttributes","kCVReturnInvalidPixelFormat","kCVReturnInvalidPoolAttributes","kCVReturnInvalidSize","kCVReturnLast","kCVReturnPixelBufferNotMetalCompatible","kCVReturnPixelBufferNotOpenGLCompatible","kCVReturnPoolAllocationFailed","kCVReturnRetry","kCVReturnSuccess","kCVReturnUnsupported","kCVReturnWouldExceedAllocationThreshold"],"q":["core_video_sys","","","","","","","","","","","","","","","core_video_sys::base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_video_sys::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_video_sys::display_link","","","","","","","","","","","","","","","","","core_video_sys::host_time","","","core_video_sys::image_buffer","core_video_sys::open_gl_es_texture","","","","","core_video_sys::open_gl_es_texture_cache","","","","core_video_sys::opengl_buffer","","","","","","","","","","","","","","core_video_sys::opengl_buffer_pool","","","","","","","","","core_video_sys::opengl_texture","","","","","","","core_video_sys::opengl_texture_cache","","","","","","","","","","","core_video_sys::pixel_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_video_sys::pixel_buffer_pool","","","","","","","","","","","","","","","","core_video_sys::pixel_format_description","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_video_sys::return_","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","@function   CVGetCurrentHostTime @abstract   Retrieve the …","@function   CVGetHostClockFrequency @abstract   Retrieve …","@function   CVGetHostClockMinimumTimeDelta @abstract   …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offset from main base address to base address of this …","bytes per row of this plane, big-endian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","This value must be present. For simple pixel formats this …","CFData containing the bit pattern for a block of black …","","Used to state requirements on block multiples.  v210 would …","","","","CGBitmapInfo value, if required","","This is the codec type constant, i.e. ‘2vuy’ or …","","","","","QuickTime/QuickDraw Pixel Format Type constant (OSType)","kCFBooleanTrue indicates that the format contains alpha …","kCFBooleanTrue indicates that the format contains RGB data","kCFBooleanTrue indicates that the format contains YCbCr …","","This is the equivalent Microsoft FourCC code for this …","Subsampling information for this plane.  Assumed to be ‘1…","","","","If present, these two keys describe the OpenGL format and …","","","All buffers have one or more image planes. Each plane may …","Pixel format compatibility flags","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,1,2,3,3,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,1,3,1,1,2,2,1,2,3,1,2,3,1,2,3,1,1,2,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,7,8,9,8,8,9,6,7,8,9,6,7,8,9,6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cvsmptetime",3]],["cvsmptetime",3]],[[["cvtime",3]],["cvtime",3]],[[["cvtimestamp",3]],["cvtimestamp",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["cvsmptetime",3],["formatter",3]],["result",6]],[[["cvtime",3],["formatter",3]],["result",6]],[[["cvtimestamp",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["__cvbuffer",4]],["__cvbuffer",4]],[[["",0],["",0]]],[[["__cvbuffer",4],["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["__cvdisplaylink",4]],["__cvdisplaylink",4]],[[["",0],["",0]]],[[["__cvdisplaylink",4],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cvplanarcomponentinfo",3]],["cvplanarcomponentinfo",3]],[[["cvplanarpixelbufferinfo",3]],["cvplanarpixelbufferinfo",3]],[[["cvplanarpixelbufferinfo_ycbcrplanar",3]],["cvplanarpixelbufferinfo_ycbcrplanar",3]],[[["cvplanarpixelbufferinfo_ycbcrbiplanar",3]],["cvplanarpixelbufferinfo_ycbcrbiplanar",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,[[["cvplanarcomponentinfo",3],["formatter",3]],["result",6]],[[["cvplanarpixelbufferinfo",3],["formatter",3]],["result",6]],[[["cvplanarpixelbufferinfo_ycbcrplanar",3],["formatter",3]],["result",6]],[[["cvplanarpixelbufferinfo_ycbcrbiplanar",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["cvfillextendedpixelscallbackdata",3]],["cvfillextendedpixelscallbackdata",3]],[[["",0],["",0]]],null,[[["cvfillextendedpixelscallbackdata",3],["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"CVSMPTETime"],[3,"CVTime"],[3,"CVTimeStamp"],[4,"__CVBuffer"],[4,"__CVDisplayLink"],[3,"CVPlanarComponentInfo"],[3,"CVPlanarPixelBufferInfo"],[3,"CVPlanarPixelBufferInfo_YCbCrPlanar"],[3,"CVPlanarPixelBufferInfo_YCbCrBiPlanar"],[3,"CVFillExtendedPixelsCallBackData"]]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":[3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11],"n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":["crc32fast","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","Returns the argument unchanged.","Computes the CRC32 hash of a byte slice.","Calls <code>U::from(self)</code>.","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["hasher",3]],["hasher",3]],[[["",0],["",0]]],[[["hasher",3],["hasher",3]]],[[],["hasher",3]],[[["hasher",3]],["u32",0]],[[["hasher",3]],["u64",0]],[[["hasher",3],["formatter",3]],["result",6]],[[]],[[],["u32",0]],[[]],[[],["hasher",3]],[[["u32",0]],["hasher",3]],[[["u32",0],["u64",0]],["hasher",3]],[[["hasher",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["hasher",3]]],[[["hasher",3]]]],"p":[[3,"Hasher"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message passing.","t":[12,13,13,13,13,13,13,3,3,3,3,3,4,3,3,3,3,4,3,13,13,3,3,4,3,4,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12],"n":["0","Disconnected","Disconnected","Disconnected","Disconnected","Empty","Full","IntoIter","Iter","ReadyTimeoutError","Receiver","RecvError","RecvTimeoutError","Select","SelectTimeoutError","SelectedOperation","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryReadyError","TryRecvError","TrySelectError","TrySendError","after","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","is_disconnected","is_disconnected","is_disconnected","is_disconnected","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_timeout","is_timeout","iter","len","len","ne","ne","ne","never","new","next","next","next","ready","ready_deadline","ready_timeout","recv","recv","recv","recv_deadline","recv_timeout","remove","same_channel","same_channel","select","select","select_deadline","select_timeout","send","send","send","send_deadline","send_timeout","tick","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_ready","try_recv","try_select","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","0","0","0","0"],"q":["crossbeam_channelcrossbeam_channel::SendTimeoutError","","crossbeam_channel::TrySendError",""],"d":["","The message could not be sent because the channel is …","The message could not be sent because the channel is …","The message could not be received because the channel is …","The message could not be received because the channel is …","A message could not be received because the channel is …","The message could not be sent because the channel is full.","A blocking iterator over messages in a channel.","A blocking iterator over messages in a channel.","An error returned from the <code>ready_timeout</code> method.","The receiving side of a channel.","An error returned from the <code>recv</code> method.","An error returned from the <code>recv_timeout</code> method.","Selects from a set of channel operations.","An error returned from the <code>select_timeout</code> method.","A selected operation that needs to be completed.","An error returned from the <code>send</code> method.","An error returned from the <code>send_timeout</code> method.","The sending side of a channel.","The message could not be sent because the channel is full …","A message could not be received because the channel is …","A non-blocking iterator over messages in a channel.","An error returned from the <code>try_ready</code> method.","An error returned from the <code>try_recv</code> method.","An error returned from the <code>try_select</code> method.","An error returned from the <code>try_send</code> method.","Creates a receiver that delivers a message after a certain …","Creates a receiver that delivers a message at a certain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a channel of bounded capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the index of the selected operation.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the message.","Unwraps the message.","Unwraps the message.","","","","","","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation timed out.","Returns <code>true</code> if the receive operation timed out.","A blocking iterator over messages in the channel.","Returns the number of messages in the channel.","Returns the number of messages in the channel.","","","","Creates a receiver that never delivers messages.","Creates an empty list of channel operations for selection.","","","","Blocks until one of the operations becomes ready.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is received or …","Adds a receive operation.","Completes the receive operation.","Waits for a message to be received from the channel, but …","Waits for a message to be received from the channel, but …","Removes a previously added operation.","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if receivers belong to the same channel.","Blocks until one of the operations becomes ready and …","Selects from a set of channel operations.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is sent or the …","Adds a send operation.","Completes the send operation.","Waits for a message to be sent into the channel, but only …","Waits for a message to be sent into the channel, but only …","Creates a receiver that delivers messages periodically.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over messages in the channel.","Attempts to find a ready operation without blocking.","Attempts to receive a message from the channel without …","Attempts to select one of the operations without blocking.","Attempts to send a message into the channel without …","","","","","","","","","","","","","","","","","","Creates a channel of unbounded capacity.","","","",""],"i":[1,2,3,4,5,4,2,0,0,0,0,0,0,0,0,0,0,0,0,3,5,0,0,0,0,0,0,0,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,0,6,7,6,7,11,1,2,3,13,4,5,14,15,16,17,6,7,11,1,2,3,13,4,5,14,15,16,17,11,6,7,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,1,2,2,3,3,13,13,4,4,5,5,14,14,15,15,16,17,6,7,8,9,10,11,12,1,2,2,3,3,13,4,4,5,5,14,15,16,17,12,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,1,2,3,7,7,8,9,10,2,3,4,5,6,7,4,6,7,2,3,5,7,6,7,1,2,3,0,11,8,9,10,11,11,11,7,11,12,7,7,11,6,7,11,0,11,11,6,11,12,6,6,0,6,7,11,1,2,3,13,4,5,14,15,16,17,1,2,3,13,4,5,14,15,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,7,11,7,11,6,6,7,8,9,10,11,12,1,2,3,13,4,5,14,15,16,17,0,18,19,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],["receiver",3,[["instant",3]]]],[[["instant",3]],["receiver",3,[["instantusize",0]]],[[["sender",3]],["option",4,[["usize",0]]]],[[["receiver",3]],["option",4,[["usize",0]]]],[[["sender",3]],["sender",3]],[[["receiver",3]],["receiver",3]],[[["select",3]],["select",3]],[[["senderror",3,[["clone",8]]]],["senderror",3,[["clone",8]]]],[[["trysenderror",4,[["clone",8]]]],["trysenderror",4,[["clone",8]]]],[[["sendtimeouterror",4,[["clone",8]]]],["sendtimeouterror",4,[["clone",8]]]],[[["recverror",3]],["recverror",3]],[[["tryrecverror",4]],["tryrecverror",4]],[[["recvtimeouterror",4]],["recvtimeouterror",4]],[[["tryselecterror",3]],["tryselecterror",3]],[[["selecttimeouterror",3]],["selecttimeouterror",3]],[[["tryreadyerror",3]],["tryreadyerror",3]],[[["readytimeouterror",3]],["readytimeouterror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["select",3]],[[["sender",3]]],[[["receiver",3]]],[[["selectedoperation",3]]],[[["senderror",3,[["partialeq",8]]],["senderror",3]],["bool",0]],[[["trysenderror",4,[["partialeq",8]]],["trysenderror",4]],["bool",0]],[[["sendtimeouterror",4,[["partialeq",8]]],["sendtimeouterror",4]],["bool",0]],[[["recverror",3],["recverror",3]],["bool",0]],[[["tryrecverror",4],["tryrecverror",4]],["bool",0]],[[["recvtimeouterror",4],["recvtimeouterror",4]],["bool",0]],[[["tryselecterror",3],["tryselecterror",3]],["bool",0]],[[["selecttimeouterror",3],["selecttimeouterror",3]],["bool",0]],[[["tryreadyerror",3],["tryreadyerror",3]],["bool",0]],[[["readytimeouterror",3],["readytimeouterror",3]],["bool",0]],[[["sender",3],["formatter",3]],["result",6]],[[["receiver",3],["formatter",3]],["result",6]],[[["iter",3],["formatter",3]],["result",6]],[[["tryiter",3],["formatter",3]],["result",6]],[[["intoiter",3],["formatter",3]],["result",6]],[[["select",3],["formatter",3]],["result",6]],[[["selectedoperation",3],["formatter",3]],["result",6]],[[["senderror",3],["formatter",3]],["result",6]],[[["senderror",3],["formatter",3]],["result",6]],[[["trysenderror",4],["formatter",3]],["result",6]],[[["trysenderror",4],["formatter",3]],["result",6]],[[["sendtimeouterror",4],["formatter",3]],["result",6]],[[["sendtimeouterror",4],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["recverror",3],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[["tryrecverror",4],["formatter",3]],["result",6]],[[["recvtimeouterror",4],["formatter",3]],["result",6]],[[["recvtimeouterror",4],["formatter",3]],["result",6]],[[["tryselecterror",3],["formatter",3]],["result",6]],[[["tryselecterror",3],["formatter",3]],["result",6]],[[["selecttimeouterror",3],["formatter",3]],["result",6]],[[["selecttimeouterror",3],["formatter",3]],["result",6]],[[["tryreadyerror",3],["formatter",3]],["result",6]],[[["readytimeouterror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["senderror",3]],["trysenderror",4]],[[["senderror",3]],["sendtimeouterror",4]],[[]],[[]],[[]],[[["recverror",3]],["tryrecverror",4]],[[]],[[["recverror",3]],["recvtimeouterror",4]],[[]],[[]],[[]],[[]],[[["selectedoperation",3]],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["senderror",3]]],[[["trysenderror",4]]],[[["sendtimeouterror",4]]],[[["receiver",3]]],[[["receiver",3]]],[[]],[[]],[[]],[[["trysenderror",4]],["bool",0]],[[["sendtimeouterror",4]],["bool",0]],[[["tryrecverror",4]],["bool",0]],[[["recvtimeouterror",4]],["bool",0]],[[["sender",3]],["bool",0]],[[["receiver",3]],["bool",0]],[[["tryrecverror",4]],["bool",0]],[[["sender",3]],["bool",0]],[[["receiver",3]],["bool",0]],[[["trysenderror",4]],["bool",0]],[[["sendtimeouterror",4]],["bool",0]],[[["recvtimeouterror",4]],["bool",0]],[[["receiver",3]],["iter",3]],[[["sender",3]],["usize",0]],[[["receiver",3]],["usize",0]],[[["senderror",3,[["partialeq",8]]],["senderror",3]],["bool",0]],[[["trysenderror",4,[["partialeq",8]]],["trysenderror",4]],["bool",0]],[[["sendtimeouterror",4,[["partialeq",8]]],["sendtimeouterror",4]],["bool",0]],[[],["receiver",3]],[[],["select",3]],[[["iter",3]],["option",4]],[[["tryiter",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["select",3]],["usize",0]],[[["select",3],["instant",3]],["result",4,[["usize",0],["readytimeouterror",3]]]],[[["select",3],["duration",3]],["result",4,[["usize",0],["readytimeouterror",3]]]],[[["receiver",3]],["result",4,[["recverror",3]]]],[[["select",3],["receiver",3]],["usize",0]],[[["selectedoperation",3],["receiver",3]],["result",4,[["recverror",3]]]],[[["receiver",3],["instant",3]],["result",4,[["recvtimeouterror",4]]]],[[["receiver",3],["duration",3]],["result",4,[["recvtimeouterror",4]]]],[[["select",3],["usize",0]]],[[["sender",3],["sender",3]],["bool",0]],[[["receiver",3],["receiver",3]],["bool",0]],[[["select",3]],["selectedoperation",3]],null,[[["select",3],["instant",3]],["result",4,[["selectedoperation",3],["selecttimeouterror",3]]]],[[["select",3],["duration",3]],["result",4,[["selectedoperation",3],["selecttimeouterror",3]]]],[[["sender",3]],["result",4,[["senderror",3]]]],[[["select",3],["sender",3]],["usize",0]],[[["selectedoperation",3],["sender",3]],["result",4,[["senderror",3]]]],[[["sender",3],["instant",3]],["result",4,[["sendtimeouterror",4]]]],[[["sender",3],["duration",3]],["result",4,[["sendtimeouterror",4]]]],[[["duration",3]],["receiver",3,[["instant",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["receiver",3]],["tryiter",3]],[[["select",3]],["result",4,[["usize",0],["tryreadyerror",3]]]],[[["receiver",3]],["result",4,[["tryrecverror",4]]]],[[["select",3]],["result",4,[["selectedoperation",3],["tryselecterror",3]]]],[[["sender",3]],["result",4,[["trysenderror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],null,null,null,null],"p":[[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Select"],[3,"SelectedOperation"],[3,"RecvError"],[3,"TrySelectError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"ReadyTimeoutError"],[13,"Timeout"],[13,"Disconnected"],[13,"Full"],[13,"Disconnected"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","t":[13,3,13,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Empty","Injector","Retry","Steal","Stealer","Success","Worker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","init","init","init","init","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_retry","is_success","len","len","len","ne","new","new_fifo","new_lifo","or_else","pop","push","push","steal","steal","steal_batch","steal_batch","steal_batch_and_pop","steal_batch_and_pop","stealer","success","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0"],"q":["crossbeam_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_deque::Steal"],"d":["The queue was empty at the time of stealing.","An injector queue.","The steal operation needs to be retried.","Possible outcomes of a steal operation.","A stealer handle of a worker queue.","At least one task was successfully stolen.","A worker queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Consumes items until a <code>Success</code> is found and returns it.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue was empty at the time of …","Returns <code>true</code> if the steal operation needs to be retried.","Returns <code>true</code> if at least one task was stolen.","Returns the number of tasks in the deque.","Returns the number of tasks in the deque.","Returns the number of tasks in the queue.","","Creates a new injector queue.","Creates a FIFO worker queue.","Creates a LIFO worker queue.","If no task was stolen, attempts another steal operation.","Pops a task from the queue.","Pushes a task into the queue.","Pushes a task into the queue.","Steals a task from the queue.","Steals a task from the queue.","Steals a batch of tasks and pushes them into another …","Steals a batch of tasks and pushes them into a worker.","Steals a batch of tasks, pushes them into another worker, …","Steals a batch of tasks, pushes them into a worker, and …","Creates a stealer for this queue.","Returns the result of the operation, if successful.","","","","","","","","","","","","","","",""],"i":[1,0,1,0,0,1,0,2,3,4,1,2,3,4,1,3,1,3,1,4,2,3,4,1,2,3,4,1,2,3,4,4,1,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,1,2,3,4,1,1,1,2,3,4,1,4,2,2,1,2,2,4,3,4,3,4,3,4,2,1,3,1,2,3,4,1,2,3,4,1,2,3,4,1,5],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["stealer",3]],["stealer",3]],[[["steal",4,[["clone",8]]]],["steal",4,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["injector",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["injector",3]]],[[["usize",0]]],[[["steal",4,[["partialeq",8]]],["steal",4]],["bool",0]],[[["worker",3],["formatter",3]],["result",6]],[[["stealer",3],["formatter",3]],["result",6]],[[["injector",3],["formatter",3]],["result",6]],[[["steal",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["steal",4]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["worker",3]],["bool",0]],[[["stealer",3]],["bool",0]],[[["injector",3]],["bool",0]],[[["steal",4]],["bool",0]],[[["steal",4]],["bool",0]],[[["steal",4]],["bool",0]],[[["worker",3]],["usize",0]],[[["stealer",3]],["usize",0]],[[["injector",3]],["usize",0]],[[["steal",4,[["partialeq",8]]],["steal",4]],["bool",0]],[[],["injector",3]],[[],["worker",3]],[[],["worker",3]],[[["steal",4]],["steal",4]],[[["worker",3]],["option",4]],[[["worker",3]]],[[["injector",3]]],[[["stealer",3]],["steal",4]],[[["injector",3]],["steal",4]],[[["stealer",3],["worker",3]],["steal",4]],[[["injector",3],["worker",3]],["steal",4]],[[["stealer",3],["worker",3]],["steal",4]],[[["injector",3],["worker",3]],["steal",4]],[[["worker",3]],["stealer",3]],[[["steal",4]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"],[13,"Success"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":[18,3,3,6,8,3,3,16,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","CompareExchangeError","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","compare_exchange","compare_exchange_weak","current","default","default","default","default_collector","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","failure","fetch_and","fetch_or","fetch_update","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","is_pinned","load","load_consume","new","new","new","new","null","null","partial_cmp","pin","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_owned","try_into_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag"],"q":["crossbeam_epochd":["The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","The error returned on failed compare-and-swap operation.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","","","","Returns the default global collector.","Stores a function so that it can be executed at some point …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some point …","Dereferences the given pointer.","","Dereferences the pointer.","Mutably dereferences the given pointer.","","Dereferences the pointer.","Drops the object pointed to by the given pointer.","","","","","Checks if both handles point to the same collector.","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Fetches the pointer, and then applies a function to it …","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","Returns the argument unchanged.","","Returns a new atomic pointer pointing to <code>owned</code>.","","Returns the argument unchanged.","Returns a new atomic pointer pointing to <code>raw</code>.","Returns a new atomic pointer pointing to <code>ptr</code>.","","","Returns the argument unchanged.","","Returns a new owned pointer pointing to <code>b</code>.","Returns a new pointer pointing to <code>raw</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a <code>Shared</code>.","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the current thread is pinned.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the current thread.","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given function …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","Takes ownership of the pointee if it is non-null.","Takes ownership of the pointee if it is not null.","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …"],"i":[1,0,0,0,0,0,0,1,0,0,0,0,0,2,3,2,3,4,5,2,2,3,6,7,8,4,5,2,2,3,6,7,8,5,2,3,6,5,2,3,6,3,7,8,5,5,5,5,4,5,3,6,0,8,8,8,1,2,3,1,2,3,1,2,7,8,3,6,9,5,5,5,5,8,4,5,5,2,3,3,6,7,8,4,5,5,5,5,5,5,5,2,2,2,2,3,3,6,7,8,2,10,2,3,1,5,2,4,5,2,3,6,7,8,2,5,3,2,10,2,3,3,0,7,5,5,5,2,6,4,5,3,3,0,7,6,8,8,5,9,5,2,3,5,2,3,6,4,5,2,3,6,7,8,4,5,2,3,6,7,8,5,3,4,5,2,3,6,7,8,0,2,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["shared",3]],["",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["owned",3,[["clone",8]]]],["owned",3,[["clone",8]]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["collector",3]],["collector",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["ordering",4]],[[["localhandle",3]],["collector",3]],[[["guard",3]],["option",4,[["collector",3]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["guard",3]],["result",4,[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["compareandseterror",6,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["guard",3]],["result",4,[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["compareandseterror",6,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4],["ordering",4],["guard",3]],["result",4,[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["compareexchangeerror",3,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4],["ordering",4],["guard",3]],["result",4,[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["compareexchangeerror",3,[["",26,[["sized",8],["pointable",8]]]]]]]],null,[[],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["collector",3]],[[],["collector",3]],[[["guard",3]]],[[["guard",3],["shared",3]]],[[["guard",3]]],[[["usize",0]],["",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["usize",0]],["",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["",0]],[[["usize",0]]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]]],[[["localhandle",3]]],[[["guard",3]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["bool",0]],[[["collector",3],["collector",3]],["bool",0]],[[["",0]],["ordering",4]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["usize",0],["ordering",4],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["usize",0],["ordering",4],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4],["ordering",4],["guard",3]],["result",4,[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["usize",0],["ordering",4],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["guard",3]]],[[["compareexchangeerror",3,[["",26,[["pointer",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["formatter",3]],["result",6]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["formatter",3]],["result",6]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]],["formatter",3]],["result",6]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["formatter",3]],["result",6]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["formatter",3]],["result",6]],[[["collector",3],["formatter",3]],["result",6]],[[["localhandle",3],["formatter",3]],["result",6]],[[["guard",3],["formatter",3]],["result",6]],[[]],[[["box",3]],["atomic",3]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["never",0]]],[[]],[[["",0]],["atomic",3]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["atomic",3]],[[],["owned",3]],[[]],[[["never",0]]],[[["box",3]],["owned",3]],[[["",0]],["shared",3]],[[]],[[]],[[]],[[]],[[["",0]],["owned",3]],[[["usize",0]]],[[["usize",0]],["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["usize",0]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["usize",0]],[[],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["owned",3]],["box",3]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["usize",0]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["usize",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["usize",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["bool",0]],[[],["bool",0]],[[["localhandle",3]],["bool",0]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["atomic",3]],[[],["owned",3]],[[],["collector",3]],null,[[],["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],[[],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["option",4,[["ordering",4]]]],[[],["guard",3]],[[["localhandle",3]],["guard",3]],[[["collector",3]],["localhandle",3]],[[["guard",3]]],[[["guard",3]]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["pointer",8,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4]]],[[["",0]],["ordering",4]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]],["pointer",8,[["",26,[["sized",8],["pointable",8]]]]],["ordering",4],["guard",3]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],["usize",0]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["atomic",3,[["",26,[["sized",8],["pointable",8]]]]]],["option",4,[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]]],["option",4,[["owned",3,[["",26,[["sized",8],["pointable",8]]]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["guard",3]],[[["owned",3,[["",26,[["sized",8],["pointable",8]]]]],["usize",0]],["owned",3,[["",26,[["sized",8],["pointable",8]]]]]],[[["shared",3,[["",26,[["sized",8],["pointable",8]]]]],["usize",0]],["shared",3,[["",26,[["sized",8],["pointable",8]]]]]]],"p":[[8,"Pointable"],[3,"Owned"],[3,"Shared"],[3,"CompareExchangeError"],[3,"Atomic"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","ne","new","new","reset","snooze","spin","sync","thread","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id","Parker","ShardedLock","ShardedLockReadGuard","ShardedLockWriteGuard","Unparker","WaitGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","deref","deref","deref_mut","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","get_mut","into","into","into","into","into","into","into_inner","into_raw","into_raw","is_poisoned","new","new","new","park","park_deadline","park_timeout","read","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","unpark","unparker","wait","write","Scope","ScopedJoinHandle","ScopedThreadBuilder","as_pthread_t","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","fmt","fmt","fmt","from","from","from","into","into","into","into_pthread_t","join","name","scope","spawn","spawn","stack_size","thread","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["crossbeam_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","Thread synchronization primitives.","Threads that can borrow variables from the stack.","","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","","","A thread parking primitive.","A sharded reader-writer lock.","A guard used to release the shared read access of a …","A guard used to release the exclusive write access of a …","Unparks a thread parked by the associated <code>Parker</code>.","Enables threads to synchronize the beginning or end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a raw pointer into a <code>Parker</code>.","Converts a raw pointer into an <code>Unparker</code>.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this lock, returning the underlying data.","Converts a <code>Parker</code> into a raw pointer.","Converts an <code>Unparker</code> into a raw pointer.","Returns <code>true</code> if the lock is poisoned.","Creates a new <code>Parker</code>.","Creates a new sharded reader-writer lock.","Creates a new wait group and returns the single reference …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Locks with shared read access, blocking the current thread …","","","","","","","","","","","","","","","","","Attempts to acquire this lock with shared read access.","Attempts to acquire this lock with exclusive write access.","","","","","","","Atomically makes the token available if it is not already.","Returns a reference to an associated <code>Unparker</code>.","Drops this reference and waits until all other references …","Locks with exclusive write access, blocking the current …","A scope for spawning threads.","A handle that can be used to join its scoped thread.","Configures the properties of a new thread.","","","","","","","","Creates a builder that can configure a thread before …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Waits for the thread to finish and returns its result.","Sets the name for the new thread.","Creates a new scope for spawning threads.","Spawns a scoped thread.","Spawns a scoped thread with this configuration.","Sets the size of the stack for the new thread.","Returns a handle to the underlying thread.","","","","","","","","",""],"i":[0,0,0,1,2,1,2,2,2,1,2,2,2,2,1,2,1,2,2,2,2,1,2,2,1,2,1,2,1,1,1,0,0,2,1,2,1,2,1,2,0,0,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4,0,0,0,0,0,0,5,6,7,8,9,10,5,6,7,8,9,10,6,10,6,10,5,7,10,8,9,9,9,10,5,6,7,8,8,9,9,10,5,6,7,7,7,8,9,10,5,6,7,5,6,7,8,9,10,7,5,6,7,5,7,10,5,5,5,7,6,10,8,9,5,6,7,8,9,10,5,6,7,8,9,10,7,7,5,6,7,8,9,10,6,5,10,7,0,0,0,11,12,11,13,12,11,13,12,12,11,13,12,11,13,12,11,13,11,11,13,0,12,13,13,11,12,11,13,12,11,13,12,11,13],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cachepadded",3,[["clone",8]]]],["cachepadded",3,[["clone",8]]]],[[["",0],["",0]]],[[],["backoff",3]],[[],["cachepadded",3,[["default",8]]]],[[["cachepadded",3]],["",0]],[[["cachepadded",3]],["",0]],[[["cachepadded",3,[["partialeq",8]]],["cachepadded",3]],["bool",0]],[[["backoff",3],["formatter",3]],["result",6]],[[["cachepadded",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[["never",0]]],[[]],[[],["cachepadded",3]],[[["cachepadded",3,[["hash",8]]],["",0]]],[[]],[[]],[[["cachepadded",3]]],[[["backoff",3]],["bool",0]],[[["cachepadded",3,[["partialeq",8]]],["cachepadded",3]],["bool",0]],[[],["backoff",3]],[[],["cachepadded",3]],[[["backoff",3]]],[[["backoff",3]]],[[["backoff",3]]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["atomiccell",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["atomiccell",3,[["",26,[["copy",8],["eq",8]]]]],["",26,[["copy",8],["eq",8]]],["",26,[["copy",8],["eq",8]]]],["",26,[["copy",8],["eq",8]]]],[[["atomiccell",3,[["",26,[["copy",8],["eq",8]]]]],["",26,[["copy",8],["eq",8]]],["",26,[["copy",8],["eq",8]]]],["result",4,[["",26,[["copy",8],["eq",8]]],["",26,[["copy",8],["eq",8]]]]]],[[],["atomiccell",3,[["default",8]]]],[[["atomiccell",3]]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["bool",0]]],["bool",0]],["bool",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["bool",0]]],["bool",0]],["bool",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["bool",0]]],["bool",0]],["bool",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["",26,[["copy",8],["eq",8]]]]]],["result",4,[["",26,[["copy",8],["eq",8]]],["",26,[["copy",8],["eq",8]]]]]],[[["atomiccell",3,[["i64",0]]],["i64",0]],["i64",0]],[[["atomiccell",3,[["i16",0]]],["i16",0]],["i16",0]],[[["atomiccell",3,[["i32",0]]],["i32",0]],["i32",0]],[[["atomiccell",3,[["u16",0]]],["u16",0]],["u16",0]],[[["atomiccell",3,[["i128",0]]],["i128",0]],["i128",0]],[[["atomiccell",3,[["u32",0]]],["u32",0]],["u32",0]],[[["atomiccell",3,[["i8",0]]],["i8",0]],["i8",0]],[[["atomiccell",3,[["u64",0]]],["u64",0]],["u64",0]],[[["atomiccell",3,[["isize",0]]],["isize",0]],["isize",0]],[[["atomiccell",3,[["bool",0]]],["bool",0]],["bool",0]],[[["atomiccell",3,[["u128",0]]],["u128",0]],["u128",0]],[[["atomiccell",3,[["usize",0]]],["usize",0]],["usize",0]],[[["atomiccell",3,[["u8",0]]],["u8",0]],["u8",0]],[[["atomiccell",3,[["",26,[["copy",8],["debug",8]]]]],["formatter",3]],["result",6]],[[]],[[],["atomiccell",3]],[[["never",0]]],[[]],[[["atomiccell",3]]],[[],["bool",0]],[[["atomiccell",3,[["copy",8]]]],["copy",8]],[[["",0]]],[[],["atomiccell",3]],[[["atomiccell",3]]],[[["atomiccell",3]]],[[["atomiccell",3,[["default",8]]]],["default",8]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["unparker",3]],["unparker",3]],[[["waitgroup",3]],["waitgroup",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["parker",3]],[[],["shardedlock",3,[["default",8]]]],[[],["waitgroup",3]],[[["shardedlockreadguard",3,[["sized",8]]]],["",0]],[[["shardedlockwriteguard",3,[["sized",8]]]],["",0]],[[["shardedlockwriteguard",3,[["sized",8]]]],["",0]],[[["shardedlockwriteguard",3,[["sized",8]]]]],[[["waitgroup",3]]],[[["parker",3],["formatter",3]],["result",6]],[[["unparker",3],["formatter",3]],["result",6]],[[["shardedlock",3,[["",26,[["sized",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["shardedlockreadguard",3,[["",26,[["sized",8],["display",8]]]]],["formatter",3]],["result",6]],[[["shardedlockreadguard",3,[["debug",8]]],["formatter",3]],["result",6]],[[["shardedlockwriteguard",3,[["debug",8]]],["formatter",3]],["result",6]],[[["shardedlockwriteguard",3,[["",26,[["sized",8],["display",8]]]]],["formatter",3]],["result",6]],[[["waitgroup",3],["formatter",3]],["result",6]],[[]],[[]],[[],["shardedlock",3]],[[["never",0]]],[[]],[[]],[[]],[[]],[[],["parker",3]],[[],["unparker",3]],[[["shardedlock",3,[["sized",8]]]],["lockresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["shardedlock",3]],["lockresult",6]],[[["parker",3]]],[[["unparker",3]]],[[["shardedlock",3,[["sized",8]]]],["bool",0]],[[],["parker",3]],[[],["shardedlock",3]],[[],["waitgroup",3]],[[["parker",3]]],[[["parker",3],["instant",3]]],[[["parker",3],["duration",3]]],[[["shardedlock",3,[["sized",8]]]],["lockresult",6,[["shardedlockreadguard",3,[["sized",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["shardedlock",3,[["sized",8]]]],["trylockresult",6,[["shardedlockreadguard",3,[["sized",8]]]]]],[[["shardedlock",3,[["sized",8]]]],["trylockresult",6,[["shardedlockwriteguard",3,[["sized",8]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["unparker",3]]],[[["parker",3]],["unparker",3]],[[["waitgroup",3]]],[[["shardedlock",3,[["sized",8]]]],["lockresult",6,[["shardedlockwriteguard",3,[["sized",8]]]]]],null,null,null,[[["scopedjoinhandle",3]],["rawpthread",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scope",3]],["scopedthreadbuilder",3]],[[["scope",3],["formatter",3]],["result",6]],[[["scopedjoinhandle",3],["formatter",3]],["result",6]],[[["scopedthreadbuilder",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scopedjoinhandle",3]],["rawpthread",6]],[[["scopedjoinhandle",3]],["result",6]],[[["scopedthreadbuilder",3],["string",3]],["scopedthreadbuilder",3]],[[],["result",6]],[[["scope",3]],["scopedjoinhandle",3]],[[["scopedthreadbuilder",3]],["result",6,[["scopedjoinhandle",3]]]],[[["scopedthreadbuilder",3],["usize",0]],["scopedthreadbuilder",3]],[[["scopedjoinhandle",3]],["thread",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Backoff"],[3,"CachePadded"],[8,"AtomicConsume"],[3,"AtomicCell"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"],[3,"ScopedJoinHandle"],[3,"Scope"],[3,"ScopedThreadBuilder"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","t":[13,4,3,13,13,13,13,4,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Best","Compression","CompressionOptions","Default","Fast","Greedy","Lazy","MatchingType","Normal","SpecialOptions","_ForceFixed","_ForceStored","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deflate_bytes","deflate_bytes_conf","deflate_bytes_zlib","deflate_bytes_zlib_conf","eq","eq","eq","eq","fast","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","high","huffman_only","into","into","into","into","lazy_if_less_than","matching_type","max_hash_checks","ne","partial_cmp","partial_cmp","rle","special","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","DeflateEncoder","ZlibEncoder","borrow","borrow","borrow_mut","borrow_mut","checksum","drop","drop","finish","finish","flush","flush","from","from","into","into","new","new","reset","reset","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":["deflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deflate::write","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Higher compression level (<code>CompressionOptions::high()</code>).","An enum describing the level of compression to be used by …","A struct describing the options for a compressor or …","Default level (<code>CompressionOptions::default()</code>).","Fast minimal compression (<code>CompressionOptions::fast()</code>).","Use greedy matching: the matching algorithm simply uses a …","Use lazy matching: after finding a match, the next input …","An enum describing whether we use lazy or greedy matching.","Compress normally.","Enum allowing some special options (not implemented yet)!","Force fixed Huffman tables. (Unimplemented!).","Force stored (uncompressed) blocks only. (Unimplemented!).","","","","","","","","","","","","","","","","","","","","","Returns the options describing the default compression …","Compress the given slice of bytes with DEFLATE compression …","Compress the given slice of bytes with DEFLATE compression.","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","","","","","Returns  a fast set of compression settings","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns compression settings roughly corresponding to the …","Returns a set of compression settings that makes the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Only lazy match if we have a length less than this value.","Whether to use lazy or greedy matching.","The maximum number of checks to make in the hash table for …","","","","Returns a set of compression settings that makes the …","Force fixed/stored blocks (Not implemented yet).","","","","","","","","","","","","","","","","","","Encoders implementing a <code>Write</code> interface.","A DEFLATE encoder/compressor.","A Zlib encoder/compressor.","","","","","Return the adler32 checksum of the currently consumed data.","When the encoder is dropped, output the rest of the data.","When the encoder is dropped, output the rest of the data.","Encode all pending data to the contained writer, consume …","Encode all pending data to the contained writer, consume …","Flush the encoder.","Flush the encoder.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder using the provided compression …","Create a new <code>ZlibEncoder</code> using the provided compression …","Resets the encoder (except the compression options), …","Resets the encoder (except the compression options), …","","","","","","","",""],"i":[1,0,0,1,1,2,2,0,3,0,3,3,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,2,1,3,4,0,0,0,0,1,3,4,2,4,1,3,4,2,2,1,3,4,4,2,1,3,4,2,4,4,1,3,4,2,4,4,4,4,1,2,4,4,1,3,4,2,2,1,3,4,2,1,3,4,2,1,3,4,2,0,0,0,5,6,5,6,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compression",4]],["compression",4]],[[["specialoptions",4]],["specialoptions",4]],[[["compressionoptions",3]],["compressionoptions",3]],[[["matchingtype",4]],["matchingtype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["compression",4],["compression",4]],["ordering",4]],[[["matchingtype",4],["matchingtype",4]],["ordering",4]],[[],["compression",4]],[[],["specialoptions",4]],[[],["compressionoptions",3]],[[],["vec",3,[["u8",0]]]],[[["into",8,[["compressionoptions",3]]]],["vec",3,[["u8",0]]]],[[],["vec",3,[["u8",0]]]],[[["into",8,[["compressionoptions",3]]]],["vec",3,[["u8",0]]]],[[["compression",4],["compression",4]],["bool",0]],[[["specialoptions",4],["specialoptions",4]],["bool",0]],[[["compressionoptions",3],["compressionoptions",3]],["bool",0]],[[["matchingtype",4],["matchingtype",4]],["bool",0]],[[],["compressionoptions",3]],[[["compression",4],["formatter",3]],["result",6]],[[["specialoptions",4],["formatter",3]],["result",6]],[[["compressionoptions",3],["formatter",3]],["result",6]],[[["matchingtype",4],["formatter",3]],["result",6]],[[["matchingtype",4],["formatter",3]],["result",6]],[[]],[[]],[[["compression",4]],["compressionoptions",3]],[[]],[[]],[[["compression",4],["",0]]],[[["specialoptions",4],["",0]]],[[["compressionoptions",3],["",0]]],[[["matchingtype",4],["",0]]],[[],["compressionoptions",3]],[[],["compressionoptions",3]],[[]],[[]],[[]],[[]],null,null,null,[[["compressionoptions",3],["compressionoptions",3]],["bool",0]],[[["compression",4],["compression",4]],["option",4,[["ordering",4]]]],[[["matchingtype",4],["matchingtype",4]],["option",4,[["ordering",4]]]],[[],["compressionoptions",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["zlibencoder",3,[["write",8]]]],["u32",0]],[[["deflateencoder",3,[["write",8]]]]],[[["zlibencoder",3,[["write",8]]]]],[[["deflateencoder",3,[["write",8]]]],["result",6,[["write",8]]]],[[["zlibencoder",3,[["write",8]]]],["result",6,[["write",8]]]],[[["deflateencoder",3,[["write",8]]]],["result",6]],[[["zlibencoder",3,[["write",8]]]],["result",6]],[[]],[[]],[[]],[[]],[[["write",8],["into",8,[["compressionoptions",3]]]],["deflateencoder",3,[["write",8]]]],[[["write",8],["into",8,[["compressionoptions",3]]]],["zlibencoder",3,[["write",8]]]],[[["deflateencoder",3,[["write",8]]],["write",8]],["result",6,[["write",8]]]],[[["zlibencoder",3,[["write",8]]],["write",8]],["result",6,[["write",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["deflateencoder",3,[["write",8]]]],["result",6,[["usize",0]]]],[[["zlibencoder",3,[["write",8]]]],["result",6,[["usize",0]]]]],"p":[[4,"Compression"],[4,"MatchingType"],[4,"SpecialOptions"],[3,"CompressionOptions"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"dispatch":{"doc":"Rust wrapper for Apple’s Grand Central Dispatch (GCD).","t":[13,13,13,3,3,13,13,3,3,4,4,3,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,17,17,17,17,17,17,17,11,11,5,5,5,5,5,6,5,5,5,5,5,5,5,5,6,5,5,3,6,5,6,6,5,5,6,5,5,5,5,5,6,5,5,5,5,5,5,5,6,11,11,11,11,11],"n":["Background","Concurrent","Default","Group","GroupGuard","High","Low","Once","Queue","QueueAttribute","QueuePriority","Semaphore","SemaphoreGuard","Serial","SuspendGuard","WaitTimeout","access","access_timeout","apply","barrier_async","barrier_sync","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","drop","drop","drop","drop","drop","drop","enter","eq","eq","exec_after","exec_async","exec_async","exec_sync","ffi","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from","from","global","hash","hash","into","into","into","into","into","into","into","into","into","into","is_empty","label","leave","main","map","new","new","notify","resume","signal","signal","suspend","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait","wait_timeout","wait_timeout","with_target_queue","DISPATCH_QUEUE_CONCURRENT","DISPATCH_QUEUE_PRIORITY_BACKGROUND","DISPATCH_QUEUE_PRIORITY_DEFAULT","DISPATCH_QUEUE_PRIORITY_HIGH","DISPATCH_QUEUE_PRIORITY_LOW","DISPATCH_QUEUE_SERIAL","DISPATCH_TIME_FOREVER","DISPATCH_TIME_NOW","borrow","borrow_mut","dispatch_after_f","dispatch_apply_f","dispatch_async_f","dispatch_barrier_async_f","dispatch_barrier_sync_f","dispatch_function_t","dispatch_get_context","dispatch_get_global_queue","dispatch_get_main_queue","dispatch_group_async_f","dispatch_group_create","dispatch_group_enter","dispatch_group_leave","dispatch_group_notify_f","dispatch_group_t","dispatch_group_wait","dispatch_main","dispatch_object_s","dispatch_object_t","dispatch_once_f","dispatch_once_t","dispatch_queue_attr_t","dispatch_queue_create","dispatch_queue_get_label","dispatch_queue_t","dispatch_release","dispatch_resume","dispatch_retain","dispatch_semaphore_create","dispatch_semaphore_signal","dispatch_semaphore_t","dispatch_semaphore_wait","dispatch_set_context","dispatch_set_finalizer_f","dispatch_set_target_queue","dispatch_suspend","dispatch_sync_f","dispatch_time","dispatch_time_t","from","into","try_from","try_into","type_id"],"q":["dispatch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dispatch::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The queue is scheduled for execution after all high …","The queue executes blocks concurrently.","The queue is scheduled for execution after all high …","A Grand Central Dispatch group.","An RAII guard which will leave a <code>Group</code> when dropped.","The queue is scheduled for execution before any default …","The queue is scheduled for execution after all default …","A predicate used to execute a closure only once for the …","A Grand Central Dispatch queue.","The type of a dispatch queue.","The priority of a global concurrent queue.","A counting semaphore.","An RAII guard which will signal a <code>Semaphore</code> when dropped.","The queue executes blocks serially in FIFO order.","An RAII guard which will resume a suspended <code>Queue</code> when …","An error indicating a wait timed out.","Wait to access a resource protected by self. This …","Wait until the specified timeout to access a resource …","Submits a closure to be executed on self the given number …","Submits a closure to be executed on self as a barrier and …","Submits a closure to be executed on self as a barrier and …","","","","","","","","","","","","","","","","","","","","","Executes a closure once, ensuring that no other closure …","","","","","","","","","","","","","","","","","Creates a new dispatch <code>Group</code>.","Creates a new dispatch <code>Queue</code>.","","","","","","","Indicates that a closure has entered self, and increments …","","","After the specified delay, submits a closure for …","Submits a closure asynchronously to the given <code>Queue</code> and …","Submits a closure for asynchronous execution on self and …","Submits a closure for execution on self and waits until it …","Raw foreign function interface for libdispatch.","","","","","","","","","","","","Submits a closure to be executed on self for each element …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a system-defined global concurrent <code>Queue</code> with the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether self is currently empty.","Returns the label that was specified for self.","Drops self, leaving the <code>Group</code>.","Returns the serial dispatch <code>Queue</code> associated with the …","Submits a closure to be executed on self for each element …","Creates a new <code>Once</code>.","Creates a new <code>Semaphore</code> with an initial value.","Schedules a closure to be submitted to the given <code>Queue</code> …","Drops self, allowing the suspended <code>Queue</code> to resume.","Signal (increment) self.","Drops self, signaling the <code>Semaphore</code>.","Suspends the invocation of blocks on self and returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits synchronously for all tasks associated with self to …","Wait for (decrement) self.","Waits for all tasks associated with self to complete …","Wait for (decrement) self until the specified timeout has …","Creates a new dispatch <code>Queue</code> with the given target queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[1,2,1,0,0,1,1,0,0,0,0,0,0,2,0,0,3,3,4,4,4,5,6,2,1,4,7,8,3,9,10,5,6,2,1,4,7,8,3,9,10,8,5,6,2,1,4,7,3,10,5,6,2,1,4,7,3,10,5,4,5,6,4,7,3,9,5,2,1,4,5,4,4,0,5,6,2,1,4,7,8,3,9,10,10,4,5,6,2,1,4,7,8,3,9,10,4,2,1,5,6,2,1,4,7,8,3,9,10,5,4,6,4,4,8,3,5,7,3,9,4,5,6,2,1,4,7,3,10,10,5,6,2,1,4,7,8,3,9,10,5,6,2,1,4,7,8,3,9,10,5,6,2,1,4,7,8,3,9,10,5,3,5,3,4,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["semaphore",3]],["semaphoreguard",3]],[[["semaphore",3],["duration",3]],["result",4,[["semaphoreguard",3],["waittimeout",3]]]],[[["queue",3],["usize",0]]],[[["queue",3]]],[[["queue",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["once",3]]],[[["group",3]],["group",3]],[[["groupguard",3]],["groupguard",3]],[[["queueattribute",4]],["queueattribute",4]],[[["queuepriority",4]],["queuepriority",4]],[[["queue",3]],["queue",3]],[[["suspendguard",3]],["suspendguard",3]],[[["semaphore",3]],["semaphore",3]],[[["waittimeout",3]],["waittimeout",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["group",3]],[[["str",0],["queueattribute",4]],["queue",3]],[[["group",3]]],[[["groupguard",3]]],[[["queue",3]]],[[["suspendguard",3]]],[[["semaphore",3]]],[[["semaphoreguard",3]]],[[["group",3]],["groupguard",3]],[[["queueattribute",4],["queueattribute",4]],["bool",0]],[[["queuepriority",4],["queuepriority",4]],["bool",0]],[[["queue",3],["duration",3]]],[[["group",3],["queue",3]]],[[["queue",3]]],[[["queue",3]]],null,[[["group",3],["formatter",3]],["result",6]],[[["groupguard",3],["formatter",3]],["result",6]],[[["queueattribute",4],["formatter",3]],["result",6]],[[["queuepriority",4],["formatter",3]],["result",6]],[[["queue",3],["formatter",3]],["result",6]],[[["suspendguard",3],["formatter",3]],["result",6]],[[["once",3],["formatter",3]],["result",6]],[[["semaphore",3],["formatter",3]],["result",6]],[[["semaphoreguard",3],["formatter",3]],["result",6]],[[["waittimeout",3],["formatter",3]],["result",6]],[[["waittimeout",3],["formatter",3]],["result",6]],[[["queue",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["queuepriority",4]],["queue",3]],[[["queueattribute",4],["",0]]],[[["queuepriority",4],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["group",3]],["bool",0]],[[["queue",3]],["str",0]],[[["groupguard",3]]],[[],["queue",3]],[[["queue",3],["vec",3]],["vec",3]],[[],["once",3]],[[["u32",0]],["semaphore",3]],[[["group",3],["queue",3]]],[[["suspendguard",3]]],[[["semaphore",3]],["bool",0]],[[["semaphoreguard",3]]],[[["queue",3]],["suspendguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["group",3]]],[[["semaphore",3]]],[[["group",3],["duration",3]],["result",4,[["waittimeout",3]]]],[[["semaphore",3],["duration",3]],["result",4,[["waittimeout",3]]]],[[["str",0],["queueattribute",4],["queue",3]],["queue",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,null,null,[[],["dispatch_queue_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"QueuePriority"],[4,"QueueAttribute"],[3,"Semaphore"],[3,"Queue"],[3,"Group"],[3,"GroupGuard"],[3,"SuspendGuard"],[3,"Once"],[3,"SemaphoreGuard"],[3,"WaitTimeout"],[3,"dispatch_object_s"]]},\
"draw_state":{"doc":"Graphics state blocks for gfx-rs","t":[0,0,0,0,0,17,17,17,17,17,17,17,17,17,12,12,18,13,13,18,13,3,3,4,13,3,3,4,13,13,13,4,13,13,3,13,13,13,4,4,13,13,4,18,13,13,13,13,13,13,13,13,13,6,13,13,3,13,13,13,3,6,6,13,13,13,18,4,3,3,13,13,13,13,13,3,4,3,13,13,13,13,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,6,6,6,6,3,3,6,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["preset","state","target","blend","depth","ADD","ALPHA","INVERT","MULTIPLY","REPLACE","LESS_EQUAL_TEST","LESS_EQUAL_WRITE","PASS_TEST","PASS_WRITE","0","1","ALPHA","Add","Always","BLUE","Back","Blend","BlendChannel","BlendValue","Clockwise","Color","ColorMask","Comparison","ConstAlpha","ConstColor","CounterClockwise","CullFace","DecrementClamp","DecrementWrap","Depth","DestAlpha","DestColor","Equal","Equation","Factor","Fill","Front","FrontFace","GREEN","Greater","GreaterEqual","IncrementClamp","IncrementWrap","Invert","Keep","Less","LessEqual","Line","LineWidth","Max","Min","MultiSample","Never","NotEqual","Nothing","Offset","OffsetSlope","OffsetUnits","One","OneMinus","Point","RED","RasterMethod","Rasterizer","RefValues","Replace","RevSub","SourceAlpha","SourceAlphaSaturated","SourceColor","Stencil","StencilOp","StencilSide","Sub","Zero","Zero","ZeroPlus","all","alpha","back","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blend","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","complement","contains","cull_face","default","default","default","default","default","default","default","destination","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equation","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","front","front_face","fun","fun","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","mask","mask_read","mask_write","method","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_fill","not","offset","op_depth_fail","op_fail","op_pass","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","samples","set","source","stencil","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_cull_back","with_offset","write","0","0","0","ColorValue","Depth","Layer","Level","Mirror","Rect","Stencil","X","Y","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","h","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","not","partial_cmp","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","w","x","y"],"q":["draw_state","","","draw_state::preset","","draw_state::preset::blend","","","","","draw_state::preset::depth","","","","draw_state::statedraw_state::state::Factor","","draw_state::state::RasterMethod","draw_state::target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["State presets","Fixed-function hardware state.","Render target specification.","Blending preset modes.","Depth presets for depth tests.","When combining two fragments, add their values together, …","When combining two fragments, add the value of the source …","When combining two fragments, subtract the destination …","When combining two fragments, multiply their values …","When combining two fragments, choose the source value","“&lt;=” comparison with read-only depth","When rendering a fragment, only draw when the fragment’s …","When rendering a fragment, draw regardless of depth buffer …","When rendering a fragment, draw regardless of depth buffer …","","","","Adds source and destination. Source and destination are …","<code>true</code>","","","","","","Clockwise winding order.","The state of an active color render target","","A pixel-wise comparison function.","","","Counter-clockwise winding order.","Which face, if any, to cull.","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to the …","Depth test state.","","","<code>x == y</code>","","","Rasterize as a face.","","The front face winding order of a set of vertices.","","<code>x &gt; y</code>","<code>x &gt;= y</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Bitwise invert the current value in the stencil buffer.","Keep the current value in the stencil buffer (no change).","<code>x &lt; y</code>","<code>x &lt;= y</code>","Rasterize as a line with the given width.","Width of a line. Could be f32 if not for Hash deriving …","Component-wise maximum value of source and destination. …","Component-wise minimum value of source and destination. …","Multi-sampling rasterization mode","<code>false</code>","<code>x != y</code>","","How to offset vertices in screen space, if at all.","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","","","Rasterize as a point.","","How to rasterize a primitive.","Primitive rasterization state. Note that GL allows …","The complete set of the rasterizer reference values. …","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Subtracts source from destination. Source and destination …","","","","Complete stencil state, specifying how to handle the front …","Stencil mask operation.","Complete stencil state for a given side of a face.","Subtracts destination from source. Source and destination …","Set the value in the stencil buffer to zero.","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Optional blending.","Constant blend color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Which face should be culled.","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Which vertex winding is considered to be the front face …","Comparison function to use to determine if the stencil …","Comparison function to use.","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Color mask to use.","A mask that is ANDd with both the stencil buffer value and …","A mask that is ANDd with the stencil value before writing …","How to rasterize this primitive.","","","","","","","","","","","","","Create a new stencil state with a given function.","Create a new blend state with a given equation.","Create a new filling rasterizer.","Returns the complement of this set of flags.","Any polygon offset to apply.","What operation to do if the stenil test passes but the …","What operation to do if the stencil test fails.","What operation to do if both the depth and stencil test …","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Multi-sampling mode.","Inserts or removes the specified flags depending on the …","","Stencil front and back values.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Add back face culling.","Add polygon offset.","Specify whether to write to the depth buffer or not.","","","","A color with floating-point components.","A single depth value from a depth buffer.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","Mirroring flags, used for blitting","A screen space rectangle","A single value from a stencil stencstencil buffer.","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,4,2,5,0,0,0,6,0,0,0,7,7,6,0,8,8,0,7,7,4,0,0,9,5,0,2,4,4,8,8,8,8,4,4,9,0,3,3,0,4,4,5,0,0,0,10,10,9,2,0,0,0,8,3,7,10,7,0,0,0,3,8,10,10,2,11,12,2,2,2,2,2,2,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,5,15,4,8,17,12,18,3,7,10,19,2,11,2,2,16,17,12,18,19,11,13,14,19,2,2,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,19,2,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,2,2,2,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,2,2,2,2,12,16,17,18,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,2,2,2,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,2,2,13,17,17,16,1,9,16,17,12,18,10,19,11,2,13,14,12,11,16,2,16,17,17,17,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,2,16,2,19,14,2,2,2,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,2,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,6,1,5,9,15,16,4,8,17,12,18,3,7,10,19,11,2,13,14,2,16,16,18,20,21,22,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,24,23,24,23,24,23,24,23,23,23,23,23,23,24,23,23,24,23,23,23,23,23,24,23,23,23,23,23,24,24,23,23,23,23,24,23,23,23,24,23,23,24,23,23,23,23,23,23,24,23,23,24,23,24,23,24,23,23,24,24,24],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["colormask",3]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3]],["u8",0]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],null,nullfrontface",4]],["frontface",4]],[[["offset",3]],["offset",3]],[[["cullface",4]],["cullface",4]],[[["rastermethod",4]],["rastermethod",4]],[[["multisample",3]],["multisample",3]],[[["rasterizer",3]],["rasterizer",3]],[[["comparison",4]],["comparison",4]],[[["stencilop",4]],["stencilop",4]],[[["stencilside",3]],["stencilside",3]],[[["stencil",3]],["stencil",3]],[[["depth",3]],["depth",3]],[[["equation",4]],["equation",4]],[[["blendvalue",4]],["blendvalue",4]],[[["factor",4]],["factor",4]],[[["blendchannel",3]],["blendchannel",3]],[[["blend",3]],["blend",3]],[[["colormask",3]],["colormask",3]],[[["color",3]],["color",3]],[[["refvalues",3]],["refvalues",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["frontface",4],["frontface",4]],["ordering",4]],[[["cullface",4],["cullface",4]],["ordering",4]],[[["multisample",3],["multisample",3]],["ordering",4]],[[["comparison",4],["comparison",4]],["ordering",4]],[[["stencilop",4],["stencilop",4]],["ordering",4]],[[["stencilside",3],["stencilside",3]],["ordering",4]],[[["stencil",3],["stencil",3]],["ordering",4]],[[["depth",3],["depth",3]],["ordering",4]],[[["equation",4],["equation",4]],["ordering",4]],[[["blendvalue",4],["blendvalue",4]],["ordering",4]],[[["factor",4],["factor",4]],["ordering",4]],[[["blendchannel",3],["blendchannel",3]],["ordering",4]],[[["colormask",3],["colormask",3]],["ordering",4]],null,[[["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],null,[[],["stencilside",3]],[[],["stencil",3]],[[],["depth",3]],[[],["blendchannel",3]],[[],["blend",3]],[[],["color",3]],[[],["refvalues",3]],null,[[["colormask",3],["colormask",3]],["colormask",3]],[[],["colormask",3]],[[["frontface",4],["frontface",4]],["bool",0]],[[["offset",3],["offset",3]],["bool",0]],[[["cullface",4],["cullface",4]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["multisample",3],["multisample",3]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["comparison",4],["comparison",4]],["bool",0]],[[["stencilop",4],["stencilop",4]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["equation",4],["equation",4]],["bool",0]],[[["blendvalue",4],["blendvalue",4]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],null,[[["colormask",3],["intoiterator",8]]],[[["frontface",4],["formatter",3]],["result",6]],[[["offset",3],["formatter",3]],["result",6]],[[["cullface",4],["formatter",3]],["result",6]],[[["rastermethod",4],["formatter",3]],["result",6]],[[["multisample",3],["formatter",3]],["result",6]],[[["rasterizer",3],["formatter",3]],["result",6]],[[["comparison",4],["formatter",3]],["result",6]],[[["stencilop",4],["formatter",3]],["result",6]],[[["stencilside",3],["formatter",3]],["result",6]],[[["stencil",3],["formatter",3]],["result",6]],[[["depth",3],["formatter",3]],["result",6]],[[["equation",4],["formatter",3]],["result",6]],[[["blendvalue",4],["formatter",3]],["result",6]],[[["factor",4],["formatter",3]],["result",6]],[[["blendchannel",3],["formatter",3]],["result",6]],[[["blend",3],["formatter",3]],["result",6]],[[["colormask",3],["formatter",3]],["result",6]],[[["colormask",3],["formatter",3]],["result",6]],[[["colormask",3],["formatter",3]],["result",6]],[[["colormask",3],["formatter",3]],["result",6]],[[["colormask",3],["formatter",3]],["result",6]],[[["color",3],["formatter",3]],["result",6]],[[["refvalues",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["colormask",3]]]],[[["u8",0]],["colormask",3]],[[["u8",0]],["colormask",3]],[[["intoiterator",8]],["colormask",3]],null,null,null,null,[[["frontface",4],["",0]]],[[["offset",3],["",0]]],[[["cullface",4],["",0]]],[[["rastermethod",4],["",0]]],[[["multisample",3],["",0]]],[[["rasterizer",3],["",0]]],[[["comparison",4],["",0]]],[[["stencilop",4],["",0]]],[[["stencilside",3],["",0]]],[[["stencil",3],["",0]]],[[["depth",3],["",0]]],[[["equation",4],["",0]]],[[["blendvalue",4],["",0]]],[[["factor",4],["",0]]],[[["blendchannel",3],["",0]]],[[["blend",3],["",0]]],[[["colormask",3],["",0]]],[[["color",3],["",0]]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["colormask",3]],["bool",0]],[[["colormask",3]],["bool",0]],null,null,null,null,[[["offset",3],["offset",3]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],[[["comparison",4],["stencil",6]],["stencil",3]],[[["equation",4],["factor",4],["factor",4]],["blend",3]],[[],["rasterizer",3]],[[["colormask",3]],["colormask",3]],null,null,null,null,[[["frontface",4],["frontface",4]],["option",4,[["ordering",4]]]],[[["offset",3],["offset",3]],["option",4,[["ordering",4]]]],[[["cullface",4],["cullface",4]],["option",4,[["ordering",4]]]],[[["rastermethod",4],["rastermethod",4]],["option",4,[["ordering",4]]]],[[["multisample",3],["multisample",3]],["option",4,[["ordering",4]]]],[[["rasterizer",3],["rasterizer",3]],["option",4,[["ordering",4]]]],[[["comparison",4],["comparison",4]],["option",4,[["ordering",4]]]],[[["stencilop",4],["stencilop",4]],["option",4,[["ordering",4]]]],[[["stencilside",3],["stencilside",3]],["option",4,[["ordering",4]]]],[[["stencil",3],["stencil",3]],["option",4,[["ordering",4]]]],[[["depth",3],["depth",3]],["option",4,[["ordering",4]]]],[[["equation",4],["equation",4]],["option",4,[["ordering",4]]]],[[["blendvalue",4],["blendvalue",4]],["option",4,[["ordering",4]]]],[[["factor",4],["factor",4]],["option",4,[["ordering",4]]]],[[["blendchannel",3],["blendchannel",3]],["option",4,[["ordering",4]]]],[[["blend",3],["blend",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]],["option",4,[["ordering",4]]]],[[["color",3],["color",3]],["option",4,[["ordering",4]]]],[[["refvalues",3],["refvalues",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]]],null,[[["colormask",3],["colormask",3],["bool",0]]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["colormask",3],["colormask",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["rasterizer",3]],["rasterizer",3]],[[["rasterizer",3],["f32",0],["offsetunits",6]],["rasterizer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mirror",3]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3]],["u8",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rect",3]],["rect",3]],[[["mirror",3]],["mirror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["mirror",3],["mirror",3]],["ordering",4]],[[["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[],["mirror",3]],[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3],["intoiterator",8]]],[[["rect",3],["formatter",3]],["result",6]],[[["mirror",3],["formatter",3]],["result",6]],[[["mirror",3],["formatter",3]],["result",6]],[[["mirror",3],["formatter",3]],["result",6]],[[["mirror",3],["formatter",3]],["result",6]],[[["mirror",3],["formatter",3]],["result",6]],[[]],[[]],[[["u8",0]],["option",4,[["mirror",3]]]],[[["u8",0]],["mirror",3]],[[["u8",0]],["mirror",3]],[[["intoiterator",8]],["mirror",3]],null,[[["rect",3],["",0]]],[[["mirror",3],["",0]]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]],["bool",0]],[[]],[[]],[[["mirror",3]],["bool",0]],[[["mirror",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3]],["mirror",3]],[[["rect",3],["rect",3]],["option",4,[["ordering",4]]]],[[["mirror",3],["mirror",3]],["option",4,[["ordering",4]]]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3],["bool",0]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["",0]]],[[["",0]]],[[["mirror",3],["mirror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mirror",3],["mirror",3]],["mirror",3]],null,null,null],"p":[[3,"Offset"],[3,"ColorMask"],[4,"Equation"],[4,"Comparison"],[4,"CullFace"],[4,"FrontFace"],[4,"BlendValue"],[4,"StencilOp"],[4,"RasterMethod"],[4,"Factor"],[3,"Blend"],[3,"Stencil"],[3,"Color"],[3,"RefValues"],[3,"MultiSample"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Depth"],[3,"BlendChannel"],[13,"ZeroPlus"],[13,"OneMinus"],[13,"Line"],[3,"Mirror"],[3,"Rect"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":[4,2,13,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,12,12],"n":["Either","Left","Left","Right","Right","all","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow_mut","clone","clone_from","cmp","collect","count","deref","deref_mut","either","either_into","either_with","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","find","find_map","flip","fmt","fmt","fold","for_both","for_each","from","from","hash","into","into","into_future","into_inner","into_iter","into_iter","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","len","map","map_left","map_right","ne","next","next_back","nth","partial_cmp","partition","poll","position","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","try_from","try_into","try_left","try_right","type_id","unwrap_left","unwrap_right","0","0"],"q":["either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","either::Either",""],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","","A value of type <code>L</code>.","","A value of type <code>R</code>.","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","Evaluate the provided expression for both <code>Either::Left</code> and …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","Map <code>f</code> over the contained value and return the result in the","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","Returns the left value","Returns the right value","",""],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,2,3],"f":[null,null,null,null,null,[[["either",4]],["bool",0]],[[["either",4]],["bool",0]],[[["either",4]]],[[["either",4]],["str",0]],[[["either",4]],["",0]],[[["either",4]],["either",4]],[[["pin",3,[["either",4]]]],["either",4,[["pin",3],["pin",3]]]],[[["pin",3,[["either",4]]]],["either",4,[["pin",3],["pin",3]]]],[[["either",4]],["str",0]],[[["either",4]],["either",4]],[[["either",4]],["",0]],[[["either",4]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["either",4,[["clone",8],["clone",8]]]],["either",4,[["clone",8],["clone",8]]]],[[["either",4,[["clone",8],["clone",8]]],["either",4,[["clone",8],["clone",8]]]]],[[["either",4,[["ord",8],["ord",8]]],["either",4]],["ordering",4]],[[["either",4]]],[[["either",4]],["usize",0]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4,[["partialeq",8],["partialeq",8]]],["either",4]],["bool",0]],[[["either",4],["str",0]]],[[["either",4],["str",0]]],[[["either",4]]],[[["either",4,[["result",4],["result",4]]]],["result",4,[["either",4]]]],[[["either",4]]],[[["either",4,[["option",4],["option",4]]]],["option",4,[["either",4]]]],[[["either",4,[["result",4],["result",4]]]],["result",4,[["either",4]]]],[[["either",4]]],[[["either",4]],["option",4]],[[["either",4]],["option",4]],[[["either",4]],["either",4]],[[["either",4,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["either",4],["formatter",3]],["result",6]],[[["either",4]]],null,[[["either",4]]],[[]],[[["result",4]],["either",4]],[[["either",4,[["hash",8],["hash",8]]],["",0]]],[[]],[[["either",4]],["result",4]],[[]],[[["either",4]]],[[]],[[["either",4]],["either",4]],[[["either",4]],["bool",0]],[[["either",4]],["bool",0]],[[["either",4]],["option",4]],[[["either",4]],["option",4]],[[["either",4]],["either",4]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4]],["usize",0]],[[["either",4]],["either",4]],[[["either",4]],["either",4]],[[["either",4]],["either",4]],[[["either",4,[["partialeq",8],["partialeq",8]]],["either",4]],["bool",0]],[[["either",4]],["option",4]],[[["either",4]],["option",4]],[[["either",4],["usize",0]],["option",4]],[[["either",4,[["partialord",8],["partialord",8]]],["either",4]],["option",4,[["ordering",4]]]],[[["either",4]]],[[["pin",3,[["either",4]]],["context",3]],["poll",4]],[[["either",4]],["option",4,[["usize",0]]]],[[["either",4]],["option",4]],[[["either",4]]],[[["either",4]],["option",4]],[[["either",4]],["either",4]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["either",4]]],[[["either",4]]],null,null],"p":[[4,"Either"],[13,"Left"],[13,"Right"]]},\
"event_loop":{"doc":"A Piston event loop for games and interactive applications","t":[17,17,17,8,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,12,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12],"n":["DEFAULT_MAX_FPS","DEFAULT_UPS","DEFAULT_UPS_RESET","EventLoop","EventSettings","Events","bench_mode","bench_mode","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","from","from","get_event_settings","get_event_settings","get_event_settings","into","into","lazy","lazy","max_fps","max_fps","new","new","next","set_bench_mode","set_event_settings","set_event_settings","set_event_settings","set_lazy","set_max_fps","set_swap_buffers","set_ups","set_ups_reset","swap_buffers","swap_buffers","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ups","ups","ups_reset","ups_reset"],"q":["event_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The default maximum frames per second.","The default updates per second.","The default delayed updates reset.","Methods implemented for changing event loop settings.","Stores event loop settings.","An event loop iterator","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns event loop settings.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","The maximum number of frames per second","Creates new with default settings.","Creates a new event iterator with default UPS and FPS …","Returns the next event.","Enable or disable benchmark mode. When enabled, it will …","Sets event loop settings.","","","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","Enable or disable automatic swapping of buffers.","The number of updates per second","The number of delayed updates before skipping them to …","Enable or disable automatic swapping of buffers.","Enable or disable automatic swapping of buffers.","","","","","","","","","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …"],"i":[0,0,0,0,0,0,1,2,2,3,2,3,2,3,2,3,2,2,2,3,1,2,3,2,3,1,2,1,2,2,3,3,1,1,2,3,1,1,1,1,1,1,2,2,3,2,3,2,3,2,3,1,2,1,2],"f":[null,null,null,null,null,null,[[["bool",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["events",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["eventsettings",3]],[[["eventsettings",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["eventsettings",3]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["eventsettings",3]],[[]],[[]],[[["bool",0]]],null,[[["u64",0]]],null,[[],["eventsettings",3]],[[["eventsettings",3]],["events",3]],[[["events",3],["",0]],["option",4,[["event",4]]]],[[["",0],["bool",0]]],[[["",0],["eventsettings",3]]],[[["eventsettings",3],["eventsettings",3]]],[[["events",3],["eventsettings",3]]],[[["",0],["bool",0]]],[[["",0],["u64",0]]],[[["",0],["bool",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["bool",0]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u64",0]]],null,[[["u64",0]]],null],"p":[[8,"EventLoop"],[3,"EventSettings"],[3,"Events"]]},\
"float":{"doc":"Traits for generic floats in game programming","t":[8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"n":["Cast","Float","FromPrimitive","Max","Min","One","Powf","Radians","Signum","Sqrt","Trig","Zero","_180","_360","_90","acos","acosh","asin","asinh","atan","atan2","atanh","cast","cos","cosh","deg_to_rad","from_f32","from_f64","from_i32","from_isize","from_u32","max","min","one","powf","rad_to_deg","signum","sin","sinh","sqrt","tan","tanh","zero"],"q":["float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Casts into another type.","Convenience trait for floats.","Trait for converting from different numeric types","Maximum value.","Minimum value.","Number 1.","Floating number power.","Useful constants for radians.","The sign of the number.","Square root.","Basic trigonometry functions","Number 0.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Returns inverse cosine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse sine of self.","Returns inverse hyperbolic sine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and other …","Returns inverse hyperbolic tangent of self.","Casts into other type.","Returns cosine of self.","Returns hyperbolic cosine of self.","Convert a value to radians from degrees. Equivalent to …","from a f32","from a f64","from a i32","from a isze","from a u32","Returns the maximum value of self or other.","Returns the minimum value of self or other.","Returns 1.","Returns floating power of the number.","Convert a value to degrees from radians. Equivalent to …","Returns number representing the sign of self","Returns sine of self.","Returns hyperbolic sine of self.","Returns square root.","Returns tangent of self.","Returns hyperbolic tangent of self.","Returns 0."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,3,2,2,1,4,4,4,4,4,5,6,7,8,1,9,2,2,10,2,2,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]]],[[["f64",0]]],[[["i32",0]]],[[["isize",0]]],[[["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Radians"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"],[8,"Max"],[8,"Min"],[8,"One"],[8,"Powf"],[8,"Signum"],[8,"Sqrt"],[8,"Zero"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","t":[6,6,6,3,11,11,11,11,11,11,11,11,11,11,11],"n":["FnvBuildHasher","FnvHashMap","FnvHashSet","FnvHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","with_key","write"],"q":["fnv","","","","","","","","","","","","","",""],"d":["A builder for default FNV hashers.","A <code>HashMap</code> using a default FNV hasher.","A <code>HashSet</code> using a default FNV hasher.","An implementation of the Fowler–Noll–Vo hash function.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Create an FNV hasher starting with a state corresponding …",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["fnvhasher",3]],[[["fnvhasher",3]],["u64",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["u64",0]],["fnvhasher",3]],[[["fnvhasher",3]]]],"p":[[3,"FnvHasher"]]},\
"foreign_types":{"doc":"A framework for Rust wrappers over C APIs.","t":[16,16,8,8,3,16,10,11,11,11,14,11,10,11,11,11,11,11,11],"n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","foreign_type","from","from_ptr","from_ptr","from_ptr_mut","into","try_from","try_into","type_id"],"q":["foreign_types","","","","","","","","","","","","","","","","","",""],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","A macro to easily define wrappers for foreign types.","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","","",""],"i":[1,2,0,0,0,1,1,2,3,3,0,3,1,2,2,3,3,3,3],"f":[null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[]],[[],["",0]],[[],["",0]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"foreign_types_shared":{"doc":"Internal crate used by foreign-types","t":[16,16,8,8,3,16,10,11,11,11,11,10,11,11,11,11,11,11],"n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","from","from_ptr","from_ptr","from_ptr_mut","into","try_from","try_into","type_id"],"q":["foreign_types_shared","","","","","","","","","","","","","","","","",""],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","","",""],"i":[1,2,0,0,0,1,1,2,3,3,3,1,2,2,3,3,3,3],"f":[null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["",0]],[[],["",0]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"getrandom":{"doc":"Interface to the operating system’s random number …","t":[18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_ES_MODULE","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","clone_into","code","eq","fmt","fmt","from","from","getrandom","into","ne","raw_os_error","to_owned","to_string","try_from","try_into","type_id"],"q":["getrandom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to iOS <code>SecRandomCopyBytes</code> failed.","Node.js does not have the <code>crypto</code> CommonJS module.","Called from an ES module on Node.js. This is unsupported, …","Calling Node.js function <code>crypto.randomFillSync</code> failed.","RDRAND instruction unsupported on this target.","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The environment does not support the Web Crypto API.","Calling Web Crypto API <code>crypto.getRandomValues</code> failed.","Call to Windows <code>RtlGenRandom</code> failed.","","","","","Extract the bare error code.","","","","","Returns the argument unchanged.","Fill <code>dest</code> with random bytes from the system’s preferred …","Calls <code>U::from(self)</code>.","","Extract the raw OS error code (if this error came from the …","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["error",3]],["nonzerou32",3]],[[["error",3],["error",3]],["bool",0]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["nonzerou32",3]],["error",3]],[[]],[[],["result",4,[["error",3]]]],[[]],[[["error",3],["error",3]],["bool",0]],[[["error",3]],["option",4,[["i32",0]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Error"]]},\
"gfx":{"doc":"gfx","t":[13,13,2,2,16,2,13,13,6,4,8,16,2,6,6,4,6,6,2,16,2,13,8,13,3,3,13,13,13,13,13,13,13,8,16,13,3,2,3,13,13,13,13,13,13,4,2,6,6,8,13,6,13,13,6,13,13,13,13,13,16,3,13,13,13,13,13,13,13,13,13,13,2,4,16,3,13,4,13,16,3,2,2,2,2,2,3,2,16,13,4,8,16,2,16,2,16,2,16,4,13,3,6,2,4,6,13,4,13,13,13,16,2,13,13,13,13,13,13,13,13,4,13,2,16,13,13,4,2,6,3,18,18,11,12,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,10,10,11,11,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,10,11,10,11,10,11,11,11,10,10,11,11,10,10,11,10,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,11,11,14,14,14,14,14,14,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,10,0,0,10,11,11,11,11,11,11,10,11,12,11,10,10,0,11,12,0,11,11,10,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,10,11,12,11,10,11,10,11,10,11,11,10,11,10,11,10,12,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,3,13,3,4,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,4,13,4,13,6,8,8,8,8,16,4,4,8,4,13,4,13,4,13,4,13,16,6,6,8,6,8,8,3,4,13,3,8,3,3,4,13,4,13,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,8,8,8,6,6,6,6,16,4,13,6,8,8,16,4,8,3,8,8,8,3,3,4,13,4,13,6,6,6,6,16,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,18,13,13,13,8,18,18,18,18,18,18,18,13,4,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,17,17,17,17,17,17,17,17,17,3,13,16,8,8,3,4,13,13,16,4,16,16,13,13,8,8,3,13,3,13,13,13,13,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,0,12,12,12,12,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,6,6,3,3,16,6,6,4,4,3,3,3,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,12,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,18,13,8,18,13,18,13,13,18,13,4,8,3,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,3,4,8,13,13,13,13,4,13,6,3,3,4,3,4,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,4,4,4,4,6,13,4,13,13,13,13,13,13,3,13,3,3,13,13,17,3,3,13,4,13,4,3,13,13,13,13,13,4,3,3,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,13,13,18,13,3,3,4,13,3,3,4,13,13,13,4,13,13,3,13,13,13,4,4,13,13,4,18,13,13,13,13,13,13,13,13,13,6,13,13,3,13,13,13,3,6,6,13,13,13,18,4,3,3,13,13,13,13,13,3,4,3,13,13,13,13,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,4,13,13,13,6,13,17,13,13,4,13,13,4,13,13,13,13,13,13,3,3,6,4,13,3,3,4,13,6,4,6,13,3,17,4,13,13,13,13,13,13,13,6,13,6,6,13,3,13,13,13,13,18,18,18,3,6,3,3,3,13,13,13,6,13,3,13,13,13,4,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,16,8,8,8,8,16,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,10,10,11,11,10,10,10,11,10,11,10,11,10,11,11,10,11,10,11,10,10,10],"n":["AccessOverlap","Auto","BlendRef","BlendTarget","Buffer","Bundle","Channel","Channel","ColorValue","CombinedError","CommandBuffer","CommandBuffer","ConstantBuffer","CopyBufferResult","CopyBufferTextureResult","CopyError","CopyTextureBufferResult","Depth","DepthStencilTarget","DepthStencilView","DepthTarget","DescriptorInit","Device","DeviceCreate","DomainShader","Encoder","F32","F32Matrix2","F32Matrix3","F32Matrix4","F32Vector2","F32Vector3","F32Vector4","Factory","Fence","Geometry","GeometryShader","Global","HullShader","I32","I32Vector2","I32Vector3","I32Vector4","Index16","Index32","IndexBuffer","InstanceBuffer","InstanceCount","InstanceParams","IntoIndexBuffer","InvalidUsage","Layer","Layer","Layer","Level","Level","LineList","LineListAdjacency","LineStrip","LineStripAdjacency","Mapping","Mirror","NoBindFlag","NoBindFlag","NoDstBindFlag","NoSrcBindFlag","NotDetached","OutOfBounds","OutOfDstBounds","OutOfSrcBounds","Overlap","PatchList","PipelineState","PipelineStateError","PipelineStateObject","PixelShader","PointList","Primitive","Program","Program","ProgramInfo","RawConstantBuffer","RawGlobal","RawRenderTarget","RawShaderResource","RawVertexBuffer","Rect","RenderTarget","RenderTargetView","Resource","ResourceViewError","Resources","Resources","Sampler","Sampler","Scissor","Shader","ShaderResource","ShaderResourceView","ShaderSet","Simple","Slice","Stencil","StencilTarget","SubmissionError","SubmissionResult","Target","TargetViewError","Tessellated","TessellatedGeometry","Texture","Texture","TextureSampler","TriangleList","TriangleListAdjacency","TriangleStrip","TriangleStripAdjacency","U32","U32Vector2","U32Vector3","U32Vector4","UniformValue","UnitCountMismatch","UnorderedAccess","UnorderedAccessView","Unsupported","Unsupported","UpdateError","VertexBuffer","VertexCount","VertexShader","X","Y","all","base_vertex","bind_constant_buffers","bind_global_constant","bind_index","bind_pipeline_state","bind_pixel_targets","bind_resource_views","bind_samplers","bind_unordered_views","bind_vertex_buffers","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","call_draw","call_draw_indexed","cause","cause","cause","cause","cleanup","clear","clear_color","clear_depth","clear_depth_raw","clear_depth_stencil","clear_raw","clear_stencil","clear_stencil_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","constant_buffers","contains","copy_buffer","copy_buffer","copy_buffer_to_texture","copy_buffer_to_texture_raw","copy_texture_to_buffer","copy_texture_to_buffer_raw","copy_texture_to_texture","copy_texture_to_texture_raw","create_buffer","create_buffer_immutable","create_buffer_immutable_raw","create_buffer_raw","create_depth_stencil","create_depth_stencil_view_only","create_pipeline_state_raw","create_program","create_render_target","create_sampler","create_shader","create_shader_domain","create_shader_geometry","create_shader_hull","create_shader_pixel","create_shader_vertex","create_texture","create_texture_immutable","create_texture_immutable_u8","create_texture_raw","default","description","description","description","description","description","description","description","difference","draw","empty","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fenced_flush_no_reset","fenced_submit","flush","flush_no_reset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_vertex_count","generate_mipmap","generate_mipmap","generate_mipmap_raw","get_capabilities","get_capabilities","get_prim_count","get_usage","gfx_constant_struct","gfx_defines","gfx_format","gfx_pipeline","gfx_pipeline_base","gfx_vertex_struct","globals","h","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","instances","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_index_buffer","into_index_buffer","is_all","is_empty","knows_outputs","macros","mapping","memory","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new_match_vertex_buffer","not","output_depth","outputs","partial_cmp","partial_cmp","partial_cmp","pin_submitted_resources","preset","pso","read_mapping","reference","reference","reference","reference","reference","remove","reset","reset","samplers","set","set_ref_values","set_scissor","shade","split_at","start","state","sub","sub_assign","submit","symmetric_difference","texture","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unordereds","update_buffer","update_buffer","update_constant_buffer","update_texture","update_texture","vertex_attributes","view_buffer_as_shader_resource","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access","view_buffer_as_unordered_access_raw","view_texture_as_depth_stencil","view_texture_as_depth_stencil_raw","view_texture_as_depth_stencil_trivial","view_texture_as_render_target","view_texture_as_render_target_raw","view_texture_as_shader_resource","view_texture_as_shader_resource_raw","view_texture_as_unordered_access","view_texture_as_unordered_access_raw","w","wait_fence","write_mapping","x","y","0","0","0","copy_end","copy_end","dst_offset","size","size","size","src_offset","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","2","2","3","3","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","slice","source","target","target","Constant","CreationError","Index","Info","Other","Raw","Role","Staging","UnsupportedBind","UnsupportedUsage","Vertex","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","description","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_info","hash","hash","hash","hash","into","into","into","into","is_mapped","ne","ne","role","size","stride","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","usage","0","0","0","0","0","0","0","0","0","1","1","2","3","B8_G8_R8_A8","B8_G8_R8_A8","BC1_R8_G8_B8","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","BC3_R8_G8_B8_A8","Bgra8","BlendChannel","BlendFormat","BufferFormat","BufferSurface","Channel","ChannelSource","ChannelType","ChannelTyped","D16","D16","D24","D24","D24_S8","D24_S8","D32","D32","DataType","Depth","Depth32F","DepthFormat","DepthStencil","DepthStencilFormat","DepthSurface","F16","Float","Float","Format","Formatted","I16Norm","I8Norm","Inorm","Inorm","Int","Int","One","R10_G10_B10_A2","R10_G10_B10_A2","R11_G11_B10","R11_G11_B10","R16","R16","R16_G16","R16_G16","R16_G16_B16","R16_G16_B16","R16_G16_B16_A16","R16_G16_B16_A16","R32","R32","R32_G32","R32_G32","R32_G32_B32","R32_G32_B32","R32_G32_B32_A32","R32_G32_B32_A32","R4_G4","R4_G4","R4_G4_B4_A4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G5_B5_A1","R5_G6_B5","R5_G6_B5","R8","R8","R8_G8","R8_G8","R8_G8_B8_A8","R8_G8_B8_A8","RenderChannel","RenderFormat","RenderSurface","Rgb10a2F","Rgba16F","Rgba32F","Rgba8","ShaderType","Srgb","Srgb","Srgba8","StencilFormat","StencilSurface","Surface","SurfaceType","SurfaceTyped","Swizzle","TextureChannel","TextureFormat","TextureSurface","U16Norm","U8Norm","Uint","Uint","Unorm","Unorm","Vec1","Vec2","Vec3","Vec4","View","W","X","Y","Z","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast2","cast2","cast2","cast2","cast2","cast3","cast3","cast3","cast3","cast3","cast4","cast4","cast4","cast4","cast4","cast_slice","cast_slice","cast_slice","cast_slice","cast_slice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_alpha_stencil_bits","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_format","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_total_bits","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Buffer","DepthStencilView","Fence","Manager","Program","RawBuffer","RawDepthStencilView","RawPipelineState","RawRenderTargetView","RawShaderResourceView","RawTexture","RawUnorderedAccessView","RenderTargetView","Sampler","Shader","ShaderResourceView","Texture","UnorderedAccessView","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","deref","deref","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_dimensions","get_dimensions","get_dimensions","get_dimensions","get_info","get_info","get_info","get_texture","get_texture","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_index_buffer","into_index_buffer","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","raw_view","ref_buffer","ref_dsv","ref_fence","ref_program","ref_pso","ref_rtv","ref_sampler","ref_shader","ref_srv","ref_texture","ref_uav","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AccessOverlap","Error","InvalidAccess","Reader","Writer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","description","eq","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","into","ne","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","1","Access","Bind","DEPTH_STENCIL","Data","Download","Dynamic","Pod","READ","RENDER_TARGET","RW","SHADER_RESOURCE","TRANSFER_DST","TRANSFER_SRC","UNORDERED_ACCESS","Upload","Usage","WRITE","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_slice","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","is_all","is_all","is_empty","is_empty","is_mutable","ne","ne","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","blend","depth","ADD","ALPHA","INVERT","MULTIPLY","REPLACE","LESS_EQUAL_TEST","LESS_EQUAL_WRITE","PASS_TEST","PASS_WRITE","AccessInfo","ConstantBuffer","Data","DataBind","DataLink","Descriptor","ElementError","Format","GlobalConstant","Init","InitError","Meta","Meta","NotFound","Offset","PipelineData","PipelineInit","PipelineState","PixelExport","RawDataSet","ResourceView","Sampler","UnorderedView","VertexImport","attributes","bake_to","bind_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_read","buffer_write","bundle","cause","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_targets","constant_buffers","constant_buffers","depth_stencil","description","description","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_handle","get_meta","global_constants","has_mapped_reads","has_mapped_writes","hash","hash","into","into","into","into","into","into","is_active","link_constant_buffer","link_depth_stencil","link_global_constant","link_input","link_output","link_resource_view","link_sampler","link_scissor","link_to","link_unordered_view","link_vertex_buffer","mapped_reads","mapped_writes","ne","ne","ne","ne","ne","ne","new","new","new","new","new","pixel_targets","primitive","rasterizer","ref_values","resource","resource_views","resource_views","samplers","samplers","scissor","scissor","take_accesses","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unordered_views","unordered_views","vertex_buffers","vertex_buffers","0","code_format","code_offset","name","name","shader_format","shader_offset","0","0","0","0","0","0","0","1","1","1","1","1","1","1","BufferIndex","ConstantBuffer","ElemOffset","ElemStride","Element","Global","Init","InstanceBuffer","InstanceRate","Instanced","NonInstanced","RawConstantBuffer","RawGlobal","RawVertexBuffer","Structure","ToInstanceRate","VertexBuffer","VertexBufferCommon","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","get_rate","get_rate","get_rate","get_rate","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_active","is_active","is_active","is_active","is_active","is_active","link_constant_buffer","link_constant_buffer","link_global_constant","link_global_constant","link_input","link_input","link_vertex_buffer","link_vertex_buffer","ne","ne","ne","ne","new","new","new","new","new","new","offset","query","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Bundle","borrow","borrow_mut","data","encode","from","into","new","pso","slice","try_from","try_into","type_id","RawShaderResource","Sampler","ShaderResource","TextureSampler","UnorderedAccess","bind_to","bind_to","bind_to","bind_to","bind_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","is_active","is_active","is_active","is_active","is_active","link_resource_view","link_resource_view","link_resource_view","link_sampler","link_sampler","link_unordered_view","ne","ne","new","new","new","new","new","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BlendRef","BlendTarget","DepthStencilTarget","DepthTarget","RawRenderTarget","RenderTarget","Scissor","StencilTarget","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_active","is_active","is_active","is_active","is_active","is_active","is_active","is_active","link_depth_stencil","link_depth_stencil","link_depth_stencil","link_output","link_output","link_output","link_scissor","ne","ne","new","new","new","new","new","new","new","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ConstFormat","DOMAIN","Domain","Formatted","GEOMETRY","Geometry","HULL","Hull","Link","PIXEL","Pixel","ProgramError","ToUniform","Usage","VERTEX","Vertex","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","complement","contains","convert","core","description","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_format","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_string","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","0","0","0","0","0","0","0","1","Array","AttributeVar","BaseType","BaseTyped","Bool","Buffer","ColumnMajor","Compare","CompatibilityError","CompilationFailed","ConstFormat","ConstVar","ConstantBufferVar","ContainerType","CreateProgramError","CreateShaderError","Cube","D1","D2","D3","Dimension","Domain","ErrorArraySize","ErrorBaseType","ErrorContainer","F32","F32","F32Matrix2","F32Matrix3","F32Matrix4","F32Vector2","F32Vector3","F32Vector4","F64","Formatted","Geometry","Hull","I32","I32","I32Vector2","I32Vector3","I32Vector4","IsArray","IsComparison","IsMultiSample","IsRect","Location","Matrix","MatrixFormat","ModelNotSupported","MultiSample","NoArray","NoCompare","NoMultiSample","NoRect","OutputVar","Pixel","Program","ProgramInfo","Rect","RowMajor","STAGES","SamplerType","SamplerVar","Single","Stage","StageNotSupported","TextureType","TextureVar","U32","U32","U32Vector2","U32Vector3","U32Vector4","UniformValue","UnorderedVar","Usage","Vector","Vertex","base_type","base_type","base_type","base_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_sample","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constant_buffers","container","container","container","count","description","description","description","elements","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_base_type","get_format","get_info","globals","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_compatible","knows_outputs","location","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","output_depth","outputs","samplers","size","slot","slot","slot","slot","slot","slot","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unordereds","usage","usage","usage","usage","vertex_attributes","0","0","1","2","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","ALPHA","Add","Always","BLUE","Back","Blend","BlendChannel","BlendValue","Clockwise","Color","ColorMask","Comparison","ConstAlpha","ConstColor","CounterClockwise","CullFace","DecrementClamp","DecrementWrap","Depth","DestAlpha","DestColor","Equal","Equation","Factor","Fill","Front","FrontFace","GREEN","Greater","GreaterEqual","IncrementClamp","IncrementWrap","Invert","Keep","Less","LessEqual","Line","LineWidth","Max","Min","MultiSample","Never","NotEqual","Nothing","Offset","OffsetSlope","OffsetUnits","One","OneMinus","Point","RED","RasterMethod","Rasterizer","RefValues","Replace","RevSub","SourceAlpha","SourceAlphaSaturated","SourceColor","Stencil","StencilOp","StencilSide","Sub","Zero","Zero","ZeroPlus","all","alpha","back","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blend","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","complement","contains","cull_face","default","default","default","default","default","default","default","destination","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equation","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","front","front_face","fun","fun","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","mask","mask_read","mask_write","method","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_fill","not","offset","op_depth_fail","op_fail","op_pass","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","samples","set","source","stencil","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_cull_back","with_offset","write","0","0","0","0","AaMode","Allocated","Anisotropic","Bilinear","Bits","Border","CUBE_FACES","Clamp","Coverage","CreationError","Cube","CubeArray","CubeFace","D1","D1Array","D2","D2Array","D3","Data","DepthStencilDesc","DepthStencilFlags","Dimensions","FilterMethod","Format","ImageInfoCommon","Info","Kind","Kind","Layer","LayerError","Level","Level","Lod","MAX_LEVEL","Mipmap","Mipmap","Mipmap","Mirror","Multi","NegX","NegY","NegZ","NewImageInfo","NotExpected","NumFragments","NumSamples","OutOfBounds","PackedColor","PosX","PosY","PosZ","Provided","RO_DEPTH","RO_DEPTH_STENCIL","RO_STENCIL","Raw","RawImageInfo","RenderDesc","ResourceDesc","SamplerInfo","Samples","Scale","Single","Size","Size","TextureCopyRegion","Tile","Trilinear","Usage","WrapMode","all","bind","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","comparison","complement","contains","convert","cube_face","depth","description","description","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","filter","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_byte_count","get_dimensions","get_info","get_level_dimensions","get_num_fragments","get_num_levels","get_num_slices","get_texel_count","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","info","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_cube","is_empty","is_inside","kind","kind","layer","layer","layer","level","level","levels","lod_bias","lod_range","max","min","mipmap","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","needs_resolve","new","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","sub","sub_assign","swizzle","symmetric_difference","texture","to_image_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_image_info","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","usage","width","with_texture","wrap_mode","xoffset","yoffset","zoffset","0","0","1","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0","1","1","1","1","1","2","2","2","3","0","0","1","CommandBuffer","Device","Factory","FactoryExt","Pod","Resources","cleanup","create_buffer","create_buffer_immutable","create_buffer_immutable_raw","create_buffer_raw","create_constant_buffer","create_constant_buffer","create_depth_stencil","create_depth_stencil_view_only","create_download_buffer","create_download_buffer","create_index_buffer","create_index_buffer","create_pipeline_from_program","create_pipeline_from_program","create_pipeline_simple","create_pipeline_simple","create_pipeline_state","create_pipeline_state","create_pipeline_state_raw","create_program","create_render_target","create_sampler","create_sampler_linear","create_sampler_linear","create_shader","create_shader_domain","create_shader_geometry","create_shader_hull","create_shader_pixel","create_shader_set","create_shader_set","create_shader_set_geometry","create_shader_set_geometry","create_shader_set_tessellation","create_shader_set_tessellation","create_shader_set_tessellation_with_geometry","create_shader_set_tessellation_with_geometry","create_shader_vertex","create_texture","create_texture_immutable","create_texture_immutable_u8","create_texture_raw","create_upload_buffer","create_upload_buffer","create_vertex_buffer","create_vertex_buffer","create_vertex_buffer_with_slice","create_vertex_buffer_with_slice","fenced_submit","get_capabilities","get_capabilities","link_program","link_program","pin_submitted_resources","read_mapping","submit","view_buffer_as_shader_resource","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access","view_buffer_as_unordered_access_raw","view_texture_as_depth_stencil","view_texture_as_depth_stencil_raw","view_texture_as_depth_stencil_trivial","view_texture_as_render_target","view_texture_as_render_target_raw","view_texture_as_shader_resource","view_texture_as_shader_resource_raw","view_texture_as_unordered_access","view_texture_as_unordered_access_raw","wait_fence","write_mapping"],"q":["gfxgfx::CombinedError","","","gfx::CopyError","","","","","","","gfx::IndexBuffer","","gfx::PipelineStateError","","","gfx::Primitive","gfx::ResourceViewError","","gfx::ShaderSet","","","","","","","","","","","","","","gfx::TargetViewError","","","gfx::UniformValue","","","","","","","","","","","","","","","gfx::UpdateError","","","","","gfx::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::buffer::CreationError","","gfx::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::handlegfx::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::mapping::Error","","gfx::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::preset","","gfx::preset::blend","","","","","gfx::preset::depth","","","","gfx::psogfx::pso::ElementError","","","","","","","gfx::pso::InitError","","","","","","","","","","","","","","gfx::pso::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::bundle","","","","","","","","","","","","","gfx::pso::resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::shade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::shade::ProgramError","","","","","","gfx::shade::coregfx::shade::core::ContainerType","","","","gfx::shade::core::CreateShaderError","","gfx::shade::core::TextureType","","","","gfx::shade::core::UniformValue","","","","","","","","","","","","","","","gfx::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::state::Factor","","gfx::state::RasterMethod","gfx::texturegfx::texture::AaMode","","","gfx::texture::CreationError","","","","","","","gfx::texture::FilterMethod","gfx::texture::Kind","","","","","","","","","","","","","","","","gfx::texture::LayerError","","","gfx::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Represents a hypothetical index-buffer from 0 to infinity. …","","","","","Selected channel type is not supported for this texture.","Selected channel type is not supported for this texture.","A color with floating-point components.","An error from creating textures with views at the same …","An interface of the abstract command buffer. It collects …","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","","Result type returned when copying a buffer into another …","Result type returned when copying buffer data into a …","An error occuring in memory copies.","Result type returned when copying texture data into a …","A single depth value from a depth buffer.","","","","Unable to create PSO descriptor due to mismatched formats.","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Device failed to create the handle give the descriptor.","","Graphics Command Encoder","","","","","","","","Overview","","Geometry shader programs: Vs-Gs-Ps","","","","","","","","An index-buffer with unsigned 16 bit indices.","An index-buffer with unsigned 32 bit indices.","Type of index-buffer used in a Slice.","","Draw number of instances","Optional instance parameters: (instance count, buffer …","A helper trait to create <code>IndexBuffers</code> from different kinds …","","A depth value, specifying which plane to select out of a …","Selected layer can not be viewed for this texture.","Selected array layer doesn’t exist.","Mipmap level to select in a texture.","Selected mip level doesn’t exist.","Each pair of vertices represent a single line segment. For …","Each quadtruplet of vertices represent a single line …","Every two consecutive vertices represent a single line …","Every four consecutive vertices represent a single line …","","Mirroring flags, used for blitting","The corresponding bind flag is not present in the texture.","The <code>RENDER_TARGET</code>/<code>DEPTH_STENCIL</code> flag is not present in the …","","","The RTV cannot be changed due to the references to it …","","","","","Patch list, used with shaders capable of producing …","","Error creating a PipelineState","","","Each vertex represents a single point.","Describes what geometric primitives are created from …","Shader program failed to link.","","Metadata about a program.","","","","","","A screen space rectangle","","","Failed to create SRV or UAV.","Error creating either a ShaderResourceView, or …","Different types of a specific API.","Associated <code>Resources</code> type.","","","","","","","A complete set of shaders to link a program. TODO: …","Simple program: Vs-Ps","A <code>Slice</code> dictates in which and in what order vertices get …","A single value from a stencil stencstencil buffer.","","","","Failed to create RTV or DSV.","Error creating either a RenderTargetView, or …","Tessellation programs: Vs-Hs-Ds-Ps","TessellatedGeometry programs: Vs-Hs-Ds-Hs-Ps","Failed to create the raw texture.","","","Each triplet of vertices represent a single triangle. For …","Each sextuplet of vertices represent a single traingle …","Every three consecutive vertices represent a single …","Every even-numbered vertex (every other starting from the …","","","","","A value that can be uploaded to the device as a uniform.","","","","The backend was refused for some reason.","The backend was refused for some reason.","An error occuring in buffer/texture updates.","","Draw vertex count.","","","","Returns the set containing all flags.","This is the index of the first vertex in the <code>VertexBuffer</code>. …","Bind a complete set of constant buffers","Bind a global constant","Bind an index buffer","Bind a pipeline state object","Bind a complete set of pixel targets, including multiple …","Bind a complete set of shader resource views","Bind a complete set of samplers","Bind a complete set of unordered access views","Bind a complete set of vertex buffers","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Memory buffers","Represents the type of index-buffer used.","Draw a primitive","Draw a primitive with index buffer","","","","","Cleanup unused resources. This should be called between …","Clears the supplied <code>RenderTargetView</code> to the supplied …","Clear color target","Clear a depth view with a specified value.","Clear a raw depth view with a specified value.","","Clears the supplied <code>RawRenderTargetView</code> to the supplied …","Clear a stencil view with a specified value.","Clear a raw stencil view with a specified value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Constant buffers in the program","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Copy part of a buffer to another","Copy part of a buffer to another","Copy part of a buffer to a texture","Copy part of a buffer to a texture","Copy part of a texture to a buffer","Copy part of a texture to a buffer","Copy part of one texture into another","Copy part of a texture to another texture","","","","","","","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","","","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","Compiles a <code>VertexShader</code> from source.","","","","Create a new empty raw texture with no data. The channel …","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Draws a <code>slice::Slice</code> using a pipeline state object, and …","Returns an empty set of flags.","The end index in the index-buffer. Processing will stop at …","","","","","","","","","","","","","","","","","","","","","","Like <code>flush_no_reset</code> but places a fence.","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","Submits the commands in this <code>Encoder</code>’s internal …","Like <code>flush</code> but keeps the encoded commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Universal format specification. Applicable to textures, …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new <code>Slice</code> with a given vertex count.","","Generate a mipmap chain for the given resource view.","Untyped version of mipmap generation.","Returns the capabilities of this <code>Factory</code>. This usually …","Returns the capabilities of this <code>Device</code>.","Calculates the number of primitives of the specified type …","Return the aggregated stage usage for the set.","Defines a structure that is used in a constant buffer.","Defines vertex, constant and pipeline formats in one block.","Defines a shorthand for a format.","Defines a set of pipeline-associated structures, and also …","Defines a set of pipeline-associated structures.","Defines a structure that is used in a vertex buffer.","Global constants in the program","","Resource handles","","","","","","","","","","","","","Inserts the specified flags in-place.","Instancing configuration.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turns self into an <code>IndexBuffer</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","A hacky flag to make sure the clients know we are unable …","Convenience macros Various helper macros.","Memory mapping","Types to describe the properties of memory allocated for …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Slice</code> to match the supplied vertex buffer, …","Returns the complement of this set of flags.","A flag indicating that the pixel shader manually assigns …","Output targets in the program","","","","Pin everything from this handle manager to live for a …","State presets","A typed high-level graphics pipeline interface.","Acquire a mapping Reader","","","","","","Removes the specified flags in-place.","Reset the command buffer contents, retain the allocated …","Resets the encoded commands.","Samplers in the program","Inserts or removes the specified flags depending on the …","Set reference values for the blending and stencil …","Set scissor rectangle","Shaders Shader parameter handling.","Divides one slice into two at an index.","The start index of the index-buffer. Processing will start …","Fixed-function hardware state.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Submits a <code>CommandBuffer</code> to the GPU for execution.","Returns the symmetric difference between the flags in <code>self</code> …","Texture creation and modification.","Textures in the program","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","public re-exported traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unordered access resources in the program","Update a vertex/index/uniform buffer","Update a buffer with a slice of data.","Update a buffer with a single structure.","Update a texture","Update the contents of a texture.","Attributes in the program","","","","","","","","","","","","","","","Stalls the current thread until the fence is satisfied","Acquire a mapping Writer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant buffer","Error creating a buffer.","Index buffer","An information block that is immutable and associated to …","Unknown other error.","Untyped buffer","Role of the memory buffer.","Staging buffer","Some of the bind flags are not supported.","Usage mode is not supported","Generic vertex buffer","Bind flags","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get buffer info","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this buffer mapped ?","","","Role","Size in bytes","Stride of a single element, in bytes. Only used for …","","","","","","","","","","","","","","","","","Usage hint","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC wiki…","Block Compression 1 also known as DXT1, S3TC. See S3TC wiki…","Block Compression 3 also known as DXT5, S3TC. See S3TC wiki…","Block Compression 3 also known as DXT5, S3TC. See S3TC wiki…","Standard 8bits BGRA format.","An ability of a channel type to be used for blended render …","Ability to be used for blended render targets.","Ability to be used for vertex buffers.","An ability of a surface type to be used for vertex buffers.","Associated channel type.","Source channel in a swizzle configuration. Some may …","Type of a surface channel. This is how we interpret the …","Compile-time channel type trait.","","","","","","","","","The corresponding data type to be passed from CPU.","Standard 24-bit depth format.","Standard 32-bit floating-point depth format.","Ability to be used for depth targets.","Standard 24-bit depth format with 8-bit stencil.","Ability to be used for depth+stencil targets.","An ability of a surface type to be used for depth targets.","","","","Complete run-time surface format.","Compile-time full format trait.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ability of a channel type to be used for render targets.","Ability to be used for render targets.","An ability of a surface type to be used for render targets.","Standard HDR floating-point format with 10 bits for RGB …","Standard 16-bit floating-point RGBA format.","Standard 32-bit floating-point RGBA format.","Standard 8bits RGBA format.","Shader-visible type that corresponds to this channel. For …","","","Standard 8bit gamma transforming RGB format.","Ability to be used for vertex buffers.","An ability of a surface type to be used for stencil …","Associated surface type.","Type of the allocated texture surface. It is supposed to …","Compile-time surface type trait.","Channel swizzle configuration for the resource views. …","An ability of a channel type to be used for textures.","Ability to be used for textures.","An ability of a surface type to be used for textures.","","","","","","","Abstracted 1-element container for macro internal use","Abstracted 2-element container for macro internal use","Abstracted 3-element container for macro internal use","Abstracted 4-element container for macro internal use","Shader view type of this format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutationeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Return the number of bits allocated for alpha and stencil.","Return the run-time value of the type.","","","","","","","Return the run-time value of the type.","Return the run-time value of the type.","","","","","","","","","","","","","","","","","","","","","","","","","Return the total number of bits for this format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a new swizzle where each channel is unmappedype-safe buffer handle","Typed DSV","Fence Handle","Stores reference-counted resources used in a command …","Program Handle","Untyped buffer handle","Raw DSV","Raw Pipeline State Handle","Raw RTV","Raw Shader Resource View Handle","Raw texture handle","Raw Unordered Access View Handle","Typed RTV","Sampler Handle","Shader Handle","Type-safe Shader Resource View Handle","Typed texture object","Type-safe Unordered Access View Handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear all references","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count the total number of referenced resources","","","","","","","","","","","","","","","","","","","","","Extend with all references of another handle manager","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get target dimensions","Get target dimensions","Get target dimensions","Get target dimensions","Get the associated information about the buffer","Get texture descriptor","Get sampler info","Get the associated texture","Get the associated texture","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Get the number of elements in the buffer.","","","","","","","","","","","","Create a new handle manager","Gets the raw view","Reference a buffer","Reference a DSV","Reference a fence","Reference a program","Reference a pipeline state object","Reference an RTV","Reference a sampler","Reference a shader","Reference a shader resource view","Reference a texture","Reference an unordered access view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The requested mapping access overlaps with another.","Error accessing a mapping.","The requested mapping access did not match the expected …","Mapping reader","Mapping writer. Currently is not possible to make …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Flags providing information about the type of memory …","Flags providing information about the usage of a resource.","Can serve as a depth/stencil target.","Full speed GPU access. Optimal for render targets and …","GPU to CPU data flow with mapping. Used for staging for …","CPU to GPU data flow with update commands. Used for …","A trait for plain-old-data types.","Read access","Can be rendered into.","Full access","Can be bound to the shader for reading.","Can be transfered into.","Can be transfered from.","Can be bound to the shader for writing.","CPU to GPU data flow with mapping. Used for staging for …","How this memory will be used regarding GPU-CPU data flow.","Write access","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","Cast a slice from one POD type to another.","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is this memory bound to be mutated ?","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Blending preset modes.","Depth presets for depth tests.","When combining two fragments, add their values together, …","When combining two fragments, add the value of the source …","When combining two fragments, subtract the destination …","When combining two fragments, multiply their values …","When combining two fragments, choose the source value","“&lt;=” comparison with read-only depth","When rendering a fragment, only draw when the fragment’s …","When rendering a fragment, draw regardless of depth buffer …","When rendering a fragment, draw regardless of depth buffer …","Informations about what is accessed by a bunch of commands.","Constant buffer mismatch.","The associated “data” type - a member of the PSO “…","The “bind” logic portion of the PSO component. Defines …","The “link” logic portion of a PSO component. Defines …","All the information surrounding a shader program that is …","Error matching an element inside the constant buffer.","Element format mismatch.","Global constant mismatch.","The assotiated “init” type - a member of the PSO “…","Failure to initilize the link between the shader and the …","The associated “meta” struct.","The associated “meta” struct.","Element not found.","Element offset mismatch.","a service trait implemented the “data” structure of …","A service trait implemented by the “init” structure of …","A strongly typed Pipleline State Object. See the module …","Pixel target mismatch.","A complete set of raw data that needs to be specified at …","Shader resource view mismatch.","Sampler mismatch.","Unordered access view mismatch.","Vertex attribute mismatch.","Vertex attributes","Dump all the contained data into the raw data set, given …","Dump the given data into the raw data set.","","","","","","","","","","","","","Buffer components for a PSO.","Register a buffer read access","Register a buffer write access","Combine slice data with pipeline state.","","Clear access informations","Clear all contained data.","","","","","","","","","","","","","Render target views (RTV)","","Constant buffers","Depth stencil view (DSV)","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a raw handle reference.","Get a “meta” struct reference. Can be used by the user …","","Is there any mapped buffer reads ?","Is there any mapped buffer writes ?","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if this link is actually used by the shader.","Attempt to link with a constant buffer.","Attempt to link with a depth-stencil target (DSV).","Attempt to link with a global constant.","Attempt to link with a vertex attribute.","Attempt to link with an output render target (RTV).","Attempt to link with a shader resource (SRV).","Attempt to link with a sampler.","Attempt to enable scissor test.","Attempt to map a PSO descriptor to a give shader program, …","Attempt to link with an unordered access (UAV).","Attempt to link with a vertex buffer containing multiple …","Returns the mapped buffers that The GPU will read from","Returns the mapped buffers that The GPU will write to","","","","","","","Create a new empty data link.","Creates empty access informations","Create an empty data set.","Create a new PSO from a raw handle and the “meta” …","Create a new empty PSO descriptor.","","Type of the primitive","Rasterizer setup","","Resource components for a PSO.","","Shader resource views","","Samplers","","Enable scissor test","Takes all the accesses necessary for submission","Render target components for a PSO.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unordered access views","","Vertex buffers","","Element format in the code-side constant buffer.","Element byte offset in the code-side constant buffer.","Element name.","Element name.","Element format in the shader-side constant buffer.","Element byte offset in the shader-side constant buffer.","","","","","","","","","","","","","","","Index of a vertex buffer.","Constant buffer component.","Offset of an attribute from the start of the buffer, in …","Offset between attribute values, in bytes","A struct element descriptor.","Global (uniform) constant component. Describes a …","The associated init type for PSO component.","Instance buffer component. Same as the vertex buffer but …","The number of instances between each subsequent attribute …","Helper phantom type for per-instance attributes.","Helper phantom type for per-vertex attributes.","Raw constant buffer component.","Raw global (uniform) constant component. Describes a …","Raw vertex/instance buffer component. Can be used when the …","A trait to be implemented by any struct having the layout …","Helper trait for <code>VertexBufferCommon</code> to support variable …","Vertex buffer component. Advanced per vertex.","Service struct to simplify the implementations of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Element format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get an actual instance rate value from the init.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Offset from the beginning of the container, in bytes","Get the layout of an element by name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Slice-PSO bundle.","","","Pipeline data","Draw bundle using encoder.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create new Bundle","Pipeline state","Slice","","","","Raw (untyped) shader resource (SRV).","Sampler component.","Shader resource component (SRV). Typically is a view into …","A convenience type for a texture paired with a sampler. It …","Unordered access component (UAV). A writable resource …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blend reference component. Sets up the reference color for …","Render target component with active blending mode.","Depth + stencil target component.","Depth target component.","Raw (untyped) render target component with optional …","Render target component. Typically points to a …","Scissor component. Sets up the scissor test for rendering.","Stencil target component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of a shader constant.","Used by the pixel shader","Unable to compile the domain shader","A trait that statically links simple data types to …","Used by the geometry shader","Unable to compile the geometry shader","Used by the hull shader","Unable to compile the hull shader","Unable to link","Used by the pixel shader","Unable to compile the pixel shader","Program linking error","","Parameter usage flags.","Used by the vertex shader","Unable to compile the vertex shader","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Shader handling.","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the associated constant format.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","Vertex information that a shader takes as input.","Base type of this shader parameter.","A trait that statically links simple data types to base …","","Sample from a buffer.","","","Error type for trying to store a UniformValue in a …","The shader failed to compile.","Format of a shader constant.","A constant in the shader - a bit of data that doesn’t …","A constant buffer.","Number of components this parameter represents.","An error type for creating programs.","An error type for creating shaders.","Sample from a cubemap.","Sample from a 1D texture","Sample from a 2D texture","Sample from a 3D texture","Number of components in a container type (vectors/matrices)","","Array sizes differ between the value and the var (trying …","Base types differ between the value and the var (trying to …","Container-ness differs between the value and the var …","","","","","","","","","","A trait that statically links simple data types to …","","","","","","","","Whether the sampler samples an array texture.","Whether the sampler compares the depth value upon sampling.","Whether the sampler samples a multisample texture.","Whether the sampler samples a rectangle texture.","Location of a parameter in the program.","A matrix.","Whether the matrix is column or row major.","The device does not support the requested shader model.","","","","","","Target output variable.","","A program","Metadata about a program.","","","A constant static array of all shader stages.","A type of the sampler variable.","Sampler shader parameter.","Scalar value","Which program stage this shader represents.","The device does not support the shader stage.","A type of the texture variable. This has to match the …","Texture shader parameter.","","","","","","A value that can be uploaded to the device as a uniform.","Unordered access shader parameter.","Parameter usage flags.","A vector with <code>Dimension</code> components.","","Type that this attribute is composed of.","Type that this constant is composed of","Base type for the texture.","Type of the output component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this texture can be used with a sampler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant buffers in the program","“Scalarness” of this attribute.","“Scalarness” of this constant.","“Scalarness” of this output.","Number of elements this constant represents.","","","","List of individual elements in this buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Get the associated constant format.","Get program info","Global constants in the program","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether a value is compatible with this variable. That is, …","A hacky flag to make sure the clients know we are unable …","Location of this constant in the program. For constant …","Name of this attribute.","Name of this constant.","Name of this constant buffer.","Name of this texture variable.","Name of this unordered variable.","Name of this sampler variable.","Name of this output variable.","","","","","","","","","","","","","A flag indicating that the pixel shader manually assigns …","Output targets in the program","Samplers in the program","Size (in bytes) of this buffer’s data.","Slot of the vertex attribute.","Slot of the constant buffer.","Slot of this texture variable.","Slot of this unordered variable.","Slot of this sampler variable.","Output color target index.","Textures in the program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of this texture.","Type of this sampler.","","","","","","","","","","","","","","","","","","","","","","Unordered access resources in the program","What program stage this buffer is used in.","What program stage this texture is used in.","What program stage this UAV is used in.","What program stage this texture is used in.","Attributes in the program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds source and destination. Source and destination are …","<code>true</code>","","","","","","Clockwise winding order.","The state of an active color render target","","A pixel-wise comparison function.","","","Counter-clockwise winding order.","Which face, if any, to cull.","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to the …","Depth test state.","","","<code>x == y</code>","","","Rasterize as a face.","","The front face winding order of a set of vertices.","","<code>x &gt; y</code>","<code>x &gt;= y</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Bitwise invert the current value in the stencil buffer.","Keep the current value in the stencil buffer (no change).","<code>x &lt; y</code>","<code>x &lt;= y</code>","Rasterize as a line with the given width.","Width of a line. Could be f32 if not for Hash deriving …","Component-wise maximum value of source and destination. …","Component-wise minimum value of source and destination. …","Multi-sampling rasterization mode","<code>false</code>","<code>x != y</code>","","How to offset vertices in screen space, if at all.","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","","","Rasterize as a point.","","How to rasterize a primitive.","Primitive rasterization state. Note that GL allows …","The complete set of the rasterizer reference values. …","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Subtracts source from destination. Source and destination …","","","","Complete stencil state, specifying how to handle the front …","Stencil mask operation.","Complete stencil state for a given side of a face.","Subtracts destination from source. Source and destination …","Set the value in the stencil buffer to zero.","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Optional blending.","Constant blend color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Which face should be culled.","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Which vertex winding is considered to be the front face …","Comparison function to use to determine if the stencil …","Comparison function to use.","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Color mask to use.","A mask that is ANDd with both the stencil buffer value and …","A mask that is ANDd with the stencil value before writing …","How to rasterize this primitive.","","","","","","","","","","","","","Create a new stencil state with a given function.","Create a new blend state with a given equation.","Create a new filling rasterizer.","Returns the complement of this set of flags.","Any polygon offset to apply.","What operation to do if the stenil test passes but the …","What operation to do if the stencil test fails.","What operation to do if both the depth and stencil test …","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Multi-sampling mode.","Inserts or removes the specified flags depending on the …","","Stencil front and back values.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Add back face culling.","Add polygon offset.","Specify whether to write to the depth buffer or not.","","","","","Describes the configuration of samples inside each texel.","The mipmap data is not provided, but the memory for it …","Anisotropic filtering with a given “max”, must be …","Sample multiple texels within a single mipmap level to …","Number of bits per component","Use border color.","A constant array of cube faces in the order they map to …","Clamp the texture to the value at <code>0.0</code> or <code>1.0</code> respectively.","Coverage Sampling Anti-Aliasing (CSAA/EQAA)","Pure texture object creation error.","A set of 6 2D textures, one for each face of a cube.","An array of Cube textures.","The face of a cube texture to do an operation on.","A single row of texels.","An array of rows of texels. Equivalent to Texture2D except …","A traditional 2D texture, with rows arranged contiguously.","An array of 2D textures. Equivalent to Texture3D except …","A volume texture, with each 2D layer arranged contiguously.","The given data has a different size than the target …","Texture depth-stencil view descriptor.","Depth-stencil read-only flags","Dimensions: width, height, depth, and samples.","How to filter the texture when sampling. They correspond …","Failed to map a given format to the device.","Describes a subvolume of a texture, which image data can …","Texture storage descriptor.","Specifies the kind of a texture storage to be allocated.","The kind doesn’t support a particular operation.","A depth value, specifying which plane to select out of a …","An error associated with selected texture layer.","Mipmap level to select in a texture.","The requested mipmap level count does not match the …","A wrapper for the LOD level of a texture.","Maximum accessible mipmap level of a texture.","The marker for the texture initializer to generate extra …","The requested mipmap creation parameter is unsupported.","Add simple mipmapping.","Mirror the texture. Like tile, but uses abs(coord) before …","MultiSampled Anti-Aliasing (MSAA)","","","","New image info based on the universal format spec. The …","The source texture kind doesn’t support array slices.","Number of EQAA fragments","Number of MSAA samples","Selected layer is outside of the provided range.","A wrapper for the 8bpp RGBA color, encoded as u32.","","","","The mipmap data is provided as a part of bitmap data.","Depth is read-only in the view.","Both depth and stencil are read-only.","Stencil is read-only in the view.","Untyped texture","New raw image info based on the universal format spec.","Texture render view descriptor.","Texture resource view descriptor.","Specifies how to sample from a texture.","Failed to map a given multisampled kind to the device.","The dumbest filtering possible, nearest-neighbor …","No additional sample information","Dimension size","Unsupported size in one of the dimensions.","A texture region defined for copy operations","Tile the texture. That is, sample the coordinate modulo <code>1.0</code>…","Sample multiple texels across two mipmap levels to …","The mentioned usage mode is not supported","Specifies how texture coordinates outside the range <code>[0, 1]</code> …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Border color is used when one of the wrap modes is set to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison mode, used primary for a shadow map.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Convert into a differently typed format.","Optional cube face","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Filter method to use.","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of each texel.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the total number of bytes.","Get texture dimensions, with 0 values where not applicable.","Get texture descriptor","Get the dimensionality of a particular mipmap level.","Return the number of actual data fragments stored per …","Count the number of mipmap levels.","Return the number of slices for an array, or None for …","Get the total number of texels.","","","","","","","","","","","","","","","","","","","","Dimensions, offsets, and format","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Check if it’s one of the cube kinds.","Returns <code>true</code> if no flags are currently stored.","Check if it fits inside given dimensions.","Texture kind","","","","","","","","This bias is added to every computed mipmap level (N + …","This range is used to clamp LOD level used for sampling.","","","Which mipmap to select.","","","","","","","","","","","","","","","","Return true if the surface has to be resolved before …","Create a new sampler description with a given filter …","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","Raw texture","Get image info for a given mip.","","","","","","","","","","","","","","","","","","","Get the raw image info for a given mip and a channel type.","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Change the texture","Wrapping mode for each of the U, V, and W axis (S, T, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Overview","This trait is responsible for creating and managing …","A trait for plain-old-data types.","Associated <code>Resources</code> type.","Cleanup unused resources. This should be called between …","","","","","Creates a constant buffer for <code>num</code> identical elements of …","Creates a constant buffer for <code>num</code> identical elements of …","","","Creates a download buffer for <code>num</code> elements of type <code>T</code>.","Creates a download buffer for <code>num</code> elements of type <code>T</code>.","Creates an immutable index buffer from the supplied …","Creates an immutable index buffer from the supplied …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Similar to <code>create_pipeline_from_program(..)</code>, but takes a …","Similar to <code>create_pipeline_from_program(..)</code>, but takes a …","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","","","Create a linear sampler with clamping to border.","Create a linear sampler with clamping to border.","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","Creates a <code>ShaderSet</code> from the supplied vertex and pixel …","Creates a <code>ShaderSet</code> from the supplied vertex and pixel …","Creates a <code>ShaderSet</code> from the supplied vertex, geometry, …","Creates a <code>ShaderSet</code> from the supplied vertex, geometry, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Compiles a <code>VertexShader</code> from source.","","","","Create a new empty raw texture with no data. The channel …","Creates an upload buffer for <code>num</code> elements of type <code>T</code>.","Creates an upload buffer for <code>num</code> elements of type <code>T</code>.","Creates an immutable vertex buffer from the supplied …","Creates an immutable vertex buffer from the supplied …","Creates an immutable vertex buffer from the supplied …","Creates an immutable vertex buffer from the supplied …","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","Returns the capabilities of this <code>Factory</code>. This usually …","Returns the capabilities of this <code>Device</code>.","Creates a basic shader <code>Program</code> from the supplied vertex …","Creates a basic shader <code>Program</code> from the supplied vertex …","Pin everything from this handle manager to live for a …","Acquire a mapping Reader","Submits a <code>CommandBuffer</code> to the GPU for execution.","","","","","","","","","","","","","","Stalls the current thread until the fence is satisfied","Acquire a mapping Writer"],"i":[1,2,0,0,3,0,4,5,0,0,0,6,0,0,0,0,0,0,0,3,0,7,0,7,0,0,8,8,8,8,8,8,8,0,3,9,0,0,0,8,8,8,8,2,2,0,0,0,0,0,10,0,4,5,0,5,11,11,11,11,3,0,4,5,12,12,5,10,12,12,12,11,0,0,3,0,11,0,7,3,0,0,0,0,0,0,0,0,3,13,0,0,6,0,3,0,3,0,3,0,9,0,0,0,0,0,13,0,9,9,13,3,0,11,11,11,11,8,8,8,8,0,10,0,3,4,5,0,0,0,0,14,14,14,15,16,16,16,16,16,16,16,16,16,14,14,14,14,14,14,14,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,0,15,16,16,7,4,5,13,6,18,16,18,18,16,18,18,18,17,14,12,10,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,17,14,12,10,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,14,14,19,14,16,18,16,18,16,18,16,18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,2,12,10,7,4,5,13,1,14,18,14,15,17,14,12,10,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,14,18,6,18,18,17,14,14,14,14,14,12,12,10,10,18,7,7,15,2,4,4,5,5,13,13,8,19,20,21,22,23,24,9,11,1,1,0,17,14,12,10,18,18,18,7,7,7,7,7,15,2,4,5,13,13,13,13,8,19,20,21,22,23,24,9,11,1,14,14,14,14,15,16,18,18,25,6,15,9,0,0,0,0,0,0,19,17,0,17,14,15,2,19,20,21,22,23,24,9,11,14,15,14,14,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,26,2,14,14,19,0,0,0,17,14,12,10,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,15,14,19,19,17,14,8,6,0,0,25,20,21,22,23,24,14,16,18,19,14,16,16,0,15,15,0,14,14,6,14,0,19,17,14,12,10,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,12,10,7,4,5,13,1,14,0,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,17,14,12,10,18,7,15,2,4,5,13,8,19,20,21,22,23,24,9,11,1,14,19,16,18,18,16,18,19,25,25,25,25,25,25,25,25,25,25,25,25,25,17,6,25,17,17,27,28,29,30,31,32,30,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,41,42,43,44,42,43,44,43,44,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,64,66,0,66,0,67,0,0,66,67,67,66,68,69,66,68,67,69,66,68,67,66,68,67,66,68,67,67,69,66,68,67,69,66,68,67,67,69,66,68,67,69,69,66,68,67,69,66,68,67,69,68,67,68,68,68,66,68,67,67,69,66,68,67,69,66,68,67,69,66,68,67,68,70,71,72,73,74,75,76,77,78,72,73,72,72,0,79,0,79,0,79,0,0,0,0,0,80,0,0,0,0,79,0,79,0,79,0,79,81,0,0,0,0,0,0,0,0,82,0,0,0,0,0,82,0,82,83,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,79,0,0,0,0,0,0,0,84,0,82,0,0,0,80,0,0,0,0,0,0,0,0,0,82,0,82,0,0,0,0,80,83,83,83,83,83,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,74,75,76,77,78,74,75,76,77,78,74,75,76,77,78,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,74,75,75,76,76,77,77,78,78,79,84,85,86,87,88,89,90,80,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,79,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,72,73,74,75,76,77,78,72,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,82,85,86,87,88,89,90,79,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,83,72,73,74,75,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,121,123,125,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,119,120,128,129,115,116,130,128,129,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,115,115,121,122,123,124,125,126,127,128,129,130,131,132,117,132,132,132,132,132,132,132,132,132,132,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,0,133,0,0,133,134,135,133,134,135,133,133,134,135,135,133,133,133,133,134,135,133,134,135,133,133,134,135,133,133,133,133,134,135,133,134,135,133,134,135,136,136,0,0,137,138,138,138,0,139,137,139,137,137,137,137,138,0,139,139,137,139,137,139,137,139,137,139,137,139,137,139,137,139,137,138,139,137,138,139,137,0,138,139,137,138,139,137,138,139,137,139,137,139,137,139,137,139,137,138,139,137,139,137,138,139,139,139,139,139,137,137,137,137,137,138,139,137,139,137,139,137,139,137,139,137,138,139,137,139,137,139,137,139,137,138,139,137,139,137,139,137,137,139,137,139,137,138,139,137,139,137,139,137,139,137,139,137,139,137,138,139,137,139,137,138,139,137,138,139,137,138,139,137,139,137,0,0,0,0,0,0,0,0,0,0,0,0,140,141,0,0,0,0,142,140,143,0,144,145,142,142,0,0,0,140,0,140,140,140,140,146,145,141,147,148,142,140,149,146,147,148,142,140,149,146,0,147,147,0,140,147,148,147,148,142,140,149,146,147,148,142,140,149,146,146,148,146,146,142,140,147,148,142,140,149,146,147,148,142,142,140,140,149,146,147,148,142,142,140,140,149,146,149,149,148,147,147,149,146,147,148,142,140,149,146,143,143,143,143,143,143,143,143,143,144,143,143,147,147,147,148,142,140,149,146,143,147,148,149,146,148,146,146,148,0,148,146,148,146,148,146,147,0,147,148,142,140,149,146,142,140,147,148,142,140,149,146,147,148,142,140,149,146,147,148,142,140,149,146,148,146,148,146,150,151,152,152,151,151,152,153,154,155,156,157,158,159,153,154,155,156,157,158,159,0,0,0,0,0,0,160,0,0,0,0,0,0,0,0,0,0,0,161,162,163,164,165,166,161,167,168,162,163,164,165,166,169,161,167,168,162,163,164,165,166,169,161,162,163,164,165,166,169,161,162,163,164,165,166,169,161,162,163,164,165,166,169,161,162,163,164,165,166,169,169,161,167,168,162,163,164,165,166,169,160,167,168,170,161,162,163,164,165,166,169,161,167,168,162,163,164,165,166,169,161,162,163,164,165,166,162,165,163,166,161,164,161,164,164,165,166,169,161,162,163,164,165,166,169,171,161,162,163,164,165,166,169,161,167,168,162,163,164,165,166,169,161,167,168,162,163,164,165,166,169,161,167,168,162,163,164,165,166,169,0,172,172,172,172,172,172,172,172,172,172,172,172,0,0,0,0,0,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,175,176,175,177,174,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,0,0,0,0,0,0,0,0,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,180,181,182,178,179,183,184,183,184,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,178,179,180,181,182,183,184,185,0,186,187,0,186,187,186,187,187,186,187,0,0,0,186,187,186,186,186,186,186,186,186,186,187,186,187,186,187,187,186,187,186,186,186,186,188,0,187,186,186,187,186,186,187,187,186,186,186,186,186,187,186,186,186,186,186,186,189,186,186,186,186,187,186,186,186,187,186,186,186,186,186,186,186,186,187,186,187,186,187,186,187,186,187,186,186,190,191,192,193,194,195,196,196,197,0,0,0,198,199,200,201,0,202,0,0,0,0,0,0,199,199,199,199,0,203,204,204,204,198,8,8,8,8,8,8,8,198,0,203,203,198,8,8,8,8,0,0,0,0,0,205,0,202,206,197,201,206,207,0,203,0,0,207,200,0,0,0,205,0,202,0,0,198,8,8,8,8,0,0,0,205,203,208,209,210,211,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,199,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,204,202,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,204,202,216,19,208,209,211,209,204,202,216,212,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,204,202,202,216,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,216,217,189,215,19,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,209,19,209,208,209,212,210,213,214,211,199,196,205,208,209,212,210,213,214,211,202,216,19,19,19,212,208,212,210,213,214,211,19,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,204,202,216,204,202,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,210,214,197,201,206,207,200,199,196,198,205,203,208,209,212,210,213,214,211,215,204,202,216,19,212,210,213,214,19,218,219,219,219,220,221,222,223,224,223,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,225,225,226,227,228,226,229,0,0,0,230,0,0,0,231,231,230,0,232,232,0,231,231,228,0,0,233,229,0,226,228,228,232,232,232,232,228,228,233,0,227,227,0,228,228,229,0,0,0,234,234,233,226,0,0,0,232,227,231,234,231,0,0,0,227,232,234,234,226,235,236,226,226,226,226,226,226,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,229,239,228,232,241,236,242,227,231,234,243,226,235,226,226,240,241,236,242,243,235,237,238,243,226,226,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,243,226,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,226,226,226,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,226,226,226,226,236,240,241,242,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,226,226,226,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,226,226,237,241,241,240,225,233,240,241,236,242,234,243,235,226,237,238,236,235,240,226,240,241,241,241,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,226,240,226,243,238,226,226,226,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,226,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,230,225,229,233,239,240,228,232,241,236,242,227,231,234,243,235,226,237,238,226,240,240,242,244,245,246,247,0,248,249,249,0,250,0,250,251,0,252,252,0,252,252,252,252,252,253,0,0,0,0,253,0,0,0,253,0,0,0,253,0,0,0,253,249,250,251,254,254,254,0,255,0,0,255,0,254,254,254,248,256,256,256,0,0,0,0,0,253,249,251,0,253,0,250,249,253,0,256,257,256,256,256,256,256,256,256,258,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,263,264,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,251,249,254,252,248,260,261,250,257,263,264,256,265,258,256,256,260,261,260,253,255,256,256,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,256,258,265,259,253,253,255,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,256,256,256,256,265,260,257,259,253,255,251,251,249,254,252,248,260,261,250,262,262,247,247,258,257,263,264,256,265,265,256,256,256,256,260,252,259,252,251,252,252,260,259,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,260,261,256,256,256,259,253,255,251,249,254,252,248,260,261,250,262,262,247,247,258,257,263,264,256,265,256,252,256,260,261,257,263,264,265,264,265,257,258,258,263,263,260,253,255,251,249,252,260,261,262,247,258,257,263,264,256,265,251,258,256,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,256,256,256,256,263,256,261,257,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,257,253,255,256,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,259,253,255,251,249,254,252,248,260,261,250,262,247,258,257,263,264,256,265,256,257,260,261,258,260,260,260,266,267,267,268,269,270,271,272,273,268,274,275,276,277,278,279,280,281,276,277,278,279,281,277,278,279,278,282,283,283,6,0,0,0,0,6,6,25,25,25,25,284,284,25,25,284,284,284,284,284,284,284,284,284,284,25,25,25,25,284,284,25,25,25,25,25,284,284,284,284,284,284,284,284,25,25,25,25,25,284,284,284,284,284,284,6,25,6,284,284,6,25,6,25,25,25,25,25,25,25,25,25,25,25,25,25,6,25],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mirror",3]],null,[[["",0]]],[[["",0],["usize",0],["uniformvalue",4]]],[[["",0],["indextype",4]]],[[["",0]]],[[["",0],["pixeltargetset",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["vertexbufferset",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3]],["u8",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirrornull,null,[[["",0],["u32",0],["u32",0],["option",4]]],[[["",0],["u32",0],["u32",0],["u32",0],["option",4]]],[[["pipelinestateerror",4,[["",26,[["debug",8],["display",8]]]]]],["option",4,[["error",8]]]],[[["resourceviewerror",4]],["option",4,[["error",8]]]],[[["targetviewerror",4]],["option",4,[["error",8]]]],[[["combinederror",4]],["option",4,[["error",8]]]],[[["",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rendertargetview",3]]],[[["",0],["clearcolor",4]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["depthstencilview",3],["depth",6]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawdepthstencilview",3],["depth",6]]],[[["",0],["option",4,[["f32",0]]],["option",4,[["u8",0]]]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawrendertargetview",3],["clearcolor",4]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["depthstencilview",3],["stencil",6]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawdepthstencilview",3],["stencil",6]]],[[["rect",3]],["rect",3]],[[["mirror",3]],["mirror",3]],[[["copyerror",4,[["clone",8],["clone",8]]]],["copyerror",4,[["clone",8],["clone",8]]]],[[["updateerror",4,[["clone",8]]]],["updateerror",4,[["clone",8]]]],[[["pipelinestateerror",4,[["clone",8]]]],["pipelinestateerror",4,[["clone",8]]]],[[["slice",3,[["",26,[["clone",8],["resources",8]]]]]],["slice",3,[["",26,[["clone",8],["resources",8]]]]]],[[["indexbuffer",4,[["",26,[["clone",8],["resources",8]]]]]],["indexbuffer",4,[["",26,[["clone",8],["resources",8]]]]]],[[["resourceviewerror",4]],["resourceviewerror",4]],[[["targetviewerror",4]],["targetviewerror",4]],[[["combinederror",4]],["combinederror",4]],[[["uniformvalue",4]],["uniformvalue",4]],[[["programinfo",3]],["programinfo",3]],[[["vertexshader",3]],["vertexshader",3]],[[["hullshader",3]],["hullshader",3]],[[["domainshader",3]],["domainshader",3]],[[["geometryshader",3]],["geometryshader",3]],[[["pixelshader",3]],["pixelshader",3]],[[["shaderset",4]],["shaderset",4]],[[["primitive",4]],["primitive",4]],[[["submissionerror",4]],["submissionerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["mirror",3],["mirror",3]],["ordering",4]],[[["mirror",3]],["mirror",3]],null,[[["mirror",3],["mirror",3]],["bool",0]],[[["",0],["usize",0],["usize",0],["usize",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["buffer",3],["buffer",3],["usize",0],["usize",0],["usize",0]],["copybufferresult",6]],[[["",0],["usize",0],["texturecopyregion",3]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawbuffer",3],["usize",0],["rawtexture",3],["option",4,[["cubeface",4]]],["rawimageinfo",6]],["copybuffertextureresult",6]],[[["",0],["texturecopyregion",3],["usize",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawtexture",3],["option",4,[["cubeface",4]]],["rawimageinfo",6],["rawbuffer",3],["usize",0]],["copytexturebufferresult",6]],[[["",0],["texturecopyregion",3],["texturecopyregion",3]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawtexture",3],["option",4,[["cubeface",4]]],["rawimageinfo",6],["rawtexture",3],["option",4,[["cubeface",4]]],["rawimageinfo",6]],["result",4,[["copyerror",4]]]],[[["",0],["usize",0],["role",4],["usage",4],["bind",3]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["role",4],["bind",3]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["usize",0],["role",4],["bind",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["info",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["u16",0],["u16",0]],["result",4,[["combinederror",4]]]],[[["",0],["u16",0],["u16",0]],["result",4,[["depthstencilview",3],["combinederror",4]]]],[[["",0],["program",3],["descriptor",3]],["result",4,[["rawpipelinestate",3],["creationerror",3]]]],[[["",0],["shaderset",4]],["result",4,[["program",3],["createprogramerror",3]]]],[[["",0],["u16",0],["u16",0]],["result",4,[["combinederror",4]]]],[[["",0],["samplerinfo",3]],["sampler",3]],[[["",0],["stage",4]],["result",4,[["shader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["domainshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["geometryshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["hullshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["pixelshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["vertexshader",3],["createshadererror",4]]]],[[["",0],["kind",4],["u8",0],["bind",3],["usage",4],["option",4,[["channeltype",4]]]],["result",4,[["texture",3],["creationerror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["info",3],["option",4,[["channeltype",4]]],["option",4]],["result",4,[["rawtexture",3],["creationerror",4]]]],[[],["indexbuffer",4,[["resources",8]]]],[[["copyerror",4]],["str",0]],[[["updateerror",4,[["",26,[["any",8],["debug",8],["display",8]]]]]],["str",0]],[[["pipelinestateerror",4,[["",26,[["debug",8],["display",8]]]]]],["str",0]],[[["resourceviewerror",4]],["str",0]],[[["targetviewerror",4]],["str",0]],[[["combinederror",4]],["str",0]],[[["submissionerror",4]],["str",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["slice",3],["pipelinestate",3],["",0]]],[[],["mirror",3]],null,[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["copyerror",4,[["partialeq",8],["partialeq",8]]],["copyerror",4]],["bool",0]],[[["updateerror",4,[["partialeq",8]]],["updateerror",4]],["bool",0]],[[["pipelinestateerror",4,[["partialeq",8]]],["pipelinestateerror",4]],["bool",0]],[[["slice",3,[["",26,[["partialeq",8],["resources",8]]]]],["slice",3]],["bool",0]],[[["indexbuffer",4,[["",26,[["partialeq",8],["resources",8]]]]],["indexbuffer",4]],["bool",0]],[[["resourceviewerror",4],["resourceviewerror",4]],["bool",0]],[[["targetviewerror",4],["targetviewerror",4]],["bool",0]],[[["combinederror",4],["combinederror",4]],["bool",0]],[[["uniformvalue",4],["uniformvalue",4]],["bool",0]],[[["programinfo",3],["programinfo",3]],["bool",0]],[[["vertexshader",3],["vertexshader",3]],["bool",0]],[[["hullshader",3],["hullshader",3]],["bool",0]],[[["domainshader",3],["domainshader",3]],["bool",0]],[[["geometryshader",3],["geometryshader",3]],["bool",0]],[[["pixelshader",3],["pixelshader",3]],["bool",0]],[[["shaderset",4],["shaderset",4]],["bool",0]],[[["primitive",4],["primitive",4]],["bool",0]],[[["submissionerror",4],["submissionerror",4]],["bool",0]],[[["mirror",3]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["",0],["option",4,[["fence",3,[["resources",8]]]]]],["submissionresult",6,[["fence",3,[["resources",8]]]]]],[[["",0],["accessinfo",3],["option",4,[["fence",3]]]],["result",4,[["fence",3],["submissionerror",4]]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["",0]],["submissionresult",6]],[[["rect",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["copyerror",4],["formatter",3]],["result",6]],[[["copyerror",4,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["updateerror",4,[["",26,[["any",8],["debug",8],["display",8]]]]],["formatter",3]],["result",6]],[[["updateerror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["encoder",3,[["",26,[["debug",8],["resources",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["pipelinestateerror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["pipelinestateerror",4,[["",26,[["debug",8],["display",8]]]]],["formatter",3]],["result",6]],[[["slice",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["indexbuffer",4,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["resourceviewerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["resourceviewerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["targetviewerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["targetviewerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["combinederror",4],["formatter",3]],["result",4,[["error",3]]]],[[["combinederror",4],["formatter",3]],["result",4,[["error",3]]]],[[["uniformvalue",4],["formatter",3]],["result",4,[["error",3]]]],[[["programinfo",3],["formatter",3]],["result",4,[["error",3]]]],[[["vertexshader",3],["formatter",3]],["result",4,[["error",3]]]],[[["hullshader",3],["formatter",3]],["result",4,[["error",3]]]],[[["domainshader",3],["formatter",3]],["result",4,[["error",3]]]],[[["geometryshader",3],["formatter",3]],["result",4,[["error",3]]]],[[["pixelshader",3],["formatter",3]],["result",4,[["error",3]]]],[[["shaderset",4],["formatter",3]],["result",4,[["error",3]]]],[[["primitive",4],["formatter",3]],["result",4,[["error",3]]]],[[["submissionerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["submissionerror",4],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[["never",0]]],[[],["encoder",3,[["resources",8]]]],[[]],[[["creationerror",3]],["pipelinestateerror",4]],[[["initerror",4]],["pipelinestateerror",4]],[[]],[[["programerror",4]],["pipelinestateerror",4]],[[["pipelinestateerror",4,[["str",0]]]],["pipelinestateerror",4,[["string",3]]]],[[]],[[]],[[]],[[]],[[["resourceviewerror",4]],["combinederror",4]],[[["creationerror",4]],["combinederror",4]],[[["targetviewerror",4]],["combinederror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["mirror",3]]]],[[["u8",0]],["mirror",3]],[[["u8",0]],["mirror",3]],[[],["mirror",3]],[[["vertexcount",6]],["slice",3,[["resources",8]]]],[[["",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["shaderresourceview",3]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["rawshaderresourceview",3]]],[[["",0]],["capabilities",3]],[[["",0]],["capabilities",3]],[[["slice",3,[["resources",8]]],["primitive",4]],["u32",0]],[[["shaderset",4]],["usage",3]],null,null,null,null,null,null,null,null,null,[[["rect",3],["",0]]],[[["mirror",3],["",0]]],[[["slice",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["indexbuffer",4,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["programinfo",3],["",0]]],[[["vertexshader",3],["",0]]],[[["hullshader",3],["",0]]],[[["domainshader",3],["",0]]],[[["geometryshader",3],["",0]]],[[["pixelshader",3],["",0]]],[[["shaderset",4],["",0]]],[[["primitive",4],["",0]]],[[["mirror",3],["mirror",3]]],null,[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["indexbuffer",4]],[[["indexbuffer",4,[["resources",8]]],["",0]],["indexbuffer",4,[["resources",8]]]],[[["mirror",3]],["bool",0]],[[["mirror",3]],["bool",0]],null,null,null,null,[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["copyerror",4,[["partialeq",8],["partialeq",8]]],["copyerror",4]],["bool",0]],[[["updateerror",4,[["partialeq",8]]],["updateerror",4]],["bool",0]],[[["pipelinestateerror",4,[["partialeq",8]]],["pipelinestateerror",4]],["bool",0]],[[["slice",3,[["",26,[["partialeq",8],["resources",8]]]]],["slice",3]],["bool",0]],[[["indexbuffer",4,[["",26,[["partialeq",8],["resources",8]]]]],["indexbuffer",4]],["bool",0]],[[["resourceviewerror",4],["resourceviewerror",4]],["bool",0]],[[["targetviewerror",4],["targetviewerror",4]],["bool",0]],[[["combinederror",4],["combinederror",4]],["bool",0]],[[["uniformvalue",4],["uniformvalue",4]],["bool",0]],[[["programinfo",3],["programinfo",3]],["bool",0]],[[["vertexshader",3],["vertexshader",3]],["bool",0]],[[["hullshader",3],["hullshader",3]],["bool",0]],[[["domainshader",3],["domainshader",3]],["bool",0]],[[["geometryshader",3],["geometryshader",3]],["bool",0]],[[["pixelshader",3],["pixelshader",3]],["bool",0]],[[["shaderset",4],["shaderset",4]],["bool",0]],[[["primitive",4],["primitive",4]],["bool",0]],[[["buffer",3]],["slice",3,[["resources",8]]]],[[["mirror",3]],["mirror",3]],null,null,[[["rect",3],["rect",3]],["option",4,[["ordering",4]]]],[[["mirror",3],["mirror",3]],["option",4,[["ordering",4]]]],[[["uniformvalue",4],["uniformvalue",4]],["option",4,[["ordering",4]]]],[[["",0],["manager",3]]],null,null,[[["",0],["buffer",3]],["result",4,[["reader",3],["error",4]]]],[[["vertexshader",3],["manager",3]]],[[["hullshader",3],["manager",3]]],[[["domainshader",3],["manager",3]]],[[["geometryshader",3],["manager",3]]],[[["pixelshader",3],["manager",3]]],[[["mirror",3],["mirror",3]]],[[["",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]]]],null,[[["mirror",3],["mirror",3],["bool",0]]],[[["",0],["refvalues",3]]],[[["",0],["rect",3]]],null,[[["slice",3,[["resources",8]]],["vertexcount",6]]],null,null,[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["",0],["accessinfo",3]],["result",4,[["submissionerror",4]]]],[[["mirror",3],["mirror",3]],["mirror",3]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["mirror",3],["mirror",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mirror",3],["mirror",3]],["mirror",3]],null,[[["",0],["usize",0]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["buffer",3],["usize",0]],["result",4,[["updateerror",4,[["usize",0]]]]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["buffer",3],["",0]]],[[["",0],["texturecopyregion",3]]],[[["encoder",3,[["resources",8],["buffer",8,[["resources",8]]]]],["texture",3],["option",4,[["cubeface",4]]],["newimageinfo",6]],["result",4,[["updateerror",4]]]],null,[[["",0],["buffer",3]],["result",4,[["shaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3],["format",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["buffer",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["texture",3],["u8",0],["option",4,[["u16",0]]],["depthstencilflags",3]],["result",4,[["depthstencilview",3],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["depthstencildesc",3]],["result",4,[["rawdepthstencilview",3],["targetviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["depthstencilview",3],["targetviewerror",4]]]],[[["",0],["texture",3],["u8",0],["option",4,[["u16",0]]]],["result",4,[["rendertargetview",3],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["renderdesc",3]],["result",4,[["rawrendertargetview",3],["targetviewerror",4]]]],[[["",0],["texture",3],["swizzle",3]],["result",4,[["shaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3],["resourcedesc",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],null,[[["",0],["fence",3]]],[[["",0],["buffer",3]],["result",4,[["writer",3],["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["role",4]],["role",4]],[[["info",3]],["info",3]],[[["creationerror",4]],["creationerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["creationerror",4]],["str",0]],[[["raw",3],["raw",3]],["bool",0]],[[["role",4],["role",4]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],[[["raw",3],["formatter",3]],["result",4,[["error",3]]]],[[["role",4],["formatter",3]],["result",4,[["error",3]]]],[[["info",3],["formatter",3]],["result",4,[["error",3]]]],[[["creationerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["creationerror",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["raw",3]],["info",3]],[[["raw",3],["",0]]],[[["role",4],["",0]]],[[["info",3],["",0]]],[[["creationerror",4],["",0]]],[[]],[[]],[[]],[[]],[[["raw",3]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channeltype",4]],["channeltype",4]],[[["int",4]],["int",4]],[[["uint",4]],["uint",4]],[[["inorm",4]],["inorm",4]],[[["unorm",4]],["unorm",4]],[[["float",4]],["float",4]],[[["srgb",4]],["srgb",4]],[[["surfacetype",4]],["surfacetype",4]],[[["r4_g4",4]],["r4_g4",4]],[[["r4_g4_b4_a4",4]],["r4_g4_b4_a4",4]],[[["r5_g5_b5_a1",4]],["r5_g5_b5_a1",4]],[[["r5_g6_b5",4]],["r5_g6_b5",4]],[[["r8",4]],["r8",4]],[[["r8_g8",4]],["r8_g8",4]],[[["r8_g8_b8_a8",4]],["r8_g8_b8_a8",4]],[[["r10_g10_b10_a2",4]],["r10_g10_b10_a2",4]],[[["r11_g11_b10",4]],["r11_g11_b10",4]],[[["r16",4]],["r16",4]],[[["r16_g16",4]],["r16_g16",4]],[[["r16_g16_b16",4]],["r16_g16_b16",4]],[[["r16_g16_b16_a16",4]],["r16_g16_b16_a16",4]],[[["r32",4]],["r32",4]],[[["r32_g32",4]],["r32_g32",4]],[[["r32_g32_b32",4]],["r32_g32_b32",4]],[[["r32_g32_b32_a32",4]],["r32_g32_b32_a32",4]],[[["b8_g8_r8_a8",4]],["b8_g8_r8_a8",4]],[[["d16",4]],["d16",4]],[[["d24",4]],["d24",4]],[[["d24_s8",4]],["d24_s8",4]],[[["d32",4]],["d32",4]],[[["bc1_r8_g8_b8",4]],["bc1_r8_g8_b8",4]],[[["bc3_r8_g8_b8_a8",4]],["bc3_r8_g8_b8_a8",4]],[[["channelsource",4]],["channelsource",4]],[[["swizzle",3]],["swizzle",3]],[[["format",3]],["format",3]],[[["u8norm",3]],["u8norm",3]],[[["i8norm",3]],["i8norm",3]],[[["u16norm",3]],["u16norm",3]],[[["i16norm",3]],["i16norm",3]],[[["f16",3]],["fchanneltype",4],["channeltype",4]],["ordering",4]],[[["int",4],["int",4]],["ordering",4]],[[["uint",4],["uint",4]],["ordering",4]],[[["inorm",4],["inorm",4]],["ordering",4]],[[["unorm",4],["unorm",4]],["ordering",4]],[[["float",4],["float",4]],["ordering",4]],[[["srgb",4],["srgb",4]],["ordering",4]],[[["surfacetype",4],["surfacetype",4]],["ordering",4]],[[["r4_g4",4],["r4_g4",4]],["ordering",4]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["ordering",4]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["ordering",4]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["ordering",4]],[[["r8",4],["r8",4]],["ordering",4]],[[["r8_g8",4],["r8_g8",4]],["ordering",4]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["ordering",4]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["ordering",4]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["ordering",4]],[[["r16",4],["r16",4]],["ordering",4]],[[["r16_g16",4],["r16_g16",4]],["ordering",4]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["ordering",4]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["ordering",4]],[[["r32",4],["r32",4]],["ordering",4]],[[["r32_g32",4],["r32_g32",4]],["ordering",4]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["ordering",4]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["ordering",4]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["ordering",4]],[[["d16",4],["d16",4]],["ordering",4]],[[["d24",4],["d24",4]],["ordering",4]],[[["d24_s8",4],["d24_s8",4]],["ordering",4]],[[["d32",4],["d32",4]],["ordering",4]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["ordering",4]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["ordering",4]],[[["channelsource",4],["channelsource",4]],["ordering",4]],[[["swizzle",3],["swizzle",3]],["ordering",4]],[[["format",3],["format",3]],["ordering",4]],[[["u8norm",3],["u8norm",3]],["ordering",4]],[[["i8norm",3],["i8norm",3]],["ordering",4]],[[["u16norm",3],["u16norm",3]],["ordering",4]],[[["i16norm",3],["i16norm",3]],["ordering",4]],[[["f16",3],["f16",3]],["ordering",4]],[[["channeltype",4],["channeltype",4]],["bool",0]],[[["int",4],["int",4]],["bool",0]],[[["uint",4],["uint",4]],["bool",0]],[[["inorm",4],["inorm",4]],["bool",0]],[[["unorm",4],["unorm",4]],["bool",0]],[[["float",4],["float",4]],["bool",0]],[[["srgb",4],["srgb",4]],["bool",0]],[[["surfacetype",4],["surfacetype",4]],["bool",0]],[[["r4_g4",4],["r4_g4",4]],["bool",0]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["bool",0]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["bool",0]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["bool",0]],[[["r8",4],["r8",4]],["bool",0]],[[["r8_g8",4],["r8_g8",4]],["bool",0]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["bool",0]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["bool",0]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["bool",0]],[[["r16",4],["r16",4]],["bool",0]],[[["r16_g16",4],["r16_g16",4]],["bool",0]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["bool",0]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["bool",0]],[[["r32",4],["r32",4]],["bool",0]],[[["r32_g32",4],["r32_g32",4]],["bool",0]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["bool",0]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["bool",0]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["bool",0]],[[["d16",4],["d16",4]],["bool",0]],[[["d24",4],["d24",4]],["bool",0]],[[["d24_s8",4],["d24_s8",4]],["bool",0]],[[["d32",4],["d32",4]],["bool",0]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["bool",0]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["bool",0]],[[["channelsource",4],["channelsource",4]],["bool",0]],[[["swizzle",3],["swizzle",3]],["bool",0]],[[["format",3],["format",3]],["bool",0]],[[["u8norm",3],["u8norm",3]],["bool",0]],[[["i8norm",3],["i8norm",3]],["bool",0]],[[["u16norm",3],["u16norm",3]],["bool",0]],[[["i16norm",3],["i16norm",3]],["bool",0]],[[["f16",3],["f16",3]],["bool",0]],[[["channeltype",4],["formatter",3]],["result",4,[["error",3]]]],[[["int",4],["formatter",3]],["result",4,[["error",3]]]],[[["uint",4],["formatter",3]],["result",4,[["error",3]]]],[[["inorm",4],["formatter",3]],["result",4,[["error",3]]]],[[["unorm",4],["formatter",3]],["result",4,[["error",3]]]],[[["float",4],["formatter",3]],["result",4,[["error",3]]]],[[["srgb",4],["formatter",3]],["result",4,[["error",3]]]],[[["surfacetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["r4_g4",4],["formatter",3]],["result",4,[["error",3]]]],[[["r4_g4_b4_a4",4],["formatter",3]],["result",4,[["error",3]]]],[[["r5_g5_b5_a1",4],["formatter",3]],["result",4,[["error",3]]]],[[["r5_g6_b5",4],["formatter",3]],["result",4,[["error",3]]]],[[["r8",4],["formatter",3]],["result",4,[["error",3]]]],[[["r8_g8",4],["formatter",3]],["result",4,[["error",3]]]],[[["r8_g8_b8_a8",4],["formatter",3]],["result",4,[["error",3]]]],[[["r10_g10_b10_a2",4],["formatter",3]],["result",4,[["error",3]]]],[[["r11_g11_b10",4],["formatter",3]],["result",4,[["error",3]]]],[[["r16",4],["formatter",3]],["result",4,[["error",3]]]],[[["r16_g16",4],["formatter",3]],["result",4,[["error",3]]]],[[["r16_g16_b16",4],["formatter",3]],["result",4,[["error",3]]]],[[["r16_g16_b16_a16",4],["formatter",3]],["result",4,[["error",3]]]],[[["r32",4],["formatter",3]],["result",4,[["error",3]]]],[[["r32_g32",4],["formatter",3]],["result",4,[["error",3]]]],[[["r32_g32_b32",4],["formatter",3]],["result",4,[["error",3]]]],[[["r32_g32_b32_a32",4],["formatter",3]],["result",4,[["error",3]]]],[[["b8_g8_r8_a8",4],["formatter",3]],["result",4,[["error",3]]]],[[["d16",4],["formatter",3]],["result",4,[["error",3]]]],[[["d24",4],["formatter",3]],["result",4,[["error",3]]]],[[["d24_s8",4],["formatter",3]],["result",4,[["error",3]]]],[[["d32",4],["formatter",3]],["result",4,[["error",3]]]],[[["bc1_r8_g8_b8",4],["formatter",3]],["result",4,[["error",3]]]],[[["bc3_r8_g8_b8_a8",4],["formatter",3]],["result",4,[["error",3]]]],[[["channelsource",4],["formatter",3]],["result",4,[["error",3]]]],[[["swizzle",3],["formatter",3]],["result",4,[["error",3]]]],[[["format",3],["formatter",3]],["result",4,[["error",3]]]],[[["u8norm",3],["formatter",3]],["result",4,[["error",3]]]],[[["i8norm",3],["formatter",3]],["result",4,[["error",3]]]],[[["u16norm",3],["formatter",3]],["result",4,[["error",3]]]],[[["i16norm",3],["formatter",3]],["result",4,[["error",3]]]],[[["f16",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["u8norm",3]],[[]],[[["i8",0]],["i8norm",3]],[[]],[[["u16",0]],["u16norm",3]],[[]],[[]],[[["i16",0]],["i16norm",3]],[[["u16",0]],["f16",3]],[[]],[[["surfacetype",4]],["u8",0]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["format",3]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[["surfacetype",4]],["u8",0]],[[["channeltype",4],["",0]]],[[["int",4],["",0]]],[[["uint",4],["",0]]],[[["inorm",4],["",0]]],[[["unorm",4],["",0]]],[[["float",4],["",0]]],[[["srgb",4],["",0]]],[[["surfacetype",4],["",0]]],[[["r4_g4",4],["",0]]],[[["r4_g4_b4_a4",4],["",0]]],[[["r5_g5_b5_a1",4],["",0]]],[[["r5_g6_b5",4],["",0]]],[[["r8",4],["",0]]],[[["r8_g8",4],["",0]]],[[["r8_g8_b8_a8",4],["",0]]],[[["r10_g10_b10_a2",4],["",0]]],[[["r11_g11_b10",4],["",0]]],[[["r16",4],["",0]]],[[["r16_g16",4],["",0]]],[[["r16_g16_b16",4],["",0]]],[[["r16_g16_b16_a16",4],["",0]]],[[["r32",4],["",0]]],[[["r32_g32",4],["",0]]],[[["r32_g32_b32",4],["",0]]],[[["r32_g32_b32_a32",4],["",0]]],[[["b8_g8_r8_a8",4],["",0]]],[[["d16",4],["",0]]],[[["d24",4],["",0]]],[[["d24_s8",4],["",0]]],[[["d32",4],["",0]]],[[["bc1_r8_g8_b8",4],["",0]]],[[["bc3_r8_g8_b8_a8",4],["",0]]],[[["channelsource",4],["",0]]],[[["swizzle",3],["",0]]],[[["format",3],["",0]]],[[["u8norm",3],["",0]]],[[["i8norm",3],["",0]]],[[["u16norm",3],["",0]]],[[["i16norm",3],["",0]]],[[["f16",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["swizzle",3],["swizzle",3]],["bool",0]],[[["format",3],["format",3]],["bool",0]],[[["u8norm",3],["u8norm",3]],["bool",0]],[[["i8norm",3],["i8norm",3]],["bool",0]],[[["u16norm",3],["u16norm",3]],["bool",0]],[[["i16norm",3],["i16norm",3]],["bool",0]],[[["f16",3],["f16",3]],["bool",0]],[[],["swizzle",3]],[[["channeltype",4],["channeltype",4]],["option",4,[["ordering",4]]]],[[["int",4],["int",4]],["option",4,[["ordering",4]]]],[[["uint",4],["uint",4]],["option",4,[["ordering",4]]]],[[["inorm",4],["inorm",4]],["option",4,[["ordering",4]]]],[[["unorm",4],["unorm",4]],["option",4,[["ordering",4]]]],[[["float",4],["float",4]],["option",4,[["ordering",4]]]],[[["srgb",4],["srgb",4]],["option",4,[["ordering",4]]]],[[["surfacetype",4],["surfacetype",4]],["option",4,[["ordering",4]]]],[[["r4_g4",4],["r4_g4",4]],["option",4,[["ordering",4]]]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["option",4,[["ordering",4]]]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["option",4,[["ordering",4]]]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["option",4,[["ordering",4]]]],[[["r8",4],["r8",4]],["option",4,[["ordering",4]]]],[[["r8_g8",4],["r8_g8",4]],["option",4,[["ordering",4]]]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["option",4,[["ordering",4]]]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["option",4,[["ordering",4]]]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["option",4,[["ordering",4]]]],[[["r16",4],["r16",4]],["option",4,[["ordering",4]]]],[[["r16_g16",4],["r16_g16",4]],["option",4,[["ordering",4]]]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["option",4,[["ordering",4]]]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["option",4,[["ordering",4]]]],[[["r32",4],["r32",4]],["option",4,[["ordering",4]]]],[[["r32_g32",4],["r32_g32",4]],["option",4,[["ordering",4]]]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["option",4,[["ordering",4]]]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["option",4,[["ordering",4]]]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["option",4,[["ordering",4]]]],[[["d16",4],["d16",4]],["option",4,[["ordering",4]]]],[[["d24",4],["d24",4]],["option",4,[["ordering",4]]]],[[["d24_s8",4],["d24_s8",4]],["option",4,[["ordering",4]]]],[[["d32",4],["d32",4]],["option",4,[["ordering",4]]]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["option",4,[["ordering",4]]]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["option",4,[["ordering",4]]]],[[["channelsource",4],["channelsource",4]],["option",4,[["ordering",4]]]],[[["swizzle",3],["swizzle",3]],["option",4,[["ordering",4]]]],[[["format",3],["format",3]],["option",4,[["ordering",4]]]],[[["u8norm",3],["u8norm",3]],["option",4,[["ordering",4]]]],[[["i8norm",3],["i8norm",3]],["option",4,[["ordering",4]]]],[[["u16norm",3],["u16norm",3]],["option",4,[["ordering",4]]]],[[["i16norm",3],["i16norm",3]],["option",4,[["ordering",4]]]],[[["f16",3],["f16",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullmanager",3]]],[[["buffer",3]],["buffer",3]],[[["texture",3]],["texture",3]],[[["shaderresourceview",3]],["shaderresourceview",3]],[[["unorderedaccessview",3]],["unorderedaccessview",3]],[[["rendertargetview",3]],["rendertargetview",3]],[[["depthstencilview",3]],["depthstencilview",3]],[[["rawbuffer",3]],["rawbuffer",3]],[[["shader",3]],["shader",3]],[[["program",3]],["program",3]],[[["rawpipelinestate",3]],["rawpipelinestate",3]],[[["rawtexture",3]],["rawtexture",3]],[[["rawshaderresourceview",3]],["rawshaderresourceview",3]],[[["rawunorderedaccessview",3]],["rawunorderedaccessview",3]],[[["rawrendertargetview",3]],["rawrendertargetview",3]],[[["rawdepthstencilview",3]],["rawdepthstencilview",3]],[[["sampler",3]],["sampler",3]],[[["fence",3]],["fence",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["manager",3]],["usize",0]],[[["rawbuffer",3]]],[[["program",3]]],[[["rawtexture",3]]],[[["buffer",3],["buffer",3]],["bool",0]],[[["texture",3],["texture",3]],["bool",0]],[[["shaderresourceview",3],["shaderresourceview",3]],["bool",0]],[[["unorderedaccessview",3],["unorderedaccessview",3]],["bool",0]],[[["rendertargetview",3],["rendertargetview",3]],["bool",0]],[[["depthstencilview",3],["depthstencilview",3]],["bool",0]],[[["rawbuffer",3],["rawbuffer",3]],["bool",0]],[[["shader",3],["shader",3]],["bool",0]],[[["program",3],["program",3]],["bool",0]],[[["rawpipelinestate",3],["rawpipelinestate",3]],["bool",0]],[[["rawtexture",3],["rawtexture",3]],["bool",0]],[[["rawshaderresourceview",3],["rawshaderresourceview",3]],["bool",0]],[[["rawunorderedaccessview",3],["rawunorderedaccessview",3]],["bool",0]],[[["rawrendertargetview",3],["rawrendertargetview",3]],["bool",0]],[[["rawdepthstencilview",3],["rawdepthstencilview",3]],["bool",0]],[[["sampler",3],["sampler",3]],["bool",0]],[[["fence",3],["fence",3]],["bool",0]],[[["manager",3],["manager",3]]],[[["buffer",3],["formatter",3]],["result",4,[["error",3]]]],[[["texture",3],["formatter",3]],["result",4,[["error",3]]]],[[["shaderresourceview",3],["formatter",3]],["result",4,[["error",3]]]],[[["unorderedaccessview",3],["formatter",3]],["result",4,[["error",3]]]],[[["rendertargetview",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilview",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawbuffer",3],["formatter",3]],["result",4,[["error",3]]]],[[["shader",3],["formatter",3]],["result",4,[["error",3]]]],[[["program",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawpipelinestate",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawtexture",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawshaderresourceview",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawunorderedaccessview",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawrendertargetview",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawdepthstencilview",3],["formatter",3]],["result",4,[["error",3]]]],[[["sampler",3],["formatter",3]],["result",4,[["error",3]]]],[[["fence",3],["formatter",3]],["result",4,[["error",3]]]],[[["manager",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rendertargetview",3]]],[[["depthstencilview",3]]],[[["rawrendertargetview",3]]],[[["rawdepthstencilview",3]]],[[["buffer",3]],["info",3]],[[["texture",3]],["info",3]],[[["sampler",3]],["samplerinfo",3]],[[["rawrendertargetview",3]],["rawtexture",3]],[[["rawdepthstencilview",3]],["rawtexture",3]],[[["buffer",3],["",0]]],[[["texture",3],["",0]]],[[["shaderresourceview",3],["",0]]],[[["unorderedaccessview",3],["",0]]],[[["rendertargetview",3],["",0]]],[[["depthstencilview",3],["",0]]],[[["rawbuffer",3],["",0]]],[[["shader",3],["",0]]],[[["program",3],["",0]]],[[["rawpipelinestate",3],["",0]]],[[["rawtexture",3],["",0]]],[[["rawshaderresourceview",3],["",0]]],[[["rawunorderedaccessview",3],["",0]]],[[["rawrendertargetview",3],["",0]]],[[["rawdepthstencilview",3],["",0]]],[[["sampler",3],["",0]]],[[["fence",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buffer",3,[["resources",8],["u16",0]]],["",0]],["indexbuffer",4,[["resources",8]]]],[[["buffer",3,[["resources",8],["u32",0]]],["",0]],["indexbuffer",4,[["resources",8]]]],[[["buffer",3]],["usize",0]],[[["rawbuffer",3],["rawbuffer",3]],["bool",0]],[[["shader",3],["shader",3]],["bool",0]],[[["program",3],["program",3]],["bool",0]],[[["rawpipelinestate",3],["rawpipelinestate",3]],["bool",0]],[[["rawtexture",3],["rawtexture",3]],["bool",0]],[[["rawshaderresourceview",3],["rawshaderresourceview",3]],["bool",0]],[[["rawunorderedaccessview",3],["rawunorderedaccessview",3]],["bool",0]],[[["rawrendertargetview",3],["rawrendertargetview",3]],["bool",0]],[[["rawdepthstencilview",3],["rawdepthstencilview",3]],["bool",0]],[[["sampler",3],["sampler",3]],["bool",0]],[[["fence",3],["fence",3]],["bool",0]],[[],["manager",3]],[[["shaderresourceview",3]]],[[["manager",3],["rawbuffer",3]]],[[["manager",3],["rawdepthstencilview",3]]],[[["manager",3],["fence",3]]],[[["manager",3],["program",3]]],[[["manager",3],["rawpipelinestate",3]]],[[["manager",3],["rawrendertargetview",3]]],[[["manager",3],["sampler",3]]],[[["manager",3],["shader",3]]],[[["manager",3],["rawshaderresourceview",3]]],[[["manager",3],["rawtexture",3]]],[[["manager",3],["rawunorderedaccessview",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["reader",3]]],[[["writer",3]]],[[["writer",3]]],[[["error",4]],["str",0]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["reader",3],["formatter",3]],["result",4,[["error",3]]]],[[["writer",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["error",4],["",0]]],[[]],[[]],[[]],[[["error",4],["error",4]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["access",3]],[[],["bind",3]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3]],["u8",0]],[[["bind",3]],["u8",0]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["usage",4]],["usage",4]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usage",4],["usage",4]],["ordering",4]],[[["access",3],["access",3]],["ordering",4]],[[["bind",3],["bind",3]],["ordering",4]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[],["access",3]],[[],["bind",3]],[[["usage",4],["usage",4]],["bool",0]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3]]],[[["bind",3]]],[[["usage",4],["formatter",3]],["result",4,[["error",3]]]],[[["access",3],["formatter",3]],["result",4,[["error",3]]]],[[["access",3],["formatter",3]],["result",4,[["error",3]]]],[[["access",3],["formatter",3]],["result",4,[["error",3]]]],[[["access",3],["formatter",3]],["result",4,[["error",3]]]],[[["access",3],["formatter",3]],["result",4,[["error",3]]]],[[["bind",3],["formatter",3]],["result",4,[["error",3]]]],[[["bind",3],["formatter",3]],["result",4,[["error",3]]]],[[["bind",3],["formatter",3]],["result",4,[["error",3]]]],[[["bind",3],["formatter",3]],["result",4,[["error",3]]]],[[["bind",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["access",3]]]],[[["u8",0]],["option",4,[["bind",3]]]],[[["u8",0]],["access",3]],[[["u8",0]],["bind",3]],[[["u8",0]],["access",3]],[[["u8",0]],["bind",3]],[[],["access",3]],[[],["bind",3]],[[["usage",4],["",0]]],[[["access",3],["",0]]],[[["bind",3],["",0]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[]],[[]],[[]],[[["access",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["access",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",4],["usage",4]],["option",4,[["ordering",4]]]],[[["access",3],["access",3]],["option",4,[["ordering",4]]]],[[["bind",3],["bind",3]],["option",4,[["ordering",4]]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3],["bool",0]]],[[["bind",3],["bind",3],["bool",0]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["",0],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["accessinfo",3],["rawbuffer",3]]],[[["accessinfo",3],["rawbuffer",3]]],null,[[["initerror",4,[["",26,[["debug",8],["display",8]]]]]],["option",4,[["error",8]]]],[[["accessinfo",3]]],[[["rawdataset",3,[["resources",8]]]]],[[["accessinfo",3]],["accessinfo",3]],[[["rawdataset",3,[["",26,[["clone",8],["resources",8]]]]]],["rawdataset",3,[["",26,[["clone",8],["resources",8]]]]]],[[["elementerror",4,[["clone",8]]]],["elementerror",4,[["clone",8]]]],[[["initerror",4,[["clone",8]]]],["initerror",4,[["clone",8]]]],[[["pipelinestate",3,[["",26,[["clone",8],["resources",8]]],["clone",8]]]],["pipelinestate",3,[["",26,[["clone",8],["resources",8]]],["clone",8]]]],[[["descriptor",3]],["descriptor",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["elementerror",4,[["",26,[["debug",8],["display",8]]]]]],["str",0]],[[["initerror",4,[["",26,[["debug",8],["display",8]]]]]],["str",0]],[[["accessinfo",3],["accessinfo",3]],["bool",0]],[[["rawdataset",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawdataset",3]],["bool",0]],[[["elementerror",4,[["partialeq",8]]],["elementerror",4]],["bool",0]],[[["initerror",4,[["partialeq",8]]],["initerror",4]],["bool",0]],[[["pipelinestate",3,[["",26,[["partialeq",8],["resources",8]]],["partialeq",8]]],["pipelinestate",3]],["bool",0]],[[["descriptor",3],["descriptor",3]],["bool",0]],[[["accessinfo",3],["formatter",3]],["result",4,[["error",3]]]],[[["rawdataset",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["elementerror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["elementerror",4,[["",26,[["debug",8],["display",8]]]]],["formatter",3]],["result",6]],[[["initerror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["initerror",4,[["",26,[["debug",8],["display",8]]]]],["formatter",3]],["result",6]],[[["pipelinestate",3,[["",26,[["debug",8],["resources",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["descriptor",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["elementerror",4,[["str",0]]]],["elementerror",4,[["string",3]]]],[[]],[[["initerror",4,[["str",0]]]],["initerror",4,[["string",3]]]],[[]],[[]],[[["pipelinestate",3,[["resources",8]]]],["rawpipelinestate",3]],[[["pipelinestate",3,[["resources",8]]]],["",0]],null,[[["accessinfo",3]],["bool",0]],[[["accessinfo",3]],["bool",0]],[[["pipelinestate",3,[["",26,[["hash",8],["resources",8]]],["hash",8]]],["",0]]],[[["descriptor",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0],["constantbuffervar",3]],["option",4,[["result",4,[["constantbufferdesc",6],["elementerror",4,[["str",0]]]]]]]],[[["",0]],["option",4,[["depthstencildesc",6]]]],[[["",0],["constvar",3]],["option",4,[["result",4,[["compatibilityerror",4]]]]]],[[["",0],["attributevar",3]],["option",4,[["result",4,[["attributedesc",6],["format",3]]]]]],[[["",0],["outputvar",3]],["option",4,[["result",4,[["colortargetdesc",6],["format",3]]]]]],[[["",0],["texturevar",3]],["option",4,[["result",4,[["resourceviewdesc",6],["format",3]]]]]],[[["",0],["samplervar",3]],["option",4,[["samplerdesc",6]]]],[[["",0]],["bool",0]],[[["",0],["descriptor",3],["programinfo",3]],["result",4,[["initerror",4,[["str",0]]]]]],[[["",0],["unorderedvar",3]],["option",4,[["result",4,[["unorderedviewdesc",6],["format",3]]]]]],[[["",0],["bufferindex",6]],["option",4,[["vertexbufferdesc",3]]]],[[["accessinfo",3]],["iter",3,[["rawbuffer",3]]]],[[["accessinfo",3]],["iter",3,[["rawbuffer",3]]]],[[["accessinfo",3],["accessinfo",3]],["bool",0]],[[["rawdataset",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawdataset",3]],["bool",0]],[[["elementerror",4,[["partialeq",8]]],["elementerror",4]],["bool",0]],[[["initerror",4,[["partialeq",8]]],["initerror",4]],["bool",0]],[[["pipelinestate",3,[["",26,[["partialeq",8],["resources",8]]],["partialeq",8]]],["pipelinestate",3]],["bool",0]],[[["descriptor",3],["descriptor",3]],["bool",0]],[[]],[[],["accessinfo",3]],[[],["rawdataset",3,[["resources",8]]]],[[["rawpipelinestate",3,[["resources",8]]],["primitive",4]],["pipelinestate",3,[["resources",8]]]],[[["primitive",4],["rasterizer",3]],["descriptor",3]],null,null,null,null,null,null,null,null,null,null,null,[[["accessinfo",3]],["result",4,[["accessguard",3],["submissionerror",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vertexbuffercommon",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["global",3,[["touniform",8]]],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawvertexbuffer",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawconstantbuffer",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawglobal",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["vertexbuffercommon",3]],["vertexbuffercommon",3]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]]],["constantbuffer",3,[["structure",8,[["constformat",6]]]]]],[[["global",3,[["touniform",8]]]],["global",3,[["touniform",8]]]],[[["rawvertexbuffer",3]],["rawvertexbuffer",3]],[[["rawconstantbuffer",3]],["rawconstantbuffer",3]],[[["rawglobal",3]],["rawglobal",3]],[[["element",3]],["element",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["vertexbuffercommon",3],["vertexbuffercommon",3]],["bool",0]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]],["constantbuffer",3,[["structure",8,[["constformat",6]]]]]],["bool",0]],[[["global",3,[["touniform",8]]],["global",3,[["touniform",8]]]],["bool",0]],[[["rawvertexbuffer",3],["rawvertexbuffer",3]],["bool",0]],[[["rawconstantbuffer",3],["rawconstantbuffer",3]],["bool",0]],[[["rawglobal",3],["rawglobal",3]],["bool",0]],[[["element",3],["element",3]],["bool",0]],[[["vertexbuffercommon",3],["formatter",3]],["result",6]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]],["formatter",3]],["result",6]],[[["global",3,[["touniform",8]]],["formatter",3]],["result",6]],[[["rawvertexbuffer",3],["formatter",3]],["result",6]],[[["rawconstantbuffer",3],["formatter",3]],["result",6]],[[["rawglobal",3],["formatter",3]],["result",6]],[[["element",3],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["instancerate",6]],[[],["instancerate",6]],[[],["instancerate",6]],[[],["instancerate",6]],[[["vertexbuffercommon",3],["",0]]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]],["",0]]],[[["global",3,[["touniform",8]]],["",0]]],[[["rawvertexbuffer",3],["",0]]],[[["rawconstantbuffer",3],["",0]]],[[["rawglobal",3],["",0]]],[[["element",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vertexbuffercommon",3,[["structure",8,[["format",3]]],["toinstancerate",8]]]],["bool",0]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]]],["bool",0]],[[["global",3,[["",26,[["touniform",8],["default",8]]]]]],["bool",0]],[[["rawvertexbuffer",3]],["bool",0]],[[["rawconstantbuffer",3]],["bool",0]],[[["rawglobal",3]],["bool",0]],[[["constantbuffer",3,[["structure",8,[["constformat",6]]]]],["constantbuffervar",3]],["option",4,[["result",4,[["constantbufferdesc",6],["elementerror",4,[["str",0]]]]]]]],[[["rawconstantbuffer",3],["constantbuffervar",3]],["option",4,[["result",4,[["constantbufferdesc",6],["elementerror",4,[["str",0]]]]]]]],[[["global",3,[["",26,[["touniform",8],["default",8]]]]],["constvar",3]],["option",4,[["result",4,[["compatibilityerror",4]]]]]],[[["rawglobal",3],["constvar",3]],["option",4,[["result",4,[["compatibilityerror",4]]]]]],[[["vertexbuffercommon",3,[["structure",8,[["format",3]]],["toinstancerate",8]]],["attributevar",3]],["option",4,[["result",4,[["attributedesc",6],["format",3]]]]]],[[["rawvertexbuffer",3],["attributevar",3]],["option",4,[["result",4,[["attributedesc",6],["format",3]]]]]],[[["vertexbuffercommon",3,[["structure",8,[["format",3]]],["toinstancerate",8]]],["bufferindex",6]],["option",4,[["vertexbufferdesc",3]]]],[[["rawvertexbuffer",3],["bufferindex",6]],["option",4,[["vertexbufferdesc",3]]]],[[["rawvertexbuffer",3],["rawvertexbuffer",3]],["bool",0]],[[["rawconstantbuffer",3],["rawconstantbuffer",3]],["bool",0]],[[["rawglobal",3],["rawglobal",3]],["bool",0]],[[["element",3],["element",3]],["bool",0]],[[],["vertexbuffercommon",3,[["structure",8,[["format",3]]],["toinstancerate",8]]]],[[],["constantbuffer",3,[["structure",8,[["constformat",6]]]]]],[[],["global",3,[["",26,[["touniform",8],["default",8]]]]]],[[],["rawvertexbuffer",3]],[[],["rawconstantbuffer",3]],[[],["rawglobal",3]],null,[[["str",0]],["option",4,[["element",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["bundle",3,[["resources",8],["pipelinedata",8,[["resources",8]]]]],["encoder",3]]],[[]],[[]],[[["slice",3,[["resources",8]]],["pipelinestate",3,[["resources",8]]],["pipelinedata",8,[["resources",8]]]],["bundle",3,[["resources",8],["pipelinedata",8,[["resources",8]]]]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["shaderresource",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["unorderedaccess",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["texturesampler",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawshaderresource",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["sampler",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["shaderresource",3]],["shaderresource",3]],[[["unorderedaccess",3]],["unorderedaccess",3]],[[["texturesampler",3]],["texturesampler",3]],[[["rawshaderresource",3]],["rawshaderresource",3]],[[["sampler",3]],["sampler",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["shaderresource",3],["shaderresource",3]],["bool",0]],[[["unorderedaccess",3],["unorderedaccess",3]],["bool",0]],[[["texturesampler",3],["texturesampler",3]],["bool",0]],[[["rawshaderresource",3],["rawshaderresource",3]],["bool",0]],[[["sampler",3],["sampler",3]],["bool",0]],[[["shaderresource",3],["formatter",3]],["result",6]],[[["unorderedaccess",3],["formatter",3]],["result",6]],[[["texturesampler",3],["formatter",3]],["result",6]],[[["rawshaderresource",3],["formatter",3]],["result",6]],[[["sampler",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["shaderresource",3],["",0]]],[[["unorderedaccess",3],["",0]]],[[["texturesampler",3],["",0]]],[[["rawshaderresource",3],["",0]]],[[["sampler",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["shaderresource",3]],["bool",0]],[[["unorderedaccess",3]],["bool",0]],[[["texturesampler",3]],["bool",0]],[[["rawshaderresource",3]],["bool",0]],[[["sampler",3]],["bool",0]],[[["shaderresource",3],["texturevar",3]],["option",4,[["result",4,[["resourceviewdesc",6],["format",3]]]]]],[[["texturesampler",3],["texturevar",3]],["option",4,[["result",4,[["resourceviewdesc",6],["format",3]]]]]],[[["rawshaderresource",3],["texturevar",3]],["option",4,[["result",4,[["resourceviewdesc",6],["format",3]]]]]],[[["texturesampler",3],["samplervar",3]],["option",4,[["samplerdesc",6]]]],[[["sampler",3],["samplervar",3]],["option",4,[["samplerdesc",6]]]],[[["unorderedaccess",3],["unorderedvar",3]],["option",4,[["result",4,[["unorderedviewdesc",6],["format",3]]]]]],[[["rawshaderresource",3],["rawshaderresource",3]],["bool",0]],[[["sampler",3],["sampler",3]],["bool",0]],[[],["shaderresource",3]],[[],["unorderedaccess",3]],[[],["texturesampler",3]],[[],["rawshaderresource",3]],[[],["sampler",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["rendertarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["blendtarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["depthtarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["stenciltarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["depthstenciltarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawrendertarget",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["scissor",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["blendref",3],["rawdataset",3],["manager",3],["accessinfo",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rendertarget",3]],["rendertarget",3]],[[["blendtarget",3]],["blendtarget",3]],[[["depthtarget",3]],["depthtarget",3]],[[["stenciltarget",3]],["stenciltarget",3]],[[["depthstenciltarget",3]],["depthstenciltarget",3]],[[["rawrendertarget",3]],["rawrendertarget",3]],[[["scissor",3]],["scissor",3]],[[["blendref",3]],["blendref",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["rendertarget",3],["rendertarget",3]],["bool",0]],[[["blendtarget",3],["blendtarget",3]],["bool",0]],[[["depthtarget",3],["depthtarget",3]],["bool",0]],[[["stenciltarget",3],["stenciltarget",3]],["bool",0]],[[["depthstenciltarget",3],["depthstenciltarget",3]],["bool",0]],[[["rawrendertarget",3],["rawrendertarget",3]],["bool",0]],[[["scissor",3],["scissor",3]],["bool",0]],[[["blendref",3],["blendref",3]],["bool",0]],[[["rendertarget",3],["formatter",3]],["result",6]],[[["blendtarget",3],["formatter",3]],["result",6]],[[["depthtarget",3],["formatter",3]],["result",6]],[[["stenciltarget",3],["formatter",3]],["result",6]],[[["depthstenciltarget",3],["formatter",3]],["result",6]],[[["rawrendertarget",3],["formatter",3]],["result",6]],[[["scissor",3],["formatter",3]],["result",6]],[[["blendref",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rendertarget",3],["",0]]],[[["blendtarget",3],["",0]]],[[["depthtarget",3],["",0]]],[[["stenciltarget",3],["",0]]],[[["depthstenciltarget",3],["",0]]],[[["rawrendertarget",3],["",0]]],[[["scissor",3],["",0]]],[[["blendref",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rendertarget",3,[["renderformat",8]]]],["bool",0]],[[["blendtarget",3,[["blendformat",8]]]],["bool",0]],[[["depthtarget",3,[["depthformat",8]]]],["bool",0]],[[["stenciltarget",3,[["stencilformat",8]]]],["bool",0]],[[["depthstenciltarget",3,[["depthstencilformat",8]]]],["bool",0]],[[["rawrendertarget",3]],["bool",0]],[[["scissor",3]],["bool",0]],[[["blendref",3]],["bool",0]],[[["depthtarget",3,[["depthformat",8]]]],["option",4,[["depthstencildesc",6]]]],[[["stenciltarget",3,[["stencilformat",8]]]],["option",4,[["depthstencildesc",6]]]],[[["depthstenciltarget",3,[["depthstencilformat",8]]]],["option",4,[["depthstencildesc",6]]]],[[["rendertarget",3,[["renderformat",8]]],["outputvar",3]],["option",4,[["result",4,[["colortargetdesc",6],["format",3]]]]]],[[["blendtarget",3,[["blendformat",8]]],["outputvar",3]],["option",4,[["result",4,[["colortargetdesc",6],["format",3]]]]]],[[["rawrendertarget",3],["outputvar",3]],["option",4,[["result",4,[["colortargetdesc",6],["format",3]]]]]],[[["scissor",3]],["bool",0]],[[["rawrendertarget",3],["rawrendertarget",3]],["bool",0]],[[["scissor",3],["scissor",3]],["bool",0]],[[],["rendertarget",3,[["renderformat",8]]]],[[],["blendtarget",3,[["blendformat",8]]]],[[],["depthtarget",3,[["depthformat",8]]]],[[],["stenciltarget",3,[["stencilformat",8]]]],[[],["depthstenciltarget",3,[["depthstencilformat",8]]]],[[],["rawrendertarget",3]],[[],["scissor",3]],[[],["blendref",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usage",3]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3]],["u8",0]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["programerror",4]],["option",4,[["error",8]]]],[[["programerror",4]],["programerror",4]],[[["usage",3]],["usage",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usage",3],["usage",3]],["ordering",4]],[[["usage",3]],["usage",3]],[[["usage",3],["usage",3]],["bool",0]],[[],["uniformvalue",4]],null,[[["programerror",4]],["str",0]],[[["usage",3],["usage",3]],["usage",3]],[[],["usage",3]],[[["programerror",4],["programerror",4]],["bool",0]],[[["usage",3],["usage",3]],["bool",0]],[[["usage",3]]],[[["programerror",4],["formatter",3]],["result",6]],[[["programerror",4],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",4,[["error",3]]]],[[["usage",3],["formatter",3]],["result",4,[["error",3]]]],[[["usage",3],["formatter",3]],["result",4,[["error",3]]]],[[["usage",3],["formatter",3]],["result",4,[["error",3]]]],[[["usage",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["stage",4]],["usage",3]],[[]],[[["u8",0]],["option",4,[["usage",3]]]],[[["u8",0]],["usage",3]],[[["u8",0]],["usage",3]],[[],["usage",3]],[[]],[[["usage",3],["",0]]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]],["bool",0]],[[]],[[]],[[["usage",3]],["bool",0]],[[["usage",3]],["bool",0]],[[["programerror",4],["programerror",4]],["bool",0]],[[["usage",3],["usage",3]],["bool",0]],[[["usage",3]],["usage",3]],[[["usage",3],["usage",3]],["option",4,[["ordering",4]]]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3],["bool",0]]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["usage",3],["usage",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usage",3],["usage",3]],["usage",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nulltexturetype",4]],["bool",0]],[[["isarray",4]],["isarray",4]],[[["iscomparison",4]],["iscomparison",4]],[[["ismultisample",4]],["ismultisample",4]],[[["isrect",4]],["isrect",4]],[[["matrixformat",4]],["matrixformat",4]],[[["texturetype",4]],["texturetype",4]],[[["samplertype",3]],["samplertype",3]],[[["basetype",4]],["basetype",4]],[[["containertype",4]],["containertype",4]],[[["stage",4]],["stage",4]],[[["attributevar",3]],["attributevar",3]],[[["constvar",3]],["constvar",3]],[[["constantbuffervar",3]],["constantbuffervar",3]],[[["texturevar",3]],["texturevar",3]],[[["unorderedvar",3]],["unorderedvar",3]],[[["samplervar",3]],["samplervar",3]],[[["outputvar",3]],["outputvar",3]],[[["compatibilityerror",4]],["compatibilityerror",4]],[[["createshadererror",4]],["createshadererror",4]],[[["createprogramerror",3]],["createprogramerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,[[["compatibilityerror",4]],["str",0]],[[["createshadererror",4]],["str",0]],[[["createprogramerror",3]],["str",0]],null,[[["isarray",4],["isarray",4]],["bool",0]],[[["iscomparison",4],["iscomparison",4]],["bool",0]],[[["ismultisample",4],["ismultisample",4]],["bool",0]],[[["isrect",4],["isrect",4]],["bool",0]],[[["matrixformat",4],["matrixformat",4]],["bool",0]],[[["texturetype",4],["texturetype",4]],["bool",0]],[[["samplertype",3],["samplertype",3]],["bool",0]],[[["basetype",4],["basetype",4]],["bool",0]],[[["containertype",4],["containertype",4]],["bool",0]],[[["stage",4],["stage",4]],["bool",0]],[[["attributevar",3],["attributevar",3]],["bool",0]],[[["constvar",3],["constvar",3]],["bool",0]],[[["constantbuffervar",3],["constantbuffervar",3]],["bool",0]],[[["texturevar",3],["texturevar",3]],["bool",0]],[[["unorderedvar",3],["unorderedvar",3]],["bool",0]],[[["samplervar",3],["samplervar",3]],["bool",0]],[[["outputvar",3],["outputvar",3]],["bool",0]],[[["program",3],["program",3]],["bool",0]],[[["compatibilityerror",4],["compatibilityerror",4]],["bool",0]],[[["createshadererror",4],["createshadererror",4]],["bool",0]],[[["createprogramerror",3],["createprogramerror",3]],["bool",0]],[[["isarray",4],["formatter",3]],["result",4,[["error",3]]]],[[["iscomparison",4],["formatter",3]],["result",4,[["error",3]]]],[[["ismultisample",4],["formatter",3]],["result",4,[["error",3]]]],[[["isrect",4],["formatter",3]],["result",4,[["error",3]]]],[[["matrixformat",4],["formatter",3]],["result",4,[["error",3]]]],[[["texturetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["samplertype",3],["formatter",3]],["result",4,[["error",3]]]],[[["basetype",4],["formatter",3]],["result",4,[["error",3]]]],[[["containertype",4],["formatter",3]],["result",4,[["error",3]]]],[[["stage",4],["formatter",3]],["result",4,[["error",3]]]],[[["attributevar",3],["formatter",3]],["result",4,[["error",3]]]],[[["constvar",3],["formatter",3]],["result",4,[["error",3]]]],[[["constantbuffervar",3],["formatter",3]],["result",4,[["error",3]]]],[[["texturevar",3],["formatter",3]],["result",4,[["error",3]]]],[[["unorderedvar",3],["formatter",3]],["result",4,[["error",3]]]],[[["samplervar",3],["formatter",3]],["result",4,[["error",3]]]],[[["outputvar",3],["formatter",3]],["result",4,[["error",3]]]],[[["program",3],["formatter",3]],["result",4,[["error",3]]]],[[["compatibilityerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["compatibilityerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["createshadererror",4],["formatter",3]],["result",4,[["error",3]]]],[[["createshadererror",4],["formatter",3]],["result",4,[["error",3]]]],[[["createprogramerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["createprogramerror",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["createprogramerror",3]],[[]],[[],["basetype",4]],[[]],[[["program",3]],["programinfo",3]],null,[[["isarray",4],["",0]]],[[["iscomparison",4],["",0]]],[[["ismultisample",4],["",0]]],[[["isrect",4],["",0]]],[[["matrixformat",4],["",0]]],[[["texturetype",4],["",0]]],[[["samplertype",3],["",0]]],[[["basetype",4],["",0]]],[[["containertype",4],["",0]]],[[["stage",4],["",0]]],[[["attributevar",3],["",0]]],[[["constvar",3],["",0]]],[[["constantbuffervar",3],["",0]]],[[["texturevar",3],["",0]]],[[["unorderedvar",3],["",0]]],[[["samplervar",3],["",0]]],[[["outputvar",3],["",0]]],[[["program",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["constvar",3],["uniformvalue",4]],["result",4,[["compatibilityerror",4]]]],null,null,null,null,null,null,null,null,null,[[["texturetype",4],["texturetype",4]],["bool",0]],[[["samplertype",3],["samplertype",3]],["bool",0]],[[["containertype",4],["containertype",4]],["bool",0]],[[["attributevar",3],["attributevar",3]],["bool",0]],[[["constvar",3],["constvar",3]],["bool",0]],[[["constantbuffervar",3],["constantbuffervar",3]],["bool",0]],[[["texturevar",3],["texturevar",3]],["bool",0]],[[["unorderedvar",3],["unorderedvar",3]],["bool",0]],[[["samplervar",3],["samplervar",3]],["bool",0]],[[["outputvar",3],["outputvar",3]],["bool",0]],[[["createshadererror",4],["createshadererror",4]],["bool",0]],[[["createprogramerror",3],["createprogramerror",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["colormask",3]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3]],["u8",0]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],null,nullfrontface",4]],["frontface",4]],[[["offset",3]],["offset",3]],[[["cullface",4]],["cullface",4]],[[["rastermethod",4]],["rastermethod",4]],[[["multisample",3]],["multisample",3]],[[["rasterizer",3]],["rasterizer",3]],[[["comparison",4]],["comparison",4]],[[["stencilop",4]],["stencilop",4]],[[["stencilside",3]],["stencilside",3]],[[["stencil",3]],["stencil",3]],[[["depth",3]],["depth",3]],[[["equation",4]],["equation",4]],[[["blendvalue",4]],["blendvalue",4]],[[["factor",4]],["factor",4]],[[["blendchannel",3]],["blendchannel",3]],[[["blend",3]],["blend",3]],[[["colormask",3]],["colormask",3]],[[["color",3]],["color",3]],[[["refvalues",3]],["refvalues",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["frontface",4],["frontface",4]],["ordering",4]],[[["cullface",4],["cullface",4]],["ordering",4]],[[["multisample",3],["multisample",3]],["ordering",4]],[[["comparison",4],["comparison",4]],["ordering",4]],[[["stencilop",4],["stencilop",4]],["ordering",4]],[[["stencilside",3],["stencilside",3]],["ordering",4]],[[["stencil",3],["stencil",3]],["ordering",4]],[[["depth",3],["depth",3]],["ordering",4]],[[["equation",4],["equation",4]],["ordering",4]],[[["blendvalue",4],["blendvalue",4]],["ordering",4]],[[["factor",4],["factor",4]],["ordering",4]],[[["blendchannel",3],["blendchannel",3]],["ordering",4]],[[["colormask",3],["colormask",3]],["ordering",4]],null,[[["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],null,[[],["stencilside",3]],[[],["stencil",3]],[[],["depth",3]],[[],["blendchannel",3]],[[],["blend",3]],[[],["color",3]],[[],["refvalues",3]],null,[[["colormask",3],["colormask",3]],["colormask",3]],[[],["colormask",3]],[[["frontface",4],["frontface",4]],["bool",0]],[[["offset",3],["offset",3]],["bool",0]],[[["cullface",4],["cullface",4]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["multisample",3],["multisample",3]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["comparison",4],["comparison",4]],["bool",0]],[[["stencilop",4],["stencilop",4]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["equation",4],["equation",4]],["bool",0]],[[["blendvalue",4],["blendvalue",4]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],null,[[["colormask",3]]],[[["frontface",4],["formatter",3]],["result",4,[["error",3]]]],[[["offset",3],["formatter",3]],["result",4,[["error",3]]]],[[["cullface",4],["formatter",3]],["result",4,[["error",3]]]],[[["rastermethod",4],["formatter",3]],["result",4,[["error",3]]]],[[["multisample",3],["formatter",3]],["result",4,[["error",3]]]],[[["rasterizer",3],["formatter",3]],["result",4,[["error",3]]]],[[["comparison",4],["formatter",3]],["result",4,[["error",3]]]],[[["stencilop",4],["formatter",3]],["result",4,[["error",3]]]],[[["stencilside",3],["formatter",3]],["result",4,[["error",3]]]],[[["stencil",3],["formatter",3]],["result",4,[["error",3]]]],[[["depth",3],["formatter",3]],["result",4,[["error",3]]]],[[["equation",4],["formatter",3]],["result",4,[["error",3]]]],[[["blendvalue",4],["formatter",3]],["result",4,[["error",3]]]],[[["factor",4],["formatter",3]],["result",4,[["error",3]]]],[[["blendchannel",3],["formatter",3]],["result",4,[["error",3]]]],[[["blend",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["color",3],["formatter",3]],["result",4,[["error",3]]]],[[["refvalues",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["colormask",3]]]],[[["u8",0]],["colormask",3]],[[["u8",0]],["colormask",3]],[[],["colormask",3]],null,null,null,null,[[["frontface",4],["",0]]],[[["offset",3],["",0]]],[[["cullface",4],["",0]]],[[["rastermethod",4],["",0]]],[[["multisample",3],["",0]]],[[["rasterizer",3],["",0]]],[[["comparison",4],["",0]]],[[["stencilop",4],["",0]]],[[["stencilside",3],["",0]]],[[["stencil",3],["",0]]],[[["depth",3],["",0]]],[[["equation",4],["",0]]],[[["blendvalue",4],["",0]]],[[["factor",4],["",0]]],[[["blendchannel",3],["",0]]],[[["blend",3],["",0]]],[[["colormask",3],["",0]]],[[["color",3],["",0]]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["colormask",3]],["bool",0]],[[["colormask",3]],["bool",0]],null,null,null,null,[[["offset",3],["offset",3]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],[[["comparison",4],["u8",0]],["stencil",3]],[[["equation",4],["factor",4],["factor",4]],["blend",3]],[[],["rasterizer",3]],[[["colormask",3]],["colormask",3]],null,null,null,null,[[["frontface",4],["frontface",4]],["option",4,[["ordering",4]]]],[[["offset",3],["offset",3]],["option",4,[["ordering",4]]]],[[["cullface",4],["cullface",4]],["option",4,[["ordering",4]]]],[[["rastermethod",4],["rastermethod",4]],["option",4,[["ordering",4]]]],[[["multisample",3],["multisample",3]],["option",4,[["ordering",4]]]],[[["rasterizer",3],["rasterizer",3]],["option",4,[["ordering",4]]]],[[["comparison",4],["comparison",4]],["option",4,[["ordering",4]]]],[[["stencilop",4],["stencilop",4]],["option",4,[["ordering",4]]]],[[["stencilside",3],["stencilside",3]],["option",4,[["ordering",4]]]],[[["stencil",3],["stencil",3]],["option",4,[["ordering",4]]]],[[["depth",3],["depth",3]],["option",4,[["ordering",4]]]],[[["equation",4],["equation",4]],["option",4,[["ordering",4]]]],[[["blendvalue",4],["blendvalue",4]],["option",4,[["ordering",4]]]],[[["factor",4],["factor",4]],["option",4,[["ordering",4]]]],[[["blendchannel",3],["blendchannel",3]],["option",4,[["ordering",4]]]],[[["blend",3],["blend",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]],["option",4,[["ordering",4]]]],[[["color",3],["color",3]],["option",4,[["ordering",4]]]],[[["refvalues",3],["refvalues",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]]],null,[[["colormask",3],["colormask",3],["bool",0]]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["colormask",3],["colormask",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["rasterizer",3]],["rasterizer",3]],[[["rasterizer",3],["f32",0],["i32",0]],["rasterizer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["depthstencilflags",3]],null,[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3]],["u8",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],nullnull,null,[[["creationerror",4]],["creationerror",4]],[[["layererror",4]],["layererror",4]],[[["aamode",4]],["aamode",4]],[[["filtermethod",4]],["filtermethod",4]],[[["cubeface",4]],["cubeface",4]],[[["kind",4]],["kind",4]],[[["mipmap",4]],["mipmap",4]],[[["imageinfocommon",3]],["imageinfocommon",3]],[[["texturecopyregion",3]],["texturecopyregion",3]],[[["wrapmode",4]],["wrapmode",4]],[[["lod",3]],["lod",3]],[[["packedcolor",3]],["packedcolor",3]],[[["samplerinfo",3]],["samplerinfo",3]],[[["info",3]],["info",3]],[[["resourcedesc",3]],["resourcedesc",3]],[[["renderdesc",3]],["renderdesc",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencildesc",3]],["depthstencildesc",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["aamode",4],["aamode",4]],["ordering",4]],[[["filtermethod",4],["filtermethod",4]],["ordering",4]],[[["cubeface",4],["cubeface",4]],["ordering",4]],[[["kind",4],["kind",4]],["ordering",4]],[[["mipmap",4],["mipmap",4]],["ordering",4]],[[["imageinfocommon",3],["imageinfocommon",3]],["ordering",4]],[[["texturecopyregion",3],["texturecopyregion",3]],["ordering",4]],[[["wrapmode",4],["wrapmode",4]],["ordering",4]],[[["info",3],["info",3]],["ordering",4]],[[["resourcedesc",3],["resourcedesc",3]],["ordering",4]],[[["renderdesc",3],["renderdesc",3]],["ordering",4]],[[["depthstencilflags",3],["depthstencilflags",3]],["ordering",4]],[[["depthstencildesc",3],["depthstencildesc",3]],["ordering",4]],null,[[["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["imageinfocommon",3]],["imageinfocommon",3]],null,null,[[["creationerror",4]],["str",0]],[[["layererror",4]],["str",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[],["depthstencilflags",3]],[[["raw",3],["raw",3]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],[[["layererror",4],["layererror",4]],["bool",0]],[[["aamode",4],["aamode",4]],["bool",0]],[[["filtermethod",4],["filtermethod",4]],["bool",0]],[[["cubeface",4],["cubeface",4]],["bool",0]],[[["kind",4],["kind",4]],["bool",0]],[[["mipmap",4],["mipmap",4]],["bool",0]],[[["imageinfocommon",3],["imageinfocommon",3]],["bool",0]],[[["texturecopyregion",3],["texturecopyregion",3]],["bool",0]],[[["wrapmode",4],["wrapmode",4]],["bool",0]],[[["lod",3],["lod",3]],["bool",0]],[[["packedcolor",3],["packedcolor",3]],["bool",0]],[[["samplerinfo",3],["samplerinfo",3]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["resourcedesc",3],["resourcedesc",3]],["bool",0]],[[["renderdesc",3],["renderdesc",3]],["bool",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["depthstencildesc",3],["depthstencildesc",3]],["bool",0]],[[["depthstencilflags",3]]],null,null,[[["raw",3],["formatter",3]],["result",4,[["error",3]]]],[[["creationerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["creationerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["layererror",4],["formatter",3]],["result",4,[["error",3]]]],[[["layererror",4],["formatter",3]],["result",4,[["error",3]]]],[[["aamode",4],["formatter",3]],["result",4,[["error",3]]]],[[["filtermethod",4],["formatter",3]],["result",4,[["error",3]]]],[[["cubeface",4],["formatter",3]],["result",4,[["error",3]]]],[[["kind",4],["formatter",3]],["result",4,[["error",3]]]],[[["mipmap",4],["formatter",3]],["result",4,[["error",3]]]],[[["imageinfocommon",3],["formatter",3]],["result",4,[["error",3]]]],[[["texturecopyregion",3],["formatter",3]],["result",4,[["error",3]]]],[[["wrapmode",4],["formatter",3]],["result",4,[["error",3]]]],[[["lod",3],["formatter",3]],["result",4,[["error",3]]]],[[["packedcolor",3],["formatter",3]],["result",4,[["error",3]]]],[[["samplerinfo",3],["formatter",3]],["result",4,[["error",3]]]],[[["info",3],["formatter",3]],["result",4,[["error",3]]]],[[["resourcedesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["renderdesc",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencilflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["depthstencildesc",3],["formatter",3]],["result",4,[["error",3]]]],null,null,[[]],[[]],[[]],[[["u8",0]],["aamode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]],["lod",3]],[[]],[[]],[[],["packedcolor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["renderdesc",3]],["depthstencildesc",3]],[[["u8",0]],["option",4,[["depthstencilflags",3]]]],[[["u8",0]],["depthstencilflags",3]],[[["u8",0]],["depthstencilflags",3]],[[],["depthstencilflags",3]],[[["imageinfocommon",3,[["format",3]]]],["usize",0]],[[["kind",4]]],[[["raw",3]],["info",3]],[[["kind",4],["u8",0]]],[[["aamode",4]],["u8",0]],[[["kind",4]],["u8",0]],[[["kind",4]],["option",4,[["u16",0]]]],[[["imageinfocommon",3]],["usize",0]],[[["raw",3],["",0]]],[[["layererror",4],["",0]]],[[["aamode",4],["",0]]],[[["filtermethod",4],["",0]]],[[["cubeface",4],["",0]]],[[["kind",4],["",0]]],[[["mipmap",4],["",0]]],[[["imageinfocommon",3],["",0]]],[[["texturecopyregion",3],["",0]]],[[["wrapmode",4],["",0]]],[[["lod",3],["",0]]],[[["packedcolor",3],["",0]]],[[["samplerinfo",3],["",0]]],[[["info",3],["",0]]],[[["resourcedesc",3],["",0]]],[[["renderdesc",3],["",0]]],[[["depthstencilflags",3],["",0]]],[[["depthstencildesc",3],["",0]]],null,null,[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lod",3]],["f32",0]],[[]],[[]],[[["packedcolor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["depthstencilflags",3]],["bool",0]],[[["kind",4]],["bool",0]],[[["depthstencilflags",3]],["bool",0]],[[["imageinfocommon",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["creationerror",4],["creationerror",4]],["bool",0]],[[["layererror",4],["layererror",4]],["bool",0]],[[["aamode",4],["aamode",4]],["bool",0]],[[["filtermethod",4],["filtermethod",4]],["bool",0]],[[["kind",4],["kind",4]],["bool",0]],[[["imageinfocommon",3],["imageinfocommon",3]],["bool",0]],[[["texturecopyregion",3],["texturecopyregion",3]],["bool",0]],[[["lod",3],["lod",3]],["bool",0]],[[["packedcolor",3],["packedcolor",3]],["bool",0]],[[["samplerinfo",3],["samplerinfo",3]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["resourcedesc",3],["resourcedesc",3]],["bool",0]],[[["renderdesc",3],["renderdesc",3]],["bool",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["depthstencildesc",3],["depthstencildesc",3]],["bool",0]],[[["aamode",4]],["bool",0]],[[["filtermethod",4],["wrapmode",4]],["samplerinfo",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["aamode",4],["aamode",4]],["option",4,[["ordering",4]]]],[[["filtermethod",4],["filtermethod",4]],["option",4,[["ordering",4]]]],[[["cubeface",4],["cubeface",4]],["option",4,[["ordering",4]]]],[[["kind",4],["kind",4]],["option",4,[["ordering",4]]]],[[["mipmap",4],["mipmap",4]],["option",4,[["ordering",4]]]],[[["imageinfocommon",3],["imageinfocommon",3]],["option",4,[["ordering",4]]]],[[["texturecopyregion",3],["texturecopyregion",3]],["option",4,[["ordering",4]]]],[[["wrapmode",4],["wrapmode",4]],["option",4,[["ordering",4]]]],[[["lod",3],["lod",3]],["option",4,[["ordering",4]]]],[[["packedcolor",3],["packedcolor",3]],["option",4,[["ordering",4]]]],[[["samplerinfo",3],["samplerinfo",3]],["option",4,[["ordering",4]]]],[[["info",3],["info",3]],["option",4,[["ordering",4]]]],[[["resourcedesc",3],["resourcedesc",3]],["option",4,[["ordering",4]]]],[[["renderdesc",3],["renderdesc",3]],["option",4,[["ordering",4]]]],[[["depthstencilflags",3],["depthstencilflags",3]],["option",4,[["ordering",4]]]],[[["depthstencildesc",3],["depthstencildesc",3]],["option",4,[["ordering",4]]]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3],["bool",0]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],null,[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],null,[[["info",3],["u8",0]],["imageinfocommon",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["info",3],["channeltype",4],["u8",0]],["imageinfocommon",3,[["format",3]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],null,null,[[["texturecopyregion",3]],["texturecopyregion",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0],["usize",0],["role",4],["usage",4],["bind",3]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["role",4],["bind",3]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["usize",0],["role",4],["bind",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["info",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["usize",0]],["buffer",3]],[[["",0],["usize",0]],["buffer",3]],[[["",0],["u16",0],["u16",0]],["result",4,[["combinederror",4]]]],[[["",0],["u16",0],["u16",0]],["result",4,[["depthstencilview",3],["combinederror",4]]]],[[["",0],["usize",0]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["usize",0]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0]],["indexbuffer",4]],[[["",0]],["indexbuffer",4]],[[["",0],["program",3],["primitive",4],["rasterizer",3],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["str",0]]]]]],[[["",0],["program",3],["primitive",4],["rasterizer",3],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["str",0]]]]]],[[["",0],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["string",3]]]]]],[[["",0],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["string",3]]]]]],[[["",0],["shaderset",4],["primitive",4],["rasterizer",3],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["string",3]]]]]],[[["",0],["shaderset",4],["primitive",4],["rasterizer",3],["pipelineinit",8]],["result",4,[["pipelinestate",3],["pipelinestateerror",4,[["string",3]]]]]],[[["",0],["program",3],["descriptor",3]],["result",4,[["rawpipelinestate",3],["creationerror",3]]]],[[["",0],["shaderset",4]],["result",4,[["program",3],["createprogramerror",3]]]],[[["",0],["u16",0],["u16",0]],["result",4,[["combinederror",4]]]],[[["",0],["samplerinfo",3]],["sampler",3]],[[["",0]],["sampler",3]],[[["",0]],["sampler",3]],[[["",0],["stage",4]],["result",4,[["shader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["domainshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["geometryshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["hullshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["pixelshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["shaderset",4],["programerror",4]]]],[[["",0]],["result",4,[["vertexshader",3],["createshadererror",4]]]],[[["",0],["kind",4],["u8",0],["bind",3],["usage",4],["option",4,[["channeltype",4]]]],["result",4,[["texture",3],["creationerror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["info",3],["option",4,[["channeltype",4]]],["option",4]],["result",4,[["rawtexture",3],["creationerror",4]]]],[[["",0],["usize",0]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["usize",0]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0]],["buffer",3]],[[["",0]],["buffer",3]],[[["",0]]],[[["",0]]],[[["",0],["accessinfo",3],["option",4,[["fence",3]]]],["result",4,[["fence",3],["submissionerror",4]]]],[[["",0]],["capabilities",3]],[[["",0]],["capabilities",3]],[[["",0]],["result",4,[["program",3],["programerror",4]]]],[[["",0]],["result",4,[["program",3],["programerror",4]]]],[[["",0],["manager",3]]],[[["",0],["buffer",3]],["result",4,[["reader",3],["error",4]]]],[[["",0],["accessinfo",3]],["result",4,[["submissionerror",4]]]],[[["",0],["buffer",3]],["result",4,[["shaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3],["format",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["buffer",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["texture",3],["u8",0],["option",4,[["u16",0]]],["depthstencilflags",3]],["result",4,[["depthstencilview",3],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["depthstencildesc",3]],["result",4,[["rawdepthstencilview",3],["targetviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["depthstencilview",3],["targetviewerror",4]]]],[[["",0],["texture",3],["u8",0],["option",4,[["u16",0]]]],["result",4,[["rendertargetview",3],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["renderdesc",3]],["result",4,[["rawrendertargetview",3],["targetviewerror",4]]]],[[["",0],["texture",3],["swizzle",3]],["result",4,[["shaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3],["resourcedesc",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["fence",3]]],[[["",0],["buffer",3]],["result",4,[["writer",3],["error",4]]]]],"p":[[4,"SubmissionError"],[4,"IndexBuffer"],[8,"Resources"],[4,"ResourceViewError"],[4,"TargetViewError"],[8,"Device"],[4,"PipelineStateError"],[4,"UniformValue"],[4,"ShaderSet"],[4,"UpdateError"],[4,"Primitive"],[4,"CopyError"],[4,"CombinedError"],[3,"Mirror"],[3,"Slice"],[8,"CommandBuffer"],[3,"Rect"],[3,"Encoder"],[3,"ProgramInfo"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[8,"Factory"],[8,"IntoIndexBuffer"],[13,"Texture"],[13,"Resource"],[13,"Target"],[13,"OutOfSrcBounds"],[13,"OutOfDstBounds"],[13,"Overlap"],[13,"Index16"],[13,"Index32"],[13,"Program"],[13,"DescriptorInit"],[13,"DeviceCreate"],[13,"PatchList"],[13,"Channel"],[13,"Layer"],[13,"Simple"],[13,"Geometry"],[13,"Tessellated"],[13,"TessellatedGeometry"],[13,"Level"],[13,"Layer"],[13,"Channel"],[13,"I32"],[13,"U32"],[13,"F32"],[13,"I32Vector2"],[13,"I32Vector3"],[13,"I32Vector4"],[13,"U32Vector2"],[13,"U32Vector3"],[13,"U32Vector4"],[13,"F32Vector2"],[13,"F32Vector3"],[13,"F32Vector4"],[13,"F32Matrix2"],[13,"F32Matrix3"],[13,"F32Matrix4"],[13,"InvalidUsage"],[13,"UnitCountMismatch"],[13,"OutOfBounds"],[4,"Role"],[4,"CreationError"],[3,"Info"],[3,"Raw"],[13,"UnsupportedBind"],[13,"UnsupportedUsage"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"SurfaceType"],[8,"Formatted"],[8,"SurfaceTyped"],[4,"ChannelType"],[4,"ChannelSource"],[8,"ChannelTyped"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"B8_G8_R8_A8"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"BC1_R8_G8_B8"],[4,"BC3_R8_G8_B8_A8"],[3,"Buffer"],[3,"Texture"],[3,"ShaderResourceView"],[3,"UnorderedAccessView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"RawBuffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"RawShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[4,"Error"],[3,"Reader"],[3,"Writer"],[13,"InvalidAccess"],[3,"Bind"],[4,"Usage"],[3,"Access"],[4,"InitError"],[8,"DataBind"],[4,"ElementError"],[8,"DataLink"],[8,"PipelineInit"],[8,"PipelineData"],[3,"Descriptor"],[3,"AccessInfo"],[3,"RawDataSet"],[3,"PipelineState"],[13,"NotFound"],[13,"Format"],[13,"Offset"],[13,"VertexImport"],[13,"ConstantBuffer"],[13,"GlobalConstant"],[13,"ResourceView"],[13,"UnorderedView"],[13,"Sampler"],[13,"PixelExport"],[8,"ToInstanceRate"],[3,"VertexBufferCommon"],[3,"ConstantBuffer"],[3,"Global"],[3,"RawVertexBuffer"],[3,"RawConstantBuffer"],[3,"RawGlobal"],[4,"NonInstanced"],[4,"Instanced"],[3,"Element"],[6,"InstanceRate"],[8,"Structure"],[3,"Bundle"],[3,"ShaderResource"],[3,"UnorderedAccess"],[3,"TextureSampler"],[3,"RawShaderResource"],[3,"Sampler"],[3,"RenderTarget"],[3,"BlendTarget"],[3,"DepthTarget"],[3,"StencilTarget"],[3,"DepthStencilTarget"],[3,"RawRenderTarget"],[3,"Scissor"],[3,"BlendRef"],[3,"Usage"],[4,"ProgramError"],[8,"ToUniform"],[8,"Formatted"],[13,"Vertex"],[13,"Hull"],[13,"Domain"],[13,"Geometry"],[13,"Pixel"],[13,"Link"],[3,"SamplerType"],[4,"IsArray"],[4,"BaseType"],[4,"TextureType"],[4,"MatrixFormat"],[4,"IsComparison"],[4,"CreateShaderError"],[4,"Stage"],[4,"CompatibilityError"],[4,"ContainerType"],[4,"IsMultiSample"],[4,"IsRect"],[3,"AttributeVar"],[3,"ConstVar"],[3,"TextureVar"],[3,"OutputVar"],[3,"ConstantBufferVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"Program"],[3,"CreateProgramError"],[8,"BaseTyped"],[13,"Vector"],[13,"Matrix"],[13,"StageNotSupported"],[13,"CompilationFailed"],[13,"D1"],[13,"D2"],[13,"Cube"],[3,"Offset"],[3,"ColorMask"],[4,"Equation"],[4,"Comparison"],[4,"CullFace"],[4,"FrontFace"],[4,"BlendValue"],[4,"StencilOp"],[4,"RasterMethod"],[4,"Factor"],[3,"Blend"],[3,"Stencil"],[3,"Color"],[3,"RefValues"],[3,"MultiSample"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Depth"],[3,"BlendChannel"],[13,"ZeroPlus"],[13,"OneMinus"],[13,"Line"],[3,"PackedColor"],[4,"Mipmap"],[4,"FilterMethod"],[4,"WrapMode"],[4,"AaMode"],[4,"Kind"],[4,"CreationError"],[4,"CubeFace"],[4,"LayerError"],[3,"DepthStencilFlags"],[3,"Info"],[3,"SamplerInfo"],[3,"Raw"],[3,"ImageInfoCommon"],[3,"TextureCopyRegion"],[3,"Lod"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[13,"Multi"],[13,"Coverage"],[13,"Format"],[13,"Samples"],[13,"Size"],[13,"Data"],[13,"Usage"],[13,"Level"],[13,"Anisotropic"],[13,"D1"],[13,"D1Array"],[13,"D2"],[13,"D2Array"],[13,"D3"],[13,"Cube"],[13,"CubeArray"],[13,"NotExpected"],[13,"OutOfBounds"],[8,"FactoryExt"]]},\
"gfx_core":{"doc":"Low-level graphics abstraction for Rust. Mostly operates …","t":[13,8,3,6,16,3,6,16,8,16,16,6,16,8,16,3,2,16,3,13,3,3,4,6,13,13,13,13,17,17,17,17,17,17,16,13,6,16,3,13,4,16,8,16,16,6,8,16,16,6,16,16,4,13,4,6,8,16,8,16,13,13,16,13,13,13,13,13,13,16,6,6,3,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,12,0,10,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,0,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,10,10,11,10,10,0,11,11,11,11,11,12,0,12,12,0,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,3,13,3,4,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,3,6,8,4,13,6,13,13,11,11,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,10,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,12,12,3,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,8,13,13,13,13,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,10,11,10,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,10,11,10,11,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,4,13,4,13,6,8,8,8,8,16,4,4,8,4,13,4,13,4,13,4,13,16,6,6,8,6,8,8,3,4,13,3,8,3,3,4,13,4,13,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,8,8,8,6,6,6,6,16,4,13,6,8,8,16,4,8,3,8,8,8,3,3,4,13,4,13,6,6,6,6,16,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,18,13,13,13,8,18,18,18,18,18,18,18,13,4,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,3,6,6,3,3,6,3,3,6,6,3,6,17,3,6,3,6,3,6,3,3,3,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,3,4,8,13,13,13,13,4,13,6,3,3,4,3,4,13,13,13,13,18,6,13,13,13,13,13,13,13,13,13,13,13,13,13,8,18,13,18,13,13,13,13,13,13,4,4,4,4,6,13,4,13,13,13,13,13,13,3,18,13,3,3,13,13,17,3,3,13,4,13,4,3,13,13,13,13,13,4,3,3,18,13,13,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,13,13,18,13,3,3,4,13,3,3,4,13,13,13,4,13,13,3,13,13,13,4,4,13,13,4,18,13,13,13,13,13,13,13,13,13,6,13,13,3,13,13,13,3,6,6,13,13,13,18,4,3,3,13,13,13,13,13,3,4,3,13,13,13,13,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,6,6,6,6,3,3,6,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,13,13,13,6,13,17,13,13,4,13,13,4,13,13,13,13,13,13,3,3,6,4,13,3,3,4,13,6,4,6,13,3,17,4,13,13,13,13,13,13,13,6,13,6,6,13,3,13,13,13,13,18,18,18,3,6,3,3,3,13,13,13,6,13,3,13,13,13,4,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AccessOverlap","Adapter","AdapterInfo","AttributeSlot","Buffer","Capabilities","ColorSlot","CommandBuffer","CommandQueue","CommandQueue","CommandQueue","ConstantBufferSlot","DepthStencilView","Device","Device","DomainShader","Factory","Fence","Frame","Geometry","GeometryShader","HullShader","IndexType","InstanceCount","LineList","LineListAdjacency","LineStrip","LineStripAdjacency","MAX_COLOR_TARGETS","MAX_CONSTANT_BUFFERS","MAX_RESOURCE_VIEWS","MAX_SAMPLERS","MAX_UNORDERED_VIEWS","MAX_VERTEX_ATTRIBUTES","Mapping","PatchList","PatchSize","PipelineStateObject","PixelShader","PointList","Primitive","Program","QueueFamily","QueueFamily","RenderTargetView","ResourceViewSlot","Resources","Resources","Sampler","SamplerSlot","Shader","ShaderResourceView","ShaderSet","Simple","SubmissionError","SubmissionResult","Surface","Surface","SwapChain","SwapChain","Tessellated","TessellatedGeometry","Texture","TriangleList","TriangleListAdjacency","TriangleStrip","TriangleStripAdjacency","U16","U32","UnorderedAccessView","UnorderedViewSlot","VertexCount","VertexShader","Window","acquire_frame","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build_swapchain","cleanup","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","command","constant_buffer_supported","copy_buffer_supported","description","device","dummy","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","factory","fenced_submit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from_window","get_capabilities","get_info","get_queue_families","get_usage","handle","hash","hash","hash","hash","hash","hash","hash","hash","instance_base_supported","instance_call_supported","instance_rate_supported","into","into","into","into","into","into","into","into","into","into","into","into","mapping","max_index_count","max_patch_size","max_texture_size","max_vertex_count","memory","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","num_queues","open","partial_cmp","pin_submitted_resources","present","pso","reference","reference","reference","reference","reference","separate_blending_slots_supported","shade","software_rendering","srgb_color_supported","state","submit","supports_present","target","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unordered_access_view_supported","vendor","vertex_base_supported","wait_fence","0","0","0","0","0","1","1","1","1","2","2","2","3","3","4","Constant","CreationError","Index","Info","Other","Raw","Role","Staging","UnsupportedBind","UnsupportedUsage","Vertex","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","description","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_info","hash","hash","hash","hash","into","into","into","into","is_mapped","ne","ne","role","size","stride","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","usage","0","0","AccessGuard","AccessGuardBuffers","AccessGuardBuffersChain","AccessInfo","AccessInfoBuffers","Buffer","ClearColor","Float","InstanceParams","Int","Uint","access_mapped","access_mapped_reads","access_mapped_writes","bind_constant_buffers","bind_global_constant","bind_index","bind_pipeline_state","bind_pixel_targets","bind_resource_views","bind_samplers","bind_unordered_views","bind_vertex_buffers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_read","buffer_write","call_draw","call_draw_indexed","clear","clear_color","clear_depth_stencil","clone","clone","clone_into","clone_into","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","deref","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_mipmap","has_mapped_reads","has_mapped_writes","into","into","into","into","into","into_iter","into_iter","mapped_reads","mapped_writes","ne","ne","new","next","next","partial_cmp","reset","set_ref_values","set_scissor","take_accesses","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_buffer","update_texture","0","0","0","DummyCommandBuffer","DummyDevice","DummyFence","DummyMapping","DummyResources","bind_constant_buffers","bind_global_constant","bind_index","bind_pipeline_state","bind_pixel_targets","bind_resource_views","bind_samplers","bind_unordered_views","bind_vertex_buffers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_draw","call_draw_indexed","cleanup","clear_color","clear_depth_stencil","clone","clone","clone","clone_into","clone_into","clone_into","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","eq","eq","eq","fenced_submit","fmt","fmt","fmt","from","from","from","from","from","generate_mipmap","get_capabilities","hash","hash","hash","into","into","into","into","into","new","pin_submitted_resources","reset","set_ref_values","set_scissor","submit","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_buffer","update_texture","wait_fence","Channel","Channel","CombinedError","Factory","Layer","Layer","Level","NoBindFlag","NoBindFlag","NotDetached","Resource","ResourceViewError","Target","TargetViewError","Texture","Unsupported","Unsupported","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","cause","cause","clone","clone","clone","clone_into","clone_into","clone_into","create_buffer","create_buffer_immutable","create_buffer_immutable_raw","create_buffer_raw","create_depth_stencil","create_depth_stencil_view_only","create_pipeline_state_raw","create_program","create_render_target","create_sampler","create_shader","create_shader_domain","create_shader_geometry","create_shader_hull","create_shader_pixel","create_shader_vertex","create_texture","create_texture_immutable","create_texture_immutable_u8","create_texture_raw","description","description","description","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_capabilities","into","into","into","ne","ne","ne","read_mapping","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view_buffer_as_shader_resource","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access","view_buffer_as_unordered_access_raw","view_texture_as_depth_stencil","view_texture_as_depth_stencil_raw","view_texture_as_depth_stencil_trivial","view_texture_as_render_target","view_texture_as_render_target_raw","view_texture_as_shader_resource","view_texture_as_shader_resource_raw","view_texture_as_unordered_access","view_texture_as_unordered_access_raw","write_mapping","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","2","3","B8_G8_R8_A8","B8_G8_R8_A8","BC1_R8_G8_B8","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","BC3_R8_G8_B8_A8","Bgra8","BlendChannel","BlendFormat","BufferFormat","BufferSurface","Channel","ChannelSource","ChannelType","ChannelTyped","D16","D16","D24","D24","D24_S8","D24_S8","D32","D32","DataType","Depth","Depth32F","DepthFormat","DepthStencil","DepthStencilFormat","DepthSurface","F16","Float","Float","Format","Formatted","I16Norm","I8Norm","Inorm","Inorm","Int","Int","One","R10_G10_B10_A2","R10_G10_B10_A2","R11_G11_B10","R11_G11_B10","R16","R16","R16_G16","R16_G16","R16_G16_B16","R16_G16_B16","R16_G16_B16_A16","R16_G16_B16_A16","R32","R32","R32_G32","R32_G32","R32_G32_B32","R32_G32_B32","R32_G32_B32_A32","R32_G32_B32_A32","R4_G4","R4_G4","R4_G4_B4_A4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G5_B5_A1","R5_G6_B5","R5_G6_B5","R8","R8","R8_G8","R8_G8","R8_G8_B8_A8","R8_G8_B8_A8","RenderChannel","RenderFormat","RenderSurface","Rgb10a2F","Rgba16F","Rgba32F","Rgba8","ShaderType","Srgb","Srgb","Srgba8","StencilFormat","StencilSurface","Surface","SurfaceType","SurfaceTyped","Swizzle","TextureChannel","TextureFormat","TextureSurface","U16Norm","U8Norm","Uint","Uint","Unorm","Unorm","Vec1","Vec2","Vec3","Vec4","View","W","X","Y","Z","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast2","cast2","cast2","cast2","cast2","cast3","cast3","cast3","cast3","cast3","cast4","cast4","cast4","cast4","cast4","cast_slice","cast_slice","cast_slice","cast_slice","cast_slice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_alpha_stencil_bits","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_format","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_total_bits","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Buffer","DepthStencilView","Fence","Manager","Program","RawBuffer","RawDepthStencilView","RawPipelineState","RawRenderTargetView","RawShaderResourceView","RawTexture","RawUnorderedAccessView","RenderTargetView","Sampler","Shader","ShaderResourceView","Texture","UnorderedAccessView","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","deref","deref","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_dimensions","get_dimensions","get_dimensions","get_dimensions","get_info","get_info","get_info","get_texture","get_texture","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","raw_view","ref_buffer","ref_dsv","ref_fence","ref_program","ref_pso","ref_rtv","ref_sampler","ref_shader","ref_srv","ref_texture","ref_uav","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AccessOverlap","Error","InvalidAccess","Reader","Writer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","description","eq","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","into","ne","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","1","Access","Bind","DEPTH_STENCIL","Data","Download","Dynamic","Pod","READ","RENDER_TARGET","RW","SHADER_RESOURCE","TRANSFER_DST","TRANSFER_SRC","UNORDERED_ACCESS","Upload","Usage","WRITE","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_slice","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","is_all","is_all","is_empty","is_empty","is_mutable","ne","ne","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","0","0","0","0","0","1","1","1","1","2","2","2","2","AttributeDesc","BufferIndex","BufferOffset","ColorInfo","ColorTargetDesc","ConstantBufferDesc","ConstantBufferParam","CreationError","DepthStencilDesc","DepthStencilInfo","Descriptor","ElemOffset","ElemStride","Element","InstanceRate","MAX_VERTEX_BUFFERS","PixelTargetSet","ResourceViewDesc","ResourceViewParam","SamplerDesc","SamplerParam","UnorderedViewDesc","UnorderedViewParam","VertexBufferDesc","VertexBufferSet","add_color","add_depth_stencil","alpha","attributes","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color_targets","colors","constant_buffers","depth","depth","depth_stencil","description","dimensions","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","front","get_view","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","mask","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","offset","primitive","rasterizer","rate","resource_views","samplers","scissor","stencil","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unordered_views","vertex_buffers","0","1","Array","AttributeVar","BaseType","BaseTyped","Bool","Buffer","ColumnMajor","Compare","CompatibilityError","CompilationFailed","ConstFormat","ConstVar","ConstantBufferVar","ContainerType","CreateProgramError","CreateShaderError","Cube","D1","D2","D3","DOMAIN","Dimension","Domain","ErrorArraySize","ErrorBaseType","ErrorContainer","F32","F32","F32Matrix2","F32Matrix3","F32Matrix4","F32Vector2","F32Vector3","F32Vector4","F64","Formatted","GEOMETRY","Geometry","HULL","Hull","I32","I32","I32Vector2","I32Vector3","I32Vector4","IsArray","IsComparison","IsMultiSample","IsRect","Location","Matrix","MatrixFormat","ModelNotSupported","MultiSample","NoArray","NoCompare","NoMultiSample","NoRect","OutputVar","PIXEL","Pixel","Program","ProgramInfo","Rect","RowMajor","STAGES","SamplerType","SamplerVar","Single","Stage","StageNotSupported","TextureType","TextureVar","U32","U32","U32Vector2","U32Vector3","U32Vector4","UniformValue","UnorderedVar","Usage","VERTEX","Vector","Vertex","all","base_type","base_type","base_type","base_type","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_sample","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","constant_buffers","container","container","container","contains","count","description","description","description","difference","elements","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_base_type","get_format","get_info","globals","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_compatible","is_empty","knows_outputs","location","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","not","output_depth","outputs","partial_cmp","partial_cmp","remove","samplers","set","size","slot","slot","slot","slot","slot","slot","sub","sub_assign","symmetric_difference","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unordereds","usage","usage","usage","usage","vertex_attributes","0","0","1","2","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","ALPHA","Add","Always","BLUE","Back","Blend","BlendChannel","BlendValue","Clockwise","Color","ColorMask","Comparison","ConstAlpha","ConstColor","CounterClockwise","CullFace","DecrementClamp","DecrementWrap","Depth","DestAlpha","DestColor","Equal","Equation","Factor","Fill","Front","FrontFace","GREEN","Greater","GreaterEqual","IncrementClamp","IncrementWrap","Invert","Keep","Less","LessEqual","Line","LineWidth","Max","Min","MultiSample","Never","NotEqual","Nothing","Offset","OffsetSlope","OffsetUnits","One","OneMinus","Point","RED","RasterMethod","Rasterizer","RefValues","Replace","RevSub","SourceAlpha","SourceAlphaSaturated","SourceColor","Stencil","StencilOp","StencilSide","Sub","Zero","Zero","ZeroPlus","all","alpha","back","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blend","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","complement","contains","cull_face","default","default","default","default","default","default","default","destination","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equation","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","front","front_face","fun","fun","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","mask","mask_read","mask_write","method","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new_fill","not","offset","op_depth_fail","op_fail","op_pass","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","samples","set","source","stencil","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_cull_back","with_offset","write","0","0","0","ColorValue","Depth","Layer","Level","Mirror","Rect","Stencil","X","Y","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","h","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","not","partial_cmp","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","w","x","y","0","AaMode","Allocated","Anisotropic","Bilinear","Bits","Border","CUBE_FACES","Clamp","Coverage","CreationError","Cube","CubeArray","CubeFace","D1","D1Array","D2","D2Array","D3","Data","DepthStencilDesc","DepthStencilFlags","Dimensions","FilterMethod","Format","ImageInfoCommon","Info","Kind","Kind","Layer","LayerError","Level","Level","Lod","MAX_LEVEL","Mipmap","Mipmap","Mipmap","Mirror","Multi","NegX","NegY","NegZ","NewImageInfo","NotExpected","NumFragments","NumSamples","OutOfBounds","PackedColor","PosX","PosY","PosZ","Provided","RO_DEPTH","RO_DEPTH_STENCIL","RO_STENCIL","Raw","RawImageInfo","RenderDesc","ResourceDesc","SamplerInfo","Samples","Scale","Single","Size","Size","TextureCopyRegion","Tile","Trilinear","Usage","WrapMode","all","bind","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","comparison","complement","contains","convert","cube_face","depth","description","description","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","filter","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_byte_count","get_byte_count","get_dimensions","get_info","get_level_dimensions","get_num_fragments","get_num_levels","get_num_slices","get_texel_count","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","info","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_cube","is_empty","is_inside","kind","kind","layer","layer","layer","level","level","levels","lod_bias","lod_range","max","min","mipmap","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","needs_resolve","new","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","sub","sub_assign","swizzle","symmetric_difference","texture","to_image_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_image_info","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","usage","width","with_texture","wrap_mode","xoffset","yoffset","zoffset","0","0","1","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0","1","1","1","1","1","2","2","2","3","0","0","1"],"q":["gfx_coregfx_core::Primitive","gfx_core::ShaderSet","","","","","","","","","","","","","","gfx_core::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::buffer::CreationError","","gfx_core::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::command::ClearColor","","","gfx_core::dummy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::factory::CombinedError","","","gfx_core::factory::ResourceViewError","","gfx_core::factory::TargetViewError","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handlegfx_core::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::mapping::Error","","gfx_core::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::psogfx_core::shadegfx_core::shade::ContainerType","","","","gfx_core::shade::CreateShaderError","","gfx_core::shade::TextureType","","","","gfx_core::shade::UniformValue","","","","","","","","","","","","","","","gfx_core::stategfx_core::state::Factor","","gfx_core::state::RasterMethod","gfx_core::target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::texture::AaMode","","","gfx_core::texture::CreationError","","","","","","","gfx_core::texture::FilterMethod","gfx_core::texture::Kind","","","","","","","","","","","","","","","","gfx_core::texture::LayerError","",""],"d":["","Represents a physical or virtual device, which is capable …","Information about a backend adapater.","Slot for an attribute.","","Features that the device supports.","Slot for an active color buffer.","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","Dummy trait for command queues. CommandBuffers will be …","Associated <code>CommandQueue</code> type.","Associated <code>CommandQueue</code> type.","Slot for a constant buffer object.","","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Associated <code>Device</code> type.","","","","Handle to a backbuffer of the swapchain.","Geometry shader programs: Vs-Gs-Ps","","","A type of each index value in the slice’s index buffer","Draw number of instances","Each pair of vertices represent a single line segment. For …","Each quadtruplet of vertices represent a single line …","Every two consecutive vertices represent a single line …","Every four consecutive vertices represent a single line …","Compile-time maximum number of color targets.","Compile-time maximum number of constant buffers.","Compile-time maximum number of shader resource views (SRV).","Compile-time maximum number of samplers.","Compile-time maximum number of unordered access views …","Compile-time maximum number of vertex attributes.","","Patch list, used with shaders capable of producing …","Number of vertices in a patch","","","Each vertex represents a single point.","Describes what geometric primitives are created from …","","<code>QueueFamily</code> denotes a group of command queues provided by …","Associated <code>QueueFamily</code> type.","","Slot for a shader resource view.","Different types of a specific API.","Associated <code>Resources</code> type.","","Slot for a sampler.","","","A complete set of shaders to link a program. TODO: …","Simple program: Vs-Ps","","","A <code>Surface</code> abstracts the surface of a native window, which …","Associated <code>Surface</code> type.","The <code>SwapChain</code> is the backend representation of the surface.","Associated <code>SwapChain</code> type.","Tessellation programs: Vs-Hs-Ds-Ps","TessellatedGeometry programs: Vs-Hs-Ds-Hs-Ps","","Each triplet of vertices represent a single triangle. For …","Each sextuplet of vertices represent a single traingle …","Every three consecutive vertices represent a single …","Every even-numbered vertex (every other starting from the …","","","","Slot for an unordered access object.","Draw vertex count.","","Associated native <code>Window</code> type.","Acquire a new frame for rendering. This needs to be called …","","","","","","","","","","","","","","","","","","","","","","","","","Memory buffers","Create a new swapchain from the current surface with an …","Cleanup unused resources. This should be called between …","","","","","","","","","","","","","","","","","","","","","","","","","","Command Buffer device interface","","","","PCI id of the adapter","Dummy backend implementation to test the code for compile …","Enumerate all available adapters supporting this backend","","","","","","","","","","","","Resource factory","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","","","","","","","","","","","","","","Universal format specification. Applicable to textures, …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new surface from a native window.","Returns the capabilities of this <code>Device</code>.","Get the <code>AdapterInfo</code> for this adapater.","Return the supported queue families for this adapter.","Return the aggregated stage usage for the set.","Resource handles","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Memory mapping","","","","","Types to describe the properties of memory allocated for …","Adapter name","","","","","","","","","","Return the number of available queues of this family","Create a new device and command queues.","","Pin everything from this handle manager to live for a …","Present one acquired frame in FIFO order.","Raw Pipeline State Objects","","","","","","","Shader handling.","The device is based on a software rasterizer","","Fixed-function hardware state.","Submits a <code>CommandBuffer</code> to the GPU for execution.","Check if the queue family supports presentation to a …","Render target specification.","Texture creation and modification.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vendor PCI id of the adapter","","Stalls the current thread until the fence is satisfied","","","","","","","","","","","","","","","","Constant buffer","Error creating a buffer.","Index buffer","An information block that is immutable and associated to …","Unknown other error.","Untyped buffer","Role of the memory buffer.","Staging buffer","Some of the bind flags are not supported.","Usage mode is not supported","Generic vertex buffer","Bind flags","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get buffer info","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this buffer mapped ?","","","Role","Size in bytes","Stride of a single element, in bytes. Only used for …","","","","","","","","","","","","","","","","","Usage hint","","","","","","Informations about what is accessed by a bunch of commands.","","An interface of the abstract command buffer. It collects …","A universal clear color supporting integet formats as well …","Standard floating-point vec4 color","Optional instance parameters: (instance count, buffer …","Integer vector to clear ivec4 targets.","Unsigned int vector to clear uvec4 targets.","","Returns the mapped buffers that The GPU will read from, …","Returns the mapped buffers that The GPU will write to, …","Bind a complete set of constant buffers","Bind a global constant","Bind an index buffer","Bind a pipeline state object","Bind a complete set of pixel targets, including multiple …","Bind a complete set of shader resource views","Bind a complete set of samplers","Bind a complete set of unordered access views","Bind a complete set of vertex buffers","","","","","","","","","","","Register a buffer read access","Register a buffer write access","Draw a primitive","Draw a primitive with index buffer","Clear access informations","Clear color target","","","","","","Copy part of a buffer to another","Copy part of a buffer to a texture","Copy part of a texture to a buffer","Copy part of one texture into another","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Is there any mapped buffer reads ?","Is there any mapped buffer writes ?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the mapped buffers that The GPU will read from","Returns the mapped buffers that The GPU will write to","","","Creates empty access informations","","","","Reset the command buffer contents, retain the allocated …","Set reference values for the blending and stencil …","Set scissor rectangle","Takes all the accesses necessary for submission","","","","","","","","","","","","","","","","","","Update a vertex/index/uniform buffer","Update a texture","","","","Dummy command buffer, which ignores all the calls.","Dummy device which does minimal work, just to allow testing","Dummy fence that does nothing.","Dummy mapping which will crash on use.","Dummy resources phantom type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new dummy device","","","","","","","","","","","","","","","","","","","","","","","","","","","Selected channel type is not supported for this texture.","Selected channel type is not supported for this texture.","An error from creating textures with views at the same …","Overview","Selected layer can not be viewed for this texture.","Selected array layer doesn’t exist.","Selected mip level doesn’t exist.","The corresponding bind flag is not present in the texture.","The <code>RENDER_TARGET</code>/<code>DEPTH_STENCIL</code> flag is not present in the …","The RTV cannot be changed due to the references to it …","Failed to create SRV or UAV.","Error creating either a ShaderResourceView, or …","Failed to create RTV or DSV.","Error creating either a RenderTargetView, or …","Failed to create the raw texture.","The backend was refused for some reason.","The backend was refused for some reason.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","","","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","Compiles a <code>VertexShader</code> from source.","","","","Create a new empty raw texture with no data. The channel …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the capabilities of this <code>Factory</code>. This usually …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Acquire a mapping Reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acquire a mapping Writer","","","","","","","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC wiki…","Block Compression 1 also known as DXT1, S3TC. See S3TC wiki…","Block Compression 3 also known as DXT5, S3TC. See S3TC wiki…","Block Compression 3 also known as DXT5, S3TC. See S3TC wiki…","Standard 8bits BGRA format.","An ability of a channel type to be used for blended render …","Ability to be used for blended render targets.","Ability to be used for vertex buffers.","An ability of a surface type to be used for vertex buffers.","Associated channel type.","Source channel in a swizzle configuration. Some may …","Type of a surface channel. This is how we interpret the …","Compile-time channel type trait.","","","","","","","","","The corresponding data type to be passed from CPU.","Standard 24-bit depth format.","Standard 32-bit floating-point depth format.","Ability to be used for depth targets.","Standard 24-bit depth format with 8-bit stencil.","Ability to be used for depth+stencil targets.","An ability of a surface type to be used for depth targets.","","","","Complete run-time surface format.","Compile-time full format trait.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ability of a channel type to be used for render targets.","Ability to be used for render targets.","An ability of a surface type to be used for render targets.","Standard HDR floating-point format with 10 bits for RGB …","Standard 16-bit floating-point RGBA format.","Standard 32-bit floating-point RGBA format.","Standard 8bits RGBA format.","Shader-visible type that corresponds to this channel. For …","","","Standard 8bit gamma transforming RGB format.","Ability to be used for vertex buffers.","An ability of a surface type to be used for stencil …","Associated surface type.","Type of the allocated texture surface. It is supposed to …","Compile-time surface type trait.","Channel swizzle configuration for the resource views. …","An ability of a channel type to be used for textures.","Ability to be used for textures.","An ability of a surface type to be used for textures.","","","","","","","Abstracted 1-element container for macro internal use","Abstracted 2-element container for macro internal use","Abstracted 3-element container for macro internal use","Abstracted 4-element container for macro internal use","Shader view type of this format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutation.","Convert a generic slice by transmutationeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Return the number of bits allocated for alpha and stencil.","Return the run-time value of the type.","","","","","","","Return the run-time value of the type.","Return the run-time value of the type.","","","","","","","","","","","","","","","","","","","","","","","","","Return the total number of bits for this format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a new swizzle where each channel is unmappedype-safe buffer handle","Typed DSV","Fence Handle","Stores reference-counted resources used in a command …","Program Handle","Untyped buffer handle","Raw DSV","Raw Pipeline State Handle","Raw RTV","Raw Shader Resource View Handle","Raw texture handle","Raw Unordered Access View Handle","Typed RTV","Sampler Handle","Shader Handle","Type-safe Shader Resource View Handle","Typed texture object","Type-safe Unordered Access View Handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear all references","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count the total number of referenced resources","","","","","","","","","","","","","","","","","","","","","Extend with all references of another handle manager","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get target dimensions","Get target dimensions","Get target dimensions","Get target dimensions","Get the associated information about the buffer","Get texture descriptor","Get sampler info","Get the associated texture","Get the associated texture","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the number of elements in the buffer.","","","","","","","","","","","","Create a new handle manager","Gets the raw view","Reference a buffer","Reference a DSV","Reference a fence","Reference a program","Reference a pipeline state object","Reference an RTV","Reference a sampler","Reference a shader","Reference a shader resource view","Reference a texture","Reference an unordered access view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The requested mapping access overlaps with another.","Error accessing a mapping.","The requested mapping access did not match the expected …","Mapping reader","Mapping writer. Currently is not possible to make …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Flags providing information about the type of memory …","Flags providing information about the usage of a resource.","Can serve as a depth/stencil target.","Full speed GPU access. Optimal for render targets and …","GPU to CPU data flow with mapping. Used for staging for …","CPU to GPU data flow with update commands. Used for …","A trait for plain-old-data types.","Read access","Can be rendered into.","Full access","Can be bound to the shader for reading.","Can be transfered into.","Can be transfered from.","Can be bound to the shader for writing.","CPU to GPU data flow with mapping. Used for staging for …","How this memory will be used regarding GPU-CPU data flow.","Write access","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","Cast a slice from one POD type to another.","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is this memory bound to be mutated ?","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Array of buffer handles with offsets in them","","","","","","","","","","","","","PSO vertex attribute descriptor","Index of a vertex buffer.","An offset inside a vertex buffer, in bytes.","Color output configuration of the PSO.","PSO color target descriptor","PSO constant buffer descriptor","A constant buffer run-time parameter for PSO.","Error types happening upon PSO creation on the device side.","PSO depth-stencil target descriptor","Depth and stencil state of the PSO.","All the information surrounding a shader program that is …","Offset of an attribute from the start of the buffer, in …","Offset between attribute values, in bytes","A struct element descriptor.","The number of instances between each subsequent attribute …","Maximum number of vertex buffers used in a PSO definition.","A complete set of render targets to be used for pixel …","PSO shader resource view descriptor","A shader resource view (SRV) run-time parameter for PSO.","PSO sampler descriptor","A sampler run-time parameter for PSO.","PSO unordered access view descriptor","An unordered access view (UAV) run-time parameter for PSO.","Vertex buffer descriptor","A complete set of vertex buffers to be used for vertex …","Add a color view to the specified slot","Add a depth or stencil view to the specified slot","Optional alpha blending","Vertex attributes","Optional stencil test on the back faces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional color blending","Render target views (RTV)","Array of color target views","Constant buffers","Optional depth test configuration","Depth target view","Depth stencil view (DSV)","","Rendering dimensions","","","","","","","","","","","","","","","","","","","","","","","","","","Element format","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Optional stencil test on the front faces","Get the rendering view (returns values &gt; 0)","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Color channel mask","","","","","","","","","","","","Create a new empty PSO descriptor.","Create an empty set","Create an empty set","Offset from the beginning of the container, in bytes","Type of the primitive","Rasterizer setup","Rate of the input for the given buffer","Shader resource views","Samplers","Enable scissor test","Stencil target view","Total container size, in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unordered access views","Vertex buffers","","","","Vertex information that a shader takes as input.","Base type of this shader parameter.","A trait that statically links simple data types to base …","","Sample from a buffer.","","","Error type for trying to store a UniformValue in a …","The shader failed to compile.","Format of a shader constant.","A constant in the shader - a bit of data that doesn’t …","A constant buffer.","Number of components this parameter represents.","An error type for creating programs.","An error type for creating shaders.","Sample from a cubemap.","Sample from a 1D texture","Sample from a 2D texture","Sample from a 3D texture","Used by the pixel shader","Number of components in a container type (vectors/matrices)","","Array sizes differ between the value and the var (trying …","Base types differ between the value and the var (trying to …","Container-ness differs between the value and the var …","","","","","","","","","","A trait that statically links simple data types to …","Used by the geometry shader","","Used by the hull shader","","","","","","","Whether the sampler samples an array texture.","Whether the sampler compares the depth value upon sampling.","Whether the sampler samples a multisample texture.","Whether the sampler samples a rectangle texture.","Location of a parameter in the program.","A matrix.","Whether the matrix is column or row major.","The device does not support the requested shader model.","","","","","","Target output variable.","Used by the pixel shader","","A program","Metadata about a program.","","","A constant static array of all shader stages.","A type of the sampler variable.","Sampler shader parameter.","Scalar value","Which program stage this shader represents.","The device does not support the shader stage.","A type of the texture variable. This has to match the …","Texture shader parameter.","","","","","","A value that can be uploaded to the device as a uniform.","Unordered access shader parameter.","Parameter usage flags.","Used by the vertex shader","A vector with <code>Dimension</code> components.","","Returns the set containing all flags.","Type that this attribute is composed of.","Type that this constant is composed of","Base type for the texture.","Type of the output component.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this texture can be used with a sampler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Constant buffers in the program","“Scalarness” of this attribute.","“Scalarness” of this constant.","“Scalarness” of this output.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Number of elements this constant represents.","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","List of individual elements in this buffer.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Get the associated constant format.","Get program info","Global constants in the program","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Whether a value is compatible with this variable. That is, …","Returns <code>true</code> if no flags are currently stored.","A hacky flag to make sure the clients know we are unable …","Location of this constant in the program. For constant …","Name of this attribute.","Name of this constant.","Name of this constant buffer.","Name of this texture variable.","Name of this unordered variable.","Name of this sampler variable.","Name of this output variable.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","A flag indicating that the pixel shader manually assigns …","Output targets in the program","","","Removes the specified flags in-place.","Samplers in the program","Inserts or removes the specified flags depending on the …","Size (in bytes) of this buffer’s data.","Slot of the vertex attribute.","Slot of the constant buffer.","Slot of this texture variable.","Slot of this unordered variable.","Slot of this sampler variable.","Output color target index.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Textures in the program","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of this texture.","Type of this sampler.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unordered access resources in the program","What program stage this buffer is used in.","What program stage this texture is used in.","What program stage this UAV is used in.","What program stage this texture is used in.","Attributes in the program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds source and destination. Source and destination are …","<code>true</code>","","","","","","Clockwise winding order.","The state of an active color render target","","A pixel-wise comparison function.","","","Counter-clockwise winding order.","Which face, if any, to cull.","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to the …","Depth test state.","","","<code>x == y</code>","","","Rasterize as a face.","","The front face winding order of a set of vertices.","","<code>x &gt; y</code>","<code>x &gt;= y</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Bitwise invert the current value in the stencil buffer.","Keep the current value in the stencil buffer (no change).","<code>x &lt; y</code>","<code>x &lt;= y</code>","Rasterize as a line with the given width.","Width of a line. Could be f32 if not for Hash deriving …","Component-wise maximum value of source and destination. …","Component-wise minimum value of source and destination. …","Multi-sampling rasterization mode","<code>false</code>","<code>x != y</code>","","How to offset vertices in screen space, if at all.","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","","","Rasterize as a point.","","How to rasterize a primitive.","Primitive rasterization state. Note that GL allows …","The complete set of the rasterizer reference values. …","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Subtracts source from destination. Source and destination …","","","","Complete stencil state, specifying how to handle the front …","Stencil mask operation.","Complete stencil state for a given side of a face.","Subtracts destination from source. Source and destination …","Set the value in the stencil buffer to zero.","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Optional blending.","Constant blend color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Which face should be culled.","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Which vertex winding is considered to be the front face …","Comparison function to use to determine if the stencil …","Comparison function to use.","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Color mask to use.","A mask that is ANDd with both the stencil buffer value and …","A mask that is ANDd with the stencil value before writing …","How to rasterize this primitive.","","","","","","","","","","","","","Create a new stencil state with a given function.","Create a new blend state with a given equation.","Create a new filling rasterizer.","Returns the complement of this set of flags.","Any polygon offset to apply.","What operation to do if the stenil test passes but the …","What operation to do if the stencil test fails.","What operation to do if both the depth and stencil test …","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Multi-sampling mode.","Inserts or removes the specified flags depending on the …","","Stencil front and back values.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Add back face culling.","Add polygon offset.","Specify whether to write to the depth buffer or not.","","","","A color with floating-point components.","A single depth value from a depth buffer.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","Mirroring flags, used for blitting","A screen space rectangle","A single value from a stencil stencstencil buffer.","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Describes the configuration of samples inside each texel.","The mipmap data is not provided, but the memory for it …","Anisotropic filtering with a given “max”, must be …","Sample multiple texels within a single mipmap level to …","Number of bits per component","Use border color.","A constant array of cube faces in the order they map to …","Clamp the texture to the value at <code>0.0</code> or <code>1.0</code> respectively.","Coverage Sampling Anti-Aliasing (CSAA/EQAA)","Pure texture object creation error.","A set of 6 2D textures, one for each face of a cube.","An array of Cube textures.","The face of a cube texture to do an operation on.","A single row of texels.","An array of rows of texels. Equivalent to Texture2D except …","A traditional 2D texture, with rows arranged contiguously.","An array of 2D textures. Equivalent to Texture3D except …","A volume texture, with each 2D layer arranged contiguously.","The given data has a different size than the target …","Texture depth-stencil view descriptor.","Depth-stencil read-only flags","Dimensions: width, height, depth, and samples.","How to filter the texture when sampling. They correspond …","Failed to map a given format to the device.","Describes a subvolume of a texture, which image data can …","Texture storage descriptor.","Specifies the kind of a texture storage to be allocated.","The kind doesn’t support a particular operation.","A depth value, specifying which plane to select out of a …","An error associated with selected texture layer.","Mipmap level to select in a texture.","The requested mipmap level count does not match the …","A wrapper for the LOD level of a texture.","Maximum accessible mipmap level of a texture.","The marker for the texture initializer to generate extra …","The requested mipmap creation parameter is unsupported.","Add simple mipmapping.","Mirror the texture. Like tile, but uses abs(coord) before …","MultiSampled Anti-Aliasing (MSAA)","","","","New image info based on the universal format spec. The …","The source texture kind doesn’t support array slices.","Number of EQAA fragments","Number of MSAA samples","Selected layer is outside of the provided range.","A wrapper for the 8bpp RGBA color, encoded as u32.","","","","The mipmap data is provided as a part of bitmap data.","Depth is read-only in the view.","Both depth and stencil are read-only.","Stencil is read-only in the view.","Untyped texture","New raw image info based on the universal format spec.","Texture render view descriptor.","Texture resource view descriptor.","Specifies how to sample from a texture.","Failed to map a given multisampled kind to the device.","The dumbest filtering possible, nearest-neighbor …","No additional sample information","Dimension size","Unsupported size in one of the dimensions.","A texture region defined for copy operations","Tile the texture. That is, sample the coordinate modulo <code>1.0</code>…","Sample multiple texels across two mipmap levels to …","The mentioned usage mode is not supported","Specifies how texture coordinates outside the range <code>[0, 1]</code> …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Border color is used when one of the wrap modes is set to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison mode, used primary for a shadow map.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Convert into a differently typed format.","Optional cube face","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Filter method to use.","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of each texel.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the total number of bytes.","Get the total number of bytes.","Get texture dimensions, with 0 values where not applicable.","Get texture descriptor","Get the dimensionality of a particular mipmap level.","Return the number of actual data fragments stored per …","Count the number of mipmap levels.","Return the number of slices for an array, or None for …","Get the total number of texels.","","","","","","","","","","","","","","","","","","","","Dimensions, offsets, and format","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Check if it’s one of the cube kinds.","Returns <code>true</code> if no flags are currently stored.","Check if it fits inside given dimensions.","Texture kind","","","","","","","","This bias is added to every computed mipmap level (N + …","This range is used to clamp LOD level used for sampling.","","","Which mipmap to select.","","","","","","","","","","","","","","","","Return true if the surface has to be resolved before …","Create a new sampler description with a given filter …","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","Raw texture","Get image info for a given mip.","","","","","","","","","","","","","","","","","","","Get the raw image info for a given mip and a channel type.","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Change the texture","Wrapping mode for each of the U, V, and W axis (S, T, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,2,0,0,3,0,4,5,0,2,0,4,0,0,2,0,6,0,0,0,0,7,7,7,7,0,0,0,0,0,0,2,7,0,2,0,7,0,2,0,4,2,0,0,3,2,0,2,2,0,6,0,0,0,8,0,5,6,6,2,7,7,7,7,9,9,2,0,0,0,5,10,11,12,13,14,15,6,16,7,9,1,17,18,11,12,13,14,15,6,16,7,9,1,17,18,0,5,3,11,12,13,14,15,6,16,7,9,1,17,18,11,12,13,14,15,6,16,7,9,1,17,18,9,0,16,16,1,17,0,4,11,12,13,14,15,6,16,7,9,1,17,0,3,11,12,13,14,15,6,16,7,9,1,1,17,18,0,11,12,13,14,15,6,16,7,9,1,17,18,5,3,4,4,6,0,11,12,13,14,15,6,7,9,16,16,16,11,12,13,14,15,6,16,7,9,1,17,18,0,16,16,16,16,0,17,11,12,13,14,15,6,16,7,17,8,4,9,3,10,0,11,12,13,14,15,16,0,17,16,0,3,8,0,0,11,12,13,14,15,6,16,7,9,1,17,18,1,11,12,13,14,15,6,16,7,9,1,17,18,11,12,13,14,15,6,16,7,9,1,17,18,11,12,13,14,15,6,16,7,9,1,17,18,16,17,16,3,19,20,21,22,23,20,21,22,23,21,22,23,22,23,23,24,0,24,0,25,0,0,24,25,25,24,26,27,24,26,25,27,24,26,25,24,26,25,24,26,25,25,27,24,26,25,27,24,26,25,25,27,24,26,25,27,27,24,26,25,27,24,26,25,27,26,25,26,26,26,24,26,25,25,27,24,26,25,27,24,26,25,27,24,26,25,26,28,29,0,0,0,0,0,0,0,30,0,30,30,31,31,31,32,32,32,32,32,32,32,32,32,30,33,31,34,35,30,33,31,34,35,33,33,32,32,33,32,32,30,33,30,33,32,32,32,32,31,31,30,33,30,33,31,34,35,30,30,30,30,30,30,30,30,30,30,30,30,30,33,31,34,35,32,33,33,30,33,31,34,35,34,35,33,33,30,33,33,34,35,30,32,32,32,33,30,33,30,33,31,34,35,30,33,31,34,35,30,33,31,34,35,32,32,36,37,38,0,0,0,0,0,39,39,39,39,39,39,39,39,39,40,39,41,42,43,40,39,41,42,43,39,39,40,39,39,41,42,43,41,42,43,39,39,39,39,41,42,43,40,41,42,43,40,39,41,42,43,39,40,41,42,43,40,39,41,42,43,40,40,39,39,39,40,41,42,43,40,39,41,42,43,40,39,41,42,43,40,39,41,42,43,39,39,40,44,45,0,0,44,45,45,44,45,45,46,0,46,0,46,44,45,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,44,45,46,44,45,46,44,44,45,45,46,46,44,45,46,46,46,46,47,44,45,46,44,45,46,47,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,56,57,56,56,0,63,0,63,0,63,0,0,0,0,0,64,0,0,0,0,63,0,63,0,63,0,63,65,0,0,0,0,0,0,0,0,66,0,0,0,0,0,66,0,66,67,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,0,0,0,0,0,0,68,0,66,0,0,0,64,0,0,0,0,0,0,0,0,0,66,0,66,0,0,0,0,64,67,67,67,67,67,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,58,59,59,60,60,61,61,62,62,63,68,69,70,71,72,73,74,64,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,63,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,56,57,58,59,60,61,62,56,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,66,69,70,71,72,73,74,63,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,67,56,57,58,59,60,61,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,105,107,109,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,103,104,112,113,99,100,114,112,113,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,105,106,107,108,109,110,111,112,113,114,115,116,101,116,116,116,116,116,116,116,116,116,116,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,0,117,0,0,117,118,119,117,118,119,117,117,118,119,119,117,117,117,117,118,119,117,118,119,117,117,118,119,117,117,117,117,118,119,117,118,119,117,118,119,120,120,0,0,121,122,122,122,0,123,121,123,121,121,121,121,122,0,123,123,121,123,121,123,121,123,121,123,121,123,121,123,121,123,121,122,123,121,122,123,121,0,122,123,121,122,123,121,122,123,121,123,121,123,121,123,121,123,121,122,123,121,123,121,122,123,123,123,123,123,121,121,121,121,121,122,123,121,123,121,123,121,123,121,123,121,122,123,121,123,121,123,121,123,121,122,123,121,123,121,123,121,121,123,121,123,121,122,123,121,123,121,123,121,123,121,123,121,123,121,122,123,121,123,121,122,123,121,122,123,121,122,123,121,123,121,124,125,126,127,128,125,126,127,128,125,126,127,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,129,130,131,132,133,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,130,131,129,131,132,129,131,133,129,133,130,132,134,135,131,124,125,126,127,128,129,133,133,130,132,134,135,131,124,125,126,127,128,129,134,133,130,130,130,132,132,132,132,134,135,131,124,125,126,127,128,129,132,129,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,130,130,132,134,135,131,124,125,126,127,128,129,131,124,129,134,131,131,135,131,131,131,129,135,133,130,132,134,135,131,124,125,126,127,128,129,133,133,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,133,130,132,134,135,131,124,125,126,127,128,129,131,131,136,136,137,0,0,0,138,139,140,141,0,142,0,0,0,0,0,0,139,139,139,139,143,0,144,145,145,145,138,146,146,146,146,146,146,146,138,0,143,144,143,144,138,146,146,146,146,0,0,0,0,0,147,0,142,148,137,141,148,149,0,143,144,0,0,149,140,0,0,0,147,0,142,0,0,138,146,146,146,146,0,0,0,143,147,144,143,150,151,152,153,143,143,143,143,143,143,143,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,139,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,145,142,159,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,145,142,159,143,143,157,150,151,153,143,151,145,142,159,143,154,143,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,143,137,141,148,149,140,139,136,138,147,144,146,143,143,143,143,143,150,151,154,152,155,156,153,157,158,145,145,142,142,159,159,137,141,148,149,140,139,136,138,147,144,146,143,143,150,151,154,152,155,156,153,157,158,145,142,159,159,143,143,143,143,160,161,158,157,137,141,148,149,140,139,136,138,147,144,143,150,151,154,152,155,156,153,157,158,143,143,143,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,143,151,143,157,151,150,151,154,152,155,156,153,139,136,147,146,143,150,151,154,152,155,156,153,157,142,159,143,157,157,146,143,143,157,143,154,150,154,152,155,156,153,143,143,143,157,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,145,142,159,145,142,159,143,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,152,156,137,141,148,149,140,139,136,138,147,144,146,143,150,151,154,152,155,156,153,157,158,145,142,159,143,157,154,152,155,156,157,162,163,163,163,164,165,166,167,168,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,184,185,186,187,185,188,0,0,0,189,0,0,0,190,190,189,0,191,191,0,190,190,187,0,0,192,188,0,185,187,187,191,191,191,191,187,187,192,0,186,186,0,187,187,188,0,0,0,193,193,192,185,0,0,0,191,186,190,193,190,0,0,0,186,191,193,193,185,194,195,185,185,185,185,185,185,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,188,198,187,191,200,195,201,186,190,193,202,185,194,185,185,199,200,195,201,202,194,196,197,202,185,185,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,202,185,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,185,185,185,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,185,185,185,185,195,199,200,201,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,185,185,185,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,185,185,196,200,200,199,184,192,199,200,195,201,193,202,194,185,196,197,195,194,199,185,199,200,200,200,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,185,199,185,202,197,185,185,185,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,185,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,189,184,188,192,198,199,187,191,200,195,201,186,190,193,202,194,185,196,197,185,199,199,201,203,204,205,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,207,206,207,206,207,206,207,206,206,206,206,206,206,207,206,206,207,206,206,206,206,206,207,206,206,206,206,206,207,207,206,206,206,206,207,206,206,206,207,206,206,207,206,206,206,206,206,206,207,206,206,207,206,207,206,207,206,206,207,207,207,208,0,209,210,210,0,211,0,211,212,0,213,213,0,213,213,213,213,213,214,0,0,0,0,214,0,0,0,214,0,0,0,214,0,0,0,214,210,211,212,215,215,215,0,216,0,0,216,0,215,215,215,209,217,217,217,0,0,0,0,0,214,210,212,0,214,0,211,210,214,0,217,218,217,217,217,217,217,217,217,219,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,224,225,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,212,210,215,213,209,221,222,211,218,224,225,217,226,219,217,217,221,222,221,214,216,217,217,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,217,219,226,220,214,214,216,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,217,217,217,217,226,221,218,220,214,216,212,212,210,215,213,209,221,222,211,223,223,208,208,219,218,224,225,217,226,226,217,217,217,217,227,221,213,220,213,212,213,213,221,220,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,221,222,217,217,217,220,214,216,212,210,215,213,209,221,222,211,223,223,208,208,219,218,224,225,217,226,217,213,217,221,222,218,224,225,226,225,226,218,219,219,224,224,221,214,216,212,210,213,221,222,223,208,219,218,224,225,217,226,212,219,217,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,217,217,217,217,224,217,222,218,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,218,214,216,217,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,220,214,216,212,210,215,213,209,221,222,211,223,208,219,218,224,225,217,226,217,218,221,222,219,221,221,221,228,229,229,230,231,232,233,234,235,230,236,237,238,239,240,241,242,243,238,239,240,241,243,239,240,241,240,244,245,245],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["frame",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]]],[[["",0]]],[[["vertexshader",3,[["",26,[["clone",8],["resources",8]]]]]],["vertexshader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["hullshader",3,[["",26,[["clone",8],["resources",8]]]]]],["hullshader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["domainshader",3,[["",26,[["clone",8],["resources",8]]]]]],["domainshader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["geometryshader",3,[["",26,[["clone",8],["resources",8]]]]]],["geometryshader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["pixelshader",3,[["",26,[["clone",8],["resources",8]]]]]],["pixelshader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["shaderset",4,[["",26,[["clone",8],["resources",8]]]]]],["shaderset",4,[["",26,[["clone",8],["resources",8]]]]]],[[["capabilities",3]],["capabilities",3]],[[["primitive",4]],["primitive",4]],[[["indextype",4]],["indextype",4]],[[["submissionerror",4]],["submissionerror",4]],[[["adapterinfo",3]],["adapterinfo",3]],[[["frame",3]],["frame",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indextype",4],["indextype",4]],["ordering",4]],null,null,null,[[["submissionerror",4]],["str",0]],null,null,[[],["vec",3]],[[["vertexshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["vertexshader",3]],["bool",0]],[[["hullshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["hullshader",3]],["bool",0]],[[["domainshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["domainshader",3]],["bool",0]],[[["geometryshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["geometryshader",3]],["bool",0]],[[["pixelshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["pixelshader",3]],["bool",0]],[[["shaderset",4,[["",26,[["partialeq",8],["resources",8]]]]],["shaderset",4]],["bool",0]],[[["capabilities",3],["capabilities",3]],["bool",0]],[[["primitive",4],["primitive",4]],["bool",0]],[[["indextype",4],["indextype",4]],["bool",0]],[[["submissionerror",4],["submissionerror",4]],["bool",0]],[[["adapterinfo",3],["adapterinfo",3]],["bool",0]],null,[[["",0],["accessinfo",3],["option",4,[["fence",3]]]],["submissionresult",6,[["fence",3]]]],[[["vertexshader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["hullshader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["domainshader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["geometryshader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["pixelshader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["shaderset",4,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["capabilities",3],["formatter",3]],["result",6]],[[["primitive",4],["formatter",3]],["result",6]],[[["indextype",4],["formatter",3]],["result",6]],[[["submissionerror",4],["formatter",3]],["result",6]],[[["submissionerror",4],["formatter",3]],["result",6]],[[["adapterinfo",3],["formatter",3]],["result",6]],[[["frame",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["capabilities",3]],[[["",0]],["adapterinfo",3]],[[["",0]]],[[["shaderset",4,[["resources",8]]]],["usage",3]],null,[[["vertexshader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["hullshader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["domainshader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["geometryshader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["pixelshader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["shaderset",4,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["primitive",4],["",0]]],[[["indextype",4],["",0]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["vertexshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["vertexshader",3]],["bool",0]],[[["hullshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["hullshader",3]],["bool",0]],[[["domainshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["domainshader",3]],["bool",0]],[[["geometryshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["geometryshader",3]],["bool",0]],[[["pixelshader",3,[["",26,[["partialeq",8],["resources",8]]]]],["pixelshader",3]],["bool",0]],[[["shaderset",4,[["",26,[["partialeq",8],["resources",8]]]]],["shaderset",4]],["bool",0]],[[["capabilities",3],["capabilities",3]],["bool",0]],[[["primitive",4],["primitive",4]],["bool",0]],[[["adapterinfo",3],["adapterinfo",3]],["bool",0]],[[["",0]],["u32",0]],[[["",0]]],[[["indextype",4],["indextype",4]],["option",4,[["ordering",4]]]],[[["",0],["manager",3]]],[[["",0]]],null,[[["vertexshader",3,[["resources",8]]],["manager",3]]],[[["hullshader",3,[["resources",8]]],["manager",3]]],[[["domainshader",3,[["resources",8]]],["manager",3]]],[[["geometryshader",3,[["resources",8]]],["manager",3]]],[[["pixelshader",3,[["resources",8]]],["manager",3]]],null,null,null,null,null,[[["",0],["accessinfo",3]],["submissionresult",6]],[[["",0]],["bool",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0],["fence",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["role",4]],["role",4]],[[["info",3]],["info",3]],[[["creationerror",4]],["creationerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["creationerror",4]],["str",0]],[[["raw",3,[["",26,[["resources",8],["partialeq",8]]]]],["raw",3,[["",26,[["resources",8],["partialeq",8]]]]]],["bool",0]],[[["role",4],["role",4]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],[[["raw",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["role",4],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["creationerror",4],["formatter",3]],["result",6]],[[["creationerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["raw",3,[["resources",8]]]],["info",3]],[[["raw",3,[["",26,[["resources",8],["hash",8]]]]],["",0]]],[[["role",4],["",0]]],[[["info",3],["",0]]],[[["creationerror",4],["",0]]],[[]],[[]],[[]],[[]],[[["raw",3,[["resources",8]]]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["accessguard",3,[["resources",8]]]],["accessguardbufferschain",3,[["resources",8]]]],[[["accessguard",3,[["resources",8]]]],["accessguardbuffers",3,[["resources",8]]]],[[["accessguard",3,[["resources",8]]]],["accessguardbuffers",3,[["resources",8]]]],[[["",0]]],[[["",0],["location",6],["uniformvalue",4]]],[[["",0],["indextype",4]]],[[["",0]]],[[["",0],["pixeltargetset",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["vertexbufferset",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["accessinfo",3,[["resources",8]]],["rawbuffer",3]]],[[["accessinfo",3,[["resources",8]]],["rawbuffer",3]]],[[["",0],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["",0],["vertexcount",6],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["accessinfo",3,[["resources",8]]]]],[[["",0],["clearcolor",4]]],[[["",0],["option",4,[["depth",6]]],["option",4,[["stencil",6]]]]],[[["clearcolor",4]],["clearcolor",4]],[[["accessinfo",3,[["",26,[["clone",8],["resources",8]]]]]],["accessinfo",3,[["",26,[["clone",8],["resources",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["usize",0],["usize",0],["usize",0]]],[[["",0],["usize",0],["texturecopyregion",3]]],[[["",0],["texturecopyregion",3],["usize",0]]],[[["",0],["texturecopyregion",3],["texturecopyregion",3]]],[[["accessguard",3,[["resources",8]]]]],[[["accessguard",3,[["resources",8]]]]],[[["clearcolor",4],["clearcolor",4]],["bool",0]],[[["accessinfo",3,[["",26,[["partialeq",8],["resources",8]]]]],["accessinfo",3]],["bool",0]],[[["clearcolor",4],["formatter",3]],["result",6]],[[["accessinfo",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["accessguard",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["accessguardbuffers",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["accessguardbufferschain",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[["f32",0]],["clearcolor",4]],[[["i32",0]],["clearcolor",4]],[[["u32",0]],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[]],[[]],[[]],[[]],[[["",0]]],[[["accessinfo",3,[["resources",8]]]],["bool",0]],[[["accessinfo",3,[["resources",8]]]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["accessinfo",3,[["resources",8]]]],["accessinfobuffers",6,[["resources",8]]]],[[["accessinfo",3,[["resources",8]]]],["accessinfobuffers",6,[["resources",8]]]],[[["clearcolor",4],["clearcolor",4]],["bool",0]],[[["accessinfo",3,[["",26,[["partialeq",8],["resources",8]]]]],["accessinfo",3]],["bool",0]],[[],["accessinfo",3,[["resources",8]]]],[[["accessguardbuffers",3,[["resources",8]]]],["option",4]],[[["accessguardbufferschain",3,[["resources",8]]]],["option",4]],[[["clearcolor",4],["clearcolor",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0],["refvalues",3]]],[[["",0],["rect",3]]],[[["accessinfo",3,[["resources",8]]]],["submissionresult",6,[["accessguard",3,[["resources",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["usize",0]]],[[["",0],["texturecopyregion",3]]],null,null,null,null,null,null,null,null,[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3],["location",6],["uniformvalue",4]]],[[["dummycommandbuffer",3],["indextype",4]]],[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3],["pixeltargetset",3,[["dummyresources",4]]]]],[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3],["vertexbufferset",3,[["dummyresources",4]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dummycommandbuffer",3],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["dummycommandbuffer",3],["vertexcount",6],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["dummydevice",3]]],[[["dummycommandbuffer",3],["clearcolor",4]]],[[["dummycommandbuffer",3],["option",4,[["depth",6]]],["option",4,[["stencil",6]]]]],[[["dummyresources",4]],["dummyresources",4]],[[["dummyfence",3]],["dummyfence",3]],[[["dummymapping",3]],["dummymapping",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["dummycommandbuffer",3],["usize",0],["usize",0],["usize",0]]],[[["dummycommandbuffer",3],["usize",0],["texturecopyregion",3]]],[[["dummycommandbuffer",3],["texturecopyregion",3],["usize",0]]],[[["dummycommandbuffer",3],["texturecopyregion",3],["texturecopyregion",3]]],[[["dummyresources",4],["dummyresources",4]],["bool",0]],[[["dummyfence",3],["dummyfence",3]],["bool",0]],[[["dummymapping",3],["dummymapping",3]],["bool",0]],[[["dummydevice",3],["accessinfo",3],["option",4,[["fence",3]]]],["submissionresult",6,[["fence",3]]]],[[["dummyresources",4],["formatter",3]],["result",6]],[[["dummyfence",3],["formatter",3]],["result",6]],[[["dummymapping",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["dummycommandbuffer",3]]],[[["dummydevice",3]],["capabilities",3]],[[["dummyresources",4],["",0]]],[[["dummyfence",3],["",0]]],[[["dummymapping",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[],["dummydevice",3]],[[["dummydevice",3],["manager",3]]],[[["dummycommandbuffer",3]]],[[["dummycommandbuffer",3],["refvalues",3]]],[[["dummycommandbuffer",3],["rect",3]]],[[["dummydevice",3],["dummycommandbuffer",3],["accessinfo",3]],["submissionresult",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["dummycommandbuffer",3],["usize",0]]],[[["dummycommandbuffer",3],["texturecopyregion",3]]],[[["dummydevice",3],["fence",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["resourceviewerror",4]],["option",4,[["error",8]]]],[[["targetviewerror",4]],["option",4,[["error",8]]]],[[["combinederror",4]],["option",4,[["error",8]]]],[[["resourceviewerror",4]],["resourceviewerror",4]],[[["targetviewerror",4]],["targetviewerror",4]],[[["combinederror",4]],["combinederror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["usize",0],["role",4],["usage",4],["bind",3]],["result",4,[["buffer",3],["creationerror",4]]]],[[["",0],["role",4],["bind",3]],["result",4,[["buffer",3,[["pod",8]]],["creationerror",4]]]],[[["",0],["usize",0],["role",4],["bind",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["info",3]],["result",4,[["rawbuffer",3],["creationerror",4]]]],[[["",0],["size",6],["size",6]],["result",4,[["combinederror",4]]]],[[["",0],["size",6],["size",6]],["result",4,[["depthstencilview",3,[["",26,[["depthformat",8],["textureformat",8]]]]],["combinederror",4]]]],[[["",0],["program",3],["descriptor",3]],["result",4,[["rawpipelinestate",3],["creationerror",3]]]],[[["",0],["shaderset",4]],["result",4,[["program",3],["createprogramerror",3]]]],[[["",0],["size",6],["size",6]],["result",4,[["combinederror",4]]]],[[["",0],["samplerinfo",3]],["sampler",3]],[[["",0],["stage",4]],["result",4,[["shader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["domainshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["geometryshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["hullshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["pixelshader",3],["createshadererror",4]]]],[[["",0]],["result",4,[["vertexshader",3],["createshadererror",4]]]],[[["",0],["kind",4],["level",6],["bind",3],["usage",4],["option",4,[["channeltype",4]]]],["result",4,[["texture",3],["creationerror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["kind",4],["mipmap",4]],["result",4,[["combinederror",4]]]],[[["",0],["info",3],["option",4,[["channeltype",4]]],["option",4]],["result",4,[["rawtexture",3],["creationerror",4]]]],[[["resourceviewerror",4]],["str",0]],[[["targetviewerror",4]],["str",0]],[[["combinederror",4]],["str",0]],[[["resourceviewerror",4],["resourceviewerror",4]],["bool",0]],[[["targetviewerror",4],["targetviewerror",4]],["bool",0]],[[["combinederror",4],["combinederror",4]],["bool",0]],[[["resourceviewerror",4],["formatter",3]],["result",6]],[[["resourceviewerror",4],["formatter",3]],["result",6]],[[["targetviewerror",4],["formatter",3]],["result",6]],[[["targetviewerror",4],["formatter",3]],["result",6]],[[["combinederror",4],["formatter",3]],["result",6]],[[["combinederror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["targetviewerror",4]],["combinederror",4]],[[["resourceviewerror",4]],["combinederror",4]],[[["creationerror",4]],["combinederror",4]],[[["",0]],["capabilities",3]],[[]],[[]],[[]],[[["resourceviewerror",4],["resourceviewerror",4]],["bool",0]],[[["targetviewerror",4],["targetviewerror",4]],["bool",0]],[[["combinederror",4],["combinederror",4]],["bool",0]],[[["",0],["buffer",3]],["result",4,[["reader",3],["error",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["buffer",3]],["result",4,[["shaderresourceview",3,[["formatted",8]]],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3],["format",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["buffer",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawbuffer",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["texture",3],["level",6],["option",4,[["layer",6]]],["depthstencilflags",3]],["result",4,[["depthstencilview",3,[["depthformat",8]]],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["depthstencildesc",3]],["result",4,[["rawdepthstencilview",3],["targetviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["depthstencilview",3,[["depthformat",8]]],["targetviewerror",4]]]],[[["",0],["texture",3],["level",6],["option",4,[["layer",6]]]],["result",4,[["rendertargetview",3,[["renderformat",8]]],["targetviewerror",4]]]],[[["",0],["rawtexture",3],["renderdesc",3]],["result",4,[["rawrendertargetview",3],["targetviewerror",4]]]],[[["",0],["texture",3],["swizzle",3]],["result",4,[["shaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3],["resourcedesc",3]],["result",4,[["rawshaderresourceview",3],["resourceviewerror",4]]]],[[["",0],["texture",3]],["result",4,[["unorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["rawtexture",3]],["result",4,[["rawunorderedaccessview",3],["resourceviewerror",4]]]],[[["",0],["buffer",3]],["result",4,[["writer",3],["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullchanneltype",4]],["channeltype",4]],[[["int",4]],["int",4]],[[["uint",4]],["uint",4]],[[["inorm",4]],["inorm",4]],[[["unorm",4]],["unorm",4]],[[["float",4]],["float",4]],[[["srgb",4]],["srgb",4]],[[["surfacetype",4]],["surfacetype",4]],[[["r4_g4",4]],["r4_g4",4]],[[["r4_g4_b4_a4",4]],["r4_g4_b4_a4",4]],[[["r5_g5_b5_a1",4]],["r5_g5_b5_a1",4]],[[["r5_g6_b5",4]],["r5_g6_b5",4]],[[["r8",4]],["r8",4]],[[["r8_g8",4]],["r8_g8",4]],[[["r8_g8_b8_a8",4]],["r8_g8_b8_a8",4]],[[["r10_g10_b10_a2",4]],["r10_g10_b10_a2",4]],[[["r11_g11_b10",4]],["r11_g11_b10",4]],[[["r16",4]],["r16",4]],[[["r16_g16",4]],["r16_g16",4]],[[["r16_g16_b16",4]],["r16_g16_b16",4]],[[["r16_g16_b16_a16",4]],["r16_g16_b16_a16",4]],[[["r32",4]],["r32",4]],[[["r32_g32",4]],["r32_g32",4]],[[["r32_g32_b32",4]],["r32_g32_b32",4]],[[["r32_g32_b32_a32",4]],["r32_g32_b32_a32",4]],[[["b8_g8_r8_a8",4]],["b8_g8_r8_a8",4]],[[["d16",4]],["d16",4]],[[["d24",4]],["d24",4]],[[["d24_s8",4]],["d24_s8",4]],[[["d32",4]],["d32",4]],[[["bc1_r8_g8_b8",4]],["bc1_r8_g8_b8",4]],[[["bc3_r8_g8_b8_a8",4]],["bc3_r8_g8_b8_a8",4]],[[["channelsource",4]],["channelsource",4]],[[["swizzle",3]],["swizzle",3]],[[["format",3]],["format",3]],[[["u8norm",3]],["u8norm",3]],[[["i8norm",3]],["i8norm",3]],[[["u16norm",3]],["u16norm",3]],[[["i16norm",3]],["i16norm",3]],[[["f16",3]],["fchanneltype",4],["channeltype",4]],["ordering",4]],[[["int",4],["int",4]],["ordering",4]],[[["uint",4],["uint",4]],["ordering",4]],[[["inorm",4],["inorm",4]],["ordering",4]],[[["unorm",4],["unorm",4]],["ordering",4]],[[["float",4],["float",4]],["ordering",4]],[[["srgb",4],["srgb",4]],["ordering",4]],[[["surfacetype",4],["surfacetype",4]],["ordering",4]],[[["r4_g4",4],["r4_g4",4]],["ordering",4]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["ordering",4]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["ordering",4]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["ordering",4]],[[["r8",4],["r8",4]],["ordering",4]],[[["r8_g8",4],["r8_g8",4]],["ordering",4]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["ordering",4]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["ordering",4]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["ordering",4]],[[["r16",4],["r16",4]],["ordering",4]],[[["r16_g16",4],["r16_g16",4]],["ordering",4]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["ordering",4]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["ordering",4]],[[["r32",4],["r32",4]],["ordering",4]],[[["r32_g32",4],["r32_g32",4]],["ordering",4]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["ordering",4]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["ordering",4]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["ordering",4]],[[["d16",4],["d16",4]],["ordering",4]],[[["d24",4],["d24",4]],["ordering",4]],[[["d24_s8",4],["d24_s8",4]],["ordering",4]],[[["d32",4],["d32",4]],["ordering",4]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["ordering",4]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["ordering",4]],[[["channelsource",4],["channelsource",4]],["ordering",4]],[[["swizzle",3],["swizzle",3]],["ordering",4]],[[["format",3],["format",3]],["ordering",4]],[[["u8norm",3],["u8norm",3]],["ordering",4]],[[["i8norm",3],["i8norm",3]],["ordering",4]],[[["u16norm",3],["u16norm",3]],["ordering",4]],[[["i16norm",3],["i16norm",3]],["ordering",4]],[[["f16",3],["f16",3]],["ordering",4]],[[["channeltype",4],["channeltype",4]],["bool",0]],[[["int",4],["int",4]],["bool",0]],[[["uint",4],["uint",4]],["bool",0]],[[["inorm",4],["inorm",4]],["bool",0]],[[["unorm",4],["unorm",4]],["bool",0]],[[["float",4],["float",4]],["bool",0]],[[["srgb",4],["srgb",4]],["bool",0]],[[["surfacetype",4],["surfacetype",4]],["bool",0]],[[["r4_g4",4],["r4_g4",4]],["bool",0]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["bool",0]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["bool",0]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["bool",0]],[[["r8",4],["r8",4]],["bool",0]],[[["r8_g8",4],["r8_g8",4]],["bool",0]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["bool",0]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["bool",0]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["bool",0]],[[["r16",4],["r16",4]],["bool",0]],[[["r16_g16",4],["r16_g16",4]],["bool",0]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["bool",0]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["bool",0]],[[["r32",4],["r32",4]],["bool",0]],[[["r32_g32",4],["r32_g32",4]],["bool",0]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["bool",0]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["bool",0]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["bool",0]],[[["d16",4],["d16",4]],["bool",0]],[[["d24",4],["d24",4]],["bool",0]],[[["d24_s8",4],["d24_s8",4]],["bool",0]],[[["d32",4],["d32",4]],["bool",0]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["bool",0]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["bool",0]],[[["channelsource",4],["channelsource",4]],["bool",0]],[[["swizzle",3],["swizzle",3]],["bool",0]],[[["format",3],["format",3]],["bool",0]],[[["u8norm",3],["u8norm",3]],["bool",0]],[[["i8norm",3],["i8norm",3]],["bool",0]],[[["u16norm",3],["u16norm",3]],["bool",0]],[[["i16norm",3],["i16norm",3]],["bool",0]],[[["f16",3],["f16",3]],["bool",0]],[[["channeltype",4],["formatter",3]],["result",6]],[[["int",4],["formatter",3]],["result",6]],[[["uint",4],["formatter",3]],["result",6]],[[["inorm",4],["formatter",3]],["result",6]],[[["unorm",4],["formatter",3]],["result",6]],[[["float",4],["formatter",3]],["result",6]],[[["srgb",4],["formatter",3]],["result",6]],[[["surfacetype",4],["formatter",3]],["result",6]],[[["r4_g4",4],["formatter",3]],["result",6]],[[["r4_g4_b4_a4",4],["formatter",3]],["result",6]],[[["r5_g5_b5_a1",4],["formatter",3]],["result",6]],[[["r5_g6_b5",4],["formatter",3]],["result",6]],[[["r8",4],["formatter",3]],["result",6]],[[["r8_g8",4],["formatter",3]],["result",6]],[[["r8_g8_b8_a8",4],["formatter",3]],["result",6]],[[["r10_g10_b10_a2",4],["formatter",3]],["result",6]],[[["r11_g11_b10",4],["formatter",3]],["result",6]],[[["r16",4],["formatter",3]],["result",6]],[[["r16_g16",4],["formatter",3]],["result",6]],[[["r16_g16_b16",4],["formatter",3]],["result",6]],[[["r16_g16_b16_a16",4],["formatter",3]],["result",6]],[[["r32",4],["formatter",3]],["result",6]],[[["r32_g32",4],["formatter",3]],["result",6]],[[["r32_g32_b32",4],["formatter",3]],["result",6]],[[["r32_g32_b32_a32",4],["formatter",3]],["result",6]],[[["b8_g8_r8_a8",4],["formatter",3]],["result",6]],[[["d16",4],["formatter",3]],["result",6]],[[["d24",4],["formatter",3]],["result",6]],[[["d24_s8",4],["formatter",3]],["result",6]],[[["d32",4],["formatter",3]],["result",6]],[[["bc1_r8_g8_b8",4],["formatter",3]],["result",6]],[[["bc3_r8_g8_b8_a8",4],["formatter",3]],["result",6]],[[["channelsource",4],["formatter",3]],["result",6]],[[["swizzle",3],["formatter",3]],["result",6]],[[["format",3],["formatter",3]],["result",6]],[[["u8norm",3],["formatter",3]],["result",6]],[[["i8norm",3],["formatter",3]],["result",6]],[[["u16norm",3],["formatter",3]],["result",6]],[[["i16norm",3],["formatter",3]],["result",6]],[[["f16",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["u8norm",3]],[[]],[[]],[[["i8",0]],["i8norm",3]],[[]],[[["u16",0]],["u16norm",3]],[[["i16",0]],["i16norm",3]],[[]],[[]],[[["u16",0]],["f16",3]],[[["surfacetype",4]],["u8",0]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["format",3]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[["surfacetype",4]],["u8",0]],[[["channeltype",4],["",0]]],[[["int",4],["",0]]],[[["uint",4],["",0]]],[[["inorm",4],["",0]]],[[["unorm",4],["",0]]],[[["float",4],["",0]]],[[["srgb",4],["",0]]],[[["surfacetype",4],["",0]]],[[["r4_g4",4],["",0]]],[[["r4_g4_b4_a4",4],["",0]]],[[["r5_g5_b5_a1",4],["",0]]],[[["r5_g6_b5",4],["",0]]],[[["r8",4],["",0]]],[[["r8_g8",4],["",0]]],[[["r8_g8_b8_a8",4],["",0]]],[[["r10_g10_b10_a2",4],["",0]]],[[["r11_g11_b10",4],["",0]]],[[["r16",4],["",0]]],[[["r16_g16",4],["",0]]],[[["r16_g16_b16",4],["",0]]],[[["r16_g16_b16_a16",4],["",0]]],[[["r32",4],["",0]]],[[["r32_g32",4],["",0]]],[[["r32_g32_b32",4],["",0]]],[[["r32_g32_b32_a32",4],["",0]]],[[["b8_g8_r8_a8",4],["",0]]],[[["d16",4],["",0]]],[[["d24",4],["",0]]],[[["d24_s8",4],["",0]]],[[["d32",4],["",0]]],[[["bc1_r8_g8_b8",4],["",0]]],[[["bc3_r8_g8_b8_a8",4],["",0]]],[[["channelsource",4],["",0]]],[[["swizzle",3],["",0]]],[[["format",3],["",0]]],[[["u8norm",3],["",0]]],[[["i8norm",3],["",0]]],[[["u16norm",3],["",0]]],[[["i16norm",3],["",0]]],[[["f16",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["swizzle",3],["swizzle",3]],["bool",0]],[[["format",3],["format",3]],["bool",0]],[[["u8norm",3],["u8norm",3]],["bool",0]],[[["i8norm",3],["i8norm",3]],["bool",0]],[[["u16norm",3],["u16norm",3]],["bool",0]],[[["i16norm",3],["i16norm",3]],["bool",0]],[[["f16",3],["f16",3]],["bool",0]],[[],["swizzle",3]],[[["channeltype",4],["channeltype",4]],["option",4,[["ordering",4]]]],[[["int",4],["int",4]],["option",4,[["ordering",4]]]],[[["uint",4],["uint",4]],["option",4,[["ordering",4]]]],[[["inorm",4],["inorm",4]],["option",4,[["ordering",4]]]],[[["unorm",4],["unorm",4]],["option",4,[["ordering",4]]]],[[["float",4],["float",4]],["option",4,[["ordering",4]]]],[[["srgb",4],["srgb",4]],["option",4,[["ordering",4]]]],[[["surfacetype",4],["surfacetype",4]],["option",4,[["ordering",4]]]],[[["r4_g4",4],["r4_g4",4]],["option",4,[["ordering",4]]]],[[["r4_g4_b4_a4",4],["r4_g4_b4_a4",4]],["option",4,[["ordering",4]]]],[[["r5_g5_b5_a1",4],["r5_g5_b5_a1",4]],["option",4,[["ordering",4]]]],[[["r5_g6_b5",4],["r5_g6_b5",4]],["option",4,[["ordering",4]]]],[[["r8",4],["r8",4]],["option",4,[["ordering",4]]]],[[["r8_g8",4],["r8_g8",4]],["option",4,[["ordering",4]]]],[[["r8_g8_b8_a8",4],["r8_g8_b8_a8",4]],["option",4,[["ordering",4]]]],[[["r10_g10_b10_a2",4],["r10_g10_b10_a2",4]],["option",4,[["ordering",4]]]],[[["r11_g11_b10",4],["r11_g11_b10",4]],["option",4,[["ordering",4]]]],[[["r16",4],["r16",4]],["option",4,[["ordering",4]]]],[[["r16_g16",4],["r16_g16",4]],["option",4,[["ordering",4]]]],[[["r16_g16_b16",4],["r16_g16_b16",4]],["option",4,[["ordering",4]]]],[[["r16_g16_b16_a16",4],["r16_g16_b16_a16",4]],["option",4,[["ordering",4]]]],[[["r32",4],["r32",4]],["option",4,[["ordering",4]]]],[[["r32_g32",4],["r32_g32",4]],["option",4,[["ordering",4]]]],[[["r32_g32_b32",4],["r32_g32_b32",4]],["option",4,[["ordering",4]]]],[[["r32_g32_b32_a32",4],["r32_g32_b32_a32",4]],["option",4,[["ordering",4]]]],[[["b8_g8_r8_a8",4],["b8_g8_r8_a8",4]],["option",4,[["ordering",4]]]],[[["d16",4],["d16",4]],["option",4,[["ordering",4]]]],[[["d24",4],["d24",4]],["option",4,[["ordering",4]]]],[[["d24_s8",4],["d24_s8",4]],["option",4,[["ordering",4]]]],[[["d32",4],["d32",4]],["option",4,[["ordering",4]]]],[[["bc1_r8_g8_b8",4],["bc1_r8_g8_b8",4]],["option",4,[["ordering",4]]]],[[["bc3_r8_g8_b8_a8",4],["bc3_r8_g8_b8_a8",4]],["option",4,[["ordering",4]]]],[[["channelsource",4],["channelsource",4]],["option",4,[["ordering",4]]]],[[["swizzle",3],["swizzle",3]],["option",4,[["ordering",4]]]],[[["format",3],["format",3]],["option",4,[["ordering",4]]]],[[["u8norm",3],["u8norm",3]],["option",4,[["ordering",4]]]],[[["i8norm",3],["i8norm",3]],["option",4,[["ordering",4]]]],[[["u16norm",3],["u16norm",3]],["option",4,[["ordering",4]]]],[[["i16norm",3],["i16norm",3]],["option",4,[["ordering",4]]]],[[["f16",3],["f16",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullmanager",3,[["resources",8]]]]],[[["buffer",3,[["resources",8]]]],["buffer",3,[["resources",8]]]],[[["texture",3,[["resources",8]]]],["texture",3,[["resources",8]]]],[[["shaderresourceview",3,[["resources",8]]]],["shaderresourceview",3,[["resources",8]]]],[[["unorderedaccessview",3,[["resources",8]]]],["unorderedaccessview",3,[["resources",8]]]],[[["rendertargetview",3,[["resources",8]]]],["rendertargetview",3,[["resources",8]]]],[[["depthstencilview",3,[["resources",8]]]],["depthstencilview",3,[["resources",8]]]],[[["rawbuffer",3,[["",26,[["clone",8],["resources",8]]]]]],["rawbuffer",3,[["",26,[["clone",8],["resources",8]]]]]],[[["shader",3,[["",26,[["clone",8],["resources",8]]]]]],["shader",3,[["",26,[["clone",8],["resources",8]]]]]],[[["program",3,[["",26,[["clone",8],["resources",8]]]]]],["program",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawpipelinestate",3,[["",26,[["clone",8],["resources",8]]]]]],["rawpipelinestate",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawtexture",3,[["",26,[["clone",8],["resources",8]]]]]],["rawtexture",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawshaderresourceview",3,[["",26,[["clone",8],["resources",8]]]]]],["rawshaderresourceview",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawunorderedaccessview",3,[["",26,[["clone",8],["resources",8]]]]]],["rawunorderedaccessview",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawrendertargetview",3,[["",26,[["clone",8],["resources",8]]]]]],["rawrendertargetview",3,[["",26,[["clone",8],["resources",8]]]]]],[[["rawdepthstencilview",3,[["",26,[["clone",8],["resources",8]]]]]],["rawdepthstencilview",3,[["",26,[["clone",8],["resources",8]]]]]],[[["sampler",3,[["",26,[["clone",8],["resources",8]]]]]],["sampler",3,[["",26,[["clone",8],["resources",8]]]]]],[[["fence",3,[["",26,[["clone",8],["resources",8]]]]]],["fence",3,[["",26,[["clone",8],["resources",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["manager",3,[["resources",8]]]],["usize",0]],[[["rawbuffer",3,[["resources",8]]]]],[[["program",3,[["resources",8]]]]],[[["rawtexture",3,[["resources",8]]]]],[[["buffer",3,[["resources",8]]],["buffer",3,[["resources",8]]]],["bool",0]],[[["texture",3,[["resources",8]]],["texture",3,[["resources",8]]]],["bool",0]],[[["shaderresourceview",3,[["resources",8]]],["shaderresourceview",3,[["resources",8]]]],["bool",0]],[[["unorderedaccessview",3,[["resources",8]]],["unorderedaccessview",3,[["resources",8]]]],["bool",0]],[[["rendertargetview",3,[["resources",8]]],["rendertargetview",3,[["resources",8]]]],["bool",0]],[[["depthstencilview",3,[["resources",8]]],["depthstencilview",3,[["resources",8]]]],["bool",0]],[[["rawbuffer",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawbuffer",3]],["bool",0]],[[["shader",3,[["",26,[["partialeq",8],["resources",8]]]]],["shader",3]],["bool",0]],[[["program",3,[["",26,[["partialeq",8],["resources",8]]]]],["program",3]],["bool",0]],[[["rawpipelinestate",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawpipelinestate",3]],["bool",0]],[[["rawtexture",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawtexture",3]],["bool",0]],[[["rawshaderresourceview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawshaderresourceview",3]],["bool",0]],[[["rawunorderedaccessview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawunorderedaccessview",3]],["bool",0]],[[["rawrendertargetview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawrendertargetview",3]],["bool",0]],[[["rawdepthstencilview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawdepthstencilview",3]],["bool",0]],[[["sampler",3,[["",26,[["partialeq",8],["resources",8]]]]],["sampler",3]],["bool",0]],[[["fence",3,[["",26,[["partialeq",8],["resources",8]]]]],["fence",3]],["bool",0]],[[["manager",3,[["resources",8]]],["manager",3]]],[[["buffer",3,[["resources",8]]],["formatter",3]],["result",6]],[[["texture",3,[["resources",8]]],["formatter",3]],["result",6]],[[["shaderresourceview",3,[["resources",8]]],["formatter",3]],["result",6]],[[["unorderedaccessview",3,[["resources",8]]],["formatter",3]],["result",6]],[[["rendertargetview",3,[["resources",8]]],["formatter",3]],["result",6]],[[["depthstencilview",3,[["resources",8]]],["formatter",3]],["result",6]],[[["rawbuffer",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["shader",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["program",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawpipelinestate",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawtexture",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawshaderresourceview",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawunorderedaccessview",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawrendertargetview",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["rawdepthstencilview",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["sampler",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["fence",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["manager",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rendertargetview",3,[["resources",8]]]],["dimensions",6]],[[["depthstencilview",3,[["resources",8]]]],["dimensions",6]],[[["rawrendertargetview",3,[["resources",8]]]],["dimensions",6]],[[["rawdepthstencilview",3,[["resources",8]]]],["dimensions",6]],[[["buffer",3,[["resources",8]]]],["info",3]],[[["texture",3,[["resources",8]]]],["info",3]],[[["sampler",3,[["resources",8]]]],["samplerinfo",3]],[[["rawrendertargetview",3,[["resources",8]]]],["rawtexture",3]],[[["rawdepthstencilview",3,[["resources",8]]]],["rawtexture",3]],[[["buffer",3,[["resources",8]]],["",0]]],[[["texture",3,[["resources",8]]],["",0]]],[[["shaderresourceview",3,[["resources",8]]],["",0]]],[[["unorderedaccessview",3,[["resources",8]]],["",0]]],[[["rendertargetview",3,[["resources",8]]],["",0]]],[[["depthstencilview",3,[["resources",8]]],["",0]]],[[["rawbuffer",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["shader",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["program",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawpipelinestate",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawtexture",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawshaderresourceview",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawunorderedaccessview",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawrendertargetview",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["rawdepthstencilview",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["sampler",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["fence",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buffer",3,[["resources",8]]]],["usize",0]],[[["rawbuffer",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawbuffer",3]],["bool",0]],[[["shader",3,[["",26,[["partialeq",8],["resources",8]]]]],["shader",3]],["bool",0]],[[["program",3,[["",26,[["partialeq",8],["resources",8]]]]],["program",3]],["bool",0]],[[["rawpipelinestate",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawpipelinestate",3]],["bool",0]],[[["rawtexture",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawtexture",3]],["bool",0]],[[["rawshaderresourceview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawshaderresourceview",3]],["bool",0]],[[["rawunorderedaccessview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawunorderedaccessview",3]],["bool",0]],[[["rawrendertargetview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawrendertargetview",3]],["bool",0]],[[["rawdepthstencilview",3,[["",26,[["partialeq",8],["resources",8]]]]],["rawdepthstencilview",3]],["bool",0]],[[["sampler",3,[["",26,[["partialeq",8],["resources",8]]]]],["sampler",3]],["bool",0]],[[["fence",3,[["",26,[["partialeq",8],["resources",8]]]]],["fence",3]],["bool",0]],[[],["manager",3,[["resources",8]]]],[[["shaderresourceview",3,[["resources",8]]]]],[[["manager",3,[["resources",8]]],["rawbuffer",3]]],[[["manager",3,[["resources",8]]],["rawdepthstencilview",3]]],[[["manager",3,[["resources",8]]],["fence",3]]],[[["manager",3,[["resources",8]]],["program",3]]],[[["manager",3,[["resources",8]]],["rawpipelinestate",3]]],[[["manager",3,[["resources",8]]],["rawrendertargetview",3]]],[[["manager",3,[["resources",8]]],["sampler",3]]],[[["manager",3,[["resources",8]]],["shader",3]]],[[["manager",3,[["resources",8]]],["rawshaderresourceview",3]]],[[["manager",3,[["resources",8]]],["rawtexture",3]]],[[["manager",3,[["resources",8]]],["rawunorderedaccessview",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["reader",3,[["resources",8],["copy",8]]]]],[[["writer",3,[["resources",8],["copy",8]]]]],[[["writer",3,[["resources",8],["copy",8]]]]],[[["error",4]],["str",0]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["reader",3,[["",26,[["debug",8],["resources",8]]],["",26,[["debug",8],["copy",8]]]]],["formatter",3]],["result",6]],[[["writer",3,[["",26,[["debug",8],["resources",8]]],["",26,[["debug",8],["copy",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["error",4],["",0]]],[[]],[[]],[[]],[[["error",4],["error",4]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["access",3]],[[],["bind",3]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3]],["u8",0]],[[["bind",3]],["u8",0]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["usage",4]],["usage",4]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usage",4],["usage",4]],["ordering",4]],[[["access",3],["access",3]],["ordering",4]],[[["bind",3],["bind",3]],["ordering",4]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[],["access",3]],[[],["bind",3]],[[["usage",4],["usage",4]],["bool",0]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3],["intoiterator",8]]],[[["bind",3],["intoiterator",8]]],[[["usage",4],["formatter",3]],["result",6]],[[["access",3],["formatter",3]],["result",6]],[[["access",3],["formatter",3]],["result",6]],[[["access",3],["formatter",3]],["result",6]],[[["access",3],["formatter",3]],["result",6]],[[["access",3],["formatter",3]],["result",6]],[[["bind",3],["formatter",3]],["result",6]],[[["bind",3],["formatter",3]],["result",6]],[[["bind",3],["formatter",3]],["result",6]],[[["bind",3],["formatter",3]],["result",6]],[[["bind",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["access",3]]]],[[["u8",0]],["option",4,[["bind",3]]]],[[["u8",0]],["access",3]],[[["u8",0]],["bind",3]],[[["u8",0]],["access",3]],[[["u8",0]],["bind",3]],[[["intoiterator",8]],["access",3]],[[["intoiterator",8]],["bind",3]],[[["usage",4],["",0]]],[[["access",3],["",0]]],[[["bind",3],["",0]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[]],[[]],[[]],[[["access",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["access",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["bind",3]],["bool",0]],[[["access",3],["access",3]],["bool",0]],[[["bind",3],["bind",3]],["bool",0]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",4],["usage",4]],["option",4,[["ordering",4]]]],[[["access",3],["access",3]],["option",4,[["ordering",4]]]],[[["bind",3],["bind",3]],["option",4,[["ordering",4]]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3],["bool",0]]],[[["bind",3],["bind",3],["bool",0]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["access",3],["access",3]]],[[["bind",3],["bind",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["access",3],["access",3]],["access",3]],[[["bind",3],["bind",3]],["bind",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pixeltargetset",3,[["resources",8]]],["colorslot",6],["dimensions",6]]],[[["pixeltargetset",3,[["resources",8]]],["bool",0],["bool",0],["dimensions",6]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["creationerror",3]],["creationerror",3]],[[["colorinfo",3]],["colorinfo",3]],[[["depthstencilinfo",3]],["depthstencilinfo",3]],[[["element",3,[["clone",8]]]],["element",3,[["clone",8]]]],[[["vertexbufferdesc",3]],["vertexbufferdesc",3]],[[["descriptor",3]],["descriptor",3]],[[["vertexbufferset",3,[["",26,[["clone",8],["resources",8]]]]]],["vertexbufferset",3,[["",26,[["clone",8],["resources",8]]]]]],[[["constantbufferparam",3,[["",26,[["clone",8],["resources",8]]]]]],["constantbufferparam",3,[["",26,[["clone",8],["resources",8]]]]]],[[["resourceviewparam",3,[["",26,[["clone",8],["resources",8]]]]]],["resourceviewparam",3,[["",26,[["clone",8],["resources",8]]]]]],[[["unorderedviewparam",3,[["",26,[["clone",8],["resources",8]]]]]],["unorderedviewparam",3,[["",26,[["clone",8],["resources",8]]]]]],[[["samplerparam",3,[["",26,[["clone",8],["resources",8]]]]]],["samplerparam",3,[["",26,[["clone",8],["resources",8]]]]]],[[["pixeltargetset",3,[["",26,[["clone",8],["resources",8]]]]]],["pixeltargetset",3,[["",26,[["clone",8],["resources",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,[[["creationerror",3]],["str",0]],null,[[["creationerror",3],["creationerror",3]],["bool",0]],[[["colorinfo",3],["colorinfo",3]],["bool",0]],[[["depthstencilinfo",3],["depthstencilinfo",3]],["bool",0]],[[["element",3,[["partialeq",8]]],["element",3]],["bool",0]],[[["vertexbufferdesc",3],["vertexbufferdesc",3]],["bool",0]],[[["descriptor",3],["descriptor",3]],["bool",0]],[[["vertexbufferset",3,[["",26,[["partialeq",8],["resources",8]]]]],["vertexbufferset",3]],["bool",0]],[[["constantbufferparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["constantbufferparam",3]],["bool",0]],[[["resourceviewparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["resourceviewparam",3]],["bool",0]],[[["unorderedviewparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["unorderedviewparam",3]],["bool",0]],[[["samplerparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["samplerparam",3]],["bool",0]],[[["pixeltargetset",3,[["",26,[["partialeq",8],["resources",8]]]]],["pixeltargetset",3]],["bool",0]],[[["creationerror",3],["formatter",3]],["result",6]],[[["creationerror",3],["formatter",3]],["result",6]],[[["colorinfo",3],["formatter",3]],["result",6]],[[["depthstencilinfo",3],["formatter",3]],["result",6]],[[["element",3,[["debug",8]]],["formatter",3]],["result",6]],[[["vertexbufferdesc",3],["formatter",3]],["result",6]],[[["descriptor",3],["formatter",3]],["result",6]],[[["vertexbufferset",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["constantbufferparam",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["resourceviewparam",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["unorderedviewparam",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["samplerparam",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["pixeltargetset",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],null,[[]],[[]],[[["blend",3]],["colorinfo",3]],[[["colormask",3]],["colorinfo",3]],[[]],[[],["depthstencilinfo",3]],[[["depth",3]],["depthstencilinfo",3]],[[["stencil",3]],["depthstencilinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["pixeltargetset",3,[["resources",8]]]]],[[["colorinfo",3],["",0]]],[[["depthstencilinfo",3],["",0]]],[[["element",3,[["hash",8]]],["",0]]],[[["vertexbufferdesc",3],["",0]]],[[["descriptor",3],["",0]]],[[["vertexbufferset",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["constantbufferparam",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["resourceviewparam",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["unorderedviewparam",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["samplerparam",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[["pixeltargetset",3,[["",26,[["hash",8],["resources",8]]]]],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["colorinfo",3],["colorinfo",3]],["bool",0]],[[["depthstencilinfo",3],["depthstencilinfo",3]],["bool",0]],[[["element",3,[["partialeq",8]]],["element",3]],["bool",0]],[[["vertexbufferdesc",3],["vertexbufferdesc",3]],["bool",0]],[[["descriptor",3],["descriptor",3]],["bool",0]],[[["vertexbufferset",3,[["",26,[["partialeq",8],["resources",8]]]]],["vertexbufferset",3]],["bool",0]],[[["constantbufferparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["constantbufferparam",3]],["bool",0]],[[["resourceviewparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["resourceviewparam",3]],["bool",0]],[[["unorderedviewparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["unorderedviewparam",3]],["bool",0]],[[["samplerparam",3,[["",26,[["partialeq",8],["resources",8]]]]],["samplerparam",3]],["bool",0]],[[["pixeltargetset",3,[["",26,[["partialeq",8],["resources",8]]]]],["pixeltargetset",3]],["bool",0]],[[["primitive",4],["rasterizer",3]],["descriptor",3]],[[],["vertexbufferset",3,[["resources",8]]]],[[],["pixeltargetset",3,[["resources",8]]]],null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usage",3]],null,null,null,null,[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3]],["u8",0]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["texturetype",4]],["bool",0]],[[["isarray",4]],["isarray",4]],[[["iscomparison",4]],["iscomparison",4]],[[["ismultisample",4]],["ismultisample",4]],[[["isrect",4]],["isrect",4]],[[["matrixformat",4]],["matrixformat",4]],[[["texturetype",4]],["texturetype",4]],[[["samplertype",3]],["samplertype",3]],[[["basetype",4]],["basetype",4]],[[["containertype",4]],["containertype",4]],[[["stage",4]],["stage",4]],[[["uniformvalue",4]],["uniformvalue",4]],[[["usage",3]],["usage",3]],[[["attributevar",3]],["attributevar",3]],[[["constvar",3]],["constvar",3]],[[["constantbuffervar",3]],["constantbuffervar",3]],[[["texturevar",3]],["texturevar",3]],[[["unorderedvar",3]],["unorderedvar",3]],[[["samplervar",3]],["samplervar",3]],[[["outputvar",3]],["outputvar",3]],[[["programinfo",3]],["programinfo",3]],[[["compatibilityerror",4]],["compatibilityerror",4]],[[["createshadererror",4]],["createshadererror",4]],[[["createprogramerror",3]],["createprogramerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usage",3],["usage",3]],["ordering",4]],[[["usage",3]],["usage",3]],null,null,null,null,[[["usage",3],["usage",3]],["bool",0]],null,[[["compatibilityerror",4]],["str",0]],[[["createshadererror",4]],["str",0]],[[["createprogramerror",3]],["str",0]],[[["usage",3],["usage",3]],["usage",3]],null,[[],["usage",3]],[[["isarray",4],["isarray",4]],["bool",0]],[[["iscomparison",4],["iscomparison",4]],["bool",0]],[[["ismultisample",4],["ismultisample",4]],["bool",0]],[[["isrect",4],["isrect",4]],["bool",0]],[[["matrixformat",4],["matrixformat",4]],["bool",0]],[[["texturetype",4],["texturetype",4]],["bool",0]],[[["samplertype",3],["samplertype",3]],["bool",0]],[[["basetype",4],["basetype",4]],["bool",0]],[[["containertype",4],["containertype",4]],["bool",0]],[[["stage",4],["stage",4]],["bool",0]],[[["uniformvalue",4],["uniformvalue",4]],["bool",0]],[[["usage",3],["usage",3]],["bool",0]],[[["attributevar",3],["attributevar",3]],["bool",0]],[[["constvar",3],["constvar",3]],["bool",0]],[[["constantbuffervar",3],["constantbuffervar",3]],["bool",0]],[[["texturevar",3],["texturevar",3]],["bool",0]],[[["unorderedvar",3],["unorderedvar",3]],["bool",0]],[[["samplervar",3],["samplervar",3]],["bool",0]],[[["outputvar",3],["outputvar",3]],["bool",0]],[[["programinfo",3],["programinfo",3]],["bool",0]],[[["program",3,[["",26,[["resources",8],["partialeq",8]]]]],["program",3]],["bool",0]],[[["compatibilityerror",4],["compatibilityerror",4]],["bool",0]],[[["createshadererror",4],["createshadererror",4]],["bool",0]],[[["createprogramerror",3],["createprogramerror",3]],["bool",0]],[[["usage",3],["intoiterator",8]]],[[["isarray",4],["formatter",3]],["result",6]],[[["iscomparison",4],["formatter",3]],["result",6]],[[["ismultisample",4],["formatter",3]],["result",6]],[[["isrect",4],["formatter",3]],["result",6]],[[["matrixformat",4],["formatter",3]],["result",6]],[[["texturetype",4],["formatter",3]],["result",6]],[[["samplertype",3],["formatter",3]],["result",6]],[[["basetype",4],["formatter",3]],["result",6]],[[["containertype",4],["formatter",3]],["result",6]],[[["stage",4],["formatter",3]],["result",6]],[[["uniformvalue",4],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",6]],[[["usage",3],["formatter",3]],["result",6]],[[["attributevar",3],["formatter",3]],["result",6]],[[["constvar",3],["formatter",3]],["result",6]],[[["constantbuffervar",3],["formatter",3]],["result",6]],[[["texturevar",3],["formatter",3]],["result",6]],[[["unorderedvar",3],["formatter",3]],["result",6]],[[["samplervar",3],["formatter",3]],["result",6]],[[["outputvar",3],["formatter",3]],["result",6]],[[["programinfo",3],["formatter",3]],["result",6]],[[["program",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["compatibilityerror",4],["formatter",3]],["result",6]],[[["compatibilityerror",4],["formatter",3]],["result",6]],[[["createshadererror",4],["formatter",3]],["result",6]],[[["createshadererror",4],["formatter",3]],["result",6]],[[["createprogramerror",3],["formatter",3]],["result",6]],[[["createprogramerror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stage",4]],["usage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8,[["string",3]]]],["createprogramerror",3]],[[["u8",0]],["option",4,[["usage",3]]]],[[["u8",0]],["usage",3]],[[["u8",0]],["usage",3]],[[["intoiterator",8]],["usage",3]],[[],["basetype",4]],[[],["constformat",6]],[[["program",3,[["resources",8]]]],["programinfo",3]],null,[[["isarray",4],["",0]]],[[["iscomparison",4],["",0]]],[[["ismultisample",4],["",0]]],[[["isrect",4],["",0]]],[[["matrixformat",4],["",0]]],[[["texturetype",4],["",0]]],[[["samplertype",3],["",0]]],[[["basetype",4],["",0]]],[[["containertype",4],["",0]]],[[["stage",4],["",0]]],[[["usage",3],["",0]]],[[["attributevar",3],["",0]]],[[["constvar",3],["",0]]],[[["constantbuffervar",3],["",0]]],[[["texturevar",3],["",0]]],[[["unorderedvar",3],["",0]]],[[["samplervar",3],["",0]]],[[["outputvar",3],["",0]]],[[["programinfo",3],["",0]]],[[["program",3,[["",26,[["resources",8],["hash",8]]]]],["",0]]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usage",3]],["bool",0]],[[["constvar",3],["uniformvalue",4]],["result",4,[["compatibilityerror",4]]]],[[["usage",3]],["bool",0]],null,null,null,null,null,null,null,null,null,[[["texturetype",4],["texturetype",4]],["bool",0]],[[["samplertype",3],["samplertype",3]],["bool",0]],[[["containertype",4],["containertype",4]],["bool",0]],[[["uniformvalue",4],["uniformvalue",4]],["bool",0]],[[["usage",3],["usage",3]],["bool",0]],[[["attributevar",3],["attributevar",3]],["bool",0]],[[["constvar",3],["constvar",3]],["bool",0]],[[["constantbuffervar",3],["constantbuffervar",3]],["bool",0]],[[["texturevar",3],["texturevar",3]],["bool",0]],[[["unorderedvar",3],["unorderedvar",3]],["bool",0]],[[["samplervar",3],["samplervar",3]],["bool",0]],[[["outputvar",3],["outputvar",3]],["bool",0]],[[["programinfo",3],["programinfo",3]],["bool",0]],[[["createshadererror",4],["createshadererror",4]],["bool",0]],[[["createprogramerror",3],["createprogramerror",3]],["bool",0]],[[["usage",3]],["usage",3]],null,null,[[["uniformvalue",4],["uniformvalue",4]],["option",4,[["ordering",4]]]],[[["usage",3],["usage",3]],["option",4,[["ordering",4]]]],[[["usage",3],["usage",3]]],null,[[["usage",3],["usage",3],["bool",0]]],null,null,null,null,null,null,null,[[["usage",3],["usage",3]],["usage",3]],[[["usage",3],["usage",3]]],[[["usage",3],["usage",3]],["usage",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["usage",3],["usage",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usage",3],["usage",3]],["usage",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["colormask",3]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3]],["u8",0]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],null,nullfrontface",4]],["frontface",4]],[[["offset",3]],["offset",3]],[[["cullface",4]],["cullface",4]],[[["rastermethod",4]],["rastermethod",4]],[[["multisample",3]],["multisample",3]],[[["rasterizer",3]],["rasterizer",3]],[[["comparison",4]],["comparison",4]],[[["stencilop",4]],["stencilop",4]],[[["stencilside",3]],["stencilside",3]],[[["stencil",3]],["stencil",3]],[[["depth",3]],["depth",3]],[[["equation",4]],["equation",4]],[[["blendvalue",4]],["blendvalue",4]],[[["factor",4]],["factor",4]],[[["blendchannel",3]],["blendchannel",3]],[[["blend",3]],["blend",3]],[[["colormask",3]],["colormask",3]],[[["color",3]],["color",3]],[[["refvalues",3]],["refvalues",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["frontface",4],["frontface",4]],["ordering",4]],[[["cullface",4],["cullface",4]],["ordering",4]],[[["multisample",3],["multisample",3]],["ordering",4]],[[["comparison",4],["comparison",4]],["ordering",4]],[[["stencilop",4],["stencilop",4]],["ordering",4]],[[["stencilside",3],["stencilside",3]],["ordering",4]],[[["stencil",3],["stencil",3]],["ordering",4]],[[["depth",3],["depth",3]],["ordering",4]],[[["equation",4],["equation",4]],["ordering",4]],[[["blendvalue",4],["blendvalue",4]],["ordering",4]],[[["factor",4],["factor",4]],["ordering",4]],[[["blendchannel",3],["blendchannel",3]],["ordering",4]],[[["colormask",3],["colormask",3]],["ordering",4]],null,[[["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],null,[[],["stencilside",3]],[[],["stencil",3]],[[],["depth",3]],[[],["blendchannel",3]],[[],["blend",3]],[[],["color",3]],[[],["refvalues",3]],null,[[["colormask",3],["colormask",3]],["colormask",3]],[[],["colormask",3]],[[["frontface",4],["frontface",4]],["bool",0]],[[["offset",3],["offset",3]],["bool",0]],[[["cullface",4],["cullface",4]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["multisample",3],["multisample",3]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["comparison",4],["comparison",4]],["bool",0]],[[["stencilop",4],["stencilop",4]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["equation",4],["equation",4]],["bool",0]],[[["blendvalue",4],["blendvalue",4]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],null,[[["colormask",3]]],[[["frontface",4],["formatter",3]],["result",4,[["error",3]]]],[[["offset",3],["formatter",3]],["result",4,[["error",3]]]],[[["cullface",4],["formatter",3]],["result",4,[["error",3]]]],[[["rastermethod",4],["formatter",3]],["result",4,[["error",3]]]],[[["multisample",3],["formatter",3]],["result",4,[["error",3]]]],[[["rasterizer",3],["formatter",3]],["result",4,[["error",3]]]],[[["comparison",4],["formatter",3]],["result",4,[["error",3]]]],[[["stencilop",4],["formatter",3]],["result",4,[["error",3]]]],[[["stencilside",3],["formatter",3]],["result",4,[["error",3]]]],[[["stencil",3],["formatter",3]],["result",4,[["error",3]]]],[[["depth",3],["formatter",3]],["result",4,[["error",3]]]],[[["equation",4],["formatter",3]],["result",4,[["error",3]]]],[[["blendvalue",4],["formatter",3]],["result",4,[["error",3]]]],[[["factor",4],["formatter",3]],["result",4,[["error",3]]]],[[["blendchannel",3],["formatter",3]],["result",4,[["error",3]]]],[[["blend",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["colormask",3],["formatter",3]],["result",4,[["error",3]]]],[[["color",3],["formatter",3]],["result",4,[["error",3]]]],[[["refvalues",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["colormask",3]]]],[[["u8",0]],["colormask",3]],[[["u8",0]],["colormask",3]],[[],["colormask",3]],null,null,null,null,[[["frontface",4],["",0]]],[[["offset",3],["",0]]],[[["cullface",4],["",0]]],[[["rastermethod",4],["",0]]],[[["multisample",3],["",0]]],[[["rasterizer",3],["",0]]],[[["comparison",4],["",0]]],[[["stencilop",4],["",0]]],[[["stencilside",3],["",0]]],[[["stencil",3],["",0]]],[[["depth",3],["",0]]],[[["equation",4],["",0]]],[[["blendvalue",4],["",0]]],[[["factor",4],["",0]]],[[["blendchannel",3],["",0]]],[[["blend",3],["",0]]],[[["colormask",3],["",0]]],[[["color",3],["",0]]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["colormask",3]],["bool",0]],[[["colormask",3]],["bool",0]],null,null,null,null,[[["offset",3],["offset",3]],["bool",0]],[[["rastermethod",4],["rastermethod",4]],["bool",0]],[[["rasterizer",3],["rasterizer",3]],["bool",0]],[[["stencilside",3],["stencilside",3]],["bool",0]],[[["stencil",3],["stencil",3]],["bool",0]],[[["depth",3],["depth",3]],["bool",0]],[[["factor",4],["factor",4]],["bool",0]],[[["blendchannel",3],["blendchannel",3]],["bool",0]],[[["blend",3],["blend",3]],["bool",0]],[[["colormask",3],["colormask",3]],["bool",0]],[[["color",3],["color",3]],["bool",0]],[[["refvalues",3],["refvalues",3]],["bool",0]],[[["comparison",4],["u8",0]],["stencil",3]],[[["equation",4],["factor",4],["factor",4]],["blend",3]],[[],["rasterizer",3]],[[["colormask",3]],["colormask",3]],null,null,null,null,[[["frontface",4],["frontface",4]],["option",4,[["ordering",4]]]],[[["offset",3],["offset",3]],["option",4,[["ordering",4]]]],[[["cullface",4],["cullface",4]],["option",4,[["ordering",4]]]],[[["rastermethod",4],["rastermethod",4]],["option",4,[["ordering",4]]]],[[["multisample",3],["multisample",3]],["option",4,[["ordering",4]]]],[[["rasterizer",3],["rasterizer",3]],["option",4,[["ordering",4]]]],[[["comparison",4],["comparison",4]],["option",4,[["ordering",4]]]],[[["stencilop",4],["stencilop",4]],["option",4,[["ordering",4]]]],[[["stencilside",3],["stencilside",3]],["option",4,[["ordering",4]]]],[[["stencil",3],["stencil",3]],["option",4,[["ordering",4]]]],[[["depth",3],["depth",3]],["option",4,[["ordering",4]]]],[[["equation",4],["equation",4]],["option",4,[["ordering",4]]]],[[["blendvalue",4],["blendvalue",4]],["option",4,[["ordering",4]]]],[[["factor",4],["factor",4]],["option",4,[["ordering",4]]]],[[["blendchannel",3],["blendchannel",3]],["option",4,[["ordering",4]]]],[[["blend",3],["blend",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]],["option",4,[["ordering",4]]]],[[["color",3],["color",3]],["option",4,[["ordering",4]]]],[[["refvalues",3],["refvalues",3]],["option",4,[["ordering",4]]]],[[["colormask",3],["colormask",3]]],null,[[["colormask",3],["colormask",3],["bool",0]]],null,null,[[["colormask",3],["colormask",3]],["colormask",3]],[[["colormask",3],["colormask",3]]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["colormask",3],["colormask",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["colormask",3],["colormask",3]],["colormask",3]],[[["rasterizer",3]],["rasterizer",3]],[[["rasterizer",3],["f32",0],["i32",0]],["rasterizer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mirror",3]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3]],["u8",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rect",3]],["rect",3]],[[["mirror",3]],["mirror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["mirror",3],["mirror",3]],["ordering",4]],[[["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3],["mirror",3]],["mirror",3]],[[],["mirror",3]],[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3]]],[[["rect",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[["mirror",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["u8",0]],["option",4,[["mirror",3]]]],[[["u8",0]],["mirror",3]],[[["u8",0]],["mirror",3]],[[],["mirror",3]],null,[[["rect",3],["",0]]],[[["mirror",3],["",0]]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]],["bool",0]],[[]],[[]],[[["mirror",3]],["bool",0]],[[["mirror",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["mirror",3],["mirror",3]],["bool",0]],[[["mirror",3]],["mirror",3]],[[["rect",3],["rect",3]],["option",4,[["ordering",4]]]],[[["mirror",3],["mirror",3]],["option",4,[["ordering",4]]]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3],["bool",0]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["mirror",3],["mirror",3]]],[[["mirror",3],["mirror",3]],["mirror",3]],[[["",0]]],[[["",0]]],[[["mirror",3],["mirror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mirror",3],["mirror",3]],["mirror",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["depthstencilflags",3]],null,[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3]],["u8",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],nullnull,null,[[["creationerror",4]],["creationerror",4]],[[["layererror",4]],["layererror",4]],[[["aamode",4]],["aamode",4]],[[["filtermethod",4]],["filtermethod",4]],[[["cubeface",4]],["cubeface",4]],[[["kind",4]],["kind",4]],[[["mipmap",4]],["mipmap",4]],[[["imageinfocommon",3,[["clone",8]]]],["imageinfocommon",3,[["clone",8]]]],[[["texturecopyregion",3,[["clone",8]]]],["texturecopyregion",3,[["clone",8]]]],[[["wrapmode",4]],["wrapmode",4]],[[["lod",3]],["lod",3]],[[["packedcolor",3]],["packedcolor",3]],[[["samplerinfo",3]],["samplerinfo",3]],[[["info",3]],["info",3]],[[["resourcedesc",3]],["resourcedesc",3]],[[["renderdesc",3]],["renderdesc",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencildesc",3]],["depthstencildesc",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["aamode",4],["aamode",4]],["ordering",4]],[[["filtermethod",4],["filtermethod",4]],["ordering",4]],[[["cubeface",4],["cubeface",4]],["ordering",4]],[[["kind",4],["kind",4]],["ordering",4]],[[["mipmap",4],["mipmap",4]],["ordering",4]],[[["imageinfocommon",3,[["ord",8]]],["imageinfocommon",3]],["ordering",4]],[[["texturecopyregion",3,[["ord",8]]],["texturecopyregion",3]],["ordering",4]],[[["wrapmode",4],["wrapmode",4]],["ordering",4]],[[["info",3],["info",3]],["ordering",4]],[[["resourcedesc",3],["resourcedesc",3]],["ordering",4]],[[["renderdesc",3],["renderdesc",3]],["ordering",4]],[[["depthstencilflags",3],["depthstencilflags",3]],["ordering",4]],[[["depthstencildesc",3],["depthstencildesc",3]],["ordering",4]],null,[[["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["imageinfocommon",3]],["imageinfocommon",3]],null,null,[[["creationerror",4]],["str",0]],[[["layererror",4]],["str",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[],["depthstencilflags",3]],[[["raw",3,[["",26,[["resources",8],["partialeq",8]]]]],["raw",3,[["",26,[["resources",8],["partialeq",8]]]]]],["bool",0]],[[["creationerror",4],["creationerror",4]],["bool",0]],[[["layererror",4],["layererror",4]],["bool",0]],[[["aamode",4],["aamode",4]],["bool",0]],[[["filtermethod",4],["filtermethod",4]],["bool",0]],[[["cubeface",4],["cubeface",4]],["bool",0]],[[["kind",4],["kind",4]],["bool",0]],[[["mipmap",4],["mipmap",4]],["bool",0]],[[["imageinfocommon",3,[["partialeq",8]]],["imageinfocommon",3]],["bool",0]],[[["texturecopyregion",3,[["partialeq",8]]],["texturecopyregion",3]],["bool",0]],[[["wrapmode",4],["wrapmode",4]],["bool",0]],[[["lod",3],["lod",3]],["bool",0]],[[["packedcolor",3],["packedcolor",3]],["bool",0]],[[["samplerinfo",3],["samplerinfo",3]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["resourcedesc",3],["resourcedesc",3]],["bool",0]],[[["renderdesc",3],["renderdesc",3]],["bool",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["depthstencildesc",3],["depthstencildesc",3]],["bool",0]],[[["depthstencilflags",3],["intoiterator",8]]],null,null,[[["raw",3,[["",26,[["debug",8],["resources",8]]]]],["formatter",3]],["result",6]],[[["creationerror",4],["formatter",3]],["result",6]],[[["creationerror",4],["formatter",3]],["result",6]],[[["layererror",4],["formatter",3]],["result",6]],[[["layererror",4],["formatter",3]],["result",6]],[[["aamode",4],["formatter",3]],["result",6]],[[["filtermethod",4],["formatter",3]],["result",6]],[[["cubeface",4],["formatter",3]],["result",6]],[[["kind",4],["formatter",3]],["result",6]],[[["mipmap",4],["formatter",3]],["result",6]],[[["imageinfocommon",3,[["debug",8]]],["formatter",3]],["result",6]],[[["texturecopyregion",3,[["debug",8]]],["formatter",3]],["result",6]],[[["wrapmode",4],["formatter",3]],["result",6]],[[["lod",3],["formatter",3]],["result",6]],[[["packedcolor",3],["formatter",3]],["result",6]],[[["samplerinfo",3],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["resourcedesc",3],["formatter",3]],["result",6]],[[["renderdesc",3],["formatter",3]],["result",6]],[[["depthstencilflags",3],["formatter",3]],["result",6]],[[["depthstencilflags",3],["formatter",3]],["result",6]],[[["depthstencilflags",3],["formatter",3]],["result",6]],[[["depthstencilflags",3],["formatter",3]],["result",6]],[[["depthstencilflags",3],["formatter",3]],["result",6]],[[["depthstencildesc",3],["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[["numsamples",6]],["aamode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]],["lod",3]],[[]],[[]],[[],["packedcolor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["renderdesc",3]],["depthstencildesc",3]],[[["u8",0]],["option",4,[["depthstencilflags",3]]]],[[["u8",0]],["depthstencilflags",3]],[[["u8",0]],["depthstencilflags",3]],[[["intoiterator",8]],["depthstencilflags",3]],[[["rawimageinfo",6]],["usize",0]],[[["imageinfocommon",3,[["format",3]]]],["usize",0]],[[["kind",4]],["dimensions",6]],[[["raw",3,[["resources",8]]]],["info",3]],[[["kind",4],["level",6]],["dimensions",6]],[[["aamode",4]],["numfragments",6]],[[["kind",4]],["level",6]],[[["kind",4]],["option",4,[["layer",6]]]],[[["imageinfocommon",3]],["usize",0]],[[["raw",3,[["",26,[["resources",8],["hash",8]]]]],["",0]]],[[["layererror",4],["",0]]],[[["aamode",4],["",0]]],[[["filtermethod",4],["",0]]],[[["cubeface",4],["",0]]],[[["kind",4],["",0]]],[[["mipmap",4],["",0]]],[[["imageinfocommon",3,[["hash",8]]],["",0]]],[[["texturecopyregion",3,[["hash",8]]],["",0]]],[[["wrapmode",4],["",0]]],[[["lod",3],["",0]]],[[["packedcolor",3],["",0]]],[[["samplerinfo",3],["",0]]],[[["info",3],["",0]]],[[["resourcedesc",3],["",0]]],[[["renderdesc",3],["",0]]],[[["depthstencilflags",3],["",0]]],[[["depthstencildesc",3],["",0]]],null,null,[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lod",3]],["f32",0]],[[["packedcolor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["depthstencilflags",3]],["bool",0]],[[["kind",4]],["bool",0]],[[["depthstencilflags",3]],["bool",0]],[[["imageinfocommon",3],["dimensions",6]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["creationerror",4],["creationerror",4]],["bool",0]],[[["layererror",4],["layererror",4]],["bool",0]],[[["aamode",4],["aamode",4]],["bool",0]],[[["filtermethod",4],["filtermethod",4]],["bool",0]],[[["kind",4],["kind",4]],["bool",0]],[[["imageinfocommon",3,[["partialeq",8]]],["imageinfocommon",3]],["bool",0]],[[["texturecopyregion",3,[["partialeq",8]]],["texturecopyregion",3]],["bool",0]],[[["lod",3],["lod",3]],["bool",0]],[[["packedcolor",3],["packedcolor",3]],["bool",0]],[[["samplerinfo",3],["samplerinfo",3]],["bool",0]],[[["info",3],["info",3]],["bool",0]],[[["resourcedesc",3],["resourcedesc",3]],["bool",0]],[[["renderdesc",3],["renderdesc",3]],["bool",0]],[[["depthstencilflags",3],["depthstencilflags",3]],["bool",0]],[[["depthstencildesc",3],["depthstencildesc",3]],["bool",0]],[[["aamode",4]],["bool",0]],[[["filtermethod",4],["wrapmode",4]],["samplerinfo",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["aamode",4],["aamode",4]],["option",4,[["ordering",4]]]],[[["filtermethod",4],["filtermethod",4]],["option",4,[["ordering",4]]]],[[["cubeface",4],["cubeface",4]],["option",4,[["ordering",4]]]],[[["kind",4],["kind",4]],["option",4,[["ordering",4]]]],[[["mipmap",4],["mipmap",4]],["option",4,[["ordering",4]]]],[[["imageinfocommon",3,[["partialord",8]]],["imageinfocommon",3]],["option",4,[["ordering",4]]]],[[["texturecopyregion",3,[["partialord",8]]],["texturecopyregion",3]],["option",4,[["ordering",4]]]],[[["wrapmode",4],["wrapmode",4]],["option",4,[["ordering",4]]]],[[["lod",3],["lod",3]],["option",4,[["ordering",4]]]],[[["packedcolor",3],["packedcolor",3]],["option",4,[["ordering",4]]]],[[["samplerinfo",3],["samplerinfo",3]],["option",4,[["ordering",4]]]],[[["info",3],["info",3]],["option",4,[["ordering",4]]]],[[["resourcedesc",3],["resourcedesc",3]],["option",4,[["ordering",4]]]],[[["renderdesc",3],["renderdesc",3]],["option",4,[["ordering",4]]]],[[["depthstencilflags",3],["depthstencilflags",3]],["option",4,[["ordering",4]]]],[[["depthstencildesc",3],["depthstencildesc",3]],["option",4,[["ordering",4]]]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[["depthstencilflags",3],["depthstencilflags",3],["bool",0]]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],null,[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],null,[[["info",3],["level",6]],["newimageinfo",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["info",3],["channeltype",4],["level",6]],["rawimageinfo",6]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["depthstencilflags",3],["depthstencilflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["depthstencilflags",3],["depthstencilflags",3]],["depthstencilflags",3]],null,null,[[["texturecopyregion",3]],["texturecopyregion",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"SubmissionError"],[8,"Resources"],[8,"Device"],[8,"Adapter"],[8,"Surface"],[4,"ShaderSet"],[4,"Primitive"],[8,"QueueFamily"],[4,"IndexType"],[8,"SwapChain"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[3,"Capabilities"],[3,"AdapterInfo"],[3,"Frame"],[13,"PatchList"],[13,"Simple"],[13,"Geometry"],[13,"Tessellated"],[13,"TessellatedGeometry"],[4,"Role"],[4,"CreationError"],[3,"Info"],[3,"Raw"],[13,"UnsupportedBind"],[13,"UnsupportedUsage"],[4,"ClearColor"],[3,"AccessGuard"],[8,"Buffer"],[3,"AccessInfo"],[3,"AccessGuardBuffers"],[3,"AccessGuardBuffersChain"],[13,"Float"],[13,"Int"],[13,"Uint"],[3,"DummyCommandBuffer"],[3,"DummyDevice"],[4,"DummyResources"],[3,"DummyFence"],[3,"DummyMapping"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Factory"],[13,"Texture"],[13,"Resource"],[13,"Target"],[13,"Channel"],[13,"Layer"],[13,"Level"],[13,"Layer"],[13,"Channel"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"SurfaceType"],[8,"Formatted"],[8,"SurfaceTyped"],[4,"ChannelType"],[4,"ChannelSource"],[8,"ChannelTyped"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"B8_G8_R8_A8"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"BC1_R8_G8_B8"],[4,"BC3_R8_G8_B8_A8"],[3,"Buffer"],[3,"Texture"],[3,"ShaderResourceView"],[3,"UnorderedAccessView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"RawBuffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"RawShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[4,"Error"],[3,"Reader"],[3,"Writer"],[13,"InvalidAccess"],[3,"Bind"],[4,"Usage"],[3,"Access"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[3,"ColorInfo"],[3,"Descriptor"],[3,"DepthStencilInfo"],[3,"CreationError"],[3,"Element"],[3,"VertexBufferDesc"],[3,"SamplerType"],[4,"IsArray"],[4,"BaseType"],[4,"TextureType"],[4,"MatrixFormat"],[4,"IsComparison"],[4,"CreateShaderError"],[3,"Usage"],[4,"Stage"],[4,"CompatibilityError"],[4,"UniformValue"],[4,"ContainerType"],[4,"IsMultiSample"],[4,"IsRect"],[3,"AttributeVar"],[3,"ConstVar"],[3,"TextureVar"],[3,"OutputVar"],[3,"ConstantBufferVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"ProgramInfo"],[3,"Program"],[3,"CreateProgramError"],[8,"BaseTyped"],[8,"Formatted"],[13,"Vector"],[13,"Matrix"],[13,"StageNotSupported"],[13,"CompilationFailed"],[13,"D1"],[13,"D2"],[13,"Cube"],[13,"I32"],[13,"U32"],[13,"F32"],[13,"I32Vector2"],[13,"I32Vector3"],[13,"I32Vector4"],[13,"U32Vector2"],[13,"U32Vector3"],[13,"U32Vector4"],[13,"F32Vector2"],[13,"F32Vector3"],[13,"F32Vector4"],[13,"F32Matrix2"],[13,"F32Matrix3"],[13,"F32Matrix4"],[3,"Offset"],[3,"ColorMask"],[4,"Equation"],[4,"Comparison"],[4,"CullFace"],[4,"FrontFace"],[4,"BlendValue"],[4,"StencilOp"],[4,"RasterMethod"],[4,"Factor"],[3,"Blend"],[3,"Stencil"],[3,"Color"],[3,"RefValues"],[3,"MultiSample"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Depth"],[3,"BlendChannel"],[13,"ZeroPlus"],[13,"OneMinus"],[13,"Line"],[3,"Mirror"],[3,"Rect"],[3,"PackedColor"],[4,"Mipmap"],[4,"FilterMethod"],[4,"WrapMode"],[4,"AaMode"],[4,"Kind"],[4,"CreationError"],[4,"CubeFace"],[4,"LayerError"],[3,"DepthStencilFlags"],[3,"Info"],[3,"SamplerInfo"],[3,"Raw"],[3,"ImageInfoCommon"],[3,"TextureCopyRegion"],[3,"Lod"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[6,"RawImageInfo"],[13,"Multi"],[13,"Coverage"],[13,"Format"],[13,"Samples"],[13,"Size"],[13,"Data"],[13,"Usage"],[13,"Level"],[13,"Anisotropic"],[13,"D1"],[13,"D1Array"],[13,"D2"],[13,"D2Array"],[13,"D3"],[13,"Cube"],[13,"CubeArray"],[13,"NotExpected"],[13,"OutOfBounds"]]},\
"gfx_device_gl":{"doc":"OpenGL implementation of a device, striving to support …","t":[6,6,3,3,3,4,3,3,3,6,3,13,13,13,13,4,13,13,3,3,3,6,3,4,6,6,6,13,13,4,6,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,5,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["ArrayBuffer","Buffer","BufferElement","CommandBuffer","Device","Error","Factory","FatSampler","Fence","FrameBuffer","Info","InvalidEnum","InvalidFramebufferOperation","InvalidOperation","InvalidValue","NewTexture","NoError","OutOfMemory","OutputMerger","PipelineState","PlatformName","Program","ResourceView","Resources","Sampler","Shader","Surface","Surface","Surface","TargetView","Texture","Texture","Texture","TextureLayer","UnknownError","Version","bind_constant_buffers","bind_global_constant","bind_index","bind_pipeline_state","bind_pixel_targets","bind_resource_views","bind_samplers","bind_unordered_views","bind_vertex_buffers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","call_draw","call_draw_indexed","cleanup","clear_color","clear_depth_stencil","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colors","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","create","create_buffer_immutable_raw","create_buffer_raw","create_command_buffer","create_main_targets_raw","create_pipeline_state_raw","create_program","create_sampler","create_shader","create_texture_raw","data","depth","desc","description","display_fb","draw_mask","elem","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extensions","fenced_submit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","generate_mipmap","get_capabilities","get_capabilities","get_info","gl_texture","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_any_extension_supported","is_embedded","is_embedded_version_supported","is_extension_supported","is_version_or_extension_supported","is_version_supported","major","minor","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_buffer","new_embedded","new_texture","new_texture_owned","parse","pin_submitted_resources","platform_name","read_mapping","renderer","reset","revision","set_ref_values","set_scissor","shading_language","stencil","submit","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_buffer","update_texture","vendor","vendor_info","version","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access_raw","view_texture_as_depth_stencil_raw","view_texture_as_render_target_raw","view_texture_as_shader_resource_raw","view_texture_as_unordered_access_raw","wait_fence","with_gl","write_mapping","0","0","0","0","0","1","1","2"],"q":["gfx_device_glgfx_device_gl::NewTexture","","gfx_device_gl::TargetView","","","","",""],"d":["","","","A command buffer abstraction for OpenGL.","An OpenGL device with GLSL shaders.","","GL resource factory.","","","","OpenGL implementation information","","","","","","","","","","A unique platform identifier that does not change between …","","","","","","","","","","","","","","","A version number for a specific component of an OpenGL …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new device with a factory.","","","","Create the proxy target views (RTV and DSV) for the …","","","","","","","","","","The framebuffer to use for rendering to the main targets …","","","","","","","","","","","","","","","The extensions supported by the implementation","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the OpenGL-specific driver information","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if the implementation supports the extension","","","","","","","","","","","","","","","","Create a new <code>Factory</code>.","Create a new OpenGL version number","","Create a new OpenGL ES version number","","","According to the OpenGL specification, the version …","","The platform identifier","","The name of the renderer","","","","","The GLSL vesion number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The company responsible for the OpenGL implementation","","The OpenGL API vesion number","","","","","","","","Access the OpenGL directly via a closure. OpenGL types and …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,2,3,0,0,2,3,3,1,0,4,4,4,4,4,4,4,4,4,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,4,4,4,6,4,4,5,7,8,10,11,12,13,14,2,15,16,3,1,5,7,8,10,11,12,13,14,2,15,16,3,1,13,4,4,4,4,0,5,5,5,0,5,5,5,5,5,4,13,12,1,4,13,12,7,8,10,11,12,13,14,2,15,16,3,1,9,6,7,8,9,10,11,12,13,14,2,15,16,3,1,1,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,1,4,5,6,6,15,10,11,12,13,14,2,15,16,3,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,9,7,9,9,9,9,7,7,7,8,10,12,13,14,2,15,16,3,4,5,7,15,7,15,15,7,6,9,5,8,4,7,4,4,9,13,6,5,7,8,10,11,12,13,14,2,15,16,3,1,1,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,4,5,6,7,8,9,10,11,12,13,14,2,15,16,3,1,4,4,8,7,9,5,5,5,5,5,5,6,6,5,17,18,19,20,21,20,21,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["commandbuffer",3]]],[[["commandbuffer",3],["location",6],["uniformvalue",4]]],[[["commandbuffer",3],["buffer",6],["indextype",4]]],[[["commandbuffer",3],["pipelinestate",3]]],[[["commandbuffer",3],["pixeltargetset",3,[["resources",4]]]]],[[["commandbuffer",3]]],[[["commandbuffer",3]]],[[["commandbuffer",3]]],[[["commandbuffer",3],["vertexbufferset",3,[["resources",4]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["commandbuffer",3],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["commandbuffer",3],["vertexcount",6],["vertexcount",6],["vertexcount",6],["option",4,[["instanceparams",6]]]]],[[["device",3]]],[[["commandbuffer",3],["targetview",4],["clearcolor",4]]],[[["commandbuffer",3],["targetview",4],["option",4,[["depth",6]]],["option",4,[["stencil",6]]]]],[[["factory",3]],["factory",3]],[[["version",3]],["version",3]],[[["platformname",3]],["platformname",3]],[[["fence",3]],["fence",3]],[[["resources",4]],["resources",4]],[[["bufferelement",3]],["bufferelement",3]],[[["outputmerger",3]],["outputmerger",3]],[[["pipelinestate",3]],["pipelinestate",3]],[[["newtexture",4]],["newtexture",4]],[[["resourceview",3]],["resourceview",3]],[[["fatsampler",3]],["fatsampler",3]],[[["targetview",4]],["targetview",4]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["commandbuffer",3],["buffer",6],["buffer",6],["usize",0],["usize",0],["usize",0]]],[[["commandbuffer",3],["buffer",6],["usize",0],["texturecopyregion",3,[["newtexture",4]]]]],[[["commandbuffer",3],["texturecopyregion",3,[["newtexture",4]]],["buffer",6],["usize",0]]],[[["commandbuffer",3],["texturecopyregion",3,[["newtexture",4]]],["texturecopyregion",3,[["newtexture",4]]]]],[[]],[[["factory",3],["usize",0],["role",4],["bind",3]],["result",4,[["rawbuffer",3,[["r",4]]],["creationerror",4]]]],[[["factory",3],["info",3]],["result",4,[["rawbuffer",3,[["r",4]]],["creationerror",4]]]],[[["factory",3]],["commandbuffer",3]],[[["dimensions",6],["surfacetype",4],["surfacetype",4]]],[[["factory",3],["program",3],["descriptor",3]],["result",4,[["rawpipelinestate",3,[["r",4]]],["creationerror",3]]]],[[["factory",3],["shaderset",4]],["result",4,[["program",3,[["r",4]]],["createprogramerror",3]]]],[[["factory",3],["samplerinfo",3]],["sampler",3,[["r",4]]]],[[["factory",3],["stage",4]],["result",4,[["shader",3,[["r",4]]],["createshadererror",4]]]],[[["factory",3],["info",3],["option",4,[["channeltype",4]]],["option",4]],["result",4,[["rawtexture",3,[["r",4]]],["creationerror",4]]]],null,null,null,[[["error",4]],["str",0]],null,null,null,[[["version",3],["version",3]],["bool",0]],[[["platformname",3],["platformname",3]],["bool",0]],[[["fence",3],["fence",3]],["bool",0]],[[["resources",4],["resources",4]],["bool",0]],[[["bufferelement",3],["bufferelement",3]],["bool",0]],[[["outputmerger",3],["outputmerger",3]],["bool",0]],[[["pipelinestate",3],["pipelinestate",3]],["bool",0]],[[["newtexture",4],["newtexture",4]],["bool",0]],[[["resourceview",3],["resourceview",3]],["bool",0]],[[["fatsampler",3],["fatsampler",3]],["bool",0]],[[["targetview",4],["targetview",4]],["bool",0]],[[["error",4],["error",4]],["bool",0]],null,[[["device",3],["commandbuffer",3],["accessinfo",3],["option",4,[["fence",3,[["resources",4]]]]]],["submissionresult",6,[["fence",3,[["resources",4]]]]]],[[["version",3],["formatter",3]],["result",6]],[[["platformname",3],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["fence",3],["formatter",3]],["result",6]],[[["resources",4],["formatter",3]],["result",6]],[[["bufferelement",3],["formatter",3]],["result",6]],[[["outputmerger",3],["formatter",3]],["result",6]],[[["pipelinestate",3],["formatter",3]],["result",6]],[[["newtexture",4],["formatter",3]],["result",6]],[[["resourceview",3],["formatter",3]],["result",6]],[[["fatsampler",3],["formatter",3]],["result",6]],[[["targetview",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["glenum",6]],["error",4]],[[["commandbuffer",3],["resourceview",3]]],[[["factory",3]],["capabilities",3]],[[["device",3]],["capabilities",3]],[[["device",3]],["info",3]],[[["resourceview",3]],["texture",6]],[[["fence",3],["",0]]],[[["resources",4],["",0]]],[[["bufferelement",3],["",0]]],[[["outputmerger",3],["",0]]],[[["pipelinestate",3],["",0]]],[[["newtexture",4],["",0]]],[[["resourceview",3],["",0]]],[[["fatsampler",3],["",0]]],[[["targetview",4],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["info",3]],["bool",0]],null,[[["info",3],["u32",0],["u32",0]],["bool",0]],[[["info",3],["str",0]],["bool",0]],[[["info",3],["u32",0],["u32",0],["str",0]],["bool",0]],[[["info",3],["u32",0],["u32",0]],["bool",0]],null,null,[[["version",3],["version",3]],["bool",0]],[[["platformname",3],["platformname",3]],["bool",0]],[[["fence",3],["fence",3]],["bool",0]],[[["bufferelement",3],["bufferelement",3]],["bool",0]],[[["outputmerger",3],["outputmerger",3]],["bool",0]],[[["pipelinestate",3],["pipelinestate",3]],["bool",0]],[[["newtexture",4],["newtexture",4]],["bool",0]],[[["resourceview",3],["resourceview",3]],["bool",0]],[[["fatsampler",3],["fatsampler",3]],["bool",0]],[[["targetview",4],["targetview",4]],["bool",0]],[[["framebuffer",6],["workarounds",3]],["commandbuffer",3]],[[["rc",3,[["share",3]]]],["factory",3]],[[["u32",0],["u32",0],["option",4,[["u32",0]]],["str",0]],["version",3]],[[["texture",6]],["resourceview",3]],[[["u32",0],["u32",0],["str",0]],["version",3]],[[["texture",6],["kind",4]],["resourceview",3]],[[["texture",6],["kind",4]],["resourceview",3]],[[["str",0]],["result",4,[["version",3],["str",0]]]],[[["device",3],["manager",3]]],null,[[["factory",3],["buffer",3]],["result",4,[["reader",3,[["r",4]]],["error",4]]]],null,[[["commandbuffer",3]]],null,[[["commandbuffer",3],["refvalues",3]]],[[["commandbuffer",3],["rect",3]]],null,null,[[["device",3],["commandbuffer",3],["accessinfo",3]],["submissionresult",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["commandbuffer",3],["buffer",6],["usize",0]]],[[["commandbuffer",3],["texturecopyregion",3,[["newtexture",4]]]]],null,null,null,[[["factory",3],["rawbuffer",3],["format",3]],["result",4,[["rawshaderresourceview",3,[["r",4]]],["resourceviewerror",4]]]],[[["factory",3],["rawbuffer",3]],["result",4,[["rawunorderedaccessview",3,[["r",4]]],["resourceviewerror",4]]]],[[["factory",3],["rawtexture",3],["depthstencildesc",3]],["result",4,[["rawdepthstencilview",3,[["r",4]]],["targetviewerror",4]]]],[[["factory",3],["rawtexture",3],["renderdesc",3]],["result",4,[["rawrendertargetview",3,[["r",4]]],["targetviewerror",4]]]],[[["factory",3],["rawtexture",3],["resourcedesc",3]],["result",4,[["rawshaderresourceview",3,[["r",4]]],["resourceviewerror",4]]]],[[["factory",3],["rawtexture",3]],["result",4,[["rawunorderedaccessview",3,[["r",4]]],["resourceviewerror",4]]]],[[["device",3],["fence",3]]],[[["device",3],["fnmut",8]]],[[["factory",3],["buffer",3]],["result",4,[["writer",3,[["r",4]]],["error",4]]]],null,null,null,null,null,null,null,null],"p":[[4,"Error"],[4,"NewTexture"],[4,"TargetView"],[3,"CommandBuffer"],[3,"Factory"],[3,"Device"],[3,"Version"],[3,"PlatformName"],[3,"Info"],[3,"Fence"],[4,"Resources"],[3,"BufferElement"],[3,"OutputMerger"],[3,"PipelineState"],[3,"ResourceView"],[3,"FatSampler"],[13,"Surface"],[13,"Texture"],[13,"Surface"],[13,"Texture"],[13,"TextureLayer"]]},\
"gfx_gl":{"doc":"An OpenGL loader generated by gl-rs.","tn":["ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","ActiveShaderProgram","ActiveShaderProgram","ActiveTexture","ActiveTexture","AttachShader","AttachShader","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","BeginConditionalRender","BeginConditionalRender","BeginQuery","BeginQuery","BeginQueryIndexed","BeginQueryIndexed","BeginTransformFeedback","BeginTransformFeedback","BindAttribLocation","BindAttribLocation","BindBuffer","BindBuffer","BindBufferBase","BindBufferBase","BindBufferRange","BindBufferRange","BindBuffersBase","BindBuffersBase","BindBuffersRange","BindBuffersRange","BindFragDataLocation","BindFragDataLocation","BindFragDataLocationIndexed","BindFragDataLocationIndexed","BindFramebuffer","BindFramebuffer","BindImageTexture","BindImageTexture","BindImageTextures","BindImageTextures","BindProgramPipeline","BindProgramPipeline","BindRenderbuffer","BindRenderbuffer","BindSampler","BindSampler","BindSamplers","BindSamplers","BindTexture","BindTexture","BindTextureUnit","BindTextureUnit","BindTextures","BindTextures","BindTransformFeedback","BindTransformFeedback","BindVertexArray","BindVertexArray","BindVertexBuffer","BindVertexBuffer","BindVertexBuffers","BindVertexBuffers","BlendColor","BlendColor","BlendEquation","BlendEquation","BlendEquationSeparate","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationSeparatei","BlendEquationSeparateiARB","BlendEquationSeparateiARB","BlendEquationi","BlendEquationi","BlendEquationiARB","BlendEquationiARB","BlendFunc","BlendFunc","BlendFuncSeparate","BlendFuncSeparate","BlendFuncSeparatei","BlendFuncSeparatei","BlendFuncSeparateiARB","BlendFuncSeparateiARB","BlendFunci","BlendFunci","BlendFunciARB","BlendFunciARB","BlitFramebuffer","BlitFramebuffer","BlitNamedFramebuffer","BlitNamedFramebuffer","BufferData","BufferData","BufferStorage","BufferStorage","BufferSubData","BufferSubData","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIPPING_INPUT_PRIMITIVES","CLIPPING_OUTPUT_PRIMITIVES","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SLUMINANCE_ALPHA_EXT","COMPRESSED_SLUMINANCE_EXT","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_SRGB_ALPHA_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_SRGB_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SHADER_INVOCATIONS","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_NO_ERROR_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","CheckFramebufferStatus","CheckFramebufferStatus","CheckNamedFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","ClampColor","Clear","Clear","ClearBufferData","ClearBufferData","ClearBufferSubData","ClearBufferSubData","ClearBufferfi","ClearBufferfi","ClearBufferfv","ClearBufferfv","ClearBufferiv","ClearBufferiv","ClearBufferuiv","ClearBufferuiv","ClearColor","ClearColor","ClearDepth","ClearDepth","ClearDepthf","ClearDepthf","ClearNamedBufferData","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearNamedFramebufferuiv","ClearStencil","ClearStencil","ClearTexImage","ClearTexImage","ClearTexSubImage","ClearTexSubImage","ClientWaitSync","ClientWaitSync","ClipControl","ClipControl","ColorMask","ColorMask","ColorMaski","ColorMaski","ColorP3ui","ColorP3ui","ColorP3uiv","ColorP3uiv","ColorP4ui","ColorP4ui","ColorP4uiv","ColorP4uiv","CompileShader","CompileShader","CompressedTexImage1D","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CompressedTextureSubImage3D","CopyBufferSubData","CopyBufferSubData","CopyImageSubData","CopyImageSubData","CopyNamedBufferSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage1D","CopyTexImage2D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage2D","CopyTextureSubImage3D","CopyTextureSubImage3D","CreateBuffers","CreateBuffers","CreateFramebuffers","CreateFramebuffers","CreateProgram","CreateProgram","CreateProgramPipelines","CreateProgramPipelines","CreateQueries","CreateQueries","CreateRenderbuffers","CreateRenderbuffers","CreateSamplers","CreateSamplers","CreateShader","CreateShader","CreateShaderProgramv","CreateShaderProgramv","CreateTextures","CreateTextures","CreateTransformFeedbacks","CreateTransformFeedbacks","CreateVertexArrays","CreateVertexArrays","CullFace","CullFace","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","DebugMessageCallback","DebugMessageCallback","DebugMessageControl","DebugMessageControl","DebugMessageInsert","DebugMessageInsert","DeleteBuffers","DeleteBuffers","DeleteFramebuffers","DeleteFramebuffers","DeleteProgram","DeleteProgram","DeleteProgramPipelines","DeleteProgramPipelines","DeleteQueries","DeleteQueries","DeleteRenderbuffers","DeleteRenderbuffers","DeleteSamplers","DeleteSamplers","DeleteShader","DeleteShader","DeleteSync","DeleteSync","DeleteTextures","DeleteTextures","DeleteTransformFeedbacks","DeleteTransformFeedbacks","DeleteVertexArrays","DeleteVertexArrays","DepthFunc","DepthFunc","DepthMask","DepthMask","DepthRange","DepthRange","DepthRangeArrayv","DepthRangeArrayv","DepthRangeIndexed","DepthRangeIndexed","DepthRangef","DepthRangef","DetachShader","DetachShader","Disable","Disable","DisableVertexArrayAttrib","DisableVertexArrayAttrib","DisableVertexAttribArray","DisableVertexAttribArray","Disablei","Disablei","DispatchCompute","DispatchCompute","DispatchComputeIndirect","DispatchComputeIndirect","DrawArrays","DrawArrays","DrawArraysIndirect","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffer","DrawBuffers","DrawBuffers","DrawElements","DrawElements","DrawElementsBaseVertex","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElements","DrawRangeElementsBaseVertex","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","DrawTransformFeedbackStreamInstanced","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","Enable","Enable","EnableVertexArrayAttrib","EnableVertexArrayAttrib","EnableVertexAttribArray","EnableVertexAttribArray","Enablei","Enablei","EndConditionalRender","EndConditionalRender","EndQuery","EndQuery","EndQueryIndexed","EndQueryIndexed","EndTransformFeedback","EndTransformFeedback","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","FenceSync","FenceSync","Finish","Finish","Flush","Flush","FlushMappedBufferRange","FlushMappedBufferRange","FlushMappedNamedBufferRange","FlushMappedNamedBufferRange","FnPtr","FramebufferParameteri","FramebufferParameteri","FramebufferRenderbuffer","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture","FramebufferTexture1D","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTexture3D","FramebufferTextureLayer","FramebufferTextureLayer","FrontFace","FrontFace","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SHADER_PRIMITIVES_EMITTED","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","GenBuffers","GenBuffers","GenFramebuffers","GenFramebuffers","GenProgramPipelines","GenProgramPipelines","GenQueries","GenQueries","GenRenderbuffers","GenRenderbuffers","GenSamplers","GenSamplers","GenTextures","GenTextures","GenTransformFeedbacks","GenTransformFeedbacks","GenVertexArrays","GenVertexArrays","GenerateMipmap","GenerateMipmap","GenerateTextureMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformName","GetActiveUniformsiv","GetActiveUniformsiv","GetAttachedShaders","GetAttachedShaders","GetAttribLocation","GetAttribLocation","GetBooleani_v","GetBooleani_v","GetBooleanv","GetBooleanv","GetBufferParameteri64v","GetBufferParameteri64v","GetBufferParameteriv","GetBufferParameteriv","GetBufferPointerv","GetBufferPointerv","GetBufferSubData","GetBufferSubData","GetCompressedTexImage","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDebugMessageLog","GetDoublei_v","GetDoublei_v","GetDoublev","GetDoublev","GetError","GetError","GetFloati_v","GetFloati_v","GetFloatv","GetFloatv","GetFragDataIndex","GetFragDataIndex","GetFragDataLocation","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64i_v","GetInteger64v","GetInteger64v","GetIntegeri_v","GetIntegeri_v","GetIntegerv","GetIntegerv","GetInternalformati64v","GetInternalformati64v","GetInternalformativ","GetInternalformativ","GetMultisamplefv","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectLabel","GetObjectPtrLabel","GetObjectPtrLabel","GetPointerv","GetPointerv","GetProgramBinary","GetProgramBinary","GetProgramInfoLog","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceName","GetProgramResourceiv","GetProgramResourceiv","GetProgramStageiv","GetProgramStageiv","GetProgramiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryObjectuiv","GetQueryiv","GetQueryiv","GetRenderbufferParameteriv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameterfv","GetSamplerParameteriv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderPrecisionFormat","GetShaderSource","GetShaderSource","GetShaderiv","GetShaderiv","GetString","GetString","GetStringi","GetStringi","GetSubroutineIndex","GetSubroutineIndex","GetSubroutineUniformLocation","GetSubroutineUniformLocation","GetSynciv","GetSynciv","GetTexImage","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameterfv","GetTexParameteriv","GetTexParameteriv","GetTextureImage","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameterfv","GetTextureParameteriv","GetTextureParameteriv","GetTextureSubImage","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformBlockIndex","GetUniformIndices","GetUniformIndices","GetUniformLocation","GetUniformLocation","GetUniformSubroutineuiv","GetUniformSubroutineuiv","GetUniformdv","GetUniformdv","GetUniformfv","GetUniformfv","GetUniformiv","GetUniformiv","GetUniformuiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribfv","GetVertexAttribiv","GetVertexAttribiv","GetnColorTable","GetnColorTable","GetnCompressedTexImage","GetnCompressedTexImage","GetnConvolutionFilter","GetnConvolutionFilter","GetnHistogram","GetnHistogram","GetnMapdv","GetnMapdv","GetnMapfv","GetnMapfv","GetnMapiv","GetnMapiv","GetnMinmax","GetnMinmax","GetnPixelMapfv","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapuiv","GetnPixelMapusv","GetnPixelMapusv","GetnPolygonStipple","GetnPolygonStipple","GetnSeparableFilter","GetnSeparableFilter","GetnTexImage","GetnTexImage","GetnUniformdv","GetnUniformdv","GetnUniformfv","GetnUniformfv","GetnUniformiv","GetnUniformiv","GetnUniformuiv","GetnUniformuiv","Gl","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","Hint","Hint","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","InvalidateBufferData","InvalidateBufferData","InvalidateBufferSubData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexImage","InvalidateTexSubImage","InvalidateTexSubImage","IsBuffer","IsBuffer","IsEnabled","IsEnabled","IsEnabledi","IsEnabledi","IsFramebuffer","IsFramebuffer","IsProgram","IsProgram","IsProgramPipeline","IsProgramPipeline","IsQuery","IsQuery","IsRenderbuffer","IsRenderbuffer","IsSampler","IsSampler","IsShader","IsShader","IsSync","IsSync","IsTexture","IsTexture","IsTransformFeedback","IsTransformFeedback","IsVertexArray","IsVertexArray","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","LineWidth","LineWidth","LinkProgram","LinkProgram","LogicOp","LogicOp","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_MAX_ANISOTROPY","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","MapBuffer","MapBuffer","MapBufferRange","MapBufferRange","MapNamedBuffer","MapNamedBuffer","MapNamedBufferRange","MapNamedBufferRange","MemoryBarrier","MemoryBarrier","MemoryBarrierByRegion","MemoryBarrierByRegion","MinSampleShading","MinSampleShading","MultiDrawArrays","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawArraysIndirect","MultiDrawArraysIndirectCount","MultiDrawArraysIndirectCount","MultiDrawElements","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiDrawElementsIndirect","MultiDrawElementsIndirectCount","MultiDrawElementsIndirectCount","MultiTexCoordP1ui","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4ui","MultiTexCoordP4uiv","MultiTexCoordP4uiv","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","NUM_SPIR_V_EXTENSIONS","NamedBufferData","NamedBufferData","NamedBufferStorage","NamedBufferStorage","NamedBufferSubData","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3ui","NormalP3uiv","NormalP3uiv","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","ObjectLabel","ObjectLabel","ObjectPtrLabel","ObjectPtrLabel","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PARAMETER_BUFFER","PARAMETER_BUFFER_BINDING","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_CLAMP","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVES_SUBMITTED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","PatchParameterfv","PatchParameterfv","PatchParameteri","PatchParameteri","PauseTransformFeedback","PauseTransformFeedback","PixelStoref","PixelStoref","PixelStorei","PixelStorei","PointParameterf","PointParameterf","PointParameterfv","PointParameterfv","PointParameteri","PointParameteri","PointParameteriv","PointParameteriv","PointSize","PointSize","PolygonMode","PolygonMode","PolygonOffset","PolygonOffset","PolygonOffsetClamp","PolygonOffsetClamp","PopDebugGroup","PopDebugGroup","PrimitiveRestartIndex","PrimitiveRestartIndex","ProgramBinary","ProgramBinary","ProgramParameteri","ProgramParameteri","ProgramUniform1d","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProgramUniformMatrix4x3fv","ProvokingVertex","ProvokingVertex","PushDebugGroup","PushDebugGroup","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","QueryCounter","QueryCounter","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","ReadBuffer","ReadBuffer","ReadPixels","ReadPixels","ReadnPixels","ReadnPixels","ReleaseShaderCompiler","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorage","RenderbufferStorageMultisample","RenderbufferStorageMultisample","ResumeTransformFeedback","ResumeTransformFeedback","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_BINARY_FORMAT_SPIR_V","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SLUMINANCE8_ALPHA8_EXT","SLUMINANCE8_EXT","SLUMINANCE_ALPHA_EXT","SLUMINANCE_EXT","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SPIR_V_BINARY","SPIR_V_EXTENSIONS","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB8_ALPHA8_EXT","SRGB8_EXT","SRGB_ALPHA","SRGB_ALPHA_EXT","SRGB_EXT","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","SampleCoverage","SampleCoverage","SampleMaski","SampleMaski","SamplerParameterIiv","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterf","SamplerParameterfv","SamplerParameterfv","SamplerParameteri","SamplerParameteri","SamplerParameteriv","SamplerParameteriv","Scissor","Scissor","ScissorArrayv","ScissorArrayv","ScissorIndexed","ScissorIndexed","ScissorIndexedv","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3ui","SecondaryColorP3uiv","SecondaryColorP3uiv","ShaderBinary","ShaderBinary","ShaderSource","ShaderSource","ShaderStorageBlockBinding","ShaderStorageBlockBinding","SpecializeShader","SpecializeShader","StencilFunc","StencilFunc","StencilFuncSeparate","StencilFuncSeparate","StencilMask","StencilMask","StencilMaskSeparate","StencilMaskSeparate","StencilOp","StencilOp","StencilOpSeparate","StencilOpSeparate","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SHADER_PATCHES","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SHADER_INVOCATIONS","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_ANISOTROPY","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_OVERFLOW","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_STREAM_OVERFLOW","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","TexBuffer","TexBuffer","TexBufferRange","TexBufferRange","TexCoordP1ui","TexCoordP1ui","TexCoordP1uiv","TexCoordP1uiv","TexCoordP2ui","TexCoordP2ui","TexCoordP2uiv","TexCoordP2uiv","TexCoordP3ui","TexCoordP3ui","TexCoordP3uiv","TexCoordP3uiv","TexCoordP4ui","TexCoordP4ui","TexCoordP4uiv","TexCoordP4uiv","TexImage1D","TexImage1D","TexImage2D","TexImage2D","TexImage2DMultisample","TexImage2DMultisample","TexImage3D","TexImage3D","TexImage3DMultisample","TexImage3DMultisample","TexParameterIiv","TexParameterIiv","TexParameterIuiv","TexParameterIuiv","TexParameterf","TexParameterf","TexParameterfv","TexParameterfv","TexParameteri","TexParameteri","TexParameteriv","TexParameteriv","TexStorage1D","TexStorage1D","TexStorage2D","TexStorage2D","TexStorage2DMultisample","TexStorage2DMultisample","TexStorage3D","TexStorage3D","TexStorage3DMultisample","TexStorage3DMultisample","TexSubImage1D","TexSubImage1D","TexSubImage2D","TexSubImage2D","TexSubImage3D","TexSubImage3D","TextureBarrier","TextureBarrier","TextureBuffer","TextureBuffer","TextureBufferRange","TextureBufferRange","TextureParameterIiv","TextureParameterIiv","TextureParameterIuiv","TextureParameterIuiv","TextureParameterf","TextureParameterf","TextureParameterfv","TextureParameterfv","TextureParameteri","TextureParameteri","TextureParameteriv","TextureParameteriv","TextureStorage1D","TextureStorage1D","TextureStorage2D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3D","TextureStorage3DMultisample","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage1D","TextureSubImage2D","TextureSubImage2D","TextureSubImage3D","TextureSubImage3D","TextureView","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackBufferRange","TransformFeedbackVaryings","TransformFeedbackVaryings","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","Uniform1d","Uniform1d","Uniform1dv","Uniform1dv","Uniform1f","Uniform1f","Uniform1fv","Uniform1fv","Uniform1i","Uniform1i","Uniform1iv","Uniform1iv","Uniform1ui","Uniform1ui","Uniform1uiv","Uniform1uiv","Uniform2d","Uniform2d","Uniform2dv","Uniform2dv","Uniform2f","Uniform2f","Uniform2fv","Uniform2fv","Uniform2i","Uniform2i","Uniform2iv","Uniform2iv","Uniform2ui","Uniform2ui","Uniform2uiv","Uniform2uiv","Uniform3d","Uniform3d","Uniform3dv","Uniform3dv","Uniform3f","Uniform3f","Uniform3fv","Uniform3fv","Uniform3i","Uniform3i","Uniform3iv","Uniform3iv","Uniform3ui","Uniform3ui","Uniform3uiv","Uniform3uiv","Uniform4d","Uniform4d","Uniform4dv","Uniform4dv","Uniform4f","Uniform4f","Uniform4fv","Uniform4fv","Uniform4i","Uniform4i","Uniform4iv","Uniform4iv","Uniform4ui","Uniform4ui","Uniform4uiv","Uniform4uiv","UniformBlockBinding","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformMatrix4x3fv","UniformSubroutinesuiv","UniformSubroutinesuiv","UnmapBuffer","UnmapBuffer","UnmapNamedBuffer","UnmapNamedBuffer","UseProgram","UseProgram","UseProgramStages","UseProgramStages","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SHADER_INVOCATIONS","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VERTICES_SUBMITTED","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","ValidateProgram","ValidateProgram","ValidateProgramPipeline","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1s","VertexAttrib1sv","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2s","VertexAttrib2sv","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3s","VertexAttrib3sv","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttrib4usv","VertexAttribBinding","VertexAttribBinding","VertexAttribDivisor","VertexAttribDivisor","VertexAttribFormat","VertexAttribFormat","VertexAttribI1i","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIFormat","VertexAttribIPointer","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1d","VertexAttribL1dv","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2d","VertexAttribL2dv","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3d","VertexAttribL3dv","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4d","VertexAttribL4dv","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLFormat","VertexAttribLPointer","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribP4uiv","VertexAttribPointer","VertexAttribPointer","VertexBindingDivisor","VertexBindingDivisor","VertexP2ui","VertexP2ui","VertexP2uiv","VertexP2uiv","VertexP3ui","VertexP3ui","VertexP3uiv","VertexP3uiv","VertexP4ui","VertexP4ui","VertexP4uiv","VertexP4uiv","Viewport","Viewport","ViewportArrayv","ViewportArrayv","ViewportIndexedf","ViewportIndexedf","ViewportIndexedfv","ViewportIndexedfv","WAIT_FAILED","WRITE_ONLY","WaitSync","WaitSync","XOR","ZERO","ZERO_TO_ONE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","__GLsync","_cl_context","_cl_event","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["gfx_glgfx_gl::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ActiveTextureARB","","Fallbacks: AttachObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: BeginConditionalRenderNV","","Fallbacks: BeginQueryARB","","","","Fallbacks: BeginTransformFeedbackEXT, …","","Fallbacks: BindAttribLocationARB","","Fallbacks: BindBufferARB","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","","","","Fallbacks: BindFragDataLocationEXT","","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","","","","","","","","","Fallbacks: BindTextureEXT","","","","","","","","Fallbacks: BindVertexArrayOES","","","","","","Fallbacks: BlendColorEXT","","Fallbacks: BlendEquationEXT","","Fallbacks: BlendEquationSeparateEXT","","Fallbacks: BlendEquationSeparateIndexedAMD, …","","","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","","","","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","","Fallbacks: BlendFuncSeparateIndexedAMD, …","","","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","","","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","","","Fallbacks: BufferDataARB","","Fallbacks: BufferStorageEXT","","Fallbacks: BufferSubDataARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CheckFramebufferStatusEXT","","","","Fallbacks: ClampColorARB","","","","","","","","","","","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","","","","","","","","","Fallbacks: ClearTexImageEXT","","Fallbacks: ClearTexSubImageEXT","","Fallbacks: ClientWaitSyncAPPLE","","Fallbacks: ClipControlEXT","","","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","","","","","","Fallbacks: CompileShaderARB","","Fallbacks: CompressedTexImage1DARB","","Fallbacks: CompressedTexImage2DARB","","Fallbacks: CompressedTexImage3DARB","","Fallbacks: CompressedTexSubImage1DARB","","Fallbacks: CompressedTexSubImage2DARB","","Fallbacks: CompressedTexSubImage3DARB","","","","","","","","Fallbacks: CopyBufferSubDataNV","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","","","Fallbacks: CopyTexImage1DEXT","","Fallbacks: CopyTexImage2DEXT","","Fallbacks: CopyTexSubImage1DEXT","","Fallbacks: CopyTexSubImage2DEXT","","Fallbacks: CopyTexSubImage3DEXT","","","","","","","","","","","","Fallbacks: CreateProgramObjectARB","","","","","","","","","","Fallbacks: CreateShaderObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","","Fallbacks: DeleteBuffersARB","","Fallbacks: DeleteFramebuffersEXT","","","","","","Fallbacks: DeleteQueriesARB","","Fallbacks: DeleteRenderbuffersEXT","","","","","","Fallbacks: DeleteSyncAPPLE","","","","Fallbacks: DeleteTransformFeedbacksNV","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","","","","","","","Fallbacks: DepthRangefOES","","Fallbacks: DetachObjectARB","","","","","","Fallbacks: DisableVertexAttribArrayARB","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","","","","Fallbacks: DrawArraysEXT","","","","Fallbacks: DrawArraysInstancedANGLE, …","","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","","","Fallbacks: DrawElementsBaseVertexEXT, …","","","","Fallbacks: DrawElementsInstancedANGLE, …","","Fallbacks: DrawElementsInstancedBaseInstanceEXT","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","","Fallbacks: DrawRangeElementsEXT","","Fallbacks: DrawRangeElementsBaseVertexEXT, …","","Fallbacks: DrawTransformFeedbackEXT, …","","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","","","","","","","","","","","","Fallbacks: EnableVertexAttribArrayARB","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","","Fallbacks: EndQueryARB","","","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: FenceSyncAPPLE","","","","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","","","","","Fallbacks: FramebufferRenderbufferEXT","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","","Fallbacks: FramebufferTexture1DEXT","","Fallbacks: FramebufferTexture2DEXT","","Fallbacks: FramebufferTexture3DEXT","","Fallbacks: FramebufferTextureLayerARB, …","","","","","","","","","","","","","","","","","","","","","Fallbacks: GenBuffersARB","","Fallbacks: GenFramebuffersEXT","","","","Fallbacks: GenQueriesARB","","Fallbacks: GenRenderbuffersEXT","","","","","","Fallbacks: GenTransformFeedbacksNV","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","","Fallbacks: GenerateMipmapEXT","","","","","","Fallbacks: GetActiveAttribARB","","","","","","","","Fallbacks: GetActiveUniformARB","","","","","","","","","","","","Fallbacks: GetAttribLocationARB","","Fallbacks: GetBooleanIndexedvEXT","","","","","","Fallbacks: GetBufferParameterivARB","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","","Fallbacks: GetBufferSubDataARB","","Fallbacks: GetCompressedTexImageARB","","","","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","","","Fallbacks: GetFragDataIndexEXT","","Fallbacks: GetFragDataLocationEXT","","Fallbacks: GetFramebufferAttachmentParameterivEXT","","","","Fallbacks: GetGraphicsResetStatusEXT, …","","","","Fallbacks: GetInteger64vAPPLE","","Fallbacks: GetIntegerIndexedvEXT","","","","","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","","","","","","","","","Fallbacks: GetObjectLabelKHR","","Fallbacks: GetObjectPtrLabelKHR","","Fallbacks: GetPointervEXT, GetPointervKHR","","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","","Fallbacks: GetQueryObjectui64vEXT","","Fallbacks: GetQueryObjectuivARB","","Fallbacks: GetQueryivARB","","Fallbacks: GetRenderbufferParameterivEXT","","Fallbacks: GetSamplerParameterIivEXT, …","","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","","","","","","Fallbacks: GetShaderSourceARB","","","","","","","","","","","","Fallbacks: GetSyncivAPPLE","","","","","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","","","","","","","Fallbacks: GetUniformLocationARB","","","","","","Fallbacks: GetUniformfvARB","","Fallbacks: GetUniformivARB","","Fallbacks: GetUniformuivEXT","","","","","","","","Fallbacks: GetVertexAttribIivEXT","","Fallbacks: GetVertexAttribIuivEXT","","Fallbacks: GetVertexAttribLdvEXT","","Fallbacks: GetVertexAttribPointervARB, …","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","","Fallbacks: GetnUniformuivKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: IsBufferARB","","","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","","Fallbacks: IsFramebufferEXT","","","","","","Fallbacks: IsQueryARB","","Fallbacks: IsRenderbufferEXT","","","","","","Fallbacks: IsSyncAPPLE","","","","Fallbacks: IsTransformFeedbackNV","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: LinkProgramallbacks: MapBufferARB, MapBufferOES","","Fallbacks: MapBufferRangeEXT","","","","","","Fallbacks: MemoryBarrierEXT","","","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","","Fallbacks: MultiDrawArraysEXT","","Fallbacks: MultiDrawArraysIndirectAMD, …","","Fallbacks: MultiDrawArraysIndirectCountARB","","Fallbacks: MultiDrawElementsEXT","","Fallbacks: MultiDrawElementsBaseVertexEXT","","Fallbacks: MultiDrawElementsIndirectAMD, …","","Fallbacks: MultiDrawElementsIndirectCountARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","","Fallbacks: ObjectPtrLabelKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","","Fallbacks: PauseTransformFeedbackNV","","","","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","","Fallbacks: PointParameteriNV","","Fallbacks: PointParameterivNV","","","","Fallbacks: PolygonModeNV","","","","Fallbacks: PolygonOffsetClampEXT","","Fallbacks: PopDebugGroupKHR","","","","Fallbacks: ProgramBinaryOES","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","","","","Fallbacks: ProgramUniform1fEXT","","Fallbacks: ProgramUniform1fvEXT","","Fallbacks: ProgramUniform1iEXT","","Fallbacks: ProgramUniform1ivEXT","","Fallbacks: ProgramUniform1uiEXT","","Fallbacks: ProgramUniform1uivEXT","","","","","","Fallbacks: ProgramUniform2fEXT","","Fallbacks: ProgramUniform2fvEXT","","Fallbacks: ProgramUniform2iEXT","","Fallbacks: ProgramUniform2ivEXT","","Fallbacks: ProgramUniform2uiEXT","","Fallbacks: ProgramUniform2uivEXT","","","","","","Fallbacks: ProgramUniform3fEXT","","Fallbacks: ProgramUniform3fvEXT","","Fallbacks: ProgramUniform3iEXT","","Fallbacks: ProgramUniform3ivEXT","","Fallbacks: ProgramUniform3uiEXT","","Fallbacks: ProgramUniform3uivEXT","","","","","","Fallbacks: ProgramUniform4fEXT","","Fallbacks: ProgramUniform4fvEXT","","Fallbacks: ProgramUniform4iEXT","","Fallbacks: ProgramUniform4ivEXT","","Fallbacks: ProgramUniform4uiEXT","","Fallbacks: ProgramUniform4uivEXT","","","","Fallbacks: ProgramUniformMatrix2fvEXT","","","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","","","Fallbacks: ProgramUniformMatrix3fvEXT","","","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","","","Fallbacks: ProgramUniformMatrix4fvEXT","","","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","","","Fallbacks: ProgramUniformMatrix4x3fvEXT","","Fallbacks: ProvokingVertexEXT","","Fallbacks: PushDebugGroupKHR","","","","","","","","","","","","","","","","","","","","","Fallbacks: QueryCounterEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","","","Fallbacks: RenderbufferStorageEXT","","Fallbacks: RenderbufferStorageMultisampleEXT, …","","Fallbacks: ResumeTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: SampleCoverageARB","","","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES","","","","","","","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","","","","","Fallbacks: ShaderSourceARB","","","","Fallbacks: SpecializeShaderARB","","","","","","","","","","","","Fallbacks: StencilOpSeparateallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","","","","","","Fallbacks: TexStorage1DEXT","","Fallbacks: TexStorage2DEXT","","","","Fallbacks: TexStorage3DEXT","","Fallbacks: TexStorage3DMultisampleOES","","Fallbacks: TexSubImage1DEXT","","Fallbacks: TexSubImage2DEXT","","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","","","","Fallbacks: TransformFeedbackVaryingsEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: Uniform1fARB","","Fallbacks: Uniform1fvARB","","Fallbacks: Uniform1iARB","","Fallbacks: Uniform1ivARB","","Fallbacks: Uniform1uiEXT","","Fallbacks: Uniform1uivEXT","","","","","","Fallbacks: Uniform2fARB","","Fallbacks: Uniform2fvARB","","Fallbacks: Uniform2iARB","","Fallbacks: Uniform2ivARB","","Fallbacks: Uniform2uiEXT","","Fallbacks: Uniform2uivEXT","","","","","","Fallbacks: Uniform3fARB","","Fallbacks: Uniform3fvARB","","Fallbacks: Uniform3iARB","","Fallbacks: Uniform3ivARB","","Fallbacks: Uniform3uiEXT","","Fallbacks: Uniform3uivEXT","","","","","","Fallbacks: Uniform4fARB","","Fallbacks: Uniform4fvARB","","Fallbacks: Uniform4iARB","","Fallbacks: Uniform4ivARB","","Fallbacks: Uniform4uiEXT","","Fallbacks: Uniform4uivEXT","","","","","","Fallbacks: UniformMatrix2fvARB","","","","Fallbacks: UniformMatrix2x3fvNV","","","","Fallbacks: UniformMatrix2x4fvNV","","","","Fallbacks: UniformMatrix3fvARB","","","","Fallbacks: UniformMatrix3x2fvNV","","","","Fallbacks: UniformMatrix3x4fvNV","","","","Fallbacks: UniformMatrix4fvARB","","","","Fallbacks: UniformMatrix4x2fvNV","","","","Fallbacks: UniformMatrix4x3fvNV","","","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","","","Fallbacks: UseProgramObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ValidateProgramARB","","","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","","Fallbacks: VertexAttrib4NbvARB","","Fallbacks: VertexAttrib4NivARB","","Fallbacks: VertexAttrib4NsvARB","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","","Fallbacks: VertexAttrib4NuivARB","","Fallbacks: VertexAttrib4NusvARB","","Fallbacks: VertexAttrib4bvARB","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","","Fallbacks: VertexAttrib4ivARB","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","","Fallbacks: VertexAttrib4ubvARB","","Fallbacks: VertexAttrib4uivARB","","Fallbacks: VertexAttrib4usvARB","","","","Fallbacks: VertexAttribDivisorANGLE, …","","","","Fallbacks: VertexAttribI1iEXT","","Fallbacks: VertexAttribI1ivEXT","","Fallbacks: VertexAttribI1uiEXT","","Fallbacks: VertexAttribI1uivEXT","","Fallbacks: VertexAttribI2iEXT","","Fallbacks: VertexAttribI2ivEXT","","Fallbacks: VertexAttribI2uiEXT","","Fallbacks: VertexAttribI2uivEXT","","Fallbacks: VertexAttribI3iEXT","","Fallbacks: VertexAttribI3ivEXT","","Fallbacks: VertexAttribI3uiEXT","","Fallbacks: VertexAttribI3uivEXT","","Fallbacks: VertexAttribI4bvEXT","","Fallbacks: VertexAttribI4iEXT","","Fallbacks: VertexAttribI4ivEXT","","Fallbacks: VertexAttribI4svEXT","","Fallbacks: VertexAttribI4ubvEXT","","Fallbacks: VertexAttribI4uiEXT","","Fallbacks: VertexAttribI4uivEXT","","Fallbacks: VertexAttribI4usvEXT","","","","Fallbacks: VertexAttribIPointerEXT","","Fallbacks: VertexAttribL1dEXT","","Fallbacks: VertexAttribL1dvEXT","","Fallbacks: VertexAttribL2dEXT","","Fallbacks: VertexAttribL2dvEXT","","Fallbacks: VertexAttribL3dEXT","","Fallbacks: VertexAttribL3dvEXT","","Fallbacks: VertexAttribL4dEXT","","Fallbacks: VertexAttribL4dvEXT","","","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","","","","Fallbacks: WaitSyncAPPLE","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6],["glenum",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glchar",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizeiptr",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glchar",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6],["glchar",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glint",6],["glboolean",6],["glint",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glintptr",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizei",0]]],null,[[["gl",3],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6]]],null,[[["gl",3],["glenum",6],["glenum",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glbitfield",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glbitfield",6],["glenum",6]]],null,[[["gl",3],["glenum",6],["glsizeiptr",6],["c_void",0],["glenum",6]]],null,[[["gl",3],["glenum",6],["glsizeiptr",6],["c_void",0],["glbitfield",6]]],null,[[["gl",3],["glenum",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6]],["glenum",6]],null,[[["gl",3],["gluint",6],["glenum",6]],["glenum",6]],null,[[["gl",3],["glenum",6],["glenum",6]]],null,[[["gl",3],["glbitfield",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glintptr",6],["glsizeiptr",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glfloat",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glint",6],["gluint",0]]],null,[[["gl",3],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gldouble",6]]],null,[[["gl",3],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glintptr",6],["glsizeiptr",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6],["glfloat",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6],["gluint",0]]],null,[[["gl",3],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glsync",6],["glbitfield",6],["gluint64",6]],["glenum",6]],null,[[["gl",3],["glenum",6],["glenum",6]]],null,[[["gl",3],["glboolean",6],["glboolean",6],["glboolean",6],["glboolean",6]]],null,[[["gl",3],["gluint",6],["glboolean",6],["glboolean",6],["glboolean",6],["glboolean",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glintptr",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["gluint",6],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glintptr",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3]],["gluint",6]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6]],["gluint",6]],null,[[["gl",3],["glenum",6],["glsizei",6],["glchar",0]],["gluint",6]],null,[[["gl",3],["glenum",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gldebugproc",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["gluint",0],["glboolean",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6],["glenum",6],["glsizei",6],["glchar",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glsync",6]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glboolean",6]]],null,[[["gl",3],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glintptr",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glsizei",6],["glsizei",6],["gluint",6]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glsizei",6],["glenum",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["glint",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6],["glsizei",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6],["glsizei",6],["glenum",6],["c_void",0],["glint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["gluint",6],["glsizei",6]]],null,null,null,null,null,null,null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6],["glbitfield",6]],["glsync",6]],null,[[["gl",3]]],null,[[["gl",3]]],null,[[["gl",3],["glenum",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,null,[[["gl",3],["glenum",6],["glenum",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["gl",3],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glint",0],["glenum",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glint",0],["glenum",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["gluint",0],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["gluint",0]]],null,[[["gl",3],["gluint",6],["glchar",0]],["glint",6]],null,[[["gl",3],["glenum",6],["gluint",6],["glboolean",0]]],null,[[["gl",3],["glenum",6],["glboolean",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint64",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",0],["glenum",0],["gluint",0],["glenum",0],["glsizei",0],["glchar",0]],["gluint",6]],null,[[["gl",3],["glenum",6],["gluint",6],["gldouble",0]]],null,[[["gl",3],["glenum",6],["gldouble",0]]],null,[[["gl",3]],["glenum",6]],null,[[["gl",3],["glenum",6],["gluint",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glchar",0]],["glint",6]],null,[[["gl",3],["gluint",6],["glchar",0]],["glint",6]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3]],["glenum",6]],null,[[["gl",3],["glenum",6],["gluint",6],["glint64",0]]],null,[[["gl",3],["glenum",6],["glint64",0]]],null,[[["gl",3],["glenum",6],["gluint",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["glint64",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glenum",6],["gluint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint64",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["c_void",0],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["glenum",0],["c_void",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glchar",0]],["gluint",6]],null,[[["gl",3],["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["gl",3],["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glenum",0],["glsizei",6],["glsizei",0],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint64",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint64",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0],["glint",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6]],["glubyte",0]],null,[[["gl",3],["glenum",6],["gluint",6]],["glubyte",0]],null,[[["gl",3],["gluint",6],["glenum",6],["glchar",0]],["gluint",6]],null,[[["gl",3],["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["gl",3],["glsync",6],["glenum",6],["glsizei",6],["glsizei",0],["glint",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glsizei",0],["glenum",0],["glchar",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glint64",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glchar",0]],["gluint",6]],null,[[["gl",3],["gluint",6],["glsizei",6],["glchar",0],["gluint",0]]],null,[[["gl",3],["gluint",6],["glchar",0]],["glint",6]],null,[[["gl",3],["glenum",6],["glint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glint64",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glboolean",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glboolean",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glushort",0]]],null,[[["gl",3],["glsizei",6],["glubyte",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0],["glsizei",6],["c_void",0],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,null,null,null,null,[[["gl",3],["glenum",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",0],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",0],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["glenum",6]],["glboolean",6]],null,[[["gl",3],["glenum",6],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["glsync",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glfloat",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6],["glenum",6]],["c_void",0]],null,[[["gl",3],["glenum",6],["glintptr",6],["glsizeiptr",6],["glbitfield",6]],["c_void",0]],null,[[["gl",3],["gluint",6],["glenum",6]],["c_void",0]],null,[[["gl",3],["gluint",6],["glintptr",6],["glsizeiptr",6],["glbitfield",6]],["c_void",0]],null,[[["gl",3],["glbitfield",6]]],null,[[["gl",3],["glbitfield",6]]],null,[[["gl",3],["glfloat",6]]],null,[[["gl",3],["glenum",6],["glint",0],["glsizei",0],["glsizei",6]]],null,[[["gl",3],["glenum",6],["c_void",0],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["c_void",0],["glintptr",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",0],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",0],["glenum",6],["c_void",0],["glsizei",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["c_void",0],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["c_void",0],["glintptr",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6],["glsizeiptr",6],["c_void",0],["glenum",6]]],null,[[["gl",3],["gluint",6],["glsizeiptr",6],["c_void",0],["glbitfield",6]]],null,[[["gl",3],["gluint",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6],["glchar",0]]],null,[[["gl",3],["c_void",0],["glsizei",6],["glchar",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glint",6]]],null,[[["gl",3]]],null,[[["gl",3],["glenum",6],["glfloat",6]]],null,[[["gl",3],["glenum",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glfloat",6]]],null,[[["gl",3],["glenum",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glint",0]]],null,[[["gl",3],["glfloat",6]]],null,[[["gl",3],["glenum",6],["glenum",6]]],null,[[["gl",3],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glenum",6],["gluint",6],["glsizei",6],["glchar",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6]]],null,[[["gl",3],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3]]],null,[[["gl",3],["glenum",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glfloat",6],["glboolean",6]]],null,[[["gl",3],["gluint",6],["glbitfield",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glsizei",6],["gluint",0],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glchar",0],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glchar",0],["gluint",6],["gluint",0],["gluint",0]]],null,[[["gl",3],["glenum",6],["glint",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",6],["gluint",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glfloat",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",6]]],null,[[["gl",3],["glenum",6],["glenum",6],["glint",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["gluint",6],["glenum",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glchar",0],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["glint",6],["gldouble",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glfloat",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glint",6],["gluint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glint",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glint",0]]],null,[[["gl",3],["glint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gl",3],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gl",3],["glenum",6],["glsizei",6],["gluint",0]]],null,[[["gl",3],["glenum",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]],["glboolean",6]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["glbitfield",6],["gluint",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6],["glintptr",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizei",0]]],null,[[["gl",3],["gluint",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glshort",6]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glshort",6],["glshort",6]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glshort",6],["glshort",6],["glshort",6]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["glbyte",0]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["glubyte",6],["glubyte",6],["glubyte",6],["glubyte",6]]],null,[[["gl",3],["gluint",6],["glubyte",0]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glushort",0]]],null,[[["gl",3],["gluint",6],["glbyte",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glshort",6],["glshort",6],["glshort",6],["glshort",6]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["glubyte",0]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glushort",0]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glbyte",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gl",3],["gluint",6],["glint",0]]],null,[[["gl",3],["gluint",6],["glshort",0]]],null,[[["gl",3],["gluint",6],["glubyte",0]]],null,[[["gl",3],["gluint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glushort",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gl",3],["gluint",6],["gldouble",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gl",3],["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gl",3],["gluint",6],["glint",6],["glenum",6],["glboolean",6],["glsizei",6],["c_void",0]]],null,[[["gl",3],["gluint",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glenum",6],["gluint",6]]],null,[[["gl",3],["glenum",6],["gluint",0]]],null,[[["gl",3],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gl",3],["gluint",6],["glsizei",6],["glfloat",0]]],null,[[["gl",3],["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gl",3],["gluint",6],["glfloat",0]]],null,null,null,[[["gl",3],["glsync",6],["glbitfield",6],["gluint64",6]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["fnptr",3]],["fnptr",3]],[[["gl",3]],["gl",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[["fnptr",3]],["bool",0]],[[],["gl",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Gl"],[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"gfx_graphics":{"doc":"A Piston 2D graphics back-end using gfx-rs.","t":[13,13,13,13,8,4,16,4,4,4,3,3,6,13,8,13,13,13,13,13,13,3,3,8,3,13,8,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,12,12,5,5],"n":["Both","ClampToBorder","ClampToEdge","Create","CreateTexture","Error","Error","Filter","Flip","Format","Gfx2d","GfxGraphics","GlyphCache","Horizontal","ImageSize","Linear","MirroredRepeat","Nearest","None","Repeat","Rgba8","Texture","TextureContext","TextureOp","TextureSettings","Update","UpdateTexture","Vertical","Wrap","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_color","clear_stencil","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compress","convert_gamma","create","create","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encoder","encoder","eq","eq","eq","eq","factory","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_image","from_memory_alpha","from_path","generate_mipmap","get_border_color","get_compress","get_convert_gamma","get_filter","get_generate_mipmap","get_height","get_mag","get_min","get_mipmap","get_size","get_size","get_width","get_wrap_u","get_wrap_v","has_texture_alpha","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","mag","min","mipmap","ne","ne","new","new","new","ops","sampler","set_border_color","set_compress","set_convert_gamma","set_filter","set_generate_mipmap","set_mag","set_min","set_mipmap","set_wrap_u","set_wrap_v","surface","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tri_list","tri_list_c","tri_list_uv","tri_list_uv_c","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","view","wrap_u","wrap_v","0","0","alpha_to_rgba8","flip_vertical"],"q":["gfx_graphicsgfx_graphics::Error","","gfx_graphics::ops",""],"d":["Flips image both vertically and horizontally.","Coordinates outside the range [0.0, 1.0] will be given a …","The coordinate will be clamped between 0 and 1.","An error when creating texture.","Implemented by textures for creation.","Create creation or update error.","The error when performing an operation.","Sampling filter","Flip settings.","Texture format.","The data used for drawing 2D graphics.","Used for rendering 2D graphics.","Stores textures for text rendering.","Flips image horizontally.","Implemented by all images to be used with generic …","A Weighted Linear Blend","Repeats the texture and mirrors it, when the integer part …","Nearest Texel","Does not flip.","Repeats the texture by ignoring the integer part of the …","<code>(red, green, blue, alpha)</code> with values 0-255.","Represents a texture.","Context required to create and update textures.","Implemented by texture operations.","Texture creation parameters.","An error when updating texture.","Implemented by textures for updating.","Flips image vertically.","Wrap mode","Sets the border color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets compress.","Sets convert gamma.","Create texture from memory.","","","","","","","","","","","","","","","","","","","","","","Renders graphics to a Gfx renderer.","","","","","","","","","","","Returns empty texture.","An encoder to update textures.","Provide access to the <code>gfx::Encoder</code> in case a user needs to …","","","","","A factory to create textures.","Sets the min and mag filter","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a texture from image.","Creates texture from memory alpha.","Creates a texture from path.","Sets generate mipmap.","Gets the border color","Gets wheter compress on the GPU.","Gets whether to convert gamma, treated as sRGB color space.","Returns the min and mag filter","Gets generate mipmap.","Gets the image height.","Gets magnify filter","Gets minify filter.","Gets minify mipmap filter","Get the image size.","","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","Returns true if texture has alpha channel.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","","","Create default settings.","Creates a new Gfx2d object.","Creates a new object for rendering 2D graphics.","Image operations for textures.","Sampler for texture.","Sets the border color","Sets compress.","Sets convert gamma.","Sets the min and mag filter","Sets generate mipmap.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Pixel storage for texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the texture.","","Updates the texture with an image.","View used by shader.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","","","Converts from alpha to rgba8.","Flips the image vertically."],"i":[1,2,2,3,0,0,4,0,0,0,0,0,0,1,0,5,2,5,1,2,6,0,0,0,0,3,0,1,0,7,8,7,6,5,2,3,9,1,10,11,8,7,6,5,2,3,9,1,10,11,11,11,7,6,5,2,3,1,10,7,6,5,2,3,1,10,7,7,12,10,8,7,6,5,2,3,9,1,10,11,8,7,6,5,2,3,9,1,10,11,9,8,7,6,5,2,3,9,1,10,11,10,8,11,2,3,1,10,8,7,6,5,2,3,3,1,10,8,7,6,5,2,3,3,3,3,9,1,10,11,10,10,10,7,7,7,7,7,7,13,7,7,7,13,10,13,7,7,11,1,8,7,6,5,2,3,9,1,10,11,8,7,6,5,2,3,9,1,10,11,7,7,7,3,10,7,9,11,0,10,7,7,7,7,7,7,7,7,7,7,10,7,6,5,2,3,1,10,3,11,11,11,11,8,7,6,5,2,3,9,1,10,11,8,7,6,5,2,3,9,1,10,11,8,7,6,5,2,3,9,1,10,11,14,10,10,10,7,7,15,16,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["texturesettings",3]],["texturesettings",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["gfxgraphics",3]]],[[["gfxgraphics",3],["u8",0]]],[[["texturesettings",3]],["texturesettings",3]],[[["format",4]],["format",4]],[[["filter",4]],["filter",4]],[[["wrap",4]],["wrap",4]],[[["error",4]],["error",4]],[[["flip",4]],["flip",4]],[[["texture",3]],["texture",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["",0],["format",4],["texturesettings",3]],["result",4]],[[["texturecontext",3],["format",4],["texturesettings",3]],["result",4,[["texture",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["gfx2d",3,[["resources",8]]],["encoder",3],["rendertargetview",3],["depthstencilview",3],["viewport",3]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["texturecontext",3]],["result",4,[["texture",3],["error",4]]]],null,null,[[["wrap",4],["wrap",4]],["bool",0]],[[["error",4],["error",4]],["bool",0]],[[["flip",4],["flip",4]],["bool",0]],[[["texture",3],["texture",3]],["bool",0]],null,[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["format",4],["formatter",3]],["result",4,[["error",3]]]],[[["filter",4],["formatter",3]],["result",4,[["error",3]]]],[[["wrap",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["flip",4],["formatter",3]],["result",4,[["error",3]]]],[[["texture",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["creationerror",4]],["error",4]],[[["updateerror",4]],["error",4]],[[["resourceviewerror",4]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[["texturecontext",3],["imagebuffer",3],["texturesettings",3]],["result",4,[["texture",3],["error",4]]]],[[["texturecontext",3],["u32",0],["u32",0],["texturesettings",3]],["result",4,[["texture",3],["error",4]]]],[[["texturecontext",3],["flip",4],["texturesettings",3]],["result",4,[["texture",3],["string",3]]]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["",0]],["u32",0]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["",0]]],[[["texture",3]]],[[["",0]],["u32",0]],[[["texturesettings",3]],["wrap",4]],[[["texturesettings",3]],["wrap",4]],[[["gfxgraphics",3],["texture",3]],["bool",0]],[[["flip",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["error",4],["error",4]],["bool",0]],[[["texture",3],["texture",3]],["bool",0]],[[],["texturesettings",3]],[[["opengl",4],["",0]],["gfx2d",3,[["resources",8]]]],[[["encoder",3],["rendertargetview",3],["depthstencilview",3],["gfx2d",3]],["gfxgraphics",3]],null,null,[[["texturesettings",3]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["wrap",4]]],[[["texturesettings",3],["wrap",4]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["gfxgraphics",3],["drawstate",3]]],[[["gfxgraphics",3],["drawstate",3]]],[[["gfxgraphics",3],["drawstate",3]]],[[["gfxgraphics",3],["drawstate",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0],["format",4]],["result",4]],[[["texture",3],["texturecontext",3],["format",4]],["result",4]],[[["texture",3],["texturecontext",3],["imagebuffer",3]],["result",4,[["error",4]]]],null,[[["texturesettings",3],["wrap",4]],["texturesettings",3]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],null,null,[[],["vec",3,[["u8",0],["global",3]]]],[[["u8",0]],["vec",3,[["u8",0],["global",3]]]]],"p":[[4,"Flip"],[4,"Wrap"],[4,"Error"],[8,"TextureOp"],[4,"Filter"],[4,"Format"],[3,"TextureSettings"],[3,"TextureContext"],[3,"Gfx2d"],[3,"Texture"],[3,"GfxGraphics"],[8,"CreateTexture"],[8,"ImageSize"],[8,"UpdateTexture"],[13,"Create"],[13,"Update"]]},\
"gfx_texture":{"doc":"A Gfx texture representation that works nicely with Piston …","t":[13,13,13,13,8,4,16,4,4,4,13,8,13,13,13,13,13,13,3,3,8,3,13,8,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,12,12,5,5],"n":["Both","ClampToBorder","ClampToEdge","Create","CreateTexture","Error","Error","Filter","Flip","Format","Horizontal","ImageSize","Linear","MirroredRepeat","Nearest","None","Repeat","Rgba8","Texture","TextureContext","TextureOp","TextureSettings","Update","UpdateTexture","Vertical","Wrap","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compress","convert_gamma","create","create","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","empty","encoder","eq","eq","eq","eq","factory","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_image","from_memory_alpha","from_path","generate_mipmap","get_border_color","get_compress","get_convert_gamma","get_filter","get_generate_mipmap","get_height","get_mag","get_min","get_mipmap","get_size","get_size","get_width","get_wrap_u","get_wrap_v","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","mag","min","mipmap","ne","ne","new","ops","sampler","set_border_color","set_compress","set_convert_gamma","set_filter","set_generate_mipmap","set_mag","set_min","set_mipmap","set_wrap_u","set_wrap_v","surface","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","view","wrap_u","wrap_v","0","0","alpha_to_rgba8","flip_vertical"],"q":["gfx_texturegfx_texture::Error","","gfx_texture::ops",""],"d":["Flips image both vertically and horizontally.","Coordinates outside the range [0.0, 1.0] will be given a …","The coordinate will be clamped between 0 and 1.","An error when creating texture.","Implemented by textures for creation.","Create creation or update error.","The error when performing an operation.","Sampling filter","Flip settings.","Texture format.","Flips image horizontally.","Implemented by all images to be used with generic …","A Weighted Linear Blend","Repeats the texture and mirrors it, when the integer part …","Nearest Texel","Does not flip.","Repeats the texture by ignoring the integer part of the …","<code>(red, green, blue, alpha)</code> with values 0-255.","Represents a texture.","Context required to create and update textures.","Implemented by texture operations.","Texture creation parameters.","An error when updating texture.","Implemented by textures for updating.","Flips image vertically.","Wrap mode","Sets the border color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets compress.","Sets convert gamma.","Create texture from memory.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns empty texture.","An encoder to update textures.","","","","","A factory to create textures.","Sets the min and mag filter","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a texture from image.","Creates texture from memory alpha.","Creates a texture from path.","Sets generate mipmap.","Gets the border color","Gets wheter compress on the GPU.","Gets whether to convert gamma, treated as sRGB color space.","Returns the min and mag filter","Gets generate mipmap.","Gets the image height.","Gets magnify filter","Gets minify filter.","Gets minify mipmap filter","Get the image size.","","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","","","Create default settings.","Image operations for textures.","Sampler for texture.","Sets the border color","Sets compress.","Sets convert gamma.","Sets the min and mag filter","Sets generate mipmap.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Pixel storage for texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the texture.","Updates the texture with an image.","","View used by shader.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","","","Converts from alpha to rgba8.","Flips the image vertically."],"i":[1,2,2,3,0,0,4,0,0,0,1,0,5,2,5,1,2,6,0,0,0,0,3,0,1,0,7,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,7,6,5,2,3,1,9,7,6,5,2,3,1,9,7,7,10,9,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,9,8,2,3,1,9,8,7,6,5,2,3,3,1,9,8,7,6,5,2,3,3,3,3,1,9,9,9,9,7,7,7,7,7,7,11,7,7,7,11,9,11,7,7,1,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,7,7,7,3,9,7,0,9,7,7,7,7,7,7,7,7,7,7,9,7,6,5,2,3,1,9,3,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,8,7,6,5,2,3,1,9,12,9,9,9,7,7,13,14,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["texturesettings",3]],["texturesettings",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["texturesettings",3]],["texturesettings",3]],[[["format",4]],["format",4]],[[["filter",4]],["filter",4]],[[["wrap",4]],["wrap",4]],[[["error",4]],["error",4]],[[["flip",4]],["flip",4]],[[["texture",3,[["clone",8]]]],["texture",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["",0],["format",4],["texturesettings",3]],["result",4]],[[["texturecontext",3],["format",4],["into",8],["texturesettings",3]],["result",4,[["texture",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["texturecontext",3]],["result",4,[["texture",3,[["resources",8]]],["error",4]]]],null,[[["wrap",4],["wrap",4]],["bool",0]],[[["error",4],["error",4]],["bool",0]],[[["flip",4],["flip",4]],["bool",0]],[[["texture",3,[["partialeq",8]]],["texture",3]],["bool",0]],null,[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["format",4],["formatter",3]],["result",4,[["error",3]]]],[[["filter",4],["formatter",3]],["result",4,[["error",3]]]],[[["wrap",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",4,[["error",3]]]],[[["error",4],["formatter",3]],["result",6]],[[["flip",4],["formatter",3]],["result",6]],[[["texture",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["creationerror",4]],["error",4]],[[["resourceviewerror",4]],["error",4]],[[]],[[["updateerror",4]],["error",4]],[[]],[[]],[[["texturecontext",3],["rgbaimage",6],["texturesettings",3]],["result",4,[["texture",3,[["resources",8]]],["error",4]]]],[[["texturecontext",3],["u32",0],["u32",0],["texturesettings",3]],["result",4,[["texture",3,[["resources",8]]],["error",4]]]],[[["texturecontext",3],["flip",4],["texturesettings",3]],["result",4,[["texture",3,[["resources",8]]],["string",3]]]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["",0]],["u32",0]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["",0]]],[[["texture",3]]],[[["",0]],["u32",0]],[[["texturesettings",3]],["wrap",4]],[[["texturesettings",3]],["wrap",4]],[[["flip",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["error",4],["error",4]],["bool",0]],[[["texture",3,[["partialeq",8]]],["texture",3]],["bool",0]],[[],["texturesettings",3]],null,null,[[["texturesettings",3]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["wrap",4]]],[[["texturesettings",3],["wrap",4]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0],["format",4]],["result",4]],[[["texture",3,[["resources",8]]],["texturecontext",3],["rgbaimage",6]],["result",4,[["error",4]]]],[[["texture",3],["texturecontext",3],["format",4]],["result",4]],null,[[["texturesettings",3],["wrap",4]],["texturesettings",3]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],null,null,[[],["vec",3,[["u8",0],["global",3]]]],[[["u8",0]],["vec",3,[["u8",0],["global",3]]]]],"p":[[4,"Flip"],[4,"Wrap"],[4,"Error"],[8,"TextureOp"],[4,"Filter"],[4,"Format"],[3,"TextureSettings"],[3,"TextureContext"],[3,"Texture"],[8,"CreateTexture"],[8,"ImageSize"],[8,"UpdateTexture"],[13,"Create"],[13,"Update"]]},\
"gif":{"doc":"GIF en- and decoding library Build Status","t":[12,12,13,3,13,13,13,4,13,13,4,13,13,13,13,13,3,4,3,4,3,4,3,4,4,13,4,4,13,13,13,3,13,13,13,13,13,13,13,13,3,18,13,13,13,4,13,13,13,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","0","Any","AnyExtension","Application","Background","BackgroundColor","Block","BlockFinished","BlockStart","ColorOutput","Comment","Control","Control","Data","DataEnd","DecodeOptions","Decoded","Decoder","DecodingError","DecodingFormatError","DisposalMethod","Encoder","EncodingError","Extension","Extension","ExtensionData","Extensions","Finite","Format","Format","Frame","Frame","GlobalPalette","Image","Indexed","Infinite","Io","Io","Keep","MemoryLimit","NONE","Nothing","Previous","RGBA","Repeat","Repetitions","Save","Skip","StreamingDecoder","SubBlockFinished","Text","Trailer","Trailer","V87a","V89a","Version","allow_unknown_blocks","bg_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_size","build","check_frame_consistency","check_lzw_end_code","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_frame","current_frame_mut","default","delay","dispose","drop","eq","eq","eq","eq","eq","eq","eq","fill_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_indexed_pixels","from_palette_pixels","from_rgb","from_rgb_speed","from_rgba","from_rgba_speed","from_u8","from_u8","from_u8","get_mut","get_ref","global_palette","hash","hash","height","height","height","interlaced","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_known","last_ext","left","line_length","ne","needs_user_input","new","new","new","new","new_control_ext","next_frame_info","palette","palette","read_info","read_into_buffer","read_next_frame","set_color_output","set_extensions","set_memory_limit","set_repeat","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","top","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","version","width","width","width","write_extension","write_frame","write_global_palette","write_raw_extension","0","0","0","0","0","0","0","1","1","0","0","0","0","0","delay","flags","trns","0"],"q":["gifgif::Decoded","","","","","","","","","gif::DecodingError","","gif::EncodingError","","gif::ExtensionData","","","","gif::Repeat"],"d":["","","StreamingDecoder is not required to take any action.","A newtype wrapper around an arbitrary extension ID.","Application extension.","Restore to background color.","Index of the background color in the global palette.","Known GIF block labels.","Decoded the last (or only) sub-block of a block.","The start of a block.","Output mode for the image data","Comment extension.","Control extension. Use <code>ExtensionData::new_control_ext</code> to …","Control extension.","Decoded some data of the current frame.","No more data available the current frame.","Options for opening a GIF decoder.","Indicates whether a certain object has been decoded","GIF decoder","Decoding error.","An error returned in the case of the image not being …","Disposal method","GIF encoder.","Encoding error.","Known GIF extension labels.","Extension block.","Extension data.","Configures how extensions should be handled","Finite number of repetitions","Returned if the image is found to be malformed.","Returned if the to image is not encodable as a gif.","A GIF frame","Decoded all information of the next frame.","Global palette.","Image block.","The decoder returns the raw indexed data.","Infinite number of repetitions","Wraps <code>std::io::Error</code>.","Wraps <code>std::io::Error</code>.","Do not dispose.","Memory limit in bytes. <code>MemoryLimit(0)</code> means that there is …","Enforce no memory limit.","Decoded nothing.","Restore to previous.","The decoder expands the image data to 32bit RGBA. This …","Number of repetitions","Sets the number of repetitions","Saves all extention data","Skips the data of unknown extensions and extracts the data …","GIF decoder which supports streaming","Decoded a sub-block. More sub-block are available.","Plain Text extension.","Image trailer.","Decoded the image trailer.","Version 87a, from May 1987.","Version 89a, from July 1989.","One version number of the GIF standard.","Configure if unknown blocks are allowed to be decoded.","Index of the background color in the global palette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffer containing the image data. Only indices unless …","Output buffer size","Return a builder that allows configuring limits etc.","Configure if frames must be within the screen descriptor.","Configure if LZW encoded blocks must end with a marker end …","","","","","","","","","","","","","","","","","","","","","Current frame info as a ref.","Current frame info as a mutable ref.","","Frame delay in units of 10 ms.","Disposal method.","","","","","","","","","Reads data of the current frame into a pre-allocated …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a frame from indexed pixels in the global palette.","Creates a frame from a palette and indexed pixels.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGBA format.","Creates a frame from pixels in RGBA format.","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Converts <code>u8</code> to a <code>Extension</code> if it is known.","Gets a mutable reference to the writer instance used by …","Gets a reference to the writer instance used by this …","The global color palette","","","Height of the image","Height of the image","Height of the frame.","True if the image is interlaced.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns writer instance used by this encoder","Decode the label as a known extension.","Returns the data of the last extension that has been …","Offset from the left border of the canvas.","Line length of the current frame","","True if the frame needs user input to be displayed.","Creates a new streaming decoder","Create a new decoder with default options.","Creates a new encoder.","Creates a new decoder builder","Constructor for control extension data.","Returns the next frame info","Returns the color palette relevant for the current (next) …","Frame local color palette if available.","Reads the logical screen descriptor including the global …","Reads the data of the current frame into a pre-allocated …","Reads the next frame from the image.","Configure how color data is decoded.","Configure whether extensions are saved or skipped.","Configure a memory limit for decoding.","Write an extension block that signals a repeat behaviour.","","","","","","","","","","","","","","","","","Offset from the top border of the canvas.","Transparent index (if available).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the internal state of the decoder. ","The version number of the GIF standard used in this image.","Width of the image","Width of the image","Width of the frame.","Writes an extension to the image.","Writes a frame to the image.","Writes the global color palette.","Writes a raw extension to the image.","","","","","","","","","","","","","","","Frame delay.","Flags.","Transparent index.",""],"i":[1,2,3,0,4,3,5,0,5,5,0,4,6,4,5,5,0,0,0,0,0,0,0,0,0,7,0,0,8,9,10,0,5,5,7,11,8,9,10,3,0,2,5,3,11,0,6,12,12,0,5,4,7,5,13,13,0,14,15,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,18,15,15,14,14,3,7,1,4,18,13,11,2,14,8,3,7,1,4,18,13,11,2,14,8,16,16,18,18,18,17,3,7,1,4,12,13,11,15,3,7,1,4,18,19,19,9,9,12,5,13,11,2,14,10,10,8,16,15,6,17,3,7,1,1,4,18,19,9,9,9,12,5,13,11,2,14,10,10,8,18,18,18,18,18,18,3,7,4,17,17,15,1,13,16,15,18,18,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,17,1,16,18,15,1,18,16,15,17,14,6,15,15,18,14,15,15,14,16,14,17,19,9,10,3,7,1,4,18,13,11,2,14,8,19,9,10,18,18,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,16,15,6,17,3,7,1,4,18,19,9,12,5,13,11,2,14,10,8,16,16,16,15,18,17,17,17,17,20,21,22,23,24,25,26,23,24,27,28,29,30,31,32,32,32,33],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["decodeoptions",3],["bool",0]]],[[["decoder",3]],["option",4,[["usizenull,[[["decoder",3]],["usize",0]],[[],["decodeoptions",3]],[[["decodeoptions",3],["bool",0]]],[[["decodeoptions",3],["bool",0]]],[[["disposalmethod",4]],["disposalmethod",4]],[[["block",4]],["block",4]],[[["anyextension",3]],["anyextension",3]],[[["extension",4]],["extension",4]],[[["frame",3]],["frame",3]],[[["version",4]],["version",4]],[[["coloroutput",4]],["coloroutput",4]],[[["memorylimit",3]],["memorylimit",3]],[[["decodeoptions",3]],["decodeoptions",3]],[[["repeat",4]],["repeat",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["streamingdecoder",3]],["frame",3]],[[["streamingdecoder",3]],["frame",3]],[[],["frame",3]],null,null,[[["encoder",3,[["write",8]]]]],[[["disposalmethod",4],["disposalmethod",4]],["bool",0]],[[["block",4],["block",4]],["bool",0]],[[["anyextension",3],["anyextension",3]],["bool",0]],[[["extension",4],["extension",4]],["bool",0]],[[["extensions",4],["extensions",4]],["bool",0]],[[["version",4],["version",4]],["bool",0]],[[["coloroutput",4],["coloroutput",4]],["bool",0]],[[["decoder",3]],["result",4,[["bool",0],["decodingerror",4]]]],[[["disposalmethod",4],["formatter",3]],["result",6]],[[["block",4],["formatter",3]],["result",6]],[[["anyextension",3],["formatter",3]],["result",6]],[[["extension",4],["formatter",3]],["result",6]],[[["frame",3],["formatter",3]],["result",6]],[[["decodingformaterror",3],["formatter",3]],["result",6]],[[["decodingformaterror",3],["formatter",3]],["result",6]],[[["decodingerror",4],["formatter",3]],["result",6]],[[["decodingerror",4],["formatter",3]],["result",6]],[[["extensions",4],["formatter",3]],["result",6]],[[["decoded",4],["formatter",3]],["result",6]],[[["version",4],["formatter",3]],["result",6]],[[["coloroutput",4],["formatter",3]],["result",6]],[[["memorylimit",3],["formatter",3]],["result",6]],[[["decodeoptions",3],["formatter",3]],["result",6]],[[["encodingerror",4],["formatter",3]],["result",6]],[[["encodingerror",4],["formatter",3]],["result",6]],[[["repeat",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extension",4]],["anyextension",3]],[[]],[[]],[[]],[[["decodingformaterror",3]],["decodingerror",4]],[[["error",3]],["decodingerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["encodingerror",4]],[[]],[[]],[[["u16",0],["u16",0],["option",4,[["u8",0]]]],["frame",3]],[[["u16",0],["u16",0],["option",4,[["u8",0]]]],["frame",3]],[[["u16",0],["u16",0]],["frame",3]],[[["u16",0],["u16",0],["i32",0]],["frame",3]],[[["u16",0],["u16",0]],["frame",3]],[[["u16",0],["u16",0],["i32",0]],["frame",3]],[[["u8",0]],["option",4,[["disposalmethod",4]]]],[[["u8",0]],["option",4,[["block",4]]]],[[["u8",0]],["option",4,[["extension",4]]]],[[["encoder",3,[["write",8]]]],["",0]],[[["encoder",3,[["write",8]]]],["",0]],[[["decoder",3]],["option",4]],[[["anyextension",3],["",0]]],[[["version",4],["",0]]],[[["streamingdecoder",3]],["u16",0]],[[["decoder",3]],["u16",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["encoder",3,[["write",8]]]],["result",6,[["write",8]]]],[[["anyextension",3]],["option",4,[["extension",4]]]],[[["streamingdecoder",3]]],null,[[["decoder",3]],["usize",0]],[[["anyextension",3],["anyextension",3]],["bool",0]],null,[[],["streamingdecoder",3]],[[],["result",4,[["decoder",3],["decodingerror",4]]]],[[["write",8],["u16",0],["u16",0]],["result",4,[["encoder",3,[["write",8]]],["encodingerror",4]]]],[[],["decodeoptions",3]],[[["u16",0],["disposalmethod",4],["bool",0],["option",4,[["u8",0]]]],["extensiondata",4]],[[["decoder",3]],["result",4,[["option",4,[["frame",3]]],["decodingerror",4]]]],[[["decoder",3]],["result",4,[["decodingerror",4]]]],null,[[["decodeoptions",3],["read",8]],["result",4,[["decoder",3,[["read",8]]],["decodingerror",4]]]],[[["decoder",3]],["result",4,[["decodingerror",4]]]],[[["decoder",3]],["result",4,[["option",4,[["frame",3]]],["decodingerror",4]]]],[[["decodeoptions",3],["coloroutput",4]]],[[["streamingdecoder",3],["extensions",4]]],[[["decodeoptions",3],["memorylimit",3]]],[[["encoder",3,[["write",8]]],["repeat",4]],["result",4,[["encodingerror",4]]]],[[["decodingformaterror",3]],["option",4,[["error",8]]]],[[["decodingerror",4]],["option",4,[["error",8]]]],[[["encodingerror",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["streamingdecoder",3]],["result",4,[["decodingerror",4]]]],[[["streamingdecoder",3]],["version",4]],[[["streamingdecoder",3]],["u16",0]],[[["decoder",3]],["u16",0]],null,[[["encoder",3,[["write",8]]],["extensiondata",4]],["result",4,[["encodingerror",4]]]],[[["encoder",3,[["write",8]]],["frame",3]],["result",4,[["encodingerror",4]]]],[[["encoder",3,[["write",8]]]],["result",4,[["encoder",3,[["write",8]]],["encodingerror",4]]]],[[["encoder",3,[["write",8]]],["anyextension",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"AnyExtension"],[3,"MemoryLimit"],[4,"DisposalMethod"],[4,"Extension"],[4,"Decoded"],[4,"ExtensionData"],[4,"Block"],[4,"Repeat"],[4,"DecodingError"],[4,"EncodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"Version"],[3,"DecodeOptions"],[3,"Decoder"],[3,"StreamingDecoder"],[3,"Encoder"],[3,"Frame"],[3,"DecodingFormatError"],[13,"GlobalPalette"],[13,"BackgroundColor"],[13,"BlockStart"],[13,"SubBlockFinished"],[13,"BlockFinished"],[13,"Frame"],[13,"Data"],[13,"Format"],[13,"Io"],[13,"Format"],[13,"Io"],[13,"Repetitions"],[13,"Control"],[13,"Finite"]]},\
"gl":{"doc":"Usage","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,3,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,17,17,0,5,17,17,17,11,11,11,11,5,11,11,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","ActiveShaderProgram","ActiveShaderProgram","ActiveTexture","ActiveTexture","AttachShader","AttachShader","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","BeginConditionalRender","BeginConditionalRender","BeginQuery","BeginQuery","BeginQueryIndexed","BeginQueryIndexed","BeginTransformFeedback","BeginTransformFeedback","BindAttribLocation","BindAttribLocation","BindBuffer","BindBuffer","BindBufferBase","BindBufferBase","BindBufferRange","BindBufferRange","BindBuffersBase","BindBuffersBase","BindBuffersRange","BindBuffersRange","BindFragDataLocation","BindFragDataLocation","BindFragDataLocationIndexed","BindFragDataLocationIndexed","BindFramebuffer","BindFramebuffer","BindImageTexture","BindImageTexture","BindImageTextures","BindImageTextures","BindProgramPipeline","BindProgramPipeline","BindRenderbuffer","BindRenderbuffer","BindSampler","BindSampler","BindSamplers","BindSamplers","BindTexture","BindTexture","BindTextureUnit","BindTextureUnit","BindTextures","BindTextures","BindTransformFeedback","BindTransformFeedback","BindVertexArray","BindVertexArray","BindVertexBuffer","BindVertexBuffer","BindVertexBuffers","BindVertexBuffers","BlendColor","BlendColor","BlendEquation","BlendEquation","BlendEquationSeparate","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationSeparatei","BlendEquationi","BlendEquationi","BlendFunc","BlendFunc","BlendFuncSeparate","BlendFuncSeparate","BlendFuncSeparatei","BlendFuncSeparatei","BlendFunci","BlendFunci","BlitFramebuffer","BlitFramebuffer","BlitNamedFramebuffer","BlitNamedFramebuffer","BufferData","BufferData","BufferStorage","BufferStorage","BufferSubData","BufferSubData","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","CheckFramebufferStatus","CheckFramebufferStatus","CheckNamedFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","ClampColor","Clear","Clear","ClearBufferData","ClearBufferData","ClearBufferSubData","ClearBufferSubData","ClearBufferfi","ClearBufferfi","ClearBufferfv","ClearBufferfv","ClearBufferiv","ClearBufferiv","ClearBufferuiv","ClearBufferuiv","ClearColor","ClearColor","ClearDepth","ClearDepth","ClearDepthf","ClearDepthf","ClearNamedBufferData","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearNamedFramebufferuiv","ClearStencil","ClearStencil","ClearTexImage","ClearTexImage","ClearTexSubImage","ClearTexSubImage","ClientWaitSync","ClientWaitSync","ClipControl","ClipControl","ColorMask","ColorMask","ColorMaski","ColorMaski","ColorP3ui","ColorP3ui","ColorP3uiv","ColorP3uiv","ColorP4ui","ColorP4ui","ColorP4uiv","ColorP4uiv","CompileShader","CompileShader","CompressedTexImage1D","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CompressedTextureSubImage3D","CopyBufferSubData","CopyBufferSubData","CopyImageSubData","CopyImageSubData","CopyNamedBufferSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage1D","CopyTexImage2D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage2D","CopyTextureSubImage3D","CopyTextureSubImage3D","CreateBuffers","CreateBuffers","CreateFramebuffers","CreateFramebuffers","CreateProgram","CreateProgram","CreateProgramPipelines","CreateProgramPipelines","CreateQueries","CreateQueries","CreateRenderbuffers","CreateRenderbuffers","CreateSamplers","CreateSamplers","CreateShader","CreateShader","CreateShaderProgramv","CreateShaderProgramv","CreateTextures","CreateTextures","CreateTransformFeedbacks","CreateTransformFeedbacks","CreateVertexArrays","CreateVertexArrays","CullFace","CullFace","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","DebugMessageCallback","DebugMessageCallback","DebugMessageControl","DebugMessageControl","DebugMessageInsert","DebugMessageInsert","DeleteBuffers","DeleteBuffers","DeleteFramebuffers","DeleteFramebuffers","DeleteProgram","DeleteProgram","DeleteProgramPipelines","DeleteProgramPipelines","DeleteQueries","DeleteQueries","DeleteRenderbuffers","DeleteRenderbuffers","DeleteSamplers","DeleteSamplers","DeleteShader","DeleteShader","DeleteSync","DeleteSync","DeleteTextures","DeleteTextures","DeleteTransformFeedbacks","DeleteTransformFeedbacks","DeleteVertexArrays","DeleteVertexArrays","DepthFunc","DepthFunc","DepthMask","DepthMask","DepthRange","DepthRange","DepthRangeArrayv","DepthRangeArrayv","DepthRangeIndexed","DepthRangeIndexed","DepthRangef","DepthRangef","DetachShader","DetachShader","Disable","Disable","DisableVertexArrayAttrib","DisableVertexArrayAttrib","DisableVertexAttribArray","DisableVertexAttribArray","Disablei","Disablei","DispatchCompute","DispatchCompute","DispatchComputeIndirect","DispatchComputeIndirect","DrawArrays","DrawArrays","DrawArraysIndirect","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffer","DrawBuffers","DrawBuffers","DrawElements","DrawElements","DrawElementsBaseVertex","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElements","DrawRangeElementsBaseVertex","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","DrawTransformFeedbackStreamInstanced","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","Enable","Enable","EnableVertexArrayAttrib","EnableVertexArrayAttrib","EnableVertexAttribArray","EnableVertexAttribArray","Enablei","Enablei","EndConditionalRender","EndConditionalRender","EndQuery","EndQuery","EndQueryIndexed","EndQueryIndexed","EndTransformFeedback","EndTransformFeedback","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","FenceSync","FenceSync","Finish","Finish","Flush","Flush","FlushMappedBufferRange","FlushMappedBufferRange","FlushMappedNamedBufferRange","FlushMappedNamedBufferRange","FnPtr","FramebufferParameteri","FramebufferParameteri","FramebufferRenderbuffer","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture","FramebufferTexture1D","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTexture3D","FramebufferTextureLayer","FramebufferTextureLayer","FrontFace","FrontFace","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","GenBuffers","GenBuffers","GenFramebuffers","GenFramebuffers","GenProgramPipelines","GenProgramPipelines","GenQueries","GenQueries","GenRenderbuffers","GenRenderbuffers","GenSamplers","GenSamplers","GenTextures","GenTextures","GenTransformFeedbacks","GenTransformFeedbacks","GenVertexArrays","GenVertexArrays","GenerateMipmap","GenerateMipmap","GenerateTextureMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformName","GetActiveUniformsiv","GetActiveUniformsiv","GetAttachedShaders","GetAttachedShaders","GetAttribLocation","GetAttribLocation","GetBooleani_v","GetBooleani_v","GetBooleanv","GetBooleanv","GetBufferParameteri64v","GetBufferParameteri64v","GetBufferParameteriv","GetBufferParameteriv","GetBufferPointerv","GetBufferPointerv","GetBufferSubData","GetBufferSubData","GetCompressedTexImage","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDebugMessageLog","GetDoublei_v","GetDoublei_v","GetDoublev","GetDoublev","GetError","GetError","GetFloati_v","GetFloati_v","GetFloatv","GetFloatv","GetFragDataIndex","GetFragDataIndex","GetFragDataLocation","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64i_v","GetInteger64v","GetInteger64v","GetIntegeri_v","GetIntegeri_v","GetIntegerv","GetIntegerv","GetInternalformati64v","GetInternalformati64v","GetInternalformativ","GetInternalformativ","GetMultisamplefv","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectLabel","GetObjectPtrLabel","GetObjectPtrLabel","GetPointerv","GetPointerv","GetProgramBinary","GetProgramBinary","GetProgramInfoLog","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceName","GetProgramResourceiv","GetProgramResourceiv","GetProgramStageiv","GetProgramStageiv","GetProgramiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryObjectuiv","GetQueryiv","GetQueryiv","GetRenderbufferParameteriv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameterfv","GetSamplerParameteriv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderPrecisionFormat","GetShaderSource","GetShaderSource","GetShaderiv","GetShaderiv","GetString","GetString","GetStringi","GetStringi","GetSubroutineIndex","GetSubroutineIndex","GetSubroutineUniformLocation","GetSubroutineUniformLocation","GetSynciv","GetSynciv","GetTexImage","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameterfv","GetTexParameteriv","GetTexParameteriv","GetTextureImage","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameterfv","GetTextureParameteriv","GetTextureParameteriv","GetTextureSubImage","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformBlockIndex","GetUniformIndices","GetUniformIndices","GetUniformLocation","GetUniformLocation","GetUniformSubroutineuiv","GetUniformSubroutineuiv","GetUniformdv","GetUniformdv","GetUniformfv","GetUniformfv","GetUniformiv","GetUniformiv","GetUniformuiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribfv","GetVertexAttribiv","GetVertexAttribiv","GetnColorTable","GetnColorTable","GetnCompressedTexImage","GetnCompressedTexImage","GetnConvolutionFilter","GetnConvolutionFilter","GetnHistogram","GetnHistogram","GetnMapdv","GetnMapdv","GetnMapfv","GetnMapfv","GetnMapiv","GetnMapiv","GetnMinmax","GetnMinmax","GetnPixelMapfv","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapuiv","GetnPixelMapusv","GetnPixelMapusv","GetnPolygonStipple","GetnPolygonStipple","GetnSeparableFilter","GetnSeparableFilter","GetnTexImage","GetnTexImage","GetnUniformdv","GetnUniformdv","GetnUniformfv","GetnUniformfv","GetnUniformiv","GetnUniformiv","GetnUniformuiv","GetnUniformuiv","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","Hint","Hint","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","InvalidateBufferData","InvalidateBufferData","InvalidateBufferSubData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexImage","InvalidateTexSubImage","InvalidateTexSubImage","IsBuffer","IsBuffer","IsEnabled","IsEnabled","IsEnabledi","IsEnabledi","IsFramebuffer","IsFramebuffer","IsProgram","IsProgram","IsProgramPipeline","IsProgramPipeline","IsQuery","IsQuery","IsRenderbuffer","IsRenderbuffer","IsSampler","IsSampler","IsShader","IsShader","IsSync","IsSync","IsTexture","IsTexture","IsTransformFeedback","IsTransformFeedback","IsVertexArray","IsVertexArray","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","LineWidth","LineWidth","LinkProgram","LinkProgram","LogicOp","LogicOp","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","MapBuffer","MapBuffer","MapBufferRange","MapBufferRange","MapNamedBuffer","MapNamedBuffer","MapNamedBufferRange","MapNamedBufferRange","MemoryBarrier","MemoryBarrier","MemoryBarrierByRegion","MemoryBarrierByRegion","MinSampleShading","MinSampleShading","MultiDrawArrays","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawArraysIndirect","MultiDrawElements","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiDrawElementsIndirect","MultiTexCoordP1ui","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4ui","MultiTexCoordP4uiv","MultiTexCoordP4uiv","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","NamedBufferData","NamedBufferData","NamedBufferStorage","NamedBufferStorage","NamedBufferSubData","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3ui","NormalP3uiv","NormalP3uiv","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","ObjectLabel","ObjectLabel","ObjectPtrLabel","ObjectPtrLabel","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","PatchParameterfv","PatchParameterfv","PatchParameteri","PatchParameteri","PauseTransformFeedback","PauseTransformFeedback","PixelStoref","PixelStoref","PixelStorei","PixelStorei","PointParameterf","PointParameterf","PointParameterfv","PointParameterfv","PointParameteri","PointParameteri","PointParameteriv","PointParameteriv","PointSize","PointSize","PolygonMode","PolygonMode","PolygonOffset","PolygonOffset","PopDebugGroup","PopDebugGroup","PrimitiveRestartIndex","PrimitiveRestartIndex","ProgramBinary","ProgramBinary","ProgramParameteri","ProgramParameteri","ProgramUniform1d","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProgramUniformMatrix4x3fv","ProvokingVertex","ProvokingVertex","PushDebugGroup","PushDebugGroup","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","QueryCounter","QueryCounter","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","ReadBuffer","ReadBuffer","ReadPixels","ReadPixels","ReadnPixels","ReadnPixels","ReleaseShaderCompiler","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorage","RenderbufferStorageMultisample","RenderbufferStorageMultisample","ResumeTransformFeedback","ResumeTransformFeedback","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","SampleCoverage","SampleCoverage","SampleMaski","SampleMaski","SamplerParameterIiv","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterf","SamplerParameterfv","SamplerParameterfv","SamplerParameteri","SamplerParameteri","SamplerParameteriv","SamplerParameteriv","Scissor","Scissor","ScissorArrayv","ScissorArrayv","ScissorIndexed","ScissorIndexed","ScissorIndexedv","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3ui","SecondaryColorP3uiv","SecondaryColorP3uiv","ShaderBinary","ShaderBinary","ShaderSource","ShaderSource","ShaderStorageBlockBinding","ShaderStorageBlockBinding","StencilFunc","StencilFunc","StencilFuncSeparate","StencilFuncSeparate","StencilMask","StencilMask","StencilMaskSeparate","StencilMaskSeparate","StencilOp","StencilOp","StencilOpSeparate","StencilOpSeparate","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","TexBuffer","TexBuffer","TexBufferRange","TexBufferRange","TexCoordP1ui","TexCoordP1ui","TexCoordP1uiv","TexCoordP1uiv","TexCoordP2ui","TexCoordP2ui","TexCoordP2uiv","TexCoordP2uiv","TexCoordP3ui","TexCoordP3ui","TexCoordP3uiv","TexCoordP3uiv","TexCoordP4ui","TexCoordP4ui","TexCoordP4uiv","TexCoordP4uiv","TexImage1D","TexImage1D","TexImage2D","TexImage2D","TexImage2DMultisample","TexImage2DMultisample","TexImage3D","TexImage3D","TexImage3DMultisample","TexImage3DMultisample","TexParameterIiv","TexParameterIiv","TexParameterIuiv","TexParameterIuiv","TexParameterf","TexParameterf","TexParameterfv","TexParameterfv","TexParameteri","TexParameteri","TexParameteriv","TexParameteriv","TexStorage1D","TexStorage1D","TexStorage2D","TexStorage2D","TexStorage2DMultisample","TexStorage2DMultisample","TexStorage3D","TexStorage3D","TexStorage3DMultisample","TexStorage3DMultisample","TexSubImage1D","TexSubImage1D","TexSubImage2D","TexSubImage2D","TexSubImage3D","TexSubImage3D","TextureBarrier","TextureBarrier","TextureBuffer","TextureBuffer","TextureBufferRange","TextureBufferRange","TextureParameterIiv","TextureParameterIiv","TextureParameterIuiv","TextureParameterIuiv","TextureParameterf","TextureParameterf","TextureParameterfv","TextureParameterfv","TextureParameteri","TextureParameteri","TextureParameteriv","TextureParameteriv","TextureStorage1D","TextureStorage1D","TextureStorage2D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3D","TextureStorage3DMultisample","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage1D","TextureSubImage2D","TextureSubImage2D","TextureSubImage3D","TextureSubImage3D","TextureView","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackBufferRange","TransformFeedbackVaryings","TransformFeedbackVaryings","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","Uniform1d","Uniform1d","Uniform1dv","Uniform1dv","Uniform1f","Uniform1f","Uniform1fv","Uniform1fv","Uniform1i","Uniform1i","Uniform1iv","Uniform1iv","Uniform1ui","Uniform1ui","Uniform1uiv","Uniform1uiv","Uniform2d","Uniform2d","Uniform2dv","Uniform2dv","Uniform2f","Uniform2f","Uniform2fv","Uniform2fv","Uniform2i","Uniform2i","Uniform2iv","Uniform2iv","Uniform2ui","Uniform2ui","Uniform2uiv","Uniform2uiv","Uniform3d","Uniform3d","Uniform3dv","Uniform3dv","Uniform3f","Uniform3f","Uniform3fv","Uniform3fv","Uniform3i","Uniform3i","Uniform3iv","Uniform3iv","Uniform3ui","Uniform3ui","Uniform3uiv","Uniform3uiv","Uniform4d","Uniform4d","Uniform4dv","Uniform4dv","Uniform4f","Uniform4f","Uniform4fv","Uniform4fv","Uniform4i","Uniform4i","Uniform4iv","Uniform4iv","Uniform4ui","Uniform4ui","Uniform4uiv","Uniform4uiv","UniformBlockBinding","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformMatrix4x3fv","UniformSubroutinesuiv","UniformSubroutinesuiv","UnmapBuffer","UnmapBuffer","UnmapNamedBuffer","UnmapNamedBuffer","UseProgram","UseProgram","UseProgramStages","UseProgramStages","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","ValidateProgram","ValidateProgram","ValidateProgramPipeline","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1s","VertexAttrib1sv","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2s","VertexAttrib2sv","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3s","VertexAttrib3sv","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttrib4usv","VertexAttribBinding","VertexAttribBinding","VertexAttribDivisor","VertexAttribDivisor","VertexAttribFormat","VertexAttribFormat","VertexAttribI1i","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIFormat","VertexAttribIPointer","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1d","VertexAttribL1dv","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2d","VertexAttribL2dv","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3d","VertexAttribL3dv","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4d","VertexAttribL4dv","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLFormat","VertexAttribLPointer","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribP4uiv","VertexAttribPointer","VertexAttribPointer","VertexBindingDivisor","VertexBindingDivisor","VertexP2ui","VertexP2ui","VertexP2uiv","VertexP2uiv","VertexP3ui","VertexP3ui","VertexP3uiv","VertexP3uiv","VertexP4ui","VertexP4ui","VertexP4uiv","VertexP4uiv","Viewport","Viewport","ViewportArrayv","ViewportArrayv","ViewportIndexedf","ViewportIndexedf","ViewportIndexedfv","ViewportIndexedfv","WAIT_FAILED","WRITE_ONLY","WaitSync","WaitSync","XOR","ZERO","ZERO_TO_ONE","borrow","borrow_mut","from","into","load_with","new","try_from","try_into","type_id","types","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","__GLsync","_cl_context","_cl_event","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["glgl::ActiveShaderProgram","","gl::ActiveTexture","","gl::AttachShader","","gl::BeginConditionalRender","","gl::BeginQuery","","gl::BeginQueryIndexed","","gl::BeginTransformFeedback","","gl::BindAttribLocation","","gl::BindBuffer","","gl::BindBufferBase","","gl::BindBufferRange","","gl::BindBuffersBase","","gl::BindBuffersRange","","gl::BindFragDataLocation","","gl::BindFragDataLocationIndexed","","gl::BindFramebuffer","","gl::BindImageTexture","","gl::BindImageTextures","","gl::BindProgramPipeline","","gl::BindRenderbuffer","","gl::BindSampler","","gl::BindSamplers","","gl::BindTexture","","gl::BindTextureUnit","","gl::BindTextures","","gl::BindTransformFeedback","","gl::BindVertexArray","","gl::BindVertexBuffer","","gl::BindVertexBuffers","","gl::BlendColor","","gl::BlendEquation","","gl::BlendEquationSeparate","","gl::BlendEquationSeparatei","","gl::BlendEquationi","","gl::BlendFunc","","gl::BlendFuncSeparate","","gl::BlendFuncSeparatei","","gl::BlendFunci","","gl::BlitFramebuffer","","gl::BlitNamedFramebuffer","","gl::BufferData","","gl::BufferStorage","","gl::BufferSubData","","gl::CheckFramebufferStatus","","gl::CheckNamedFramebufferStatus","","gl::ClampColor","","gl::Clear","","gl::ClearBufferData","","gl::ClearBufferSubData","","gl::ClearBufferfi","","gl::ClearBufferfv","","gl::ClearBufferiv","","gl::ClearBufferuiv","","gl::ClearColor","","gl::ClearDepth","","gl::ClearDepthf","","gl::ClearNamedBufferData","","gl::ClearNamedBufferSubData","","gl::ClearNamedFramebufferfi","","gl::ClearNamedFramebufferfv","","gl::ClearNamedFramebufferiv","","gl::ClearNamedFramebufferuiv","","gl::ClearStencil","","gl::ClearTexImage","","gl::ClearTexSubImage","","gl::ClientWaitSync","","gl::ClipControl","","gl::ColorMask","","gl::ColorMaski","","gl::ColorP3ui","","gl::ColorP3uiv","","gl::ColorP4ui","","gl::ColorP4uiv","","gl::CompileShader","","gl::CompressedTexImage1D","","gl::CompressedTexImage2D","","gl::CompressedTexImage3D","","gl::CompressedTexSubImage1D","","gl::CompressedTexSubImage2D","","gl::CompressedTexSubImage3D","","gl::CompressedTextureSubImage1D","","gl::CompressedTextureSubImage2D","","gl::CompressedTextureSubImage3D","","gl::CopyBufferSubData","","gl::CopyImageSubData","","gl::CopyNamedBufferSubData","","gl::CopyTexImage1D","","gl::CopyTexImage2D","","gl::CopyTexSubImage1D","","gl::CopyTexSubImage2D","","gl::CopyTexSubImage3D","","gl::CopyTextureSubImage1D","","gl::CopyTextureSubImage2D","","gl::CopyTextureSubImage3D","","gl::CreateBuffers","","gl::CreateFramebuffers","","gl::CreateProgram","","gl::CreateProgramPipelines","","gl::CreateQueries","","gl::CreateRenderbuffers","","gl::CreateSamplers","","gl::CreateShader","","gl::CreateShaderProgramv","","gl::CreateTextures","","gl::CreateTransformFeedbacks","","gl::CreateVertexArrays","","gl::CullFace","","gl::DebugMessageCallback","","gl::DebugMessageControl","","gl::DebugMessageInsert","","gl::DeleteBuffers","","gl::DeleteFramebuffers","","gl::DeleteProgram","","gl::DeleteProgramPipelines","","gl::DeleteQueries","","gl::DeleteRenderbuffers","","gl::DeleteSamplers","","gl::DeleteShader","","gl::DeleteSync","","gl::DeleteTextures","","gl::DeleteTransformFeedbacks","","gl::DeleteVertexArrays","","gl::DepthFunc","","gl::DepthMask","","gl::DepthRange","","gl::DepthRangeArrayv","","gl::DepthRangeIndexed","","gl::DepthRangef","","gl::DetachShader","","gl::Disable","","gl::DisableVertexArrayAttrib","","gl::DisableVertexAttribArray","","gl::Disablei","","gl::DispatchCompute","","gl::DispatchComputeIndirect","","gl::DrawArrays","","gl::DrawArraysIndirect","","gl::DrawArraysInstanced","","gl::DrawArraysInstancedBaseInstance","","gl::DrawBuffer","","gl::DrawBuffers","","gl::DrawElements","","gl::DrawElementsBaseVertex","","gl::DrawElementsIndirect","","gl::DrawElementsInstanced","","gl::DrawElementsInstancedBaseInstance","","gl::DrawElementsInstancedBaseVertex","","gl::DrawElementsInstancedBaseVertexBaseInstance","","gl::DrawRangeElements","","gl::DrawRangeElementsBaseVertex","","gl::DrawTransformFeedback","","gl::DrawTransformFeedbackInstanced","","gl::DrawTransformFeedbackStream","","gl::DrawTransformFeedbackStreamInstanced","","gl::Enable","","gl::EnableVertexArrayAttrib","","gl::EnableVertexAttribArray","","gl::Enablei","","gl::EndConditionalRender","","gl::EndQuery","","gl::EndQueryIndexed","","gl::EndTransformFeedback","","gl::FenceSync","","gl::Finish","","gl::Flush","","gl::FlushMappedBufferRange","","gl::FlushMappedNamedBufferRange","","gl::FramebufferParameteri","","gl::FramebufferRenderbuffer","","gl::FramebufferTexture","","gl::FramebufferTexture1D","","gl::FramebufferTexture2D","","gl::FramebufferTexture3D","","gl::FramebufferTextureLayer","","gl::FrontFace","","gl::GenBuffers","","gl::GenFramebuffers","","gl::GenProgramPipelines","","gl::GenQueries","","gl::GenRenderbuffers","","gl::GenSamplers","","gl::GenTextures","","gl::GenTransformFeedbacks","","gl::GenVertexArrays","","gl::GenerateMipmap","","gl::GenerateTextureMipmap","","gl::GetActiveAtomicCounterBufferiv","","gl::GetActiveAttrib","","gl::GetActiveSubroutineName","","gl::GetActiveSubroutineUniformName","","gl::GetActiveSubroutineUniformiv","","gl::GetActiveUniform","","gl::GetActiveUniformBlockName","","gl::GetActiveUniformBlockiv","","gl::GetActiveUniformName","","gl::GetActiveUniformsiv","","gl::GetAttachedShaders","","gl::GetAttribLocation","","gl::GetBooleani_v","","gl::GetBooleanv","","gl::GetBufferParameteri64v","","gl::GetBufferParameteriv","","gl::GetBufferPointerv","","gl::GetBufferSubData","","gl::GetCompressedTexImage","","gl::GetCompressedTextureImage","","gl::GetCompressedTextureSubImage","","gl::GetDebugMessageLog","","gl::GetDoublei_v","","gl::GetDoublev","","gl::GetError","","gl::GetFloati_v","","gl::GetFloatv","","gl::GetFragDataIndex","","gl::GetFragDataLocation","","gl::GetFramebufferAttachmentParameteriv","","gl::GetFramebufferParameteriv","","gl::GetGraphicsResetStatus","","gl::GetInteger64i_v","","gl::GetInteger64v","","gl::GetIntegeri_v","","gl::GetIntegerv","","gl::GetInternalformati64v","","gl::GetInternalformativ","","gl::GetMultisamplefv","","gl::GetNamedBufferParameteri64v","","gl::GetNamedBufferParameteriv","","gl::GetNamedBufferPointerv","","gl::GetNamedBufferSubData","","gl::GetNamedFramebufferAttachmentParameteriv","","gl::GetNamedFramebufferParameteriv","","gl::GetNamedRenderbufferParameteriv","","gl::GetObjectLabel","","gl::GetObjectPtrLabel","","gl::GetPointerv","","gl::GetProgramBinary","","gl::GetProgramInfoLog","","gl::GetProgramInterfaceiv","","gl::GetProgramPipelineInfoLog","","gl::GetProgramPipelineiv","","gl::GetProgramResourceIndex","","gl::GetProgramResourceLocation","","gl::GetProgramResourceLocationIndex","","gl::GetProgramResourceName","","gl::GetProgramResourceiv","","gl::GetProgramStageiv","","gl::GetProgramiv","","gl::GetQueryBufferObjecti64v","","gl::GetQueryBufferObjectiv","","gl::GetQueryBufferObjectui64v","","gl::GetQueryBufferObjectuiv","","gl::GetQueryIndexediv","","gl::GetQueryObjecti64v","","gl::GetQueryObjectiv","","gl::GetQueryObjectui64v","","gl::GetQueryObjectuiv","","gl::GetQueryiv","","gl::GetRenderbufferParameteriv","","gl::GetSamplerParameterIiv","","gl::GetSamplerParameterIuiv","","gl::GetSamplerParameterfv","","gl::GetSamplerParameteriv","","gl::GetShaderInfoLog","","gl::GetShaderPrecisionFormat","","gl::GetShaderSource","","gl::GetShaderiv","","gl::GetString","","gl::GetStringi","","gl::GetSubroutineIndex","","gl::GetSubroutineUniformLocation","","gl::GetSynciv","","gl::GetTexImage","","gl::GetTexLevelParameterfv","","gl::GetTexLevelParameteriv","","gl::GetTexParameterIiv","","gl::GetTexParameterIuiv","","gl::GetTexParameterfv","","gl::GetTexParameteriv","","gl::GetTextureImage","","gl::GetTextureLevelParameterfv","","gl::GetTextureLevelParameteriv","","gl::GetTextureParameterIiv","","gl::GetTextureParameterIuiv","","gl::GetTextureParameterfv","","gl::GetTextureParameteriv","","gl::GetTextureSubImage","","gl::GetTransformFeedbackVarying","","gl::GetTransformFeedbacki64_v","","gl::GetTransformFeedbacki_v","","gl::GetTransformFeedbackiv","","gl::GetUniformBlockIndex","","gl::GetUniformIndices","","gl::GetUniformLocation","","gl::GetUniformSubroutineuiv","","gl::GetUniformdv","","gl::GetUniformfv","","gl::GetUniformiv","","gl::GetUniformuiv","","gl::GetVertexArrayIndexed64iv","","gl::GetVertexArrayIndexediv","","gl::GetVertexArrayiv","","gl::GetVertexAttribIiv","","gl::GetVertexAttribIuiv","","gl::GetVertexAttribLdv","","gl::GetVertexAttribPointerv","","gl::GetVertexAttribdv","","gl::GetVertexAttribfv","","gl::GetVertexAttribiv","","gl::GetnColorTable","","gl::GetnCompressedTexImage","","gl::GetnConvolutionFilter","","gl::GetnHistogram","","gl::GetnMapdv","","gl::GetnMapfv","","gl::GetnMapiv","","gl::GetnMinmax","","gl::GetnPixelMapfv","","gl::GetnPixelMapuiv","","gl::GetnPixelMapusv","","gl::GetnPolygonStipple","","gl::GetnSeparableFilter","","gl::GetnTexImage","","gl::GetnUniformdv","","gl::GetnUniformfv","","gl::GetnUniformiv","","gl::GetnUniformuiv","","gl::Hint","","gl::InvalidateBufferData","","gl::InvalidateBufferSubData","","gl::InvalidateFramebuffer","","gl::InvalidateNamedFramebufferData","","gl::InvalidateNamedFramebufferSubData","","gl::InvalidateSubFramebuffer","","gl::InvalidateTexImage","","gl::InvalidateTexSubImage","","gl::IsBuffer","","gl::IsEnabled","","gl::IsEnabledi","","gl::IsFramebuffer","","gl::IsProgram","","gl::IsProgramPipeline","","gl::IsQuery","","gl::IsRenderbuffer","","gl::IsSampler","","gl::IsShader","","gl::IsSync","","gl::IsTexture","","gl::IsTransformFeedback","","gl::IsVertexArray","","gl::LineWidth","","gl::LinkProgram","","gl::LogicOp","","gl::MapBuffer","","gl::MapBufferRange","","gl::MapNamedBuffer","","gl::MapNamedBufferRange","","gl::MemoryBarrier","","gl::MemoryBarrierByRegion","","gl::MinSampleShading","","gl::MultiDrawArrays","","gl::MultiDrawArraysIndirect","","gl::MultiDrawElements","","gl::MultiDrawElementsBaseVertex","","gl::MultiDrawElementsIndirect","","gl::MultiTexCoordP1ui","","gl::MultiTexCoordP1uiv","","gl::MultiTexCoordP2ui","","gl::MultiTexCoordP2uiv","","gl::MultiTexCoordP3ui","","gl::MultiTexCoordP3uiv","","gl::MultiTexCoordP4ui","","gl::MultiTexCoordP4uiv","","gl::NamedBufferData","","gl::NamedBufferStorage","","gl::NamedBufferSubData","","gl::NamedFramebufferDrawBuffer","","gl::NamedFramebufferDrawBuffers","","gl::NamedFramebufferParameteri","","gl::NamedFramebufferReadBuffer","","gl::NamedFramebufferRenderbuffer","","gl::NamedFramebufferTexture","","gl::NamedFramebufferTextureLayer","","gl::NamedRenderbufferStorage","","gl::NamedRenderbufferStorageMultisample","","gl::NormalP3ui","","gl::NormalP3uiv","","gl::ObjectLabel","","gl::ObjectPtrLabel","","gl::PatchParameterfv","","gl::PatchParameteri","","gl::PauseTransformFeedback","","gl::PixelStoref","","gl::PixelStorei","","gl::PointParameterf","","gl::PointParameterfv","","gl::PointParameteri","","gl::PointParameteriv","","gl::PointSize","","gl::PolygonMode","","gl::PolygonOffset","","gl::PopDebugGroup","","gl::PrimitiveRestartIndex","","gl::ProgramBinary","","gl::ProgramParameteri","","gl::ProgramUniform1d","","gl::ProgramUniform1dv","","gl::ProgramUniform1f","","gl::ProgramUniform1fv","","gl::ProgramUniform1i","","gl::ProgramUniform1iv","","gl::ProgramUniform1ui","","gl::ProgramUniform1uiv","","gl::ProgramUniform2d","","gl::ProgramUniform2dv","","gl::ProgramUniform2f","","gl::ProgramUniform2fv","","gl::ProgramUniform2i","","gl::ProgramUniform2iv","","gl::ProgramUniform2ui","","gl::ProgramUniform2uiv","","gl::ProgramUniform3d","","gl::ProgramUniform3dv","","gl::ProgramUniform3f","","gl::ProgramUniform3fv","","gl::ProgramUniform3i","","gl::ProgramUniform3iv","","gl::ProgramUniform3ui","","gl::ProgramUniform3uiv","","gl::ProgramUniform4d","","gl::ProgramUniform4dv","","gl::ProgramUniform4f","","gl::ProgramUniform4fv","","gl::ProgramUniform4i","","gl::ProgramUniform4iv","","gl::ProgramUniform4ui","","gl::ProgramUniform4uiv","","gl::ProgramUniformMatrix2dv","","gl::ProgramUniformMatrix2fv","","gl::ProgramUniformMatrix2x3dv","","gl::ProgramUniformMatrix2x3fv","","gl::ProgramUniformMatrix2x4dv","","gl::ProgramUniformMatrix2x4fv","","gl::ProgramUniformMatrix3dv","","gl::ProgramUniformMatrix3fv","","gl::ProgramUniformMatrix3x2dv","","gl::ProgramUniformMatrix3x2fv","","gl::ProgramUniformMatrix3x4dv","","gl::ProgramUniformMatrix3x4fv","","gl::ProgramUniformMatrix4dv","","gl::ProgramUniformMatrix4fv","","gl::ProgramUniformMatrix4x2dv","","gl::ProgramUniformMatrix4x2fv","","gl::ProgramUniformMatrix4x3dv","","gl::ProgramUniformMatrix4x3fv","","gl::ProvokingVertex","","gl::PushDebugGroup","","gl::QueryCounter","","gl::ReadBuffer","","gl::ReadPixels","","gl::ReadnPixels","","gl::ReleaseShaderCompiler","","gl::RenderbufferStorage","","gl::RenderbufferStorageMultisample","","gl::ResumeTransformFeedback","","gl::SampleCoverage","","gl::SampleMaski","","gl::SamplerParameterIiv","","gl::SamplerParameterIuiv","","gl::SamplerParameterf","","gl::SamplerParameterfv","","gl::SamplerParameteri","","gl::SamplerParameteriv","","gl::Scissor","","gl::ScissorArrayv","","gl::ScissorIndexed","","gl::ScissorIndexedv","","gl::SecondaryColorP3ui","","gl::SecondaryColorP3uiv","","gl::ShaderBinary","","gl::ShaderSource","","gl::ShaderStorageBlockBinding","","gl::StencilFunc","","gl::StencilFuncSeparate","","gl::StencilMask","","gl::StencilMaskSeparate","","gl::StencilOp","","gl::StencilOpSeparate","","gl::TexBuffer","","gl::TexBufferRange","","gl::TexCoordP1ui","","gl::TexCoordP1uiv","","gl::TexCoordP2ui","","gl::TexCoordP2uiv","","gl::TexCoordP3ui","","gl::TexCoordP3uiv","","gl::TexCoordP4ui","","gl::TexCoordP4uiv","","gl::TexImage1D","","gl::TexImage2D","","gl::TexImage2DMultisample","","gl::TexImage3D","","gl::TexImage3DMultisample","","gl::TexParameterIiv","","gl::TexParameterIuiv","","gl::TexParameterf","","gl::TexParameterfv","","gl::TexParameteri","","gl::TexParameteriv","","gl::TexStorage1D","","gl::TexStorage2D","","gl::TexStorage2DMultisample","","gl::TexStorage3D","","gl::TexStorage3DMultisample","","gl::TexSubImage1D","","gl::TexSubImage2D","","gl::TexSubImage3D","","gl::TextureBarrier","","gl::TextureBuffer","","gl::TextureBufferRange","","gl::TextureParameterIiv","","gl::TextureParameterIuiv","","gl::TextureParameterf","","gl::TextureParameterfv","","gl::TextureParameteri","","gl::TextureParameteriv","","gl::TextureStorage1D","","gl::TextureStorage2D","","gl::TextureStorage2DMultisample","","gl::TextureStorage3D","","gl::TextureStorage3DMultisample","","gl::TextureSubImage1D","","gl::TextureSubImage2D","","gl::TextureSubImage3D","","gl::TextureView","","gl::TransformFeedbackBufferBase","","gl::TransformFeedbackBufferRange","","gl::TransformFeedbackVaryings","","gl::Uniform1d","","gl::Uniform1dv","","gl::Uniform1f","","gl::Uniform1fv","","gl::Uniform1i","","gl::Uniform1iv","","gl::Uniform1ui","","gl::Uniform1uiv","","gl::Uniform2d","","gl::Uniform2dv","","gl::Uniform2f","","gl::Uniform2fv","","gl::Uniform2i","","gl::Uniform2iv","","gl::Uniform2ui","","gl::Uniform2uiv","","gl::Uniform3d","","gl::Uniform3dv","","gl::Uniform3f","","gl::Uniform3fv","","gl::Uniform3i","","gl::Uniform3iv","","gl::Uniform3ui","","gl::Uniform3uiv","","gl::Uniform4d","","gl::Uniform4dv","","gl::Uniform4f","","gl::Uniform4fv","","gl::Uniform4i","","gl::Uniform4iv","","gl::Uniform4ui","","gl::Uniform4uiv","","gl::UniformBlockBinding","","gl::UniformMatrix2dv","","gl::UniformMatrix2fv","","gl::UniformMatrix2x3dv","","gl::UniformMatrix2x3fv","","gl::UniformMatrix2x4dv","","gl::UniformMatrix2x4fv","","gl::UniformMatrix3dv","","gl::UniformMatrix3fv","","gl::UniformMatrix3x2dv","","gl::UniformMatrix3x2fv","","gl::UniformMatrix3x4dv","","gl::UniformMatrix3x4fv","","gl::UniformMatrix4dv","","gl::UniformMatrix4fv","","gl::UniformMatrix4x2dv","","gl::UniformMatrix4x2fv","","gl::UniformMatrix4x3dv","","gl::UniformMatrix4x3fv","","gl::UniformSubroutinesuiv","","gl::UnmapBuffer","","gl::UnmapNamedBuffer","","gl::UseProgram","","gl::UseProgramStages","","gl::ValidateProgram","","gl::ValidateProgramPipeline","","gl::VertexArrayAttribBinding","","gl::VertexArrayAttribFormat","","gl::VertexArrayAttribIFormat","","gl::VertexArrayAttribLFormat","","gl::VertexArrayBindingDivisor","","gl::VertexArrayElementBuffer","","gl::VertexArrayVertexBuffer","","gl::VertexArrayVertexBuffers","","gl::VertexAttrib1d","","gl::VertexAttrib1dv","","gl::VertexAttrib1f","","gl::VertexAttrib1fv","","gl::VertexAttrib1s","","gl::VertexAttrib1sv","","gl::VertexAttrib2d","","gl::VertexAttrib2dv","","gl::VertexAttrib2f","","gl::VertexAttrib2fv","","gl::VertexAttrib2s","","gl::VertexAttrib2sv","","gl::VertexAttrib3d","","gl::VertexAttrib3dv","","gl::VertexAttrib3f","","gl::VertexAttrib3fv","","gl::VertexAttrib3s","","gl::VertexAttrib3sv","","gl::VertexAttrib4Nbv","","gl::VertexAttrib4Niv","","gl::VertexAttrib4Nsv","","gl::VertexAttrib4Nub","","gl::VertexAttrib4Nubv","","gl::VertexAttrib4Nuiv","","gl::VertexAttrib4Nusv","","gl::VertexAttrib4bv","","gl::VertexAttrib4d","","gl::VertexAttrib4dv","","gl::VertexAttrib4f","","gl::VertexAttrib4fv","","gl::VertexAttrib4iv","","gl::VertexAttrib4s","","gl::VertexAttrib4sv","","gl::VertexAttrib4ubv","","gl::VertexAttrib4uiv","","gl::VertexAttrib4usv","","gl::VertexAttribBinding","","gl::VertexAttribDivisor","","gl::VertexAttribFormat","","gl::VertexAttribI1i","","gl::VertexAttribI1iv","","gl::VertexAttribI1ui","","gl::VertexAttribI1uiv","","gl::VertexAttribI2i","","gl::VertexAttribI2iv","","gl::VertexAttribI2ui","","gl::VertexAttribI2uiv","","gl::VertexAttribI3i","","gl::VertexAttribI3iv","","gl::VertexAttribI3ui","","gl::VertexAttribI3uiv","","gl::VertexAttribI4bv","","gl::VertexAttribI4i","","gl::VertexAttribI4iv","","gl::VertexAttribI4sv","","gl::VertexAttribI4ubv","","gl::VertexAttribI4ui","","gl::VertexAttribI4uiv","","gl::VertexAttribI4usv","","gl::VertexAttribIFormat","","gl::VertexAttribIPointer","","gl::VertexAttribL1d","","gl::VertexAttribL1dv","","gl::VertexAttribL2d","","gl::VertexAttribL2dv","","gl::VertexAttribL3d","","gl::VertexAttribL3dv","","gl::VertexAttribL4d","","gl::VertexAttribL4dv","","gl::VertexAttribLFormat","","gl::VertexAttribLPointer","","gl::VertexAttribP1ui","","gl::VertexAttribP1uiv","","gl::VertexAttribP2ui","","gl::VertexAttribP2uiv","","gl::VertexAttribP3ui","","gl::VertexAttribP3uiv","","gl::VertexAttribP4ui","","gl::VertexAttribP4uiv","","gl::VertexAttribPointer","","gl::VertexBindingDivisor","","gl::VertexP2ui","","gl::VertexP2uiv","","gl::VertexP3ui","","gl::VertexP3uiv","","gl::VertexP4ui","","gl::VertexP4uiv","","gl::Viewport","","gl::ViewportArrayv","","gl::ViewportIndexedf","","gl::ViewportIndexedfv","","gl::WaitSync","","gl::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ActiveTextureARB","","Fallbacks: AttachObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: BeginConditionalRenderNV","","Fallbacks: BeginQueryARB","","","","Fallbacks: BeginTransformFeedbackEXT, …","","Fallbacks: BindAttribLocationARB","","Fallbacks: BindBufferARB","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","","","","Fallbacks: BindFragDataLocationEXT","","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","","","","","","","","","Fallbacks: BindTextureEXT","","","","","","","","Fallbacks: BindVertexArrayOES","","","","","","Fallbacks: BlendColorEXT","","Fallbacks: BlendEquationEXT","","Fallbacks: BlendEquationSeparateEXT","","Fallbacks: BlendEquationSeparateIndexedAMD, …","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","","Fallbacks: BlendFuncSeparateIndexedAMD, …","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","","","Fallbacks: BufferDataARB","","Fallbacks: BufferStorageEXT","","Fallbacks: BufferSubDataARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CheckFramebufferStatusEXT","","","","Fallbacks: ClampColorARB","","","","","","","","","","","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","","","","","","","","","Fallbacks: ClearTexImageEXT","","Fallbacks: ClearTexSubImageEXT","","Fallbacks: ClientWaitSyncAPPLE","","Fallbacks: ClipControlEXT","","","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","","","","","","Fallbacks: CompileShaderARB","","Fallbacks: CompressedTexImage1DARB","","Fallbacks: CompressedTexImage2DARB","","Fallbacks: CompressedTexImage3DARB","","Fallbacks: CompressedTexSubImage1DARB","","Fallbacks: CompressedTexSubImage2DARB","","Fallbacks: CompressedTexSubImage3DARB","","","","","","","","Fallbacks: CopyBufferSubDataNV","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","","","Fallbacks: CopyTexImage1DEXT","","Fallbacks: CopyTexImage2DEXT","","Fallbacks: CopyTexSubImage1DEXT","","Fallbacks: CopyTexSubImage2DEXT","","Fallbacks: CopyTexSubImage3DEXT","","","","","","","","","","","","Fallbacks: CreateProgramObjectARB","","","","","","","","","","Fallbacks: CreateShaderObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","","Fallbacks: DeleteBuffersARB","","Fallbacks: DeleteFramebuffersEXT","","","","","","Fallbacks: DeleteQueriesARB","","Fallbacks: DeleteRenderbuffersEXT","","","","","","Fallbacks: DeleteSyncAPPLE","","","","Fallbacks: DeleteTransformFeedbacksNV","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","","","","","","","Fallbacks: DepthRangefOES","","Fallbacks: DetachObjectARB","","","","","","Fallbacks: DisableVertexAttribArrayARB","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","","","","Fallbacks: DrawArraysEXT","","","","Fallbacks: DrawArraysInstancedANGLE, …","","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","","","Fallbacks: DrawElementsBaseVertexEXT, …","","","","Fallbacks: DrawElementsInstancedANGLE, …","","Fallbacks: DrawElementsInstancedBaseInstanceEXT","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","","Fallbacks: DrawRangeElementsEXT","","Fallbacks: DrawRangeElementsBaseVertexEXT, …","","Fallbacks: DrawTransformFeedbackEXT, …","","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","","","","","","","","","","","","Fallbacks: EnableVertexAttribArrayARB","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","","Fallbacks: EndQueryARB","","","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: FenceSyncAPPLE","","","","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","","","","","Fallbacks: FramebufferRenderbufferEXT","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","","Fallbacks: FramebufferTexture1DEXT","","Fallbacks: FramebufferTexture2DEXT","","Fallbacks: FramebufferTexture3DEXT","","Fallbacks: FramebufferTextureLayerARB, …","","","","","","","","","","","","","","","","","","","","Fallbacks: GenBuffersARB","","Fallbacks: GenFramebuffersEXT","","","","Fallbacks: GenQueriesARB","","Fallbacks: GenRenderbuffersEXT","","","","","","Fallbacks: GenTransformFeedbacksNV","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","","Fallbacks: GenerateMipmapEXT","","","","","","Fallbacks: GetActiveAttribARB","","","","","","","","Fallbacks: GetActiveUniformARB","","","","","","","","","","","","Fallbacks: GetAttribLocationARB","","Fallbacks: GetBooleanIndexedvEXT","","","","","","Fallbacks: GetBufferParameterivARB","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","","Fallbacks: GetBufferSubDataARB","","Fallbacks: GetCompressedTexImageARB","","","","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","","","Fallbacks: GetFragDataIndexEXT","","Fallbacks: GetFragDataLocationEXT","","Fallbacks: GetFramebufferAttachmentParameterivEXT","","","","Fallbacks: GetGraphicsResetStatusEXT, …","","","","Fallbacks: GetInteger64vAPPLE","","Fallbacks: GetIntegerIndexedvEXT","","","","","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","","","","","","","","","Fallbacks: GetObjectLabelKHR","","Fallbacks: GetObjectPtrLabelKHR","","Fallbacks: GetPointervEXT, GetPointervKHR","","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","","Fallbacks: GetQueryObjectui64vEXT","","Fallbacks: GetQueryObjectuivARB","","Fallbacks: GetQueryivARB","","Fallbacks: GetRenderbufferParameterivEXT","","Fallbacks: GetSamplerParameterIivEXT, …","","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","","","","","","Fallbacks: GetShaderSourceARB","","","","","","","","","","","","Fallbacks: GetSyncivAPPLE","","","","","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","","","","","","","Fallbacks: GetUniformLocationARB","","","","","","Fallbacks: GetUniformfvARB","","Fallbacks: GetUniformivARB","","Fallbacks: GetUniformuivEXT","","","","","","","","Fallbacks: GetVertexAttribIivEXT","","Fallbacks: GetVertexAttribIuivEXT","","Fallbacks: GetVertexAttribLdvEXT","","Fallbacks: GetVertexAttribPointervARB, …","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","","Fallbacks: GetnUniformuivKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: IsBufferARB","","","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","","Fallbacks: IsFramebufferEXT","","","","","","Fallbacks: IsQueryARB","","Fallbacks: IsRenderbufferEXT","","","","","","Fallbacks: IsSyncAPPLE","","","","Fallbacks: IsTransformFeedbackNV","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: LinkProgramallbacks: MapBufferARB, MapBufferOES","","Fallbacks: MapBufferRangeEXT","","","","","","Fallbacks: MemoryBarrierEXT","","","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","","Fallbacks: MultiDrawArraysEXT","","Fallbacks: MultiDrawArraysIndirectAMD, …","","Fallbacks: MultiDrawElementsEXT","","Fallbacks: MultiDrawElementsBaseVertexEXT","","Fallbacks: MultiDrawElementsIndirectAMD, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","","Fallbacks: ObjectPtrLabelKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","","Fallbacks: PauseTransformFeedbackNV","","","","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","","Fallbacks: PointParameteriNV","","Fallbacks: PointParameterivNV","","","","Fallbacks: PolygonModeNV","","","","Fallbacks: PopDebugGroupKHR","","","","Fallbacks: ProgramBinaryOES","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","","","","Fallbacks: ProgramUniform1fEXT","","Fallbacks: ProgramUniform1fvEXT","","Fallbacks: ProgramUniform1iEXT","","Fallbacks: ProgramUniform1ivEXT","","Fallbacks: ProgramUniform1uiEXT","","Fallbacks: ProgramUniform1uivEXT","","","","","","Fallbacks: ProgramUniform2fEXT","","Fallbacks: ProgramUniform2fvEXT","","Fallbacks: ProgramUniform2iEXT","","Fallbacks: ProgramUniform2ivEXT","","Fallbacks: ProgramUniform2uiEXT","","Fallbacks: ProgramUniform2uivEXT","","","","","","Fallbacks: ProgramUniform3fEXT","","Fallbacks: ProgramUniform3fvEXT","","Fallbacks: ProgramUniform3iEXT","","Fallbacks: ProgramUniform3ivEXT","","Fallbacks: ProgramUniform3uiEXT","","Fallbacks: ProgramUniform3uivEXT","","","","","","Fallbacks: ProgramUniform4fEXT","","Fallbacks: ProgramUniform4fvEXT","","Fallbacks: ProgramUniform4iEXT","","Fallbacks: ProgramUniform4ivEXT","","Fallbacks: ProgramUniform4uiEXT","","Fallbacks: ProgramUniform4uivEXT","","","","Fallbacks: ProgramUniformMatrix2fvEXT","","","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","","","Fallbacks: ProgramUniformMatrix3fvEXT","","","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","","","Fallbacks: ProgramUniformMatrix4fvEXT","","","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","","","Fallbacks: ProgramUniformMatrix4x3fvEXT","","Fallbacks: ProvokingVertexEXT","","Fallbacks: PushDebugGroupKHR","","","","","","","","","","","","","","","","","","","","","Fallbacks: QueryCounterEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","","","Fallbacks: RenderbufferStorageEXT","","Fallbacks: RenderbufferStorageMultisampleEXT, …","","Fallbacks: ResumeTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: SampleCoverageARB","","","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES","","","","","","","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","","","","","Fallbacks: ShaderSourceARB","","","","","","","","","","","","","","Fallbacks: StencilOpSeparateallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","","","","","","Fallbacks: TexStorage1DEXT","","Fallbacks: TexStorage2DEXT","","","","Fallbacks: TexStorage3DEXT","","Fallbacks: TexStorage3DMultisampleOES","","Fallbacks: TexSubImage1DEXT","","Fallbacks: TexSubImage2DEXT","","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","","","","Fallbacks: TransformFeedbackVaryingsEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: Uniform1fARB","","Fallbacks: Uniform1fvARB","","Fallbacks: Uniform1iARB","","Fallbacks: Uniform1ivARB","","Fallbacks: Uniform1uiEXT","","Fallbacks: Uniform1uivEXT","","","","","","Fallbacks: Uniform2fARB","","Fallbacks: Uniform2fvARB","","Fallbacks: Uniform2iARB","","Fallbacks: Uniform2ivARB","","Fallbacks: Uniform2uiEXT","","Fallbacks: Uniform2uivEXT","","","","","","Fallbacks: Uniform3fARB","","Fallbacks: Uniform3fvARB","","Fallbacks: Uniform3iARB","","Fallbacks: Uniform3ivARB","","Fallbacks: Uniform3uiEXT","","Fallbacks: Uniform3uivEXT","","","","","","Fallbacks: Uniform4fARB","","Fallbacks: Uniform4fvARB","","Fallbacks: Uniform4iARB","","Fallbacks: Uniform4ivARB","","Fallbacks: Uniform4uiEXT","","Fallbacks: Uniform4uivEXT","","","","","","Fallbacks: UniformMatrix2fvARB","","","","Fallbacks: UniformMatrix2x3fvNV","","","","Fallbacks: UniformMatrix2x4fvNV","","","","Fallbacks: UniformMatrix3fvARB","","","","Fallbacks: UniformMatrix3x2fvNV","","","","Fallbacks: UniformMatrix3x4fvNV","","","","Fallbacks: UniformMatrix4fvARB","","","","Fallbacks: UniformMatrix4x2fvNV","","","","Fallbacks: UniformMatrix4x3fvNV","","","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","","","Fallbacks: UseProgramObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ValidateProgramARB","","","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","","Fallbacks: VertexAttrib4NbvARB","","Fallbacks: VertexAttrib4NivARB","","Fallbacks: VertexAttrib4NsvARB","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","","Fallbacks: VertexAttrib4NuivARB","","Fallbacks: VertexAttrib4NusvARB","","Fallbacks: VertexAttrib4bvARB","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","","Fallbacks: VertexAttrib4ivARB","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","","Fallbacks: VertexAttrib4ubvARB","","Fallbacks: VertexAttrib4uivARB","","Fallbacks: VertexAttrib4usvARB","","","","Fallbacks: VertexAttribDivisorANGLE, …","","","","Fallbacks: VertexAttribI1iEXT","","Fallbacks: VertexAttribI1ivEXT","","Fallbacks: VertexAttribI1uiEXT","","Fallbacks: VertexAttribI1uivEXT","","Fallbacks: VertexAttribI2iEXT","","Fallbacks: VertexAttribI2ivEXT","","Fallbacks: VertexAttribI2uiEXT","","Fallbacks: VertexAttribI2uivEXT","","Fallbacks: VertexAttribI3iEXT","","Fallbacks: VertexAttribI3ivEXT","","Fallbacks: VertexAttribI3uiEXT","","Fallbacks: VertexAttribI3uivEXT","","Fallbacks: VertexAttribI4bvEXT","","Fallbacks: VertexAttribI4iEXT","","Fallbacks: VertexAttribI4ivEXT","","Fallbacks: VertexAttribI4svEXT","","Fallbacks: VertexAttribI4ubvEXT","","Fallbacks: VertexAttribI4uiEXT","","Fallbacks: VertexAttribI4uivEXT","","Fallbacks: VertexAttribI4usvEXT","","","","Fallbacks: VertexAttribIPointerEXT","","Fallbacks: VertexAttribL1dEXT","","Fallbacks: VertexAttribL1dvEXT","","Fallbacks: VertexAttribL2dEXT","","Fallbacks: VertexAttribL2dvEXT","","Fallbacks: VertexAttribL3dEXT","","Fallbacks: VertexAttribL3dvEXT","","Fallbacks: VertexAttribL4dEXT","","Fallbacks: VertexAttribL4dvEXT","","","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","","","","Fallbacks: WaitSyncAPPLE","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load each OpenGL symbol using a custom load function. This …","Creates a <code>FnPtr</code> from a load attempteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,3,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6],["gluint",6]]],null,[[["glenum",6]]],null,[[["gluint",6],["gluint",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6],["glenum",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["gluint",6]]],null,[[["glenum",6]]],null,[[["gluint",6],["gluint",6],["glchar",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["glenum",6],["gluint",6],["glsizei",6],["gluint",0]]],null,[[["glenum",6],["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizeiptr",0]]],null,[[["gluint",6],["gluint",6],["glchar",0]]],null,[[["gluint",6],["gluint",6],["gluint",6],["glchar",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["glint",6],["glboolean",6],["glint",6],["glenum",6],["glenum",6]]],null,[[["gluint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["glsizei",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["glsizei",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["gluint",6]]],null,[[["gluint",6],["gluint",6],["glintptr",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizei",0]]],null,[[["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["glenum",6]]],null,[[["glenum",6],["glenum",6]]],null,[[["gluint",6],["glenum",6],["glenum",6]]],null,[[["gluint",6],["glenum",6]]],null,[[["glenum",6],["glenum",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gluint",6],["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,[[["gluint",6],["glenum",6],["glenum",6]]],null,[[["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glbitfield",6],["glenum",6]]],null,[[["gluint",6],["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glbitfield",6],["glenum",6]]],null,[[["glenum",6],["glsizeiptr",6],["c_void",0],["glenum",6]]],null,[[["glenum",6],["glsizeiptr",6],["c_void",0],["glbitfield",6]]],null,[[["glenum",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6]],["glenum",6]],null,[[["gluint",6],["glenum",6]],["glenum",6]],null,[[["glenum",6],["glenum",6]]],null,[[["glbitfield",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glenum",6],["glintptr",6],["glsizeiptr",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glfloat",6],["glint",6]]],null,[[["glenum",6],["glint",6],["glfloat",0]]],null,[[["glenum",6],["glint",6],["glint",0]]],null,[[["glenum",6],["glint",6],["gluint",0]]],null,[[["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gldouble",6]]],null,[[["glfloat",6]]],null,[[["gluint",6],["glenum",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["glintptr",6],["glsizeiptr",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["glint",6],["glfloat",6],["glint",6]]],null,[[["gluint",6],["glenum",6],["glint",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",6],["gluint",0]]],null,[[["glint",6]]],null,[[["gluint",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glsync",6],["glbitfield",6],["gluint64",6]],["glenum",6]],null,[[["glenum",6],["glenum",6]]],null,[[["glboolean",6],["glboolean",6],["glboolean",6],["glboolean",6]]],null,[[["gluint",6],["glboolean",6],["glboolean",6],["glboolean",6],["glboolean",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["gluint",6]]],null,[[["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glenum",6],["glintptr",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gluint",6],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["gluint",6],["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["gluint",6],["glintptr",6],["glintptr",6],["glsizeiptr",6]]],null,[[["glenum",6],["glint",6],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glint",6]]],null,[[["glenum",6],["glint",6],["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glint",6]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[],["gluint",6]],null,[[["glsizei",6],["gluint",0]]],null,[[["glenum",6],["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glenum",6]],["gluint",6]],null,[[["glenum",6],["glsizei",6],["glchar",0]],["gluint",6]],null,[[["glenum",6],["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gldebugproc",6],["c_void",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["gluint",0],["glboolean",6]]],null,[[["glenum",6],["glenum",6],["gluint",6],["glenum",6],["glsizei",6],["glchar",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["gluint",6]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["gluint",6]]],null,[[["glsync",6]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glenum",6]]],null,[[["glboolean",6]]],null,[[["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["glenum",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["glintptr",6]]],null,[[["glenum",6],["glint",6],["glsizei",6]]],null,[[["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glint",6],["glsizei",6],["glsizei",6],["gluint",6]]],null,[[["glenum",6]]],null,[[["glsizei",6],["glenum",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glint",6]]],null,[[["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["gluint",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["glint",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["c_void",0],["glsizei",6],["glint",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["gluint",6],["glsizei",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["gluint",6],["gluint",6],["glsizei",6],["glenum",6],["c_void",0],["glint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["glsizei",6]]],null,[[["glenum",6],["gluint",6],["gluint",6]]],null,[[["glenum",6],["gluint",6],["gluint",6],["glsizei",6]]],null,null,null,null,null,null,null,[[["glenum",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[]],null,[[["glenum",6]]],null,[[["glenum",6],["gluint",6]]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6],["glbitfield",6]],["glsync",6]],null,[[]],null,[[]],null,[[["glenum",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,null,[[["glenum",6],["glenum",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0]]],null,[[["glenum",6]]],null,[[["gluint",6]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glint",0],["glenum",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glint",0],["glenum",0],["glchar",0]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glsizei",6],["gluint",0],["glenum",6],["glint",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["gluint",0]]],null,[[["gluint",6],["glchar",0]],["glint",6]],null,[[["glenum",6],["gluint",6],["glboolean",0]]],null,[[["glenum",6],["glboolean",0]]],null,[[["glenum",6],["glenum",6],["glint64",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glsizei",6],["glenum",0],["glenum",0],["gluint",0],["glenum",0],["glsizei",0],["glchar",0]],["gluint",6]],null,[[["glenum",6],["gluint",6],["gldouble",0]]],null,[[["glenum",6],["gldouble",0]]],null,[[],["glenum",6]],null,[[["glenum",6],["gluint",6],["glfloat",0]]],null,[[["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glchar",0]],["glint",6]],null,[[["gluint",6],["glchar",0]],["glint",6]],null,[[["glenum",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[],["glenum",6]],null,[[["glenum",6],["gluint",6],["glint64",0]]],null,[[["glenum",6],["glint64",0]]],null,[[["glenum",6],["gluint",6],["glint",0]]],null,[[["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["glint64",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["glint",0]]],null,[[["glenum",6],["gluint",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint64",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["c_void",0],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["glenum",6],["c_void",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["glenum",0],["c_void",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glchar",0]],["gluint",6]],null,[[["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glsizei",6],["glenum",0],["glsizei",6],["glsizei",0],["glint",0]]],null,[[["gluint",6],["glenum",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glintptr",6]]],null,[[["glenum",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint64",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint64",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["glenum",6],["glenum",6],["glint",0],["glint",0]]],null,[[["gluint",6],["glsizei",6],["glsizei",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["glenum",6]],["glubyte",0]],null,[[["glenum",6],["gluint",6]],["glubyte",0]],null,[[["gluint",6],["glenum",6],["glchar",0]],["gluint",6]],null,[[["gluint",6],["glenum",6],["glchar",0]],["glint",6]],null,[[["glsync",6],["glenum",6],["glsizei",6],["glsizei",0],["glint",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glfloat",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["glfloat",0]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["glsizei",0],["glsizei",0],["glenum",0],["glchar",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glint64",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glchar",0]],["gluint",6]],null,[[["gluint",6],["glsizei",6],["glchar",0],["gluint",0]]],null,[[["gluint",6],["glchar",0]],["glint",6]],null,[[["glenum",6],["glint",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glint",0]]],null,[[["gluint",6],["glint",6],["gluint",0]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glint64",0]]],null,[[["gluint",6],["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["gldouble",0]]],null,[[["gluint",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["gldouble",0]]],null,[[["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glboolean",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glenum",6],["glsizei",6],["gldouble",0]]],null,[[["glenum",6],["glenum",6],["glsizei",6],["glfloat",0]]],null,[[["glenum",6],["glenum",6],["glsizei",6],["glint",0]]],null,[[["glenum",6],["glboolean",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["glenum",6],["glsizei",6],["glfloat",0]]],null,[[["glenum",6],["glsizei",6],["gluint",0]]],null,[[["glenum",6],["glsizei",6],["glushort",0]]],null,[[["glsizei",6],["glubyte",0]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0],["glsizei",6],["c_void",0],["c_void",0]]],null,[[["glenum",6],["glint",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,null,null,null,[[["glenum",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6]]],null,[[["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["glenum",6],["glsizei",6],["glenum",0]]],null,[[["gluint",6],["glsizei",6],["glenum",0]]],null,[[["gluint",6],["glsizei",6],["glenum",0],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",0],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glint",6]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6]],["glboolean",6]],null,[[["glenum",6]],["glboolean",6]],null,[[["glenum",6],["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["glsync",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glfloat",6]]],null,[[["gluint",6]]],null,[[["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6],["glenum",6]],["c_void",0]],null,[[["glenum",6],["glintptr",6],["glsizeiptr",6],["glbitfield",6]],["c_void",0]],null,[[["gluint",6],["glenum",6]],["c_void",0]],null,[[["gluint",6],["glintptr",6],["glsizeiptr",6],["glbitfield",6]],["c_void",0]],null,[[["glbitfield",6]]],null,[[["glbitfield",6]]],null,[[["glfloat",6]]],null,[[["glenum",6],["glint",0],["glsizei",0],["glsizei",6]]],null,[[["glenum",6],["c_void",0],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",0],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["glenum",6],["glsizei",0],["glenum",6],["c_void",0],["glsizei",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["c_void",0],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6],["glsizeiptr",6],["c_void",0],["glenum",6]]],null,[[["gluint",6],["glsizeiptr",6],["c_void",0],["glbitfield",6]]],null,[[["gluint",6],["glintptr",6],["glsizeiptr",6],["c_void",0]]],null,[[["gluint",6],["glenum",6]]],null,[[["gluint",6],["glsizei",6],["glenum",0]]],null,[[["gluint",6],["glenum",6],["glint",6]]],null,[[["gluint",6],["glenum",6]]],null,[[["gluint",6],["glenum",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glint",6]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6],["gluint",6],["glsizei",6],["glchar",0]]],null,[[["c_void",0],["glsizei",6],["glchar",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6],["glfloat",0]]],null,[[["glenum",6],["glint",6]]],null,[[]],null,[[["glenum",6],["glfloat",6]]],null,[[["glenum",6],["glint",6]]],null,[[["glenum",6],["glfloat",6]]],null,[[["glenum",6],["glfloat",0]]],null,[[["glenum",6],["glint",6]]],null,[[["glenum",6],["glint",0]]],null,[[["glfloat",6]]],null,[[["glenum",6],["glenum",6]]],null,[[["glfloat",6],["glfloat",6]]],null,[[]],null,[[["gluint",6]]],null,[[["gluint",6],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gluint",6],["glenum",6],["glint",6]]],null,[[["gluint",6],["glint",6],["gldouble",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glfloat",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glenum",6]]],null,[[["glenum",6],["gluint",6],["glsizei",6],["glchar",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6]]],null,[[["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[]],null,[[["glenum",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glfloat",6],["glboolean",6]]],null,[[["gluint",6],["glbitfield",6]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glfloat",6]]],null,[[["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",6]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glint",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glsizei",6],["gluint",0],["glenum",6],["c_void",0],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glchar",0],["glint",0]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["glenum",6],["glint",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["glint",6],["gluint",6]]],null,[[["gluint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["glenum",6]]],null,[[["glenum",6],["glenum",6],["glenum",6],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glenum",6],["glenum",6],["gluint",6]]],null,[[["glenum",6],["glenum",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["glenum",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glint",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glenum",6],["gluint",0]]],null,[[["glenum",6],["glenum",6],["glfloat",6]]],null,[[["glenum",6],["glenum",6],["glfloat",0]]],null,[[["glenum",6],["glenum",6],["glint",6]]],null,[[["glenum",6],["glenum",6],["glint",0]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["glenum",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["glenum",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["glenum",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[]],null,[[["gluint",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glenum",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glfloat",6]]],null,[[["gluint",6],["glenum",6],["glfloat",0]]],null,[[["gluint",6],["glenum",6],["glint",6]]],null,[[["gluint",6],["glenum",6],["glint",0]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glenum",6],["glsizei",6],["glsizei",6],["glsizei",6],["glboolean",6]]],null,[[["gluint",6],["glint",6],["glint",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6],["glsizei",6],["glsizei",6],["glsizei",6],["glenum",6],["glenum",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["gluint",6],["glenum",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6],["glintptr",6],["glsizeiptr",6]]],null,[[["gluint",6],["glsizei",6],["glchar",0],["glenum",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["glint",6],["gldouble",6]]],null,[[["glint",6],["glsizei",6],["gldouble",0]]],null,[[["glint",6],["glfloat",6]]],null,[[["glint",6],["glsizei",6],["glfloat",0]]],null,[[["glint",6],["glint",6]]],null,[[["glint",6],["glsizei",6],["glint",0]]],null,[[["glint",6],["gluint",6]]],null,[[["glint",6],["glsizei",6],["gluint",0]]],null,[[["glint",6],["gldouble",6],["gldouble",6]]],null,[[["glint",6],["glsizei",6],["gldouble",0]]],null,[[["glint",6],["glfloat",6],["glfloat",6]]],null,[[["glint",6],["glsizei",6],["glfloat",0]]],null,[[["glint",6],["glint",6],["glint",6]]],null,[[["glint",6],["glsizei",6],["glint",0]]],null,[[["glint",6],["gluint",6],["gluint",6]]],null,[[["glint",6],["glsizei",6],["gluint",0]]],null,[[["glint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["glint",6],["glsizei",6],["gldouble",0]]],null,[[["glint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["glint",6],["glsizei",6],["glfloat",0]]],null,[[["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["glint",6],["glsizei",6],["glint",0]]],null,[[["glint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["glint",6],["glsizei",6],["gluint",0]]],null,[[["glint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["glint",6],["glsizei",6],["gldouble",0]]],null,[[["glint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["glint",6],["glsizei",6],["glfloat",0]]],null,[[["glint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["glint",6],["glsizei",6],["glint",0]]],null,[[["glint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["glint",6],["glsizei",6],["gluint",0]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["gldouble",0]]],null,[[["glint",6],["glsizei",6],["glboolean",6],["glfloat",0]]],null,[[["glenum",6],["glsizei",6],["gluint",0]]],null,[[["glenum",6]],["glboolean",6]],null,[[["gluint",6]],["glboolean",6]],null,[[["gluint",6]]],null,[[["gluint",6],["glbitfield",6],["gluint",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gluint",6]]],null,[[["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["glint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6],["gluint",6],["glintptr",6],["glsizei",6]]],null,[[["gluint",6],["gluint",6],["glsizei",6],["gluint",0],["glintptr",0],["glsizei",0]]],null,[[["gluint",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["glfloat",6]]],null,[[["gluint",6],["glfloat",0]]],null,[[["gluint",6],["glshort",6]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glfloat",0]]],null,[[["gluint",6],["glshort",6],["glshort",6]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glfloat",0]]],null,[[["gluint",6],["glshort",6],["glshort",6],["glshort",6]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["glbyte",0]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["glubyte",6],["glubyte",6],["glubyte",6],["glubyte",6]]],null,[[["gluint",6],["glubyte",0]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glushort",0]]],null,[[["gluint",6],["glbyte",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glfloat",0]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["glshort",6],["glshort",6],["glshort",6],["glshort",6]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["glubyte",0]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glushort",0]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["glint",6]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glbyte",0]]],null,[[["gluint",6],["glint",6],["glint",6],["glint",6],["glint",6]]],null,[[["gluint",6],["glint",0]]],null,[[["gluint",6],["glshort",0]]],null,[[["gluint",6],["glubyte",0]]],null,[[["gluint",6],["gluint",6],["gluint",6],["gluint",6],["gluint",6]]],null,[[["gluint",6],["gluint",0]]],null,[[["gluint",6],["glushort",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["gldouble",6],["gldouble",6],["gldouble",6],["gldouble",6]]],null,[[["gluint",6],["gldouble",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["gluint",6]]],null,[[["gluint",6],["glint",6],["glenum",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",6]]],null,[[["gluint",6],["glenum",6],["glboolean",6],["gluint",0]]],null,[[["gluint",6],["glint",6],["glenum",6],["glboolean",6],["glsizei",6],["c_void",0]]],null,[[["gluint",6],["gluint",6]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glenum",6],["gluint",6]]],null,[[["glenum",6],["gluint",0]]],null,[[["glint",6],["glint",6],["glsizei",6],["glsizei",6]]],null,[[["gluint",6],["glsizei",6],["glfloat",0]]],null,[[["gluint",6],["glfloat",6],["glfloat",6],["glfloat",6],["glfloat",6]]],null,[[["gluint",6],["glfloat",0]]],null,null,null,[[["glsync",6],["glbitfield",6],["gluint64",6]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["c_void",0]],["fnptr",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],[[],["bool",0]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"glutin":{"doc":"The purpose of this library is to provide an OpenGL <code>Context</code>…","t":[4,13,3,3,8,4,13,3,13,4,13,13,13,7,3,4,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,3,3,13,3,6,3,4,13,13,4,13,13,13,13,13,13,6,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,11,11,12,12,0,11,11,11,11,11,0,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,12,0,12,11,12,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,3,13,13,3,3,8,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,4,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,18,13,13,13,13,13,13,13,13,6,13,13,13,13,13,6,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,6,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,3,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,10,0,10,0,13,4,8,8,13,13,8,8,11,11,11,11,11,11,11,11,10,10,10,11,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,8,16,10,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,3,3,3,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["Api","Compatibility","Context","ContextBuilder","ContextCurrentState","ContextError","ContextLost","ContextWrapper","Core","CreationError","CreationErrors","Flush","FunctionUnavailable","GL_CORE","GlAttributes","GlProfile","GlRequest","GlThenGles","IoError","Latest","NoAvailablePixelFormat","NoBackendAvailable","NoError","None","NotCurrent","NotRobust","NotSupported","OpenGl","OpenGlEs","OpenGlVersionNotSupported","OsError","OsError","PixelFormat","PixelFormatRequirements","PlatformSpecific","PossiblyCurrent","RawContext","Rect","ReleaseBehavior","RobustLoseContextOnReset","RobustNoResetNotification","Robustness","RobustnessNotSupported","Specific","TryRobustLoseContextOnReset","TryRobustNoResetNotification","WebGl","Window","WindowedContext","alpha_bits","alpha_bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_headless","build_windowed","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_bits","color_bits","context","debug","default","default","depth_bits","depth_bits","deref","description","description","double_buffer","double_buffer","dpi","eq","eq","eq","eq","eq","error","event","event_loop","float_color_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_api","get_api","get_egl_display","get_pixel_format","get_proc_address","get_proc_address","gl_attr","hardware_accelerated","hardware_accelerated","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_current","is_current","make_current","make_current","make_not_current","make_not_current","map_sharing","monitor","multisampling","multisampling","ne","new","pf_reqs","platform","profile","raw_handle","release_behavior","resize","robustness","sharing","split","split","srgb","srgb","stencil_bits","stencil_bits","stereoscopy","stereoscopy","swap_buffers","swap_buffers_with_damage","swap_buffers_with_damage_supported","to_gl_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","treat_as_current","treat_as_current","treat_as_not_current","treat_as_not_current","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vsync","width","window","window","window","with_depth_buffer","with_double_buffer","with_gl","with_gl_debug_flag","with_gl_profile","with_gl_robustness","with_hardware_acceleration","with_multisampling","with_pixel_format","with_shared_lists","with_srgb","with_stencil_buffer","with_stereoscopy","with_vsync","x","y","0","0","0","0","0","0","0","0","0","1","opengl_version","opengles_version","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","0","0","0","0","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Down","DroppedFile","E","ElementState","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadPressure","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","0","axis","button","codepoint","delta","delta","state","value","0","0","0","device_id","event","event","window_id","0","altitude_angle","force","max_possible_force","0","0","0","1","requested_resume","requested_resume","start","start","0","0","0","0","0","0","0","0","0","axis","button","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","position","pressure","scale_factor","stage","state","value","0","ControlFlow","EventLoop","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","Poll","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_proxy","default","deref","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hide_application","hide_other_applications","into","into","into","into","into","ne","ne","new","primary_monitor","run","run_return","send_event","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_user_event","0","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","ne","ne","ns_screen","partial_cmp","partial_cmp","position","refresh_rate","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","ContextTraitExt","Handle","get_egl_display","macos","raw_handle","run_return","Accessory","ActivationPolicy","EventLoopWindowTargetExtMacOS","MonitorHandleExtMacOS","Prohibited","Regular","WindowBuilderExtMacOS","WindowExtMacOS","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","has_shadow","hide_application","hide_other_applications","into","native_id","ns_screen","ns_view","ns_window","set_has_shadow","set_simple_fullscreen","simple_fullscreen","to_owned","try_from","try_into","type_id","with_activation_policy","with_disallow_hidpi","with_fullsize_content_view","with_has_shadow","with_movable_by_window_background","with_resize_increments","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","EventLoopExtRunReturn","UserEvent","run_return","Alias","AllScroll","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","Cell","ColResize","ContextMenu","Copy","Critical","Crosshair","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","Informational","Light","Move","NResize","NeResize","NeswResize","NoDrop","NotAllowed","NsResize","NwResize","NwseResize","OsError","Progress","RowResize","SResize","SeResize","SwResize","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","Window","WindowAttributes","WindowBuilder","WindowId","ZoomIn","ZoomOut","always_on_top","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","current_monitor","decorations","default","default","default","default","drop","dummy","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_rgba","fullscreen","fullscreen","has_shadow","hash","hash","id","inner_position","inner_size","inner_size","into","into","into","into","into","into","into","into","into","into","max_inner_size","maximized","min_inner_size","ne","ne","new","new","ns_view","ns_window","outer_position","outer_size","partial_cmp","primary_monitor","raw_window_handle","request_redraw","request_user_attention","resizable","scale_factor","set_always_on_top","set_cursor_grab","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_fullscreen","set_has_shadow","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_simple_fullscreen","set_title","set_visible","set_window_icon","simple_fullscreen","source","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visible","window","window_icon","with_activation_policy","with_always_on_top","with_decorations","with_disallow_hidpi","with_fullscreen","with_fullsize_content_view","with_has_shadow","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_movable_by_window_background","with_resizable","with_resize_increments","with_title","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","with_transparent","with_visible","with_window_icon","0","byte_count","height","pixel_count","width","width_x_height","0","0"],"q":["glutinglutin::ContextError","","glutin::CreationError","","","","","","glutin::GlRequest","","","","glutin::dpi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::dpi::Position","","glutin::dpi::Size","","glutin::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::error::ExternalError","","glutin::eventglutin::event::DeviceEvent","","","","","","","","glutin::event::Event","","","","","","","glutin::event::Force","","","","glutin::event::MouseButton","glutin::event::MouseScrollDelta","","","glutin::event::StartCause","","","","glutin::event::WindowEvent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::event_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::event_loop::ControlFlow","glutin::monitor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::platform","","","","","","glutin::platform::macos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","glutin::platform::run_return","","","glutin::windowglutin::window::BadIcon","","","","","","glutin::window::Fullscreen",""],"d":["All APIs related to OpenGL that you can possibly get while …","Include all the immediate more functions and definitions.","Represents an OpenGL <code>Context</code>.","An object that allows you to build <code>Context</code>s, <code>RawContext&lt;T&gt;</code>…","A trait implemented on both <code>NotCurrent</code> and <code>PossiblyCurrent</code>.","Error that can happen when manipulating an OpenGL <code>Context</code>.","","A context which has an underlying window, which may or may …","Include all the future-compatible functions and …","Error that can happen while creating a window or a …","We received multiple errors, instead of one.","Flushes the context that was previously current as if …","","The minimum core profile GL context. Useful for getting …","Attributes to use when creating an OpenGL <code>Context</code>.","Describes the requested OpenGL <code>Context</code> profiles.","Describes the OpenGL API and version that are being …","If OpenGL is available, create an OpenGL <code>Context</code> with the …","","Request the latest version of the “best” API of this …","","","The driver doesn’t check anything. This option is very …","Doesn’t do anything. Most notably doesn’t flush.","A type that <code>Context</code>s which are not currently current on …","Not everything is checked. Your application can crash if …","","The classical OpenGL. Available on Windows, Unix operating …","OpenGL embedded system. Available on Unix operating …","","","General platform error.","Describes a possible format.","Describes how the backend should choose a pixel format.","","A type that <code>Context</code>s which might possibly be currently …","Represents an OpenGL <code>Context</code> which has an underlying …","","The behavior of the driver when you change the current …","Everything is checked to avoid any crash. If a problem …","Everything is checked to avoid any crash. The driver will …","Specifies the tolerance of the OpenGL <code>Context</code> to faults. …","","Request a specific version of a specific API.","Same as <code>RobustLoseContextOnReset</code> but the context creation …","Same as <code>RobustNoResetNotification</code> but the context creation …","OpenGL for the web. Very similar to OpenGL ES.","","Represents an OpenGL <code>Context</code> and the <code>Window</code> with which it …","","Minimum number of bits for the alpha in the color buffer. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the given GL context.","Builds the given window along with the associated GL …","","","","","","","","","","","","","","","","","","","","","","","","","","The number of color bits. Does not include alpha bits.","Minimum number of bits for the color buffer, excluding …","Borrow the inner GL <code>Context</code>.","Whether to enable the <code>debug</code> flag of the context.","","","","Minimum number of bits for the depth buffer. <code>None</code> means “…","","","","","If true, only double-buffered formats will be considered. …","UI scaling is important, so read the docs for this module …","","","","","","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","If true, the color buffer must be in a floating point …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","See <code>ContextWrapper::get_api</code>.","Returns the OpenGL API being used.","","Returns the pixel format of the main framebuffer of the …","See <code>ContextWrapper::get_proc_address</code>.","Returns the address of an OpenGL function.","The attributes to use to create the context.","","If true, only hardware-accelerated formats will be …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","See <code>ContextWrapper::is_current</code>.","Returns true if this context is the current one in this …","See <code>ContextWrapper::make_current</code>.","Sets this context as the current context. The previously …","See <code>ContextWrapper::make_not_current</code>.","If this context is current, makes this context not …","Turns the <code>sharing</code> parameter into another type by calling a …","Types useful for interacting with a user’s monitors.","<code>None</code> if multisampling is disabled, otherwise <code>Some(N)</code> where …","Contains the minimum number of samples per pixel in the …","","Initializes a new <code>ContextBuilder</code> with default values.","The pixel format requirements","Contains traits with platform-specific methods in them.","OpenGL profile to use.","","The behavior when changing the current context. Default is …","Resize the context.","How the OpenGL <code>Context</code> should detect errors.","An existing context with which some OpenGL objects get …","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …","","If true, only sRGB-capable formats will be considered. If …","","Minimum number of stencil bits. <code>None</code> means “don’t care…","","If true, only stereoscopic formats will be considered. If …","Swaps the buffers in case of double or triple buffering.","Swaps the buffers in case of double or triple buffering …","Returns whether or not swap_buffer_with_damage is …","Extract the desktop GL version, if any.","","","","","","","","","","","","","","","See <code>ContextWrapper::treat_as_current</code>.","Treats this context as current, even if it is not current. …","See <code>ContextWrapper::treat_as_not_current</code>.","Treats this context as not current, even if it is current. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version to try create. See <code>GlRequest</code> for more infos.","Whether to use vsync. If vsync is enabled, calling …","","The <code>Window</code> struct and associated types.","Borrow the inner <code>W</code>.","Borrow the inner <code>W</code>.","Sets the number of bits in the depth buffer.","Sets whether double buffering should be enabled.","Sets how the backend should choose the OpenGL API and …","Sets the <em>debug</em> flag for the OpenGL <code>Context</code>.","Sets the desired OpenGL <code>Context</code> profile.","Sets the robustness of the OpenGL <code>Context</code>. See the docs of …","Sets whether hardware acceleration is required.","Sets the multisampling level to request. A value of <code>0</code> …","Sets the number of bits in the color buffer.","Share the display lists with the given <code>Context</code>.","Sets whether sRGB should be enabled on the window.","Sets the number of bits in the stencil buffer.","Request the backend to be stereoscopic.","Requests that the window has vsync enabled.","","","","","","","","","","","","","The version to use for OpenGL.","The version to use for OpenGL ES.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","","A file has been dropped into the window.","","Describes the input state of a key.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis.  This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad pressure event.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy <code>DeviceId</code>, useful for unit testing. The …","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","","","","","","","","","","","","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","","(x, y) change in position in unspecified units.","","","","","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","","Set by the user callback given to the <code>EventLoop::run</code> …","Provides a way to retrieve events from the system and from …","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","When the current loop iteration finishes, immediately …","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Builds a new event loop with a <code>()</code> as the user event type.","Returns the primary monitor of the system.","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","","","","","","","","","","","","","","","","","","","","Builds a new event loop.","","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode. <strong>Note</strong>: the …","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","Platform-specific extensions for OpenGL <code>Context</code>s.","Raw context handle.","Returns a pointer to the <code>EGLDisplay</code> object of EGL that is …","Platform-specific methods for macOS.","Returns the raw context handle.","Platform-specific methods for event loops independent from …","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.","Corresponds to <code>NSApplicationActivationPolicy</code>.","Additional methods on <code>EventLoopWindowTarget</code> that are …","Additional methods on <code>MonitorHandle</code> that are specific to …","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to MacOS.","","","","","","","","Returns the argument unchanged.","Returns whether or not the window has shadow.","Hide the entire application. In most applications this is …","Hide the other applications. In most applications this is …","Calls <code>U::from(self)</code>.","Returns the identifier of the monitor for Cocoa.","Returns a pointer to the NSScreen representing this …","Returns a pointer to the cocoa <code>NSView</code> that is used by this …","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …","Sets whether or not the window has shadow.","Toggles a fullscreen mode that doesn’t require a new …","Returns whether or not the window is in simple fullscreen …","","","","","Sets the activation policy for the window being built.","","Makes the window content appear behind the titlebar.","","Enables click-and-drag behavior for the entire window, not …","Build window with <code>resizeIncrements</code> property. Values must …","Hides the window title.","Hides the window titlebar buttons.","Hides the window titlebar.","Makes the titlebar transparent and allows the content to …","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","","","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","","Platform-specific","A simple crosshair.","Describes the appearance of the mouse cursor.","","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Platform-specific","","Indicates something is to be moved.","","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","Progress indicator. Shows that processing is being done. …","","","","","Indicates text that may be selected or edited.","","Platform-specific","","","Program busy indicator.","Represents a window.","Attributes to use when creating a window.","Object that allows you to build windows.","Identifier of a window. Unique for each window.","","","Whether the window should always be on top of other …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","Returns the monitor on which the window currently resides.","Whether the window should have borders and bars.","","","","","","Returns a dummy <code>WindowId</code>, useful for unit testing. The …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an <code>Icon</code> from 32bpp RGBA data.","Gets the window’s current fullscreen state.","Whether the window should be set as fullscreen upon …","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","The dimensions of the window. If this is <code>None</code>, some …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum dimensions a window can be, If this is <code>None</code>, …","Whether the window should be maximized upon creation.","The minimum dimensions a window can be, If this is <code>None</code>, …","","","Creates a new Window for platforms where this is …","Initializes a new <code>WindowBuilder</code> with default values.","","","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Emits a <code>WindowEvent::RedrawRequested</code> event in the …","Requests user attention to the window, this has no effect …","Whether the window is resizable or not.","Returns the scale factor that can be used to map logical …","Change whether or not the window will always be on top of …","Grabs the cursor, preventing it from leaving the window.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","Sets the window to fullscreen or back.","","Sets location of IME candidate box in client area …","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","","Modifies the title of the window.","Modifies the window’s visibility.","Sets the window icon. On Windows and X11, this is …","","","The title of the window in the title bar.","","","","","","","","","","Whether the the window should be transparent. If this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window should be immediately visible upon …","The attributes to use to create the window.","The window icon.","","Sets whether or not the window will always be on top of …","Sets whether the window should have a border, a title bar, …","","Sets the window fullscreen state.","","","Requests the window to be of specific dimensions.","Sets a maximum dimension size for the window.","Requests maximized mode.","Sets a minimum dimension size for the window.","","Sets whether the window is resizable or not.","","Requests a specific title for the window.","","","","","Sets whether the background of the window should be …","Sets whether the window will be initially hidden or …","Sets the window icon.","","","","","","","",""],"i":[0,1,0,0,0,0,2,0,1,0,3,4,2,0,0,0,0,5,2,5,3,3,6,4,0,6,3,7,7,3,3,2,0,0,3,0,0,0,0,6,6,0,3,5,6,6,7,3,0,8,9,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,14,14,3,11,12,14,7,1,5,6,4,8,9,15,16,11,12,14,7,1,5,6,4,8,9,15,16,8,9,13,15,9,15,8,9,13,3,2,8,9,0,7,1,6,4,16,0,0,0,9,10,11,12,13,14,3,3,2,2,7,1,5,6,4,8,9,15,16,10,11,12,13,14,3,3,2,7,1,5,6,4,8,9,15,16,10,13,10,13,10,13,14,8,9,16,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,10,13,10,13,10,13,15,0,8,9,16,14,14,0,15,10,9,13,15,15,17,13,8,9,8,9,8,9,13,13,13,5,11,12,14,7,1,5,6,4,8,9,15,16,3,2,10,13,10,13,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,10,11,12,13,14,3,2,7,1,5,6,4,8,9,15,16,15,15,16,0,17,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,16,18,19,20,21,22,23,24,25,26,26,27,27,28,29,0,0,28,29,0,0,0,0,0,30,31,32,33,28,29,30,31,32,33,28,29,34,30,31,32,33,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,30,30,31,31,31,32,32,32,33,33,33,28,28,28,29,29,29,34,31,33,30,32,33,32,33,30,30,30,31,31,31,32,32,32,33,33,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,31,33,28,29,30,31,32,33,28,29,30,32,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,0,32,33,30,31,30,31,35,36,37,38,0,39,0,39,0,39,40,41,39,40,41,40,40,39,39,40,40,41,41,39,40,41,39,40,41,40,39,40,41,39,40,41,39,40,41,39,40,41,42,43,44,45,44,44,46,44,44,44,44,44,0,47,44,44,44,46,0,44,45,44,48,49,44,44,47,44,44,44,44,44,47,47,47,44,44,44,47,0,50,0,44,47,44,0,44,49,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,47,0,44,44,44,44,47,47,44,51,44,44,44,44,44,46,44,44,44,44,44,44,44,44,44,44,0,47,44,44,44,44,45,44,44,52,44,53,50,44,44,50,44,44,52,44,47,0,46,0,47,46,0,47,46,47,49,44,44,44,44,44,50,44,44,48,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,52,44,44,44,44,44,44,53,44,44,51,44,54,44,44,44,44,44,44,44,44,47,50,50,54,46,47,51,50,44,52,44,44,45,47,0,44,44,44,44,44,44,0,49,44,50,44,44,44,46,47,0,47,0,47,44,44,44,44,50,44,0,44,44,44,51,44,44,44,44,44,44,44,44,0,50,44,44,44,44,45,45,45,45,45,45,45,45,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,55,44,45,45,45,45,45,57,45,55,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,45,45,45,45,57,50,51,47,55,46,56,49,57,48,54,52,53,44,45,45,45,45,45,55,56,49,54,52,44,45,57,45,45,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,45,45,57,45,50,56,50,51,47,55,46,56,57,48,52,53,45,48,45,55,44,45,57,45,56,45,45,56,45,45,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,47,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,50,51,47,55,46,56,49,57,48,54,52,53,44,45,45,56,58,59,60,61,62,63,60,59,64,65,66,67,68,67,68,69,70,70,70,71,72,73,72,74,75,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,87,86,92,85,88,88,89,87,86,93,87,89,92,93,92,86,85,94,0,0,0,0,0,95,95,95,95,96,97,96,98,95,94,97,96,98,95,94,98,95,94,98,95,94,97,95,97,95,94,97,96,98,95,94,94,97,96,98,95,94,94,96,96,97,96,98,95,94,95,94,97,96,97,97,98,98,95,94,94,97,96,98,95,94,97,96,98,95,94,97,96,98,95,94,97,99,0,0,100,100,101,100,101,100,101,100,101,100,101,100,101,100,100,101,100,101,100,100,101,100,101,101,100,101,101,100,101,101,100,101,100,101,100,101,100,100,101,100,101,100,101,101,0,102,102,0,102,0,103,0,0,0,103,103,0,0,103,103,103,103,103,103,103,103,104,105,105,103,106,106,104,104,104,104,104,103,103,103,103,107,107,107,107,107,107,107,107,107,107,0,108,108,109,109,109,0,110,111,109,109,109,109,112,109,0,113,109,111,109,109,110,0,109,109,109,109,0,112,113,109,109,109,109,109,109,109,109,109,111,109,109,109,109,109,109,0,0,109,109,109,0,0,0,0,109,109,114,115,115,111,116,117,118,114,109,110,113,112,115,111,116,117,118,114,109,110,113,112,118,116,117,118,114,109,110,113,112,116,117,118,114,109,110,113,112,117,115,114,118,114,109,112,115,117,117,109,110,113,112,115,111,111,116,117,118,114,109,110,113,112,115,111,116,117,118,114,109,110,113,112,116,115,114,115,117,109,115,115,115,114,115,111,116,117,118,114,109,110,113,112,114,114,114,117,110,115,118,115,115,115,115,117,115,115,115,115,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,111,114,116,117,118,114,109,110,113,112,111,114,115,111,116,117,118,114,109,110,113,112,115,111,116,117,118,114,109,110,113,112,115,111,116,117,118,114,109,110,113,112,114,118,114,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,120,121,121,121,121,122,123],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullcontextbuilder",3,[["contextcurrentstate",8]]],["eventloopwindowtarget",3],["physicalsize",3,[["u32",0]]]],["result",4,[["context",3,[["notcurrent",4]]],["creationerror",4]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["windowbuilder",3],["eventloopwindowtarget",3]],["result",4,[["windowedcontext",6,[["notcurrent",4]]],["creationerror",4]]]],[[["creationerror",4]],["option",4,[["error",8]]]],[[["possiblycurrent",3]],["possiblycurrent",3]],[[["notcurrent",4]],["notcurrent",4]],[[["contextbuilder",3,[["",26,[["clone",8],["contextcurrentstate",8]]]]]],["contextbuilder",3,[["",26,[["clone",8],["contextcurrentstate",8]]]]]],[[["api",4]],["api",4]],[[["glprofile",4]],["glprofile",4]],[[["glrequest",4]],["glrequest",4]],[[["robustness",4]],["robustness",4]],[[["releasebehavior",4]],["releasebehavior",4]],[[["pixelformat",3]],["pixelformat",3]],[[["pixelformatrequirements",3]],["pixelformatrequirements",3]],[[["glattributes",3,[["clone",8]]]],["glattributes",3,[["clone",8]]]],[[["rect",3]],["rect",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["contextwrapper",3,[["contextcurrentstate",8]]]],["context",3]],null,[[],["pixelformatrequirements",3]],[[],["glattributes",3]],null,null,[[["contextwrapper",3,[["contextcurrentstate",8]]]]],[[["creationerror",4]],["str",0]],[[["contexterror",4]],["str",0]],null,null,null,[[["api",4],["api",4]],["bool",0]],[[["glprofile",4],["glprofile",4]],["bool",0]],[[["robustness",4],["robustness",4]],["bool",0]],[[["releasebehavior",4],["releasebehavior",4]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],null,null,null,null,[[["context",3,[["",26,[["debug",8],["contextcurrentstate",8]]]]],["formatter",3]],["result",6]],[[["possiblycurrent",3],["formatter",3]],["result",6]],[[["notcurrent",4],["formatter",3]],["result",6]],[[["contextwrapper",3,[["",26,[["debug",8],["contextcurrentstate",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["contextbuilder",3,[["",26,[["debug",8],["contextcurrentstate",8]]]]],["formatter",3]],["result",6]],[[["creationerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["creationerror",4],["formatter",3]],["result",6]],[[["contexterror",4],["formatter",3]],["result",4,[["error",3]]]],[[["contexterror",4],["formatter",3]],["result",6]],[[["api",4],["formatter",3]],["result",6]],[[["glprofile",4],["formatter",3]],["result",6]],[[["glrequest",4],["formatter",3]],["result",6]],[[["robustness",4],["formatter",3]],["result",6]],[[["releasebehavior",4],["formatter",3]],["result",6]],[[["pixelformat",3],["formatter",3]],["result",6]],[[["pixelformatrequirements",3],["formatter",3]],["result",6]],[[["glattributes",3,[["debug",8]]],["formatter",3]],["result",6]],[[["rect",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["oserror",3]],["creationerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3,[["contextcurrentstate",8]]]],["api",4]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["api",4]],[[["context",3,[["contextcurrentstate",8]]]],["option",4,[["c_void",0]]]],[[["contextwrapper",3,[["possiblycurrent",3]]]],["pixelformat",3]],[[["context",3,[["possiblycurrent",3]]],["str",0]],["c_void",0]],[[["contextwrapper",3,[["possiblycurrent",3]]],["str",0]],["c_void",0]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3,[["contextcurrentstate",8]]]],["bool",0]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["bool",0]],[[["context",3,[["contextcurrentstate",8]]]],["result",4,[["context",3,[["possiblycurrent",3]]]]]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["result",4,[["contextwrapper",3,[["possiblycurrent",3]]]]]],[[["context",3,[["contextcurrentstate",8]]]],["result",4,[["context",3,[["notcurrent",4]]]]]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["result",4,[["contextwrapper",3,[["notcurrent",4]]]]]],[[["glattributes",3]],["glattributes",3]],null,null,null,[[["rect",3],["rect",3]],["bool",0]],[[],["contextbuilder",3,[["notcurrent",4]]]],null,null,null,[[["context",3,[["contextcurrentstate",8]]]]],null,[[["contextwrapper",3,[["possiblycurrent",3]]],["physicalsize",3,[["u32",0]]]]],null,null,[[["windowedcontext",6,[["contextcurrentstate",8]]]]],[[["contextwrapper",3,[["contextcurrentstate",8],["window",3]]]]],null,null,null,null,null,null,[[["contextwrapper",3,[["possiblycurrent",3]]]],["result",4,[["contexterror",4]]]],[[["contextwrapper",3,[["possiblycurrent",3]]]],["result",4,[["contexterror",4]]]],[[["contextwrapper",3,[["possiblycurrent",3]]]],["bool",0]],[[["glrequest",4]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["context",3,[["contextcurrentstate",8]]]],["context",3,[["possiblycurrent",3]]]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["contextwrapper",3,[["possiblycurrent",3]]]],[[["context",3,[["contextcurrentstate",8]]]],["context",3,[["notcurrent",4]]]],[[["contextwrapper",3,[["contextcurrentstate",8]]]],["contextwrapper",3,[["notcurrent",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["windowedcontext",6,[["contextcurrentstate",8]]]],["window",3]],[[["contextwrapper",3,[["contextcurrentstate",8],["window",3]]]],["window",3]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["u8",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["option",4,[["bool",0]]]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["glrequest",4]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["bool",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["glprofile",4]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["robustness",4]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["option",4,[["bool",0]]]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["u16",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["u8",0],["u8",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["context",3]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["bool",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["u8",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]]],["contextbuilder",3,[["contextcurrentstate",8]]]],[[["contextbuilder",3,[["contextcurrentstate",8]]],["bool",0]],["contextbuilder",3,[["contextcurrentstate",8]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["logicalposition",3]],["logicalposition",3]],[[["physicalposition",3]],["physicalposition",3]],[[["logicalsize",3]],["logicalsize",3]],[[["physicalsize",3]],["physicalsize",3]],[[["logicalposition",3]],["logicalposition",3]],[[["physicalposition",3]],["physicalposition",3]],[[["logicalsize",3]],["logicalsize",3]],[[["physicalsize",3]],["physicalsize",3]],[[["size",4]],["size",4]],[[["position",4]],["position",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["logicalposition",3],["logicalposition",3]],["bool",0]],[[["physicalposition",3],["physicalposition",3]],["bool",0]],[[["logicalsize",3],["logicalsize",3]],["bool",0]],[[["physicalsize",3],["physicalsize",3]],["bool",0]],[[["size",4],["size",4]],["bool",0]],[[["position",4],["position",4]],["bool",0]],[[["logicalposition",3],["formatter",3]],["result",4,[["error",3]]]],[[["physicalposition",3],["formatter",3]],["result",4,[["error",3]]]],[[["logicalsize",3],["formatter",3]],["result",4,[["error",3]]]],[[["physicalsize",3],["formatter",3]],["result",4,[["error",3]]]],[[["size",4],["formatter",3]],["result",4,[["error",3]]]],[[["position",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[],["logicalposition",3]],[[],["logicalposition",3]],[[]],[[],["physicalposition",3]],[[],["physicalposition",3]],[[]],[[],["logicalsize",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[],["physicalsize",3]],[[]],[[["logicalsize",3]],["size",4]],[[["physicalsize",3]],["size",4]],[[]],[[]],[[["physicalposition",3]],["position",4]],[[["logicalposition",3]],["position",4]],[[["f64",0]]],[[["f64",0]],["physicalposition",3]],[[["f64",0]],["physicalsize",3]],[[["f64",0]],["logicalposition",3]],[[["f64",0]],["logicalsize",3]],[[["physicalsize",3],["",0]]],null,null,[[["logicalposition",3]]],[[["logicalposition",3]]],[[]],[[]],[[["physicalposition",3]]],[[["physicalposition",3]]],[[]],[[["logicalsize",3]]],[[["logicalsize",3]]],[[]],[[["physicalsize",3]]],[[["physicalsize",3]]],[[]],[[]],[[["logicalposition",3],["logicalposition",3]],["bool",0]],[[["physicalposition",3],["physicalposition",3]],["bool",0]],[[["logicalsize",3],["logicalsize",3]],["bool",0]],[[["physicalsize",3],["physicalsize",3]],["bool",0]],[[["size",4],["size",4]],["bool",0]],[[["position",4],["position",4]],["bool",0]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[],["size",4]],[[],["position",4]],[[["physicalposition",3],["f64",0]],["logicalposition",3]],[[["physicalsize",3],["f64",0]],["logicalsize",3]],[[["size",4],["f64",0]],["logicalsize",3]],[[["position",4],["f64",0]],["logicalposition",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["logicalposition",3],["f64",0]],["physicalposition",3]],[[["logicalsize",3],["f64",0]],["physicalsize",3]],[[["size",4],["f64",0]],["physicalsize",3]],[[["position",4],["f64",0]],["physicalposition",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["f64",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["notsupportederror",3]],["notsupportederror",3]],[[["",0],["",0]]],[[["externalerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["externalerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["notsupportederror",3],["formatter",3]],["result",4,[["error",3]]]],[[["notsupportederror",3],["formatter",3]],["result",4,[["error",3]]]],[[["oserror",3],["formatter",3]],["result",4,[["error",3]]]],[[["oserror",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifiersstate",3]],[[["modifiersstate",3]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3]],["u32",0]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstateevent",4]],["event",4]],[[["startcause",4]],["startcause",4]],[[["windowevent",4]],["windowevent",4]],[[["deviceid",3]],["deviceid",3]],[[["deviceevent",4]],["deviceevent",4]],[[["keyboardinput",3]],["keyboardinput",3]],[[["touchphase",4]],["touchphase",4]],[[["touch",3]],["touch",3]],[[["force",4]],["force",4]],[[["elementstate",4]],["elementstate",4]],[[["mousebutton",4]],["mousebutton",4]],[[["mousescrolldelta",4]],["mousescrolldelta",4]],[[["virtualkeycode",4]],["virtualkeycode",4]],[[["modifiersstate",3]],["modifiersstate",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["deviceid",3],["deviceid",3]],["ordering",4]],[[["virtualkeycode",4],["virtualkeycode",4]],["ordering",4]],[[["modifiersstate",3],["modifiersstate",3]],["ordering",4]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["modifiersstate",3]],["bool",0]],[[],["modifiersstate",3]],null,[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[],["deviceid",3]],[[],["modifiersstate",3]],[[["event",4],["event",4]],["bool",0]],[[["startcause",4],["startcause",4]],["bool",0]],[[["windowevent",4],["windowevent",4]],["bool",0]],[[["deviceid",3],["deviceid",3]],["bool",0]],[[["deviceevent",4],["deviceevent",4]],["bool",0]],[[["keyboardinput",3],["keyboardinput",3]],["bool",0]],[[["touchphase",4],["touchphase",4]],["bool",0]],[[["touch",3],["touch",3]],["bool",0]],[[["force",4],["force",4]],["bool",0]],[[["elementstate",4],["elementstate",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["mousescrolldelta",4],["mousescrolldelta",4]],["bool",0]],[[["virtualkeycode",4],["virtualkeycode",4]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["modifiersstate",3]]],[[["event",4],["formatter",3]],["result",4,[["error",3]]]],[[["startcause",4],["formatter",3]],["result",4,[["error",3]]]],[[["windowevent",4],["formatter",3]],["result",4,[["error",3]]]],[[["deviceid",3],["formatter",3]],["result",4,[["error",3]]]],[[["deviceevent",4],["formatter",3]],["result",4,[["error",3]]]],[[["keyboardinput",3],["formatter",3]],["result",4,[["error",3]]]],[[["touchphase",4],["formatter",3]],["result",4,[["error",3]]]],[[["touch",3],["formatter",3]],["result",4,[["error",3]]]],[[["force",4],["formatter",3]],["result",4,[["error",3]]]],[[["elementstate",4],["formatter",3]],["result",4,[["error",3]]]],[[["mousebutton",4],["formatter",3]],["result",4,[["error",3]]]],[[["mousescrolldelta",4],["formatter",3]],["result",4,[["error",3]]]],[[["virtualkeycode",4],["formatter",3]],["result",4,[["error",3]]]],[[["modifiersstate",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifiersstate",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifiersstate",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifiersstate",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifiersstate",3],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["option",4,[["modifiersstate",3]]]],[[["u32",0]],["modifiersstate",3]],[[["u32",0]],["modifiersstate",3]],[[],["modifiersstate",3]],[[["deviceid",3],["",0]]],[[["keyboardinput",3],["",0]]],[[["touchphase",4],["",0]]],[[["elementstate",4],["",0]]],[[["mousebutton",4],["",0]]],[[["virtualkeycode",4],["",0]]],[[["modifiersstate",3],["",0]]],null,[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modifiersstate",3]],["bool",0]],[[["modifiersstate",3]],["bool",0]],null,[[["modifiersstate",3]],["bool",0]],[[["event",4]],["result",4,[["event",4],["event",4]]]],null,[[["event",4],["event",4]],["bool",0]],[[["startcause",4],["startcause",4]],["bool",0]],[[["windowevent",4],["windowevent",4]],["bool",0]],[[["deviceid",3],["deviceid",3]],["bool",0]],[[["deviceevent",4],["deviceevent",4]],["bool",0]],[[["keyboardinput",3],["keyboardinput",3]],["bool",0]],[[["touch",3],["touch",3]],["bool",0]],[[["force",4],["force",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["mousescrolldelta",4],["mousescrolldelta",4]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["force",4]],["f64",0]],[[["modifiersstate",3]],["modifiersstate",3]],[[["deviceid",3],["deviceid",3]],["option",4,[["ordering",4]]]],[[["virtualkeycode",4],["virtualkeycode",4]],["option",4,[["ordering",4]]]],[[["modifiersstate",3],["modifiersstate",3]],["option",4,[["ordering",4]]]],null,[[["modifiersstate",3],["modifiersstate",3]]],null,[[["modifiersstate",3],["modifiersstate",3],["bool",0]]],[[["modifiersstate",3]],["bool",0]],null,[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["event",4]],["option",4,[["event",4]]]],[[["windowevent",4]],["option",4,[["windowevent",4]]]],[[["modifiersstate",3],["modifiersstate",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventloopwindowtarget",3]],["iterator",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["eventloopproxy",3]],["eventloopproxy",3]],[[["controlflow",4]],["controlflow",4]],[[["eventloopclosed",3]],["eventloopclosed",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["eventloop",3]],["eventloopproxy",3]],[[],["controlflow",4]],[[["eventloop",3]],["eventloopwindowtarget",3]],[[["controlflow",4],["controlflow",4]],["bool",0]],[[["eventloopclosed",3],["eventloopclosed",3]],["bool",0]],[[["eventloop",3],["formatter",3]],["result",4,[["error",3]]]],[[["eventloopwindowtarget",3],["formatter",3]],["result",4,[["error",3]]]],[[["eventloopproxy",3],["formatter",3]],["result",4,[["error",3]]]],[[["controlflow",4],["formatter",3]],["result",4,[["error",3]]]],[[["eventloopclosed",3],["formatter",3]],["result",4,[["error",3]]]],[[["eventloopclosed",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["eventloopclosed",3],["",0]]],[[["eventloopwindowtarget",3]]],[[["eventloopwindowtarget",3]]],[[]],[[]],[[]],[[]],[[]],[[["controlflow",4],["controlflow",4]],["bool",0]],[[["eventloopclosed",3],["eventloopclosed",3]],["bool",0]],[[],["eventloop",3]],[[["eventloopwindowtarget",3]],["option",4,[["monitorhandle",3]]]],[[["eventloop",3]],["never",0]],[[["eventloop",3]]],[[["eventloopproxy",3]],["result",4,[["eventloopclosed",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["eventloop",3]],null,null,null,[[["videomode",3]],["u16",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["videomode",3]],["videomode",3]],[[["monitorhandle",3]],["monitorhandle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["videomode",3],["videomode",3]],["ordering",4]],[[["monitorhandle",3],["monitorhandle",3]],["ordering",4]],[[["videomode",3],["videomode",3]],["bool",0]],[[["monitorhandle",3],["monitorhandle",3]],["bool",0]],[[["videomode",3],["formatter",3]],["result",4,[["error",3]]]],[[["videomode",3],["formatter",3]],["result",4,[["error",3]]]],[[["monitorhandle",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["videomode",3],["",0]]],[[]],[[]],[[["videomode",3]],["monitorhandle",3]],[[["monitorhandle",3]],["option",4,[["string",3]]]],[[["monitorhandle",3]],["u32",0]],[[["videomode",3],["videomode",3]],["bool",0]],[[["monitorhandle",3],["monitorhandle",3]],["bool",0]],[[["monitorhandle",3]],["option",4,[["c_void",0]]]],[[["videomode",3],["videomode",3]],["option",4,[["ordering",4]]]],[[["monitorhandle",3],["monitorhandle",3]],["option",4,[["ordering",4]]]],[[["monitorhandle",3]],["physicalposition",3,[["i32",0]]]],[[["videomode",3]],["u16",0]],[[["monitorhandle",3]],["f64",0]],[[["videomode",3]],["physicalsize",3,[["u32",0]]]],[[["monitorhandle",3]],["physicalsize",3,[["u32",0]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["monitorhandle",3]],["iterator",8]],null,null,[[["",0]],["option",4,[["c_void",0]]]],null,[[["",0]]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["activationpolicy",4]],["activationpolicy",4]],[[["",0],["",0]]],[[],["activationpolicy",4]],[[["activationpolicy",4],["activationpolicy",4]],["bool",0]],[[["activationpolicy",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["c_void",0]]]],[[["",0]],["c_void",0]],[[["",0]],["c_void",0]],[[["",0],["bool",0]]],[[["",0],["bool",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["activationpolicy",4]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["logicalsize",3,[["f64",0]]]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],null,null,[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["window",3]],["iterator",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["windowbuilder",3],["eventloopwindowtarget",3]],["result",4,[["window",3],["oserror",3]]]],[[["icon",3]],["icon",3]],[[["windowid",3]],["windowid",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowattributes",3]],["windowattributes",3]],[[["cursoricon",4]],["cursoricon",4]],[[["fullscreen",4]],["fullscreen",4]],[[["theme",4]],["theme",4]],[[["userattentiontype",4]],["userattentiontype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["windowid",3],["windowid",3]],["ordering",4]],[[["window",3]],["option",4,[["monitorhandle",3]]]],null,[[],["windowbuilder",3]],[[],["windowattributes",3]],[[],["cursoricon",4]],[[],["userattentiontype",4]],[[["window",3]]],[[],["windowid",3]],[[["windowid",3],["windowid",3]],["bool",0]],[[["cursoricon",4],["cursoricon",4]],["bool",0]],[[["fullscreen",4],["fullscreen",4]],["bool",0]],[[["theme",4],["theme",4]],["bool",0]],[[["userattentiontype",4],["userattentiontype",4]],["bool",0]],[[["window",3],["formatter",3]],["result",4,[["error",3]]]],[[["badicon",4],["formatter",3]],["result",4,[["error",3]]]],[[["badicon",4],["formatter",3]],["result",4,[["error",3]]]],[[["icon",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowid",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowbuilder",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowattributes",3],["formatter",3]],["result",4,[["error",3]]]],[[["cursoricon",4],["formatter",3]],["result",4,[["error",3]]]],[[["fullscreen",4],["formatter",3]],["result",4,[["error",3]]]],[[["theme",4],["formatter",3]],["result",4,[["error",3]]]],[[["userattentiontype",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,[["u8",0],["global",3]]],["u32",0],["u32",0]],["result",4,[["icon",3],["badicon",4]]]],[[["window",3]],["option",4,[["fullscreen",4]]]],null,[[["window",3]],["bool",0]],[[["windowid",3],["",0]]],[[["cursoricon",4],["",0]]],[[["window",3]],["windowid",3]],[[["window",3]],["result",4,[["physicalposition",3,[["i32",0]]],["notsupportederror",3]]]],[[["window",3]],["physicalsize",3,[["u32",0]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["windowid",3],["windowid",3]],["bool",0]],[[["fullscreen",4],["fullscreen",4]],["bool",0]],[[["eventloopwindowtarget",3]],["result",4,[["window",3],["oserror",3]]]],[[],["windowbuilder",3]],[[["window",3]],["c_void",0]],[[["window",3]],["c_void",0]],[[["window",3]],["result",4,[["physicalposition",3,[["i32",0]]],["notsupportederror",3]]]],[[["window",3]],["physicalsize",3,[["u32",0]]]],[[["windowid",3],["windowid",3]],["option",4,[["ordering",4]]]],[[["window",3]],["option",4,[["monitorhandle",3]]]],[[["window",3]],["rawwindowhandle",4]],[[["window",3]]],[[["window",3],["option",4,[["userattentiontype",4]]]]],null,[[["window",3]],["f64",0]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]],["result",4,[["externalerror",4]]]],[[["window",3],["cursoricon",4]]],[[["window",3]],["result",4,[["externalerror",4]]]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]]],[[["window",3],["option",4,[["fullscreen",4]]]]],[[["window",3],["bool",0]]],[[["window",3]]],[[["window",3]]],[[["window",3],["option",4]]],[[["window",3],["bool",0]]],[[["window",3],["option",4]]],[[["window",3],["bool",0]]],[[["window",3]]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]],["bool",0]],[[["window",3],["str",0]]],[[["window",3],["bool",0]]],[[["window",3],["option",4,[["icon",3]]]]],[[["window",3]],["bool",0]],[[["badicon",4]],["option",4,[["error",8]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["windowbuilder",3],["activationpolicy",4]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["option",4,[["fullscreen",4]]]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["logicalsize",3,[["f64",0]]]],["windowbuilder",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["option",4,[["icon",3]]]],["windowbuilder",3]],null,null,null,null,null,null,null,null],"p":[[4,"GlProfile"],[4,"ContextError"],[4,"CreationError"],[4,"ReleaseBehavior"],[4,"GlRequest"],[4,"Robustness"],[4,"Api"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"Context"],[3,"PossiblyCurrent"],[4,"NotCurrent"],[3,"ContextWrapper"],[3,"ContextBuilder"],[3,"GlAttributes"],[3,"Rect"],[6,"WindowedContext"],[13,"OsError"],[13,"IoError"],[13,"OsError"],[13,"NotSupported"],[13,"NoBackendAvailable"],[13,"PlatformSpecific"],[13,"Window"],[13,"CreationErrors"],[13,"Specific"],[13,"GlThenGles"],[4,"Size"],[4,"Position"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[8,"Pixel"],[13,"Physical"],[13,"Logical"],[13,"Physical"],[13,"Logical"],[4,"ExternalError"],[3,"NotSupportedError"],[3,"OsError"],[13,"NotSupported"],[13,"Os"],[4,"VirtualKeyCode"],[3,"ModifiersState"],[4,"DeviceEvent"],[4,"WindowEvent"],[4,"Force"],[4,"TouchPhase"],[4,"Event"],[4,"StartCause"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"ElementState"],[3,"DeviceId"],[3,"KeyboardInput"],[3,"Touch"],[13,"Key"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"NewEvents"],[13,"UserEvent"],[13,"RedrawRequested"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Normalized"],[13,"Calibrated"],[13,"Other"],[13,"LineDelta"],[13,"PixelDelta"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"Resized"],[13,"Moved"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"ReceivedCharacter"],[13,"Focused"],[13,"ModifiersChanged"],[13,"Touch"],[13,"ThemeChanged"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[3,"EventLoopClosed"],[4,"ControlFlow"],[3,"EventLoopWindowTarget"],[3,"EventLoop"],[3,"EventLoopProxy"],[13,"WaitUntil"],[3,"VideoMode"],[3,"MonitorHandle"],[8,"ContextTraitExt"],[4,"ActivationPolicy"],[8,"WindowExtMacOS"],[8,"EventLoopWindowTargetExtMacOS"],[8,"MonitorHandleExtMacOS"],[8,"WindowBuilderExtMacOS"],[8,"EventLoopExtRunReturn"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"BadIcon"],[4,"UserAttentionType"],[4,"Theme"],[3,"WindowAttributes"],[3,"Window"],[3,"Icon"],[3,"WindowId"],[3,"WindowBuilder"],[13,"OsError"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[13,"Exclusive"],[13,"Borderless"]]},\
"glutin_gles2_sys":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"glutin_window":{"doc":"A Glutin window back-end for the Piston game engine.","t":[3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GlutinWindow","OpenGL","UserEvent","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","WakeUp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_from_window_settings","clone","clone_into","cmp","ctx","draw_size","eq","eq","fmt","fmt","from","from","from","from_api","from_raw","from_str","get_automatic_close","get_exit_on_esc","get_major_minor","get_position","get_proc_address","get_title","hide","into","into","into","into","is_current","make_current","map_key","map_mouse","new","partial_cmp","poll_event","set_automatic_close","set_capture_cursor","set_exit_on_esc","set_position","set_should_close","set_size","set_title","should_close","show","size","swap_buffers","to_glsl","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_event","wait_event_timeout"],"q":["glutin_window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Contains stuff for game window.","","Custom events for the glutin event loop","","","","","","","","","","","","","Do nothing, just spin the event loop","","","","","","","","","","","The window.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>OpenGL</code> version from graphics API version.","Creates a game window from a pre-existing Glutin event …","","","","Gets the minor version of OpenGL.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Maps Glutin’s key to Piston’s key.","Maps Glutin’s mouse button to Piston’s mouse button.","Creates a new game window for Glutin.","","","","","","","","","","","","","","Gets GLSL version associated with OpenGL.","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,2,3,1,2,3,1,1,1,3,3,1,2,1,2,3,1,2,1,3,1,3,3,1,3,3,3,3,3,1,1,2,3,3,0,0,3,1,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,2,3,1,2,3,1,2,3,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["windowsettings",3]],["result",4,[["glutinwindow",3],["box",3,[["error",8]]]]]],[[["opengl",4]],["opengl",4]],[[["",0],["",0]]],[[["opengl",4],["opengl",4]],["ordering",4]],null,[[["glutinwindow",3]],["size",3]],[[["opengl",4],["opengl",4]],["bool",0]],[[["userevent",4],["userevent",4]],["bool",0]],[[["opengl",4],["formatter",3]],["result",4,[["error",3]]]],[[["userevent",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["version",3]],["option",4,[["opengl",4]]]],[[["windowsettings",3],["eventloop",3,[["userevent",4]]],["windowbuilder",3]],["result",4,[["glutinwindow",3],["box",3,[["error",8]]]]]],[[["str",0]],["result",4,[["opengl",4]]]],[[["glutinwindow",3]],["bool",0]],[[["glutinwindow",3]],["bool",0]],[[["opengl",4]]],[[["glutinwindow",3]],["option",4,[["position",3]]]],[[["glutinwindow",3],["str",0]],["procaddress",6]],[[["glutinwindow",3]],["string",3]],[[["glutinwindow",3]]],[[]],[[]],[[["opengl",4]],["version",3]],[[]],[[["glutinwindow",3]],["bool",0]],[[["glutinwindow",3]]],[[["virtualkeycode",4]],["key",4]],[[["mousebutton",4]],["mousebutton",4]],[[["windowsettings",3]],["result",4,[["glutinwindow",3],["box",3,[["error",8]]]]]],[[["opengl",4],["opengl",4]],["option",4,[["ordering",4]]]],[[["glutinwindow",3]],["option",4,[["event",4]]]],[[["glutinwindow",3],["bool",0]]],[[["glutinwindow",3],["bool",0]]],[[["glutinwindow",3],["bool",0]]],[[["glutinwindow",3],["into",8,[["position",3]]]]],[[["glutinwindow",3],["bool",0]]],[[["glutinwindow",3],["into",8,[["size",3]]]]],[[["glutinwindow",3],["string",3]]],[[["glutinwindow",3]],["bool",0]],[[["glutinwindow",3]]],[[["glutinwindow",3]],["size",3]],[[["glutinwindow",3]]],[[["opengl",4]],["glsl",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["glutinwindow",3]],["event",4]],[[["glutinwindow",3],["duration",3]],["option",4,[["event",4]]]]],"p":[[4,"OpenGL"],[4,"UserEvent"],[3,"GlutinWindow"]]},\
"graphics":{"doc":"A library for 2D graphics that works with multiple …","t":[17,2,2,2,8,2,2,2,8,2,8,2,2,8,2,8,8,2,16,8,3,10,10,10,11,10,11,11,0,0,5,11,11,5,10,10,11,11,0,0,10,12,0,0,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,0,11,11,10,0,5,11,11,11,0,5,11,11,5,10,0,0,10,11,10,11,11,0,5,11,11,11,11,10,10,0,12,0,5,11,11,5,10,11,11,10,10,11,11,11,11,10,11,11,10,10,10,10,10,0,5,0,11,11,11,10,11,11,10,10,10,10,0,11,11,11,0,12,11,11,3,8,16,16,11,12,11,12,12,11,11,10,11,11,11,11,11,12,12,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,11,12,11,12,11,11,11,11,17,17,17,5,5,5,5,5,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,13,13,4,13,3,13,13,13,13,13,13,4,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,12,11,11,11,11,2,2,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,0,17,3,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,13,3,13,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,6,6,6,6,5,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,11,5,5,11,5,5,11,5,5,11,5,5,5,11,5,5,5,5,5,5,5,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,10,10,13,3,3,13,4,13,11,12,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,12,5,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,3,12,11,11,11,11,11,11,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,2,6,6,6,6,6,6,2,6,6,2,6,11,11,11,11,11,11,11,11,11],"n":["BACK_END_MAX_VERTEX_COUNT","Character","CharacterCache","CircleArc","Colored","Context","DrawState","Ellipse","Graphics","Image","ImageSize","Line","Polygon","Radians","Rectangle","Rectangled","SourceRectangled","Text","Texture","Transformed","Viewport","_180","_360","_90","abs_transform","append_transform","borrow","borrow_mut","character","circle_arc","circle_arc","circle_arc","circle_arc","clear","clear_color","clear_stencil","clone","clone_into","color","context","deg_to_rad","draw_size","draw_state","ellipse","ellipse","ellipse","ellipse","ellipse_from_to","eq","expand","expand","flip_h","flip_h","flip_hv","flip_hv","flip_v","flip_v","fmt","from","get_height","get_size","get_width","glyph_cache","grid","hue_deg","hue_deg","hue_rad","image","image","image","image","into","line","line","line","line","line_from_to","margin","math","modular_index","mul_rgba","ne","orient","orient_pos","orient_pos","polygon","polygon","polygon","polygon","polygon_tween_lerp","polygon_tween_lerp","prepend_transform","rad_to_deg","radians","rect","rectangle","rectangle","rectangle","rectangle","rectangle_from_to","rel","rot_deg","rot_deg","rot_rad","scale","scale_pos","scale_pos","shade","shade","shear","shear_pos","shear_pos","src_flip_h","src_flip_hv","src_flip_v","src_rect","src_rel","text","text","texture_packer","tint","tint","to_owned","trans","trans_pos","trans_pos","tri_list","tri_list_c","tri_list_uv","tri_list_uv_c","triangulation","try_from","try_into","type_id","types","window_size","zoom","zoom","Character","CharacterCache","Error","Texture","advance_height","advance_size","advance_width","atlas_offset","atlas_size","borrow","borrow_mut","character","clone","clone_into","from","into","left","offset","texture","to_owned","top","try_from","try_into","type_id","width","CircleArc","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_tri","end","end","from","into","new","radius","radius","resolution","resolution","start","start","to_owned","try_from","try_into","type_id","BLACK","TRANSPARENT","WHITE","alpha","gamma_linear_to_srgb","gamma_srgb_to_linear","grey","hex","Context","append_transform","borrow","borrow_mut","clone","clone_into","draw_state","from","get_view_size","into","new","new_abs","new_viewport","orient","prepend_transform","reset","rot_rad","scale","shear","store_view","to_owned","trans","transform","try_from","try_into","type_id","view","view","viewport","Add","Alpha","Blend","Clip","DrawState","Increment","Inside","Invert","Lighter","Multiply","Outside","Stencil","blend","blend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","ne","ne","new_alpha","new_clip","new_increment","new_inside","new_outside","partial_cmp","partial_cmp","partial_cmp","scissor","scissor","stencil","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","Border","Ellipse","border","border","borrow","borrow","borrow_mut","borrow_mut","centered","circle","clone","clone","clone_into","clone_into","color","color","color","draw","draw_from_to","draw_tri","from","from","hue_rad","into","into","maybe_border","mul_rgba","new","new_border","radius","resolution","resolution","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","rusttype","ATLAS_SIZE","GlyphCache","borrow","borrow_mut","character","factory","font","from","from_bytes","from_font","into","new","opt_character","preload_chars","preload_printable_ascii","try_from","try_into","type_id","Grid","GridCells","borrow","borrow","borrow_mut","borrow_mut","cell_position","cells","clone","clone","clone_into","clone_into","cols","draw","fmt","fmt","from","from","into","into","into_iter","next","rows","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units","x_pos","y_pos","Image","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_many","draw_tri","from","into","maybe_color","maybe_rect","maybe_src_rect","new","new_color","rect","rectangle","source_rectangle","src_rect","to_owned","try_from","try_into","type_id","Bevel","Line","Round","Shape","Square","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","color","draw","draw_arrow","draw_from_to","draw_tri","from","from","hue_rad","into","into","mul_rgba","new","new_round","radius","radius","shape","shape","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","Matrix2d","Scalar","Vec2d","Vec3d","abs_transform","add","append_transform","area","area_centroid","cast","centroid","cross","dot","from_barycentric","get_scale","hsv","identity","inside_triangle","invert","least_separation_4","line_side","margin_rectangle","modular_offset","mul","mul_scalar","multiply","orient","orient","overlap_rectangle","perp","prepend_transform","relative_rectangle","relative_source_rectangle","rot_rad","rotate_radians","scale","scale","separation","shear","shear","square_len","sub","to_barycentric","trans","transform_pos","transform_vec","translate","triangle_face","next","offset","previous","Polygon","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_tri","draw_tween_lerp","draw_tween_lerp_tri","from","into","new","to_owned","try_from","try_into","type_id","Radians","_180","_360","_90","deg_to_rad","rad_to_deg","Bevel","Border","Rectangle","Round","Shape","Square","border","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","centered","centered_square","clone","clone","clone","clone_into","clone_into","clone_into","color","color","color","draw","draw_from_to","draw_tri","from","from","from","hue_rad","into","into","into","margin","maybe_border","mul_rgba","new","new_border","new_round","new_round_border","radius","rectangle_by_corners","shape","shape","square","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","1","Text","borrow","borrow_mut","clone","clone_into","color","draw","font_size","from","into","new","new_color","round","round","to_owned","try_from","try_into","type_id","TexturePacker","atlas","borrow","borrow_mut","create","find_space","from","into","new","skyline","textures","try_from","try_into","type_id","update","rect_border_tri_list_xy","rect_tri_list_uv","rect_tri_list_xy","stream_polygon_tri_list","stream_quad_tri_list","tx","ty","with_arc_tri_list","with_ellipse_border_tri_list","with_ellipse_tri_list","with_lerp_polygons_tri_list","with_polygon_tri_list","with_round_border_line_tri_list","with_round_rectangle_border_tri_list","with_round_rectangle_tri_list","Area","Color","ColorComponent","FontSize","Line","Matrix2d","Polygon","Polygons","Radius","Ray","Rectangle","Resolution","Scalar","SourceRectangle","Triangle","Vec2d","Width","hue_rad","margin","mul_rgba","rel","src_flip_h","src_flip_hv","src_flip_v","src_rect","src_rel"],"q":["graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::character","","","","","","","","","","","","","","","","","","","","","","","","","graphics::circle_arc","","","","","","","","","","","","","","","","","","","","","","","","graphics::color","","","","","","","","graphics::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::draw_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::draw_state::Stencil","","","graphics::ellipse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::glyph_cache","graphics::glyph_cache::rusttype","","","","","","","","","","","","","","","","","","graphics::grid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::image","","","","","","","","","","","","","","","","","","","","","","","","","graphics::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::modular_index","","","graphics::polygon","","","","","","","","","","","","","","","","","","graphics::radians","","","","","","graphics::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graphics::rectangle::Shape","","","graphics::text","","","","","","","","","","","","","","","","","","graphics::texture_packer","","","","","","","","","","","","","","","graphics::triangulation","","","","","","","","","","","","","","","graphics::types","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Any triangulation method called on the back-end never …","","","","Implemented by contexts that contains color.","","","","Implemented by all graphics back-ends.","","Implemented by all images to be used with generic …","","","Useful constants for radians.","","Should be implemented by contexts that have rectangle …","Should be implemented by contexts that have source …","","The texture type associated with the back-end.","Implemented by contexts that can transform.","Stores viewport information.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Computes absolute transform for 2D graphics, which uses a …","Appends transform to the current one.","","","A text character","Draw an arc","Draws arc","Draws circle arc.","Draws circle arc.","Clears the screen.","Clears background with a color.","Clears stencil buffer with a value, usually 0.","","","Helper methods for colors","Transformation context","Convert a value to radians from degrees. Equivalent to …","The size of frame buffer in pixels.","Graphics draw state.","Draw ellipse","Draws ellipse.","Draws ellipse.","Draws ellipse.","Draws ellipse by corners.","","Expands the current rectangle equally by all sides.","Expands the current rectangle equally by all sides.","Flips horizontally in local coordinates.","Flips horizontally in local coordinates.","Flips horizontally and vertically in local coordinates.","Flips horizontally and vertically in local coordinates.","Flips vertically in local coordinates.","Flips vertically in local coordinates.","","Returns the argument unchanged.","Gets the image height.","Get the image size.","Gets the image width.","Implementations of the <code>CharacterCache</code> trait.","A flat grid with square cells.","Rotates hue by degrees.","Rotates hue by degrees.","Rotates hue by radians.","Draw an image","Draws image.","Draws image.","Draws image.","Calls <code>U::from(self)</code>.","Draw Line","Draws line.","Draws line.","Draws line.","Draws line between points.","Shrinks the current rectangle equally by all sides.","Various methods for computing with vectors.","Helper functions for computing modular index safely.","Multiplies with red, green, blue and alpha values.","","Orients x axis to look at point locally.","Orients x axis to look at point locally.","Orients x axis to look at point locally.","Draw polygon","Draws polygon.","Draws a polygon.","Draws a polygon.","Draws a tweened polygon using linear interpolation.","Draws a tweened polygon using linear interpolation.","Prepends transform to the current one.","Convert a value to degrees from radians. Equivalent to …","Reexport radians helper trait from vecmath","Viewport in pixels. <code>[x, y, width, height]</code> where <code>(x, y)</code> is …","Draw rectangle","Draws rectangle.","Draws a rectangle.","Draws a rectangle.","Draws rectangle.","Moves to a relative rectangle using the current rectangle …","Rotates degrees in local coordinates.","Rotates degrees in local coordinates.","Rotate radians in local coordinates.","Scales in local coordinates.","Scales in local coordinates.","Scales in local coordinates.","Mixes the current color with black.","Mixes the current color with black.","Shears in local coordinates.","Shears in local coordinates.","Shears in local coordinates.","Flips the source rectangle horizontally.","Flips the source rectangle horizontally and vertically.","Flips the source rectangle vertically.","Adds a source rectangle.","Moves to a relative source rectangle using the current …","Draw text","Draws text.","Texture packing.","Mixes the current color with white.","Mixes the current color with white.","","Translate x and y in local coordinates.","Translate position in local coordinates.","Translate position in local coordinates.","Renders list of 2d triangles using a solid color.","Same as <code>tri_list</code>, but with individual vertex colors.","Renders list of 2d triangles using a color and a texture.","Same as <code>tri_list_uv</code>, but with individual vertex colors.","Methods for converting shapes into triangles.","","","","Contains type aliases used in this library","The size of window in points.","Scales in both directions in local coordinates.","Scales in both directions in local coordinates.","Holds rendered character data.","Stores characters in a buffer and loads them by demand.","The error type associated with the character cache.","The texture type associated with the character cache.","Sets height of character, including space to the next one.","The advance size of character, including space.","Gets width of character, including space to the next one.","The offset of character within texture atlas.","The size of character within texture atlas.","","","Get reference to character.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The left offset.","The offset of character.","The texture of the character.","","The top offset.","","","","Return the width for some given text.","A curved line","","","","","Sets the arcs color.","The arcs color","Draws circle arc using default method.","Draws circle arc using triangulation.","Sets the end of the arc (in radians).","The end of the arc in radians","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new arc","Sets the radius of the arc (Thickness of the arc, not the …","The radius of the arc (Thickness of the drawing, not the …","Sets the resolution of the arcs smoothness.","The resolution for the arc.","Sets the start of the arc (in radians).","The start of the arc in radians","","","","","Black color.","Transparent color.","White color.","Returns a semi-transparent white color","Converts gamma (brightness) of a color from linear color …","Converts gamma (brightness) from sRGB to linear color …","Returns a grey color","Converts from hexadecimal color format","Drawing 2d context.","","","","","","Current draw state settings.","Returns the argument unchanged.","Computes the current view size.","Calls <code>U::from(self)</code>.","Creates a new drawing context.","Creates a new drawing context in absolute coordinates.","Creates a new context with absolute transform in point …","","","Moves the current transform to the default coordinate …","","","","Stores the current transform as new view.","","","Current transformation.","","","","Moves the current transform to the view coordinate system.","View transformation.","Viewport information.","Additive blending.","Alpha blending (allows semi-transparent pixels).","The blend setting to use when drawing.","Draw to stencil buffer.","Graphics draw state used for blending, clipping and …","Increment stencil buffer.","Draw pixels that have stencil value.","Invert colors when rendering a white shape.","Additive blending with alpha channel.","Multiply color components.","Draw pixels that does not have stencil value.","Stencil buffer settings.","Sets blending.","Blend function to use. If None, blending is disabled.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Uses alpha blending.","Draws to stencil buffer with value 255. This can be used …","Increases stencil buffer. This can be used for nested …","Tests against stencil buffer with value 255. Draws inside …","Tests against stencil buffer with value 255. Draws outside …","","","","Sets scissor <code>[x, y, w, h]</code>.","Scissor mask to use. If set, no pixel outside of this …","Stencil test to use. If None, no stencil testing is done.","","","","","","","","","","","","","","","","Ellipse border","An ellipse with filled color","Sets ellipse border.","The ellipse border","","","","","","","","","","","Sets ellipse color.","The border color","The ellipse color","Draws ellipse using default method.","Draws ellipse by corners using default method.","Draws ellipse using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets optional ellipse border.","","Creates a new ellipse","Creates a new ellipse border","The border radius","Sets resolution of the ellipse smoothness.","The resolution for the shape, 360 degrees.","","","","","","","","","Glyph caching using the RustType library.","The minimum atlas size.","A struct used for caching rendered font.","","","","The factory used to create textures.","The font.","Returns the argument unchanged.","Creates a GlyphCache for a font stored in memory.","Constructs a GlyphCache from a Font.","Calls <code>U::from(self)</code>.","Constructor for a GlyphCache.","Return <code>ch</code> for <code>size</code> if it’s already cached. Don’t load. …","Load all characters in the <code>chars</code> iterator for <code>size</code>","Load all the printable ASCII characters for <code>size</code>. Includes …","","","","Represents a flat grid with square cells.","Iterates through the cells of a grid as (u32, u32).","","","","","Get on-screen position of a grid cell","Get a GridIterator for the grid","","","","","Number of columns.","Draws the grid.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Number of rows.","","","","","","","","","The width and height of each grid cell.","Get on-screen x position of a grid cell","Get on-screen y position of a grid cell","An image","","","","","Sets color.","The color","Draws image using default method.","Draws many images.","Draws image using triangulation.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Sets optional color.","Sets optional rectangle.","Sets optional source rectangle.","Creates a new image","Creates a new colored image","Sets rectangle.","The rectangle to draw image inside","The image source rectangle","Sets source rectangle.","","","","","Bevel edges","A colored line with a default border radius","Round edges","The shape of the line","Square edges","","","","","","","","","Sets color.","The line color","Draws line using default method.","Draws an arrow","Draws line using default method between points.","Draws line using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new line","Creates a new line","Sets radius.","The line radius","Sets shape.","The line shape","","","","","","","","","Sets width.","The type used for matrices.","The type used for scalars.","The type used for 2D vectors.","The type used for 3D vectors.","Transforms from normalized to absolute coordinates.","Adds two vectors.","","Computes area of a simple polygon.","Computes the area and centroid of a simple polygon.","Converts to another vector type.","Computes centroid of a simple polygon.","Computes the cross product.","Computes the dot product.","Transforms from barycentric coordinates to cartesian.","Extract scale information from matrix.","Transform color with hue, saturation and value.","Create an identity matrix.","Returns true if point is inside triangle.","Computes the inverse of a 2x3 matrix.","Returns the least separation out of four. Each seperation …","Returns a number that tells which side it is relative to a …","Shrinks a rectangle by a factor on all sides.","Computes modular offset safely for numbers.","Multiplies two vectors component wise.","Multiplies the vector with a scalar.","Multiplies two matrices.","Orients x axis to look at point.","","Computes overlap between two rectangles. The area of the …","Creates a perpendicular vector.","","Computes a relative rectangle using the rectangle as a …","Computes a relative source rectangle using the source …","","Creates a rotation matrix.","Create a scale matrix.","","Compute the shortest vector from point to ray. A ray …","Create a shear matrix.","","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Transforms from cartesian coordinates to barycentric.","","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Creates a translation matrix.","Returns true if triangle is clockwise.","Computes next modular index safely.","Computes modular offset safely for indices.","Computes previous modular index safely.","A polygon","","","","","Sets color.","The color of the polygon","Draws polygon using the default method.","Draws polygon using triangulation.","Draws tweened polygon with linear interpolation, using …","Draws tweened polygon with linear interpolation, using …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new polygon","","","","","Useful constants for radians.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Bevel corners","The border of the rectangle","A filled rectangle","Round corners, with resolution per corner.","The shape of the rectangle corners","Square corners","Sets border properties.","The border","","","","","","","Use x, y, half-width, half-height","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, <code>y</code>…","","","","","","","Sets color.","The color of the border","The rectangle color","Draws the rectangle using the default method.","Draws the rectangle by corners using the default method.","Draws the rectangle using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Sets optional border.","","Creates a new rectangle.","Creates a new rectangle border.","Creates a new rectangle with rounded corners.","Creates a new rectangle border with rounded corners.","The radius of the border. The half-width of the line by …","Create <code>types::Rectangle</code> by the two opposite corners.","Sets shape of the corners.","The roundness of the rectangle","Create <code>types::Rectangle</code> for a square with a top-left …","","","","","","","","","","","","","","","","Renders text","","","","","The color","Draws text with a character cache","The font size","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new text with black color","Creates a new colored text","A builder method indicating that the Text’s position …","Whether or not the text’s position should be rounded (to …","","","","","A texture packer using a skyline heuristic.","The index to the current texture atlas.","","","Create a new texture atlas with an initial tile.","Returns the index of atlas offset in skyline with room for …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a new <code>TexturePacker</code>.","Texture atlas offsets from left to right.","Stores current texture atlas and previously created ones.","","","","Update current texture atlas.","Creates triangle list vertices from rectangle.","Creates triangle list texture coords from image.","Creates triangle list vertices from rectangle.","Streams a polygon into tri list. Uses buffers that fit …","Streams a quad into tri list.","Transformed x coordinate as f32.","Transformed y coordinate as f32.","Streams an arc between the two radian boundaries.","Streams an ellipse border specified by a resolution.","Streams an ellipse specified by a resolution.","Streams tweened polygons using linear interpolation.","Splits polygon into convex segments. Create a buffer that …","Streams a round border line.","Streams a round rectangle border.","Streams a round rectangle.","The type used for area.","[red, green, blue, alpha]","The type used for color component.","The type used for font size.","[x1, y1, x2, y2]","","[p0, p1, …]","A slice of polygons.","The type used for radius.","[x, y, dir_x, dir_y]","Rectangle dimensions: [x, y, w, h]","The type used for resolution.","","[x, y, w, h]","[x1, y1, x2, y2, x3, y3]","","The type used for width.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,2,2,3,4,3,3,0,0,0,1,1,0,1,1,3,3,0,0,2,3,0,0,0,1,1,0,3,5,5,4,4,4,4,4,4,3,3,6,6,6,0,0,7,7,7,0,0,1,1,3,0,0,1,1,0,5,0,0,7,3,4,4,4,0,0,1,1,1,1,4,2,0,3,0,0,1,1,0,5,4,4,4,4,4,4,7,7,4,4,4,8,8,8,8,8,0,0,0,7,7,3,4,4,4,1,1,1,1,0,3,3,3,0,3,4,4,0,0,9,9,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,0,14,0,14,14,13,13,13,14,0,15,15,15,13,14,15,13,14,15,13,14,15,13,14,15,15,13,14,15,13,14,15,13,14,15,13,14,15,14,15,15,15,15,15,15,13,14,15,15,15,15,13,14,15,13,14,15,13,14,15,13,14,16,17,18,0,0,19,19,20,19,20,19,0,0,20,19,20,19,19,20,19,19,19,19,20,19,19,20,19,19,19,19,19,20,19,19,20,19,20,19,20,19,20,19,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,23,22,23,22,22,22,23,22,23,22,22,22,23,22,23,22,23,23,23,22,22,23,22,23,22,23,22,23,22,22,22,0,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,0,25,0,25,25,26,25,26,25,26,25,26,26,26,26,26,26,26,25,26,26,25,26,26,26,26,26,26,26,26,25,26,25,26,25,26,25,26,26,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,27,0,0,27,0,0,27,0,0,27,0,0,0,27,0,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,2,2,2,2,2,29,0,0,29,0,29,30,30,29,31,30,29,31,30,0,0,29,31,30,29,31,30,30,31,30,30,30,30,29,31,30,30,29,31,30,0,30,30,30,30,30,30,31,0,30,30,0,29,31,30,29,31,30,29,31,30,29,31,30,32,33,32,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,37,36,37,38,38,38,38,38],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["viewport",3]]],[[["matrix2d",6]]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["color",6],["radius",6],["scalar",6],["scalar",6],["into",8,[["rectangle",6]]],["matrix2d",6],["",0]]],[[["",0],["circlearc",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["",0],["circlearc",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["color",6],["",0]]],[[["",0],["color",6]]],[[["",0],["u8",0]]],[[["viewport",3]],["viewport",3]],[[["",0],["",0]]],null,null,[[]],null,null,null,[[["color",6],["into",8,[["rectangle",6]]],["matrix2d",6],["",0]]],[[["",0],["ellipse",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["",0],["ellipse",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["color",6],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["matrix2d",6],["",0]]],[[["viewport",3],["viewport",3]],["bool",0]],[[["scalar",6]]],[[["scalar",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["viewport",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["",0]],["u32",0]],[[["",0]]],[[["",0]],["u32",0]],null,null,[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],null,[[["matrix2d",6],["",0]]],[[["",0],["image",3],["drawstate",3],["matrix2d",6]]],[[["",0],["image",3],["drawstate",3],["matrix2d",6]]],[[]],null,[[["color",6],["radius",6],["into",8,[["line",6]]],["matrix2d",6],["",0]]],[[["",0],["line",3],["into",8,[["line",6]]],["drawstate",3],["matrix2d",6]]],[[["",0],["line",3],["into",8,[["line",6]]],["drawstate",3],["matrix2d",6]]],[[["color",6],["radius",6],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["matrix2d",6],["",0]]],[[["scalar",6]]],null,null,[[["colorcomponent",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6]]],[[["viewport",3],["viewport",3]],["bool",0]],[[["scalar",6],["scalar",6]]],[[["into",8,[["vec2d",6]]]]],[[["into",8,[["vec2d",6]]]]],null,[[["color",6],["polygon",6],["matrix2d",6],["",0]]],[[["",0],["polygon",3],["polygon",6],["drawstate",3],["matrix2d",6]]],[[["",0],["polygon",3],["polygon",6],["drawstate",3],["matrix2d",6]]],[[["",0],["polygon",3],["polygons",6],["scalar",6],["drawstate",3],["matrix2d",6]]],[[["",0],["polygon",3],["polygons",6],["scalar",6],["drawstate",3],["matrix2d",6]]],[[["matrix2d",6]]],[[]],null,null,null,[[["color",6],["into",8,[["rectangle",6]]],["matrix2d",6],["",0]]],[[["",0],["rectangle",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["",0],["rectangle",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6]]],[[["color",6],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["matrix2d",6],["",0]]],[[["scalar",6],["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6]]],[[["scalar",6],["scalar",6]]],[[["into",8,[["vec2d",6]]]]],[[["into",8,[["vec2d",6]]]]],[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["scalar",6],["scalar",6]]],[[["into",8,[["vec2d",6]]]]],[[["into",8,[["vec2d",6]]]]],[[]],[[]],[[]],[[["scalar",6],["scalar",6],["scalar",6],["scalar",6]]],[[["scalar",6],["scalar",6]]],null,[[["color",6],["fontsize",6],["str",0],["",0],["matrix2d",6],["",0]],["result",4]],null,[[["colorcomponent",6]]],[[["colorcomponent",6]]],[[["",0]]],[[["scalar",6],["scalar",6]]],[[["into",8,[["vec2d",6]]]]],[[["into",8,[["vec2d",6]]]]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["scalar",6]]],[[["scalar",6]]],null,null,null,null,[[["character",3,[["imagesize",8]]]],["scalar",6]],null,[[["character",3,[["imagesize",8]]]],["scalar",6]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["fontsize",6],["char",0]],["result",4,[["character",3]]]],[[["character",3,[["",26,[["clone",8],["imagesize",8]]]]]],["character",3,[["",26,[["clone",8],["imagesize",8]]]]]],[[["",0],["",0]]],[[]],[[]],[[["character",3,[["imagesize",8]]]],["scalar",6]],null,null,[[["",0]]],[[["character",3,[["imagesize",8]]]],["scalar",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["fontsize",6],["str",0]],["result",4,[["scalar",6]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["circlearc",3]],["circlearc",3]],[[["",0],["",0]]],[[["circlearc",3],["color",6]],["circlearc",3]],null,[[["circlearc",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["circlearc",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["circlearc",3],["scalar",6]],["circlearc",3]],null,[[]],[[]],[[["color",6],["radius",6],["scalar",6],["scalar",6]],["circlearc",3]],[[["circlearc",3],["radius",6]],["circlearc",3]],null,[[["circlearc",3],["resolution",6]],["circlearc",3]],null,[[["circlearc",3],["scalar",6]],["circlearc",3]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["colorcomponent",6]],["color",6]],[[["color",6]],["color",6]],[[["color",6]],["color",6]],[[["colorcomponent",6]],["color",6]],[[["str",0]],["color",6]],null,[[["context",3],["matrix2d",6]],["context",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["context",3]],["context",3]],[[["",0],["",0]]],null,[[]],[[["context",3]],["vec2d",6]],[[]],[[],["context",3]],[[["scalar",6],["scalar",6]],["context",3]],[[["viewport",3]],["context",3]],[[["context",3],["scalar",6],["scalar",6]],["context",3]],[[["context",3],["matrix2d",6]],["context",3]],[[["context",3]],["context",3]],[[["context",3],["scalar",6]],["context",3]],[[["context",3],["scalar",6],["scalar",6]],["context",3]],[[["context",3],["scalar",6],["scalar",6]],["context",3]],[[["context",3]],["context",3]],[[["",0]]],[[["context",3],["scalar",6],["scalar",6]],["context",3]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["context",3]],["context",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["drawstate",3],["blend",4]],["drawstate",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["drawstate",3]],["drawstate",3]],[[["blend",4]],["blend",4]],[[["stencil",4]],["stencil",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["drawstate",3]],[[["drawstate",3],["drawstate",3]],["bool",0]],[[["blend",4],["blend",4]],["bool",0]],[[["stencil",4],["stencil",4]],["bool",0]],[[["drawstate",3],["formatter",3]],["result",6]],[[["blend",4],["formatter",3]],["result",6]],[[["stencil",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["drawstate",3],["drawstate",3]],["bool",0]],[[["stencil",4],["stencil",4]],["bool",0]],[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[["drawstate",3],["drawstate",3]],["option",4,[["ordering",4]]]],[[["blend",4],["blend",4]],["option",4,[["ordering",4]]]],[[["stencil",4],["stencil",4]],["option",4,[["ordering",4]]]],[[["drawstate",3]],["drawstate",3]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["ellipse",3],["border",3]],["ellipse",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["border",3]],["border",3]],[[["ellipse",3]],["ellipse",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ellipse",3],["color",6]],["ellipse",3]],null,null,[[["ellipse",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["ellipse",3],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["ellipse",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[]],[[]],[[["ellipse",3],["colorcomponent",6]],["ellipse",3]],[[]],[[]],[[["ellipse",3],["option",4,[["border",3]]]],["ellipse",3]],[[["ellipse",3],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6]],["ellipse",3]],[[["color",6]],["ellipse",3]],[[["color",6],["radius",6]],["ellipse",3]],null,[[["ellipse",3],["resolution",6]],["ellipse",3]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["glyphcache",3,[["imagesize",8]]],["fontsize",6],["char",0]],["result",4,[["character",3,[["imagesize",8]]]]]],null,null,[[]],[[["texturesettings",3]],["result",4,[["glyphcache",3]]]],[[["font",4],["texturesettings",3]],["glyphcache",3]],[[]],[[["texturesettings",3]],["result",6,[["glyphcache",3]]]],[[["glyphcache",3],["fontsize",6],["char",0]],["option",4,[["character",3]]]],[[["glyphcache",3],["fontsize",6]],["result",4]],[[["glyphcache",3],["fontsize",6]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["grid",3]],["vec2d",6]],[[["grid",3]],["gridcells",3]],[[["grid",3]],["grid",3]],[[["gridcells",3]],["gridcells",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["grid",3],["line",3],["drawstate",3],["matrix2d",6],["",0]]],[[["grid",3],["formatter",3]],["result",6]],[[["gridcells",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["gridcells",3]],["option",4]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["grid",3]],["scalar",6]],[[["grid",3]],["scalar",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["image",3]],["image",3]],[[["",0],["",0]]],[[["image",3],["color",6]],["image",3]],null,[[["image",3],["drawstate",3],["matrix2d",6],["",0]]],[[["color",6],["drawstate",3],["matrix2d",6],["",0]]],[[["image",3],["drawstate",3],["matrix2d",6],["",0]]],[[]],[[]],[[["image",3],["option",4,[["color",6]]]],["image",3]],[[["image",3],["option",4,[["into",8,[["rectangle",6]]]]]],["image",3]],[[["image",3],["option",4,[["sourcerectangle",6]]]],["image",3]],[[],["image",3]],[[["color",6]],["image",3]],[[["image",3],["into",8,[["rectangle",6]]]],["image",3]],null,null,[[["image",3],["sourcerectangle",6]],["image",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["shape",4]],["shape",4]],[[["line",3]],["line",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["line",3],["color",6]],["line",3]],null,[[["line",3],["into",8,[["line",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["line",3],["into",8,[["line",6]]],["scalar",6],["drawstate",3],["matrix2d",6],["",0]]],[[["line",3],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["line",3],["into",8,[["line",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[]],[[]],[[["line",3],["colorcomponent",6]],["line",3]],[[]],[[]],[[["line",3],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6]],["line",3]],[[["color",6],["radius",6]],["line",3]],[[["color",6],["radius",6]],["line",3]],[[["line",3],["radius",6]],["line",3]],null,[[["line",3],["shape",4]],["line",3]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["line",3],["width",6]],["line",3]],null,null,null,null,[[],["matrix2d",6]],[[]],[[["matrix2d",6],["matrix2d",6]],["matrix2d",6]],[[["polygon",6]]],[[["polygon",6]]],[[]],[[["polygon",6]],["vec2d",6]],[[]],[[]],[[["triangle",6],["vec3d",6]],["vec2d",6]],[[["matrix2d",6]],["vec2d",6]],[[["color",6],["f32",0],["f32",0],["f32",0]],["color",6]],[[],["matrix2d",6]],[[["triangle",6],["vec2d",6]],["bool",0]],[[]],[[["vec2d",6],["vec2d",6],["vec2d",6],["vec2d",6]],["vec2d",6]],[[["line",6],["vec2d",6]]],[[["rectangle",6]],["rectangle",6]],[[["",0],["",0],["",0]],["",26,[["add",8],["rem",8],["copy",8]]]],[[]],[[]],[[]],[[],["matrix2d",6]],[[["matrix2d",6],["scalar",6],["scalar",6]],["matrix2d",6]],[[["rectangle",6],["rectangle",6]],["option",4,[["rectangle",6]]]],[[]],[[["matrix2d",6],["matrix2d",6]],["matrix2d",6]],[[["rectangle",6],["vec2d",6]],["rectangle",6]],[[["sourcerectangle",6]],["sourcerectangle",6]],[[["matrix2d",6],["scalar",6]],["matrix2d",6]],[[],["matrix2d",6]],[[],["matrix2d",6]],[[["matrix2d",6],["scalar",6],["scalar",6]],["matrix2d",6]],[[["ray",6],["vec2d",6]],["vec2d",6]],[[["vec2d",6]],["matrix2d",6]],[[["matrix2d",6],["scalar",6],["scalar",6]],["matrix2d",6]],[[]],[[]],[[["triangle",6],["vec2d",6]],["vec3d",6]],[[["matrix2d",6],["scalar",6],["scalar",6]],["matrix2d",6]],[[]],[[]],[[["vec2d",6]],["matrix2d",6]],[[["triangle",6]],["bool",0]],[[["usize",0],["usize",0]],["usize",0]],[[["usize",0],["usize",0],["isize",0]],["usize",0]],[[["usize",0],["usize",0]],["usize",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["polygon",3]],["polygon",3]],[[["",0],["",0]]],[[["polygon",3],["color",6]],["polygon",3]],null,[[["polygon",3],["polygon",6],["drawstate",3],["matrix2d",6],["",0]]],[[["polygon",3],["polygon",6],["drawstate",3],["matrix2d",6],["",0]]],[[["polygon",3],["polygons",6],["scalar",6],["drawstate",3],["matrix2d",6],["",0]]],[[["polygon",3],["polygons",6],["scalar",6],["drawstate",3],["matrix2d",6],["",0]]],[[]],[[]],[[["color",6]],["polygon",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["rectangle",3],["border",3]],["rectangle",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rectangle",6]],["rectangle",6]],[[["scalar",6],["scalar",6],["scalar",6]],["rectangle",6]],[[["shape",4]],["shape",4]],[[["border",3]],["border",3]],[[["rectangle",3]],["rectangle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["rectangle",3],["color",6]],["rectangle",3]],null,null,[[["rectangle",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["rectangle",3],["into",8,[["vec2d",6]]],["into",8,[["vec2d",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[["rectangle",3],["into",8,[["rectangle",6]]],["drawstate",3],["matrix2d",6],["",0]]],[[]],[[]],[[]],[[["rectangle",3],["colorcomponent",6]],["rectangle",3]],[[]],[[]],[[]],null,[[["rectangle",3],["option",4,[["border",3]]]],["rectangle",3]],[[["rectangle",3],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6]],["rectangle",3]],[[["color",6]],["rectangle",3]],[[["color",6],["radius",6]],["rectangle",3]],[[["color",6],["radius",6]],["rectangle",3]],[[["color",6],["radius",6],["radius",6]],["rectangle",3]],null,[[["scalar",6],["scalar",6],["scalar",6],["scalar",6]],["rectangle",6]],[[["rectangle",3],["shape",4]],["rectangle",3]],null,[[["scalar",6],["scalar",6],["scalar",6]],["rectangle",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["text",3]],["text",3]],[[["",0],["",0]]],null,[[["text",3],["str",0],["",0],["drawstate",3],["matrix2d",6],["",0]],["result",4]],null,[[]],[[]],[[["fontsize",6]],["text",3]],[[["color",6],["fontsize",6]],["text",3]],[[["text",3]],["text",3]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["texturepacker",3,[["imagesize",8]]],["imagesize",8]],["usize",0]],[[["texturepacker",3,[["imagesize",8]]]],["option",4,[["usize",0]]]],[[]],[[]],[[],["texturepacker",3,[["imagesize",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["texturepacker",3,[["imagesize",8]]],["usize",0]]],[[["matrix2d",6],["rectangle",6],["radius",6]]],[[["",0],["sourcerectangle",6]]],[[["matrix2d",6],["rectangle",6]]],[[["matrix2d",6]]],[[["matrix2d",6]]],[[["matrix2d",6],["scalar",6],["scalar",6]],["f32",0]],[[["matrix2d",6],["scalar",6],["scalar",6]],["f32",0]],[[["scalar",6],["scalar",6],["resolution",6],["matrix2d",6],["rectangle",6],["radius",6]]],[[["resolution",6],["matrix2d",6],["rectangle",6],["radius",6]]],[[["resolution",6],["matrix2d",6],["rectangle",6]]],[[["matrix2d",6],["polygons",6],["scalar",6]]],[[["matrix2d",6],["polygon",6]]],[[["resolution",6],["matrix2d",6],["line",6],["radius",6]]],[[["resolution",6],["matrix2d",6],["rectangle",6],["radius",6],["radius",6]]],[[["resolution",6],["matrix2d",6],["rectangle",6],["radius",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["color",6],["colorcomponent",6]],["color",6]],[[["rectangle",6],["scalar",6]],["rectangle",6]],[[["color",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6],["colorcomponent",6]],["color",6]],[[["rectangle",6],["scalar",6],["scalar",6]],["rectangle",6]],[[["sourcerectangle",6]],["sourcerectangle",6]],[[["sourcerectangle",6]],["sourcerectangle",6]],[[["sourcerectangle",6]],["sourcerectangle",6]],[[["sourcerectangle",6],["scalar",6],["scalar",6],["scalar",6],["scalar",6]],["sourcerectangle",6]],[[["sourcerectangle",6],["scalar",6],["scalar",6]],["sourcerectangle",6]]],"p":[[8,"Graphics"],[8,"Radians"],[3,"Viewport"],[8,"Transformed"],[8,"Rectangled"],[8,"ImageSize"],[8,"Colored"],[8,"SourceRectangled"],[8,"CharacterCache"],[3,"Character"],[3,"CircleArc"],[3,"Context"],[4,"Blend"],[4,"Stencil"],[3,"DrawState"],[13,"Clip"],[13,"Inside"],[13,"Outside"],[3,"Ellipse"],[3,"Border"],[3,"GlyphCache"],[3,"Grid"],[3,"GridCells"],[3,"Image"],[4,"Shape"],[3,"Line"],[6,"Matrix2d"],[3,"Polygon"],[4,"Shape"],[3,"Rectangle"],[3,"Border"],[13,"Round"],[13,"Bevel"],[3,"Text"],[3,"TexturePacker"],[6,"Color"],[6,"Rectangle"],[6,"SourceRectangle"]]},\
"graphics_api_version":{"doc":"A library for storing graphics API versions.","t":[17,17,17,3,17,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DIRECTX","METAL","OPENGL","UnsupportedGraphicsApiError","VULKAN","Version","api","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","directx","eq","expected","fmt","fmt","fmt","found","from","from","into","into","is_directx","is_metal","is_opengl","is_vulkan","major","metal","minor","ne","opengl","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vulkan"],"q":["graphics_api_version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A graphics API developed by Microsoft. See …","A graphics API developed by Apple. See …","A graphics API developed by Khronos Group. See …","An error for when a graphics API is unsupported.","A graphics API developed by Khronos Group. See …","Stores graphics API version.","A string identifying the API.","","","","","","","","Creates a new DirectX version.","","A list of supported graphics APIs.","","","","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Major version.","Creates a new Metal version.","Minor version.","","Creates a new OpenGL version.","","","","","","","","","","Creates a new Vulkan version."],"i":[0,0,0,0,0,0,1,1,2,1,2,1,1,1,1,1,2,1,2,2,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["version",3]],["version",3]],[[["",0],["",0]]],[[["version",3],["version",3]],["ordering",4]],[[["u32",0],["u32",0]],["version",3]],[[["version",3],["version",3]],["bool",0]],null,[[["version",3],["formatter",3]],["result",6]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],null,[[["u32",0],["u32",0]],["version",3]],null,[[["version",3],["version",3]],["bool",0]],[[["u32",0],["u32",0]],["version",3]],[[["version",3],["version",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u32",0],["u32",0]],["version",3]]],"p":[[3,"Version"],[3,"UnsupportedGraphicsApiError"]]},\
"image":{"doc":"Overview","t":[12,12,12,12,12,12,13,8,13,3,13,13,3,13,13,13,13,18,18,18,4,13,3,4,8,4,13,13,2,3,3,8,8,13,13,6,6,13,13,13,13,13,3,8,8,8,2,4,13,13,13,13,4,2,13,13,13,13,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,8,16,3,13,13,13,13,8,3,16,3,13,13,13,13,13,13,13,6,3,13,13,13,13,13,13,13,6,3,16,13,13,13,13,13,13,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,0,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,0,0,11,5,5,5,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,0,0,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,0,11,11,0,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,3,8,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,6,6,4,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,13,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,6,6,6,3,3,3,3,3,3,6,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,3,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,13,13,4,13,13,4,13,13,6,6,13,3,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,13,13,3,13,13,13,13,3,13,13,6,6,4,13,3,3,3,3,6,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,2,2,2,2,2,2,2,2,13,13,3,13,13,13,3,13,13,13,13,13,4,4,6,13,13,3,4,13,13,13,13,3,4,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,2,13,4,3,13,4,13,13,13,3,13,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,2,2,2,2,2,6,6,6,6,3,3,3,3,3,3,6,3,17,12,12,12,12,12,12,12,12,5,5,5,12,6,3,3,2,2,13,2,4,2,13,2,13,2,13,2,13,5,11,11,2,11,11,0,2,5,5,11,11,2,11,11,5,5,5,5,5,5,5,11,11,2,5,2,2,11,11,2,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,5,5,3,16,8,11,11,5,5,11,11,5,5,11,11,5,11,11,5,11,11,5,5,5,10,11,11,11,5,11,11,10,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,3,3,13,3,4,12,12,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,0,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,2,2,2,2,2,2,2,2,3,13,4,13,13,13,3,13,13,13,13,3,13,13,6,6,4,13,3,3,3,3,6,13,13,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,2,2,2,3,2],"n":["0","0","0","0","0","0","A8","AnimationDecoder","Avif","Bgr","Bgr8","Bgr8","Bgra","Bgra8","Bgra8","Bmp","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","Dds","Delay","DynamicImage","EncodableLayout","ExtendedColorType","Farbfeld","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","Ico","ImageBgr8","ImageBgra8","ImageBuffer","ImageDecoder","ImageDecoderExt","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb8","ImageRgba16","ImageRgba8","InnerImage","InnerImageView","Jpeg","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Luma","LumaA","Pixel","Pixel","Pixels","Png","Png","Pnm","Pnm","Primitive","Progress","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tga","Tiff","Unknown","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","apply_without_alpha","as_bgr8","as_bgra8","as_bytes","as_bytes","as_flat_samples","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut_bgr8","as_mut_bgra8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb8","as_mut_rgba16","as_mut_rgba8","as_raw","as_rgb16","as_rgb8","as_rgba16","as_rgba8","bits_per_pixel","blend","blend","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blend_pixel","blur","bmp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channel_count","channel_count","channels","channels","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_model","color_model","color_type","color_type","color_type","convert","copy_from","copy_from","copy_within","copy_within","copy_within","crop","crop_imm","current","dds","default","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dxt","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","expand_palette","expand_palette","extensions_str","farbfeld","filter3x3","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","gif","grayscale","guess_format","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr","height","height","height","huerotate","ico","image_dimensions","imageops","in_bounds","in_bounds","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bgr","into_bgr8","into_bgra","into_bgra8","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma","into_luma16","into_luma8","into_luma_alpha","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb","into_rgb16","into_rgb8","into_rgba","into_rgba16","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","invert","invert","io","jpeg","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map","map","map2","map2","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","map_without_alpha","math","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new_bgr8","new_bgra8","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb8","new_rgba16","new_rgba8","next","next","numer_denom_ms","open","original_color_type","original_color_type","partial_cmp","pixels","pixels","pixels","pixels_mut","png","pnm","put_pixel","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image","read_image_with_progress","read_image_with_progress","read_rect","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","scanline_bytes","sub_image","sub_image","sub_image","tga","thumbnail","thumbnail_exact","tiff","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr8","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra8","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba8","top","total","total_bytes","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","view","webp","width","width","width","write_image","write_to","0","0","0","0","0","0","0","0","0","0","0","0","0","0","BMPEncoder","BmpDecoder","BmpEncoder","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bmp","dds","dxt","farbfeld","gif","hdr","ico","jpeg","png","pnm","tga","tiff","webp","BMPEncoder","BmpDecoder","BmpEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","read_image","read_rect_with_progress","try_from","try_from","try_into","try_into","type_id","type_id","write_image","DdsDecoder","borrow","borrow_mut","color_type","deref","deref_mut","dimensions","drop","from","init","into","into_reader","new","read_image","scanline_bytes","try_from","try_into","type_id","DXT1","DXT3","DXT5","DXTEncoder","DXTReader","DXTVariant","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","eq","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","new","new","read","read_image","read_rect_with_progress","scanline_bytes","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","FarbfeldDecoder","FarbfeldEncoder","FarbfeldReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","init","init","init","into","into","into","into_reader","new","new","read","read_rect_with_progress","scanline_bytes","seek","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","Encoder","Finite","GifDecoder","GifEncoder","GifReader","Infinite","Repeat","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","encode_frame","encode_frames","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_frames","into_reader","new","new","new_with_speed","read","read_image","read_to_end","set_repeat","to_owned","try_encode_frames","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","HDRAdapter","HDREncoder","HDRImageDecoderIterator","HDRMetadata","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","RGBE8Pixel","Rgbe8Pixel","SIGNATURE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","color_correction","color_type","custom_attributes","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","e","encode","eq","exposure","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","height","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_reader","metadata","ne","new","new","new","new_nonstrict","next","orientation","pixel_aspect_ratio","read","read_image","read_image_hdr","read_image_ldr","read_image_native","read_image_transform","read_raw_file","read_rect_with_progress","read_to_end","rgbe8","size_hint","to_hdr","to_ldr","to_ldr_scale_gamma","to_owned","to_owned","to_rgbe8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","with_strictness","ICOEncoder","IcoDecoder","IcoEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","read_image","try_from","try_from","try_into","try_into","type_id","type_id","write_image","Centimeters","Inches","JPEGEncoder","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","density","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dpi","drop","drop","drop","drop","encode","encode_image","eq","eq","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","ne","new","new","new_with_quality","read_image","scale","set_pixel_density","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","write_image","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","PNGEncoder","PNGReader","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","encode","eq","eq","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_frames","into_reader","is_apng","ne","ne","new","new","new_with_quality","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_image","ArbitraryHeader","ArbitraryMap","ArbitraryTuplType","Ascii","Binary","Bitmap","BitmapHeader","BlackAndWhite","BlackAndWhiteAlpha","Custom","Graymap","GraymapHeader","Grayscale","GrayscaleAlpha","PNMEncoder","PNMHeader","PNMSubtype","Pixmap","PixmapHeader","PnmDecoder","PnmEncoder","PnmHeader","PnmSubtype","RGB","RGBAlpha","SampleEncoding","as_arbitrary","as_bitmap","as_graymap","as_pixmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_type","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encoding","encoding","encoding","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","height","height","height","height","height","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","into_reader","magic_constant","maximal_sample","maxval","maxval","maxwhite","ne","new","new","original_color_type","read_image","sample_encoding","subtype","subtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tupltype","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","width","width","with_dynamic_header","with_header","with_subtype","write","write_image","0","0","0","0","TgaDecoder","TgaEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","original_color_type","read_image","scanline_bytes","try_from","try_from","try_into","try_into","type_id","type_id","write_image","TiffDecoder","TiffEncoder","TiffReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","init","init","init","into","into","into","into_reader","new","new","read","read_image","read_to_end","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","WebPDecoder","borrow","borrow_mut","color_type","deref","deref_mut","dimensions","drop","from","init","into","into_reader","new","read_image","try_from","try_into","type_id","vp8","Frame","Vp8Decoder","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode_frame","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","for_display","from","from","height","init","init","into","into","keyframe","new","pixel_type","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","ybuf","DdsDecoder","DXTEncoder","DXTReader","DXTVariant","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","UnsupportedError","UnsupportedErrorKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","kind","kind","kind","ne","ne","ne","ne","new","new","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","FarbfeldDecoder","FarbfeldEncoder","FarbfeldReader","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_mut","as_mut_slice","as_ref","as_slice","as_view","as_view_mut","as_view_with_mut_samples","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","drop","drop","drop","drop","drop","drop","eq","eq","eq","extents","extents","fits","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut_sample","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","get_sample","has_aliased_samples","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_mut_slice","image_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds","in_bounds_index","in_bounds_index","index","index","index","index_ignoring_bounds","index_ignoring_bounds","index_mut","init","init","init","init","init","init","inner","inner","inner_mut","into","into","into","into","into","into","into_inner","into_inner","is_normal","is_normal","layout","min_length","min_length","min_length","min_length","ne","ne","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","shrink_to","strides_cwh","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","width","width_stride","with_monocolor","0","0","Encoder","GifDecoder","GifEncoder","GifReader","Repeat","HDRAdapter","HDREncoder","HDRImageDecoderIterator","HDRMetadata","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","RGBE8Pixel","Rgbe8Pixel","SIGNATURE","c","color_correction","custom_attributes","e","exposure","height","orientation","pixel_aspect_ratio","read_raw_file","rgbe8","to_rgbe8","width","ICOEncoder","IcoDecoder","IcoEncoder","BiLevel","CatmullRom","CatmullRom","ColorMap","FilterType","Gaussian","Gaussian","Lanczos3","Lanczos3","Nearest","Nearest","Triangle","Triangle","blur","borrow","borrow_mut","brighten","clone","clone_into","colorops","contrast","crop","crop_imm","deref","deref_mut","dither","drop","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","grayscale","horizontal_gradient","huerotate","index_colors","init","into","invert","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","thumbnail","tile","to_owned","try_from","try_into","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","borrow","borrow_mut","brighten","brighten_in_place","clone","clone_into","contrast","contrast_in_place","deref","deref_mut","dither","drop","from","grayscale","has_lookup","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","index_of","init","into","invert","lookup","lookup","map_color","map_color","to_owned","try_from","try_into","type_id","Reader","borrow","borrow_mut","clear_format","decode","deref","deref_mut","drop","format","from","init","into","into_dimensions","into_inner","new","open","set_format","try_from","try_into","type_id","with_format","with_guessed_format","Centimeters","Inches","JPEGEncoder","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","density","unit","Rect","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","hash","height","init","into","ne","nq","to_owned","try_from","try_into","type_id","utils","width","x","y","NeuQuant","borrow","borrow_mut","deref","deref_mut","drop","from","from","has_lookup","index_of","index_of","init","init","into","lookup","lookup","map_color","map_pixel","new","try_from","try_into","type_id","clamp","ApngDecoder","CompressionType","FilterType","PNGEncoder","PNGReader","PngDecoder","PngEncoder","PngReader","ArbitraryHeader","ArbitraryMap","ArbitraryTuplType","Ascii","Binary","Bitmap","BitmapHeader","BlackAndWhite","BlackAndWhiteAlpha","Custom","Graymap","GraymapHeader","Grayscale","GrayscaleAlpha","PNMEncoder","PNMHeader","PNMSubtype","Pixmap","PixmapHeader","PnmDecoder","PnmEncoder","PnmHeader","PnmSubtype","RGB","RGBAlpha","SampleEncoding","depth","encoding","encoding","encoding","height","height","height","height","maxval","maxval","maxwhite","tupltype","width","width","width","width","0","0","0","0","TgaDecoder","TgaEncoder","TiffDecoder","TiffEncoder","TiffReader","WebPDecoder","vp8"],"q":["imageimage::DynamicImage","","","","","","","","","","image::ExtendedColorType","image::ImageOutputFormat","","","image::bmp","","","image::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs","","","","","","","","","","","","","image::codecs::bmp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::dds","","","","","","","","","","","","","","","","","","image::codecs::dxt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::farbfeld","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::gif","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::gif::Repeat","image::codecs::hdr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::ico","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::jpeg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::png","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::pnmimage::codecs::pnm::ArbitraryTuplType","image::codecs::pnm::PNMSubtype","","","image::codecs::tga","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::webp","","","","","","","","","","","","","","","","","","image::codecs::webp::vp8","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::dds","image::dxt","","","","","","","image::errorimage::error::ImageError","","","","","","image::error::ImageFormatHint","","","image::error::ParameterErrorKind","image::error::UnsupportedErrorKind","","","image::farbfeld","","","image::flatimage::flat::Error","","image::gif","","","","","image::hdr","","","","","","","","","","","","","","","","","","","","","","","","","image::ico","","","image::imageops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::imageops::colorops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::io","","","","","","","","","","","","","","","","","","","","","","image::jpeg","","","","","","","","","","image::math","","","","","","","","","","","","","","","","","","","","","","","","","image::math::nq","","","","","","","","","","","","","","","","","","","","","","image::math::utils","image::png","","","","","","","","image::pnm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::pnm::ArbitraryTuplType","image::pnm::PNMSubtype","","","image::tga","","image::tiff","","","image::webp",""],"d":["","","","","","","Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","BGR colors","Pixel contains 8-bit B, G and R channels","Pixel contains 8-bit B, G and R channels","BGR colors + alpha channel","Pixel is 8-bit BGR with an alpha channel","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","ColorType for this pixel format","An enumeration over supported color types and bit depths","An Image in DDS Format","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","An Image in farbfeld Format","","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","An Image in ICO Format","Each pixel in this image is 8-bit Bgr","Each pixel in this image is 8-bit Bgr with alpha","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","Underlying image type. This is mainly used by SubImages in …","Underlying image type. This is mainly used by SubImages in …","An Image in JPEG Format","An Image in JPEG Format with specified quality","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Grayscale colors","Grayscale colors + alpha channel","A generalized pixel.","The type of pixel.","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","An Image in one of the PNM Formats","Primitive trait from old stdlib","Represents the progress of an image operation.","The type of reader produced by <code>into_reader</code>.","RGB colors","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The underlying subpixel type.","An Image in TGA Format","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Return a reference to an 8bit BGR image","Return a reference to an 8bit BGRA image","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 8bit BGR image","Return a mutable reference to an 8bit RGBA image","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","Returns the underlying raw buffer","Return a reference to an 16bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 8bit RGBA image","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","","","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: This method will be removed. Blend the pixel …","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","Decoding and Encoding of BMP Images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of channels of this pixel type.","Returns the number of channels of this pixel type.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Returns a string that can help to interpret the meaning …","Returns a string that can help to interpret the meaning …","Returns the color type of the image data produced by this …","Returns the ColorType for this pixel format","Returns the ColorType for this pixel format","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","Decoding of DDS images","","Delay of this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","","The width and height of this image.","","","","","","","","","","","","","","","","","","","","Decoding of DXT (S3TC) compression","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Decoding of farbfeld images","Filters this image with the specified 3x3 kernel.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Create a delay from a ratio of milliseconds.","Contructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Contructs a buffer from a generic container (for example a …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","","","Returns mutable view into a mutable slice.","","","","","","","Creates an image buffer out of an existing buffer. Returns …","Returns the pixel located at (x, y). Indexed from top left.","","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","","DEPRECATED: Do not use is function: It is unimplemented!","Decoding of GIF Images","Return a grayscale version of this image.","Guess image format from memory block","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","","","","Decoding of Radiance HDR Images","The height of this image.","The height of this image.","The height of this image.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Decoding and Encoding of ICO files","Read the dimensions of the image located at the specified …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Returns true if this x, y coordinate is contained inside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the underlying image.","","","","Returns a mutable reference to the underlying image.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the image and returns a BGR image.","Consume the image and returns a BGR image.","Consume the image and returns a BGRA image.","Consume the image and returns a BGRA image.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Decoding and Encoding of JPEG Images","Returns the x offset","Create a new image from a Reader","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","","","","","","","","","","","","","","","Creates a new <code>Frames</code> from an implementation specific …","Construct a new subimage The coordinates set the position …","Contructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Creates a dynamic image backed by a buffer of BGR pixels.","Creates a dynamic image backed by a buffer of BGRA pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Retuns the color type of the image file before decoding","Retuns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Decoding and Encoding of PNG Images","Decoding and Encoding of netpbm image formats (pbm, pgm, …","Put a pixel at location (x, y). Indexed from top left.","","","Puts a pixel at location <code>(x, y)</code>","","Returns all the bytes in the image.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Returns the minimum number of bytes that can be …","Returns a mutable subimage that is a view into this image. …","Returns a mutable subimage that is a view into this image. …","","Decoding and Encoding of TGA Images","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Decoding and Encoding of TIFF Images","Convert this pixel to BGR","","","","","","","Returns a copy of this image as an BGR image.","Returns a copy of this image as an BGR image.","Convert this pixel to BGR with an alpha channel","","","","","","","Returns a copy of this image as an BGRA image.","Returns a copy of this image as an BGRA image.","Return a copy of this image’s pixels as a byte vector.","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns an subimage that is an immutable view into this …","Returns an subimage that is an immutable view into this …","","Decoding of WebP Images","The width of this image.","The width of this image.","The width of this image.","Writes all the bytes in an image to the encoder.","Encode this image and write it to <code>w</code>","","","","","","","","","","","","","","","BMP Encoder","A bmp decoder","The representation of a BMP encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of BMP Images","Decoding of DDS images","Decoding of DXT (S3TC) compression","Decoding of farbfeld images","Decoding of GIF Images","Decoding of Radiance HDR Images","Decoding and Encoding of ICO files","Decoding and Encoding of JPEG Images","Decoding and Encoding of PNG Images","Decoding of netpbm image formats (pbm, pgm, ppm and pam).","Decoding of TGA Images","Decoding and Encoding of TIFF Images","Decoding of WebP Images","BMP Encoder","A bmp decoder","The representation of a BMP encoder.","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","The representation of a DDS decoder","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","","","","","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …","DXT encoder","DXT reader","What version of DXT compression are we using? Note that …","DXT decoder","DXT encoder","DXT reader","DXT compression version.","","","","","","","","","","","","Returns the color type that is stored in this DXT variant","","","","","","","","","","","","","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new DXT decoder that decodes from the stream <code>r</code>. …","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","","","","farbfeld decoder","farbfeld encoder","farbfeld Reader","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> (native endian) that has dimensions …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","GIF encoder","Finite number of repetitions","GIF decoder","GIF encoder.","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Looping GIF","Number of repetitions for a GIF animation","","","","","","","","","","","","","","","","","","","","","","","","","Encode a single image.","Encode one frame of animation.","Encodes Frames. Consider using <code>try_encode_frames</code> instead …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new decoder that decodes the input steam <code>r</code>","Creates a new GIF encoder.","Create a new GIF encoder, and has the speed parameter <code>speed</code>…","","","","Set the repeat behaviour of the encoded GIF","","Try to encode a collection of <code>ImageResult&lt;animation::Frame&gt;</code>…","","","","","","","","","","","","","","HDR Adapter","HDR Encoder","Scanline buffered pixel by pixel iterator","HDR MetaData","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Refer to wikipedia","Radiance HDR file signature","","","","","","","","","","","","","","","Color components","","","","","Divide color values by corresponding tuple member (r, g, …","","All lines contained in image header are put here. Ordering …","","","","","","","","","","","","","","","","","","","","","","","","Exponent","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>","","Divide color values by exposure to get to get physical …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Height of decoded image. It depends on orientation too.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns file metadata. Refer to <code>HDRMetadata</code> for details.","","Creates encoder","Creates adapter","Reads Radiance HDR image header from stream <code>r</code> if the …","Allows reading old Radiance HDR images","","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","","","Consumes decoder and returns a vector of Rgb pixels.","Consumes decoder and returns a vector of Rgb pixels. scale …","Consumes decoder and returns a vector of RGBE8 pixels","Consumes decoder and returns a vector of transformed pixels","Helper function for reading raw 3-channel f32 images","","","Creates <code>RGBE8Pixel</code> from components","","Converts <code>RGBE8Pixel</code> into <code>Rgb&lt;f32&gt;</code> linearly","Converts <code>RGBE8Pixel</code> into <code>Rgb&lt;T&gt;</code> with scale=1 and gamma=2.2","Converts RGBE8Pixel into Rgb using provided scale and gamma","","","Converts <code>Rgb&lt;f32&gt;</code> into <code>RGBE8Pixel</code>","","","","","","","","","","","","","","","","","","","","","","Width of decoded image. It could be either scanline length,","Reads Radiance HDR image header from stream <code>reader</code>, if the …","ICO encoder","An ico decoder","ICO encoder","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG Encoder","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","","","","","","","","","","","","","","Returns a pixel density with a pixel aspect ratio of 1","A couple of values for (Xdensity, Ydensity)","","","","","","","","","","Creates the most common pixel density type: the horizontal …","","","","","Encodes the image stored in the raw byte buffer <code>image</code> that …","Encodes the given image.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","","Configure the decoder to scale the image during decoding.","Set the pixel density of the images the encoder will …","","","","","","","","","","","","","","","The unit in which the density is measured","","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth greyscale …","PNG Encoder","PNG Reader","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","","","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","Header produced by a <code>pam</code> file (“Portable Arbitrary Map”…","Magic number P7","Standardized tuple type specifiers in the header of a <code>pam</code>.","Samples are encoded as decimal ascii strings separated by …","Samples are unsigned binary integers in big endian","Magic numbers P1 and P4","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","An image format which is not standardized","Magic numbers P2 and P5","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Pixels represent the amount of white","Grayscale with an additional alpha channel","PNM Encoder","PNM Header","Denotes the category of the magic number","Magic numbers P3 and P6","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Stores the complete header data of a file.","PNM Subtype","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","The kind of encoding used to store sample values","Retrieve the underlying arbitrary header if any","Retrieve the underlying bitmap header if any","Retrieve the underlying graymap header if any","Retrieve the underlying pixmap header if any","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of color channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode an image whose samples are represented as <code>u8</code>.","Binary or Ascii encoded file","Binary or Ascii encoded file","Binary or Ascii encoded file","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The height of the image this header is for.","Height of the image file","Height of the image file","Height of the image file","Height of the image file","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the reader and header after an image has been read.","","Get the two magic constant bytes corresponding to this …","The biggest value a sample can have. In other words, the …","Maximum sample value within the image","Maximum sample value within the image","Maximum sample value within the image","","Create a new decoder that decodes from the stream <code>read</code>","Create new PNMEncoder from the <code>writer</code>.","","","Whether samples are stored as binary or as decimal ascii","Get the pnm subtype, depending on the magic constant …","Retrieve the format subtype from which the header was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color interpretation of image pixels","","","","","","","","","","","The width of the image this header is for.","Width of the image file","Width of the image file","Width of the image file","Width of the image file","Create the header dynamically for each image.","Enforce the use of a chosen header.","Encode a specific pnm subtype image.","Write the header back into a binary stream","","","","","","The representation of a TGA decoder","TGA encoder.","","","","","","","","","","","","","Encodes the image <code>buf</code> that has dimensions <code>width</code> and <code>height</code> …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","","Decoder for TIFF images.","Encoder for tiff images","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","","","","","","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new TiffDecoder.","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","WebP Image format decoder. Currently only supportes the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new WebPDecoder from the Reader <code>r</code>. This function …","","","","","An implementation of the VP8 Video Codec","A Representation of the last decoded video frame","VP8 Decoder","","","","","","","Decodes the current frame and returns a reference to it","","","","","","","","","Indicates whether this frame is intended for display","Returns the argument unchanged.","Returns the argument unchanged.","The height of the luma plane","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether this frame is a keyframe","Create a new decoder. The reader must present a raw vp8 …","The pixel type of the frame as defined by Section 9.2 of …","","","","","","","","The width of the luma plane","The luma plane of the frame","","","","","","","","","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","","","","","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","The color format did not match the channel count.","Get a mutable reference based version.","View the samples as a slice.","Get a reference based version.","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","","","","","","","","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a single sample.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a single sample.","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Mutable portion of the buffer that holds sample values.","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","Resolve the index of a particular sample.","Get the theoretical position of sample (x, y, channel).","Get the theoretical position of sample (channel, x, y).","Return a mutable reference to a single sample at specified …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","","","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","Copy the data into an owned vector.","","","","","","","","","","","","","Move the data into an image buffer.","Try to convert this into an image with mutable pixels.","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","Create a monocolor image from a single pixel.","","","","","","","","HDR Adapter","HDR Encoder","Scanline buffered pixel by pixel iterator","HDR MetaData","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Refer to wikipedia","Radiance HDR file signature","Color components","Divide color values by corresponding tuple member (r, g, …","All lines contained in image header are put here. Ordering …","Exponent","Divide color values by exposure to get to get physical …","Height of decoded image. It depends on orientation too.","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","Helper function for reading raw 3-channel f32 images","Creates <code>RGBE8Pixel</code> from components","Converts <code>Rgb&lt;f32&gt;</code> into <code>RGBE8Pixel</code>","Width of decoded image. It could be either scanline length,","ICO encoder","An ico decoder","ICO encoder","Color operations","","Cubic Filter","Color operations","Available Sampling Filters.","","Gaussian Filter","","Lanczos with window 3","","Nearest Neighbor","","Linear Filter","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","","","Color operations","","","Functions for altering and converting the color of …","Color operations","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","","","Color operations","","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","","Returns the argument unchanged.","Color operations","Fill the image with a linear horizontal gradient","Color operations","Color operations","","Calls <code>U::from(self)</code>.","Color operations","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","","","","","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","","","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","","","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","","","Reduces the colors of the image using the supplied …","","Returns the argument unchanged.","Convert the supplied image to grayscale","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","","","","","A multi-format image reader.","","","Remove the current information on the image format.","Read the image (replaces <code>load</code>).","","","","Get the currently determined format.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Create a new image reader without a preset format.","Open a file to read, format will be guessed from path.","Supply the format as which to interpret the read image.","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG Encoder","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","A couple of values for (Xdensity, Ydensity)","The unit in which the density is measured","A Rectangle defined by its top left corner, width and …","","","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","","Calls <code>U::from(self)</code>.","","NEUQUANT Neural-Net quantization algorithm by Anthony …","","","","","Shared mathematical utility functions.","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Neural network color quantizer","","","","","","Returns the argument unchanged.","","Indicate NeuQuant implements <code>lookup</code>.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Cut value to be inside given range","","","","","","","","","Header produced by a <code>pam</code> file (“Portable Arbitrary Map”…","Magic number P7","Standardized tuple type specifiers in the header of a <code>pam</code>.","Samples are encoded as decimal ascii strings separated by …","Samples are unsigned binary integers in big endian","Magic numbers P1 and P4","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","An image format which is not standardized","Magic numbers P2 and P5","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Pixels represent the amount of white","Grayscale with an additional alpha channel","PNM Encoder","PNM Header","Denotes the category of the magic number","Magic numbers P3 and P6","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Stores the complete header data of a file.","PNM Subtype","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","The kind of encoding used to store sample values","Number of color channels","Binary or Ascii encoded file","Binary or Ascii encoded file","Binary or Ascii encoded file","Height of the image file","Height of the image file","Height of the image file","Height of the image file","Maximum sample value within the image","Maximum sample value within the image","Maximum sample value within the image","Color interpretation of image pixels","Width of the image file","Width of the image file","Width of the image file","Width of the image file","","","","","The representation of a TGA decoder","TGA encoder.","","","","WebP Image format decoder. Currently only supportes the …",""],"i":[1,2,3,4,5,6,7,0,8,0,9,7,0,9,7,8,10,11,11,11,0,8,0,0,0,0,8,10,0,0,0,0,0,8,10,0,0,8,8,10,12,12,0,0,0,0,0,0,12,12,12,12,0,0,12,12,12,12,13,14,8,10,7,9,7,7,7,9,7,7,9,7,7,7,9,7,0,0,0,14,0,8,10,8,10,0,0,15,0,7,9,7,7,7,9,7,0,0,7,9,7,7,7,9,7,0,0,11,8,10,8,7,10,8,12,11,1,2,3,4,5,6,11,1,2,3,4,5,6,11,1,2,3,4,5,6,11,11,12,12,16,12,17,17,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,12,12,12,12,9,11,1,2,3,4,5,6,13,18,17,12,12,0,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,14,18,17,12,12,0,20,20,9,8,8,18,11,11,9,7,11,1,2,3,4,5,6,11,1,2,3,4,5,6,11,1,2,3,4,5,6,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,0,19,12,11,11,15,11,11,17,13,13,13,13,17,12,12,22,0,17,20,19,18,20,21,17,17,9,7,1,2,3,4,5,6,12,8,10,22,23,19,18,20,21,17,17,9,7,1,2,3,4,5,6,12,8,10,22,23,15,14,18,17,17,12,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,0,17,17,17,17,21,17,9,7,1,2,3,4,5,6,12,8,10,22,0,24,17,8,0,12,0,12,12,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,19,18,20,21,17,9,7,7,1,1,2,2,3,3,4,4,5,5,6,6,12,8,10,10,22,23,11,1,2,3,4,5,6,12,8,17,21,20,8,17,17,21,11,1,2,3,4,5,6,11,1,2,3,4,5,6,17,14,18,17,17,12,13,18,17,17,12,0,12,0,9,9,17,9,7,1,2,3,4,5,6,12,8,0,14,14,17,12,0,0,0,14,14,17,1,2,3,4,5,6,17,1,2,3,4,5,6,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,14,18,17,12,13,18,17,12,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,12,12,12,12,20,12,17,25,19,23,12,12,12,12,12,12,17,15,12,12,12,12,12,12,17,11,1,2,3,4,5,6,12,0,0,20,0,0,0,11,1,2,3,4,5,6,11,1,2,3,4,5,6,11,1,2,3,4,5,6,11,11,0,21,17,9,7,1,2,3,4,5,6,12,8,10,22,19,18,20,17,12,12,12,12,12,12,12,12,12,12,19,23,21,0,15,15,21,14,14,17,17,0,0,13,18,17,17,12,15,15,15,15,26,26,26,22,12,12,12,12,12,12,17,17,17,17,12,0,0,17,12,15,15,13,13,18,0,12,12,0,11,1,2,3,4,5,6,12,12,11,1,2,3,4,5,6,12,12,12,18,11,1,2,3,4,5,6,12,12,12,11,1,2,3,4,5,6,12,12,12,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,11,1,2,3,4,5,6,12,12,12,11,1,2,3,4,5,6,12,12,12,20,22,15,15,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,19,18,20,21,17,9,7,1,2,3,4,5,6,12,8,10,22,23,14,14,17,13,13,17,12,14,14,18,0,14,14,17,27,12,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,44,46,47,42,44,46,47,50,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,42,44,46,47,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,42,43,44,45,46,47,48,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,52,51,52,51,51,52,51,52,51,51,52,52,51,52,51,52,51,52,51,51,52,51,51,51,52,51,52,51,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,0,0,0,0,0,0,0,55,56,57,54,55,56,57,54,54,54,55,54,55,56,57,54,55,56,57,54,55,55,56,57,54,57,54,54,55,56,57,54,55,56,57,54,55,56,57,54,55,55,57,56,55,55,55,54,55,56,57,54,55,56,57,54,55,56,57,54,0,0,0,58,59,60,58,59,60,59,58,59,60,58,59,60,59,58,59,60,60,58,59,60,58,59,60,58,59,60,59,59,60,58,59,59,58,58,59,60,58,59,60,58,59,60,60,0,61,0,0,0,61,0,62,63,64,61,62,63,64,61,61,61,62,62,63,64,61,62,63,64,61,62,62,63,64,61,64,64,64,61,62,63,64,61,62,63,64,61,62,63,64,61,62,62,62,64,64,63,62,63,64,61,64,62,63,64,61,62,63,64,61,62,63,64,61,65,0,0,0,0,0,0,0,0,0,0,0,0,0,66,67,68,69,70,71,72,66,67,68,69,70,71,72,71,71,72,71,72,72,69,72,71,66,67,68,69,70,71,72,66,67,68,69,70,71,72,69,66,67,68,69,70,71,72,71,68,71,72,69,70,71,72,66,67,68,69,70,71,72,72,66,67,68,69,70,71,72,66,67,68,69,70,71,72,67,70,69,70,71,68,69,70,69,67,72,72,66,69,70,70,70,70,0,69,66,0,67,71,71,71,71,72,0,66,67,68,69,70,71,72,66,67,68,69,70,71,72,66,67,68,69,70,71,72,72,70,0,0,0,73,74,73,74,73,73,74,73,74,73,73,74,74,73,74,73,74,73,74,73,73,74,73,73,74,73,74,73,74,74,75,75,0,0,0,75,0,0,76,77,75,78,76,77,75,78,75,78,75,78,76,78,78,76,77,75,78,76,77,75,78,76,78,76,77,75,78,77,77,75,78,75,78,76,77,75,78,76,77,75,78,76,77,75,78,76,78,76,77,77,76,76,77,75,78,76,77,75,78,76,77,75,78,76,77,75,78,78,77,0,79,80,0,80,80,0,80,79,0,0,79,0,0,0,80,79,79,81,82,81,83,84,80,79,82,81,83,84,80,79,80,79,80,79,81,80,79,82,81,83,84,80,79,82,81,83,84,80,79,81,82,81,83,84,80,79,84,80,79,80,79,82,81,83,84,80,79,82,81,83,84,80,79,82,81,83,84,80,79,83,81,81,80,79,81,84,84,82,81,82,81,80,79,82,81,83,84,80,79,82,81,83,84,80,79,82,81,83,84,80,79,84,0,85,0,86,86,85,0,87,87,87,85,0,87,87,0,0,0,85,0,0,0,0,0,87,87,0,88,88,88,88,89,90,88,86,85,91,92,93,94,87,89,90,88,86,85,91,92,93,94,87,86,85,91,92,93,94,87,86,85,91,92,93,94,87,89,94,89,90,88,86,85,91,92,93,94,87,89,90,88,86,85,91,92,93,94,87,89,89,90,88,86,85,91,92,93,94,87,90,91,92,93,86,85,86,85,91,92,93,94,87,89,90,88,88,88,88,88,86,85,91,92,93,94,87,88,91,92,93,94,89,90,88,86,85,91,92,93,94,87,89,90,88,86,85,91,92,93,94,87,89,89,85,88,93,94,92,85,89,90,89,89,85,89,88,86,85,91,92,93,94,87,89,90,88,86,85,91,92,93,94,87,89,90,88,86,85,91,92,93,94,87,94,89,90,88,86,85,91,92,93,94,87,88,91,92,93,94,90,90,90,88,90,95,96,97,98,0,0,99,100,99,100,99,99,100,99,100,99,99,100,100,99,100,99,100,99,100,99,99,100,99,99,99,99,100,99,100,99,100,100,0,0,0,101,102,103,101,102,103,101,101,102,103,101,102,103,101,101,102,103,103,101,102,103,101,102,103,101,102,103,101,101,103,102,101,102,101,102,103,101,102,103,101,102,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,105,106,105,106,106,106,105,106,105,106,105,106,105,106,106,106,105,106,106,105,106,105,106,106,105,106,106,105,106,105,106,105,106,106,106,0,0,0,0,0,0,0,0,107,108,0,109,110,108,0,111,110,107,110,107,0,0,0,109,108,0,0,108,111,110,108,0,0,111,111,108,0,0,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,107,110,109,111,107,110,109,111,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,107,110,109,111,108,108,112,112,107,113,113,114,114,110,115,115,116,116,109,111,111,112,113,115,108,108,108,112,112,107,113,114,110,115,116,109,111,111,111,112,113,115,114,116,107,110,109,111,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,112,114,116,107,110,109,111,113,115,108,113,114,115,107,110,109,111,108,112,113,114,115,116,111,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,108,112,107,113,114,110,115,116,109,111,117,118,119,120,121,122,123,124,125,126,127,128,129,0,0,0,130,0,0,130,0,131,130,130,0,131,130,0,0,131,132,132,132,132,132,132,132,133,132,134,135,133,131,130,132,134,135,133,131,130,132,134,135,133,134,134,132,134,135,133,131,130,132,134,135,133,131,130,132,134,132,134,135,133,131,130,132,134,135,133,131,130,135,133,132,134,135,133,131,130,134,131,130,132,134,132,134,135,133,132,134,135,133,131,131,130,132,134,135,133,131,130,132,135,133,135,133,133,132,135,133,132,134,134,131,130,134,134,132,135,133,132,135,133,132,134,135,133,132,134,132,132,134,132,134,132,132,134,135,133,131,130,135,133,133,132,134,135,133,131,130,135,133,132,134,132,132,134,135,133,134,131,130,133,134,135,133,132,132,134,135,133,132,134,132,134,135,133,131,130,131,132,132,134,135,133,131,130,132,134,135,133,131,130,132,135,132,134,135,133,131,130,134,134,132,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,72,72,71,72,72,72,72,0,0,0,72,0,0,0,0,0,138,0,0,0,138,0,138,0,138,0,138,0,138,138,0,138,138,0,0,0,0,138,138,0,138,138,0,0,0,0,0,0,0,138,138,0,0,0,0,138,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,138,138,138,0,0,0,139,0,140,140,0,0,140,140,0,0,140,140,0,140,140,0,139,140,0,0,0,139,140,140,140,0,139,140,139,140,140,140,140,140,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,75,75,0,0,0,75,0,0,78,78,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,0,142,142,142,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,0,0,0,0,0,0,0,0,85,0,86,86,85,0,87,87,87,85,0,87,87,0,0,0,85,0,0,0,0,0,87,87,0,94,91,92,93,91,92,93,94,93,94,92,94,91,92,93,94,95,96,97,98,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dynamicimage",4],["f32",0]],["dynamicimage",4]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["",0],["",0]]],[[["rgb",3,[["primitive",8]]],["rgb",3]]],[[["bgr",3,[["primitive",8]]],["bgr",3]]],[[["luma",3,[["primitive",8]]],["luma",3]]],[[["rgba",3,[["primitive",8]]],["rgba",3]]],[[["bgra",3,[["primitive",8]]],["bgra",3]]],[[["lumaa",3,[["primitive",8]]],["lumaa",3]]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["",0]]],[[["",0]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["",0]]],[[["dynamicimage",4]]],[[["imagebuffer",3]],["flatsamples",3]],[[["imagebuffer",3]],["flatsamples",3]],[[["dynamicimage",4]],["option",4,[["flatsamples",3]]]],[[["dynamicimage",4]],["option",4,[["flatsamples",3]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["grayimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["grayalphaimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["grayimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["grayalphaimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["rgbimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["rgbaimage",6]]]],[[["imagebuffer",3]],["",0]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["rgbimage",6]]]],[[["dynamicimage",4]],["option",4,[["imagebuffer",3]]]],[[["dynamicimage",4]],["option",4,[["rgbaimage",6]]]],[[["colortype",4]],["u16",0]],[[["",0],["",0]]],[[["rgb",3,[["primitive",8]]],["rgb",3]]],[[["bgr",3,[["primitive",8]]],["bgr",3]]],[[["luma",3,[["primitive",8]]],["luma",3]]],[[["rgba",3,[["primitive",8]]],["rgba",3]]],[[["bgra",3,[["primitive",8]]],["bgra",3]]],[[["lumaa",3,[["primitive",8]]],["lumaa",3]]],[[["",0],["u32",0],["u32",0]]],[[["subimage",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["dynamicimage",4],["u32",0],["u32",0],["rgba",3,[["u8",0]]]]],[[["dynamicimage",4],["f32",0]],["dynamicimage",4]],nullsubimage",3]]],[[["imagebuffer",3]]],[[["dynamicimage",4]]],[[["dynamicimage",4],["i32",0]],["dynamicimage",4]],null,[[["frame",3]],["rgbaimage",6]],[[["frame",3]],["rgbaimage",6]],[[["colortype",4]],["u8",0]],[[["imageformat",4]],["bool",0]],[[["imageformat",4]],["bool",0]],[[["subimage",3],["u32",0],["u32",0],["u32",0],["u32",0]]],[[],["u8",0]],[[],["u8",0]],[[["colortype",4]],["u8",0]],[[["extendedcolortype",4]],["u8",0]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["frame",3]],["frame",3]],[[["delay",3]],["delay",3]],[[["imagebuffer",3]],["imagebuffer",3]],[[["colortype",4]],["colortype",4]],[[["extendedcolortype",4]],["extendedcolortype",4]],[[["rgb",3,[["",26,[["clone",8],["primitive",8]]]]]],["rgb",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["bgr",3,[["",26,[["clone",8],["primitive",8]]]]]],["bgr",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["luma",3,[["",26,[["clone",8],["primitive",8]]]]]],["luma",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["rgba",3,[["",26,[["clone",8],["primitive",8]]]]]],["rgba",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["bgra",3,[["",26,[["clone",8],["primitive",8]]]]]],["bgra",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["lumaa",3,[["",26,[["clone",8],["primitive",8]]]]]],["lumaa",3,[["",26,[["clone",8],["primitive",8]]]]]],[[["dynamicimage",4]],["dynamicimage",4]],[[["imageformat",4]],["imageformat",4]],[[["imageoutputformat",4]],["imageoutputformat",4]],[[["progress",3]],["progress",3]],[[["pixels",3,[["sized",8]]]],["pixels",3,[["sized",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["frames",3]],["imageresult",6,[["vec",3,[["frame",3]]]]]],[[["dynamicimage",4]],["colortype",4]],[[],["str",0]],[[],["str",0]],[[["",0]],["colortype",4]],[[],["colortype",4]],[[],["colortype",4]],[[["imagebuffer",3,[["pixel",8]]]],["imagebuffer",3,[["pixel",8],["vec",3]]]],[[["",0],["",0],["u32",0],["u32",0]],["imageresult",6]],[[["",0],["",0],["u32",0],["u32",0]],["imageresult",6]],[[["",0],["rect",3],["u32",0],["u32",0]],["bool",0]],[[["",0],["rect",3],["u32",0],["u32",0]],["bool",0]],[[["imagebuffer",3],["rect",3],["u32",0],["u32",0]],["bool",0]],[[["dynamicimage",4],["u32",0],["u32",0],["u32",0],["u32",0]],["dynamicimage",4]],[[["dynamicimage",4],["u32",0],["u32",0],["u32",0],["u32",0]],["dynamicimage",4]],[[["progress",3]],["u64",0]],null,[[],["imagebuffer",3]],[[["frame",3]],["delay",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["imagebuffer",3]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["imagebuffer",3]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]]],[[["",0]]],[[["subimage",3]]],[[["imagebuffer",3]]],[[["imagebuffer",3]]],[[["dynamicimage",4]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["imagebuffer",3]],["enumeratepixels",3]],[[["imagebuffer",3]],["enumeratepixelsmut",3]],[[["imagebuffer",3]],["enumeraterows",3]],[[["imagebuffer",3]],["enumeraterowsmut",3]],[[["delay",3],["delay",3]],["bool",0]],[[["imagebuffer",3,[["",26,[["partialeq",8],["pixel",8]]],["partialeq",8]]],["imagebuffer",3]],["bool",0]],[[["colortype",4],["colortype",4]],["bool",0]],[[["extendedcolortype",4],["extendedcolortype",4]],["bool",0]],[[["rgb",3,[["",26,[["partialeq",8],["primitive",8]]]]],["rgb",3]],["bool",0]],[[["bgr",3,[["",26,[["partialeq",8],["primitive",8]]]]],["bgr",3]],["bool",0]],[[["luma",3,[["",26,[["partialeq",8],["primitive",8]]]]],["luma",3]],["bool",0]],[[["rgba",3,[["",26,[["partialeq",8],["primitive",8]]]]],["rgba",3]],["bool",0]],[[["bgra",3,[["",26,[["partialeq",8],["primitive",8]]]]],["bgra",3]],["bool",0]],[[["lumaa",3,[["",26,[["partialeq",8],["primitive",8]]]]],["lumaa",3]],["bool",0]],[[["dynamicimage",4],["dynamicimage",4]],["bool",0]],[[["imageformat",4],["imageformat",4]],["bool",0]],[[["imageoutputformat",4],["imageoutputformat",4]],["bool",0]],[[["progress",3],["progress",3]],["bool",0]],null,[[["grayimage",6],["option",4,[["u8",0]]]],["rgbaimage",6]],[[["imagebuffer",3,[["luma",3,[["u8",0]]],["vec",3,[["u8",0],["global",3]]]]],["option",4,[["u8",0]]]],["rgbaimage",6]],[[["imageformat",4]]],null,[[["dynamicimage",4]],["dynamicimage",4]],null,[[["dynamicimage",4]],["dynamicimage",4]],[[["dynamicimage",4]],["dynamicimage",4]],[[["delay",3],["formatter",3]],["result",6]],[[["imagebuffer",3,[["",26,[["debug",8],["pixel",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["colortype",4],["formatter",3]],["result",6]],[[["extendedcolortype",4],["formatter",3]],["result",6]],[[["rgb",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["bgr",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["luma",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["rgba",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["bgra",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["lumaa",3,[["",26,[["debug",8],["primitive",8]]]]],["formatter",3]],["result",6]],[[["dynamicimage",4],["formatter",3]],["result",6]],[[["imageformat",4],["formatter",3]],["result",6]],[[["imageoutputformat",4],["formatter",3]],["result",6]],[[["progress",3],["formatter",3]],["result",6]],[[["pixels",3,[["",26,[["debug",8],["sized",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["colortype",4]],["extendedcolortype",4]],[[]],[[],["rgb",3,[["primitive",8]]]],[[]],[[]],[[],["bgr",3,[["primitive",8]]]],[[]],[[],["luma",3,[["primitive",8]]]],[[]],[[],["rgba",3,[["primitive",8]]]],[[],["bgra",3,[["primitive",8]]]],[[]],[[],["lumaa",3,[["primitive",8]]]],[[]],[[]],[[]],[[]],[[["imageformat",4]],["imageoutputformat",4]],[[]],[[]],[[]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["rgb",3,[["primitive",8]]]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["bgr",3,[["primitive",8]]]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["luma",3,[["primitive",8]]]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["rgba",3,[["primitive",8]]]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["bgra",3,[["primitive",8]]]],[[["primitive",8],["primitive",8],["primitive",8],["primitive",8]],["lumaa",3,[["primitive",8]]]],[[["imagedecoder",8]],["imageresult",6,[["dynamicimage",4]]]],[[],["option",4,[["imageformat",4]]]],[[["u32",0],["u32",0]],["imagebuffer",3,[["pixel",8],["vec",3]]]],[[["u32",0],["u32",0]],["delay",3]],[[["rgbaimage",6],["u32",0],["u32",0],["delay",3]],["frame",3]],[[],["imageresult",6,[["imageformat",4]]]],[[["u32",0],["u32",0],["pixel",8]],["imagebuffer",3,[["pixel",8],["vec",3]]]],[[["u32",0],["u32",0]],["option",4,[["imagebuffer",3]]]],[[["duration",3]],["delay",3]],[[],["",0]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[],["",0]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[["u32",0],["u32",0],["vec",3]],["option",4,[["imagebuffer",3,[["pixel",8],["vec",3]]]]]],[[["",0],["u32",0],["u32",0]]],[[["subimage",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]],["",0]],[[["dynamicimage",4],["u32",0],["u32",0]],["rgba",3,[["u8",0]]]],[[["",0],["u32",0],["u32",0]]],[[["subimage",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]],["",0]],[[["imagebuffer",3],["u32",0],["u32",0]],["",0]],[[["dynamicimage",4],["u32",0],["u32",0]],["rgba",3]],null,[[["dynamicimage",4]],["dynamicimage",4]],[[],["imageresult",6,[["imageformat",4]]]],[[["colortype",4]],["bool",0]],[[["colortype",4]],["bool",0]],[[["imagebuffer",3,[["",26,[["hash",8],["pixel",8]]],["hash",8]]],["",0]]],[[["colortype",4],["",0]]],[[["extendedcolortype",4],["",0]]],[[["rgb",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["bgr",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["luma",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["rgba",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["bgra",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["lumaa",3,[["",26,[["hash",8],["primitive",8]]]]],["",0]]],[[["dynamicimage",4],["",0]]],[[["imageformat",4],["",0]]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["imagebuffer",3]],["u32",0]],[[["dynamicimage",4],["i32",0]],["dynamicimage",4]],null,[[],["imageresult",6]],null,[[["",0],["u32",0],["u32",0]],["bool",0]],[[["",0],["u32",0],["u32",0]],["bool",0]],[[["imagebuffer",3]],["",0]],[[["rgb",3,[["primitive",8]]],["usize",0]],["",0]],[[["bgr",3,[["primitive",8]]],["usize",0]],["",0]],[[["luma",3,[["primitive",8]]],["usize",0]],["",0]],[[["rgba",3,[["primitive",8]]],["usize",0]],["",0]],[[["bgra",3,[["primitive",8]]],["usize",0]],["",0]],[[["lumaa",3,[["primitive",8]]],["usize",0]],["",0]],[[["imagebuffer",3]],["",0]],[[["rgb",3,[["primitive",8]]],["usize",0]],["",0]],[[["bgr",3,[["primitive",8]]],["usize",0]],["",0]],[[["luma",3,[["primitive",8]]],["usize",0]],["",0]],[[["rgba",3,[["primitive",8]]],["usize",0]],["",0]],[[["bgra",3,[["primitive",8]]],["usize",0]],["",0]],[[["lumaa",3,[["primitive",8]]],["usize",0]],["",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["",0]]],[[["subimage",3]]],[[["imagebuffer",3]]],[[["dynamicimage",4]]],[[["",0]]],[[["subimage",3]]],[[["imagebuffer",3]]],[[["dynamicimage",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dynamicimage",4]],["imagebuffer",3,[["bgr",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgr",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgra",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgra",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["frame",3]],["rgbaimage",6]],[[["dynamicimage",4]],["vec",3,[["u8",0]]]],[[["imagebuffer",3]],["flatsamples",3]],[[],["frames",3]],[[]],[[]],[[["dynamicimage",4]],["grayimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["luma",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["grayimage",6]],[[["dynamicimage",4]],["grayalphaimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["lumaa",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["grayalphaimage",6]],[[["imagebuffer",3]]],[[],["imageresult",6]],[[["dynamicimage",4]],["rgbimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["rgb",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["rgbimage",6]],[[["dynamicimage",4]],["rgbaimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["rgba",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["rgbaimage",6]],[[["imagebuffer",3,[["pixel",8],["vec",3]]]],["vec",3]],[[["",0]]],[[["rgb",3,[["primitive",8]]]]],[[["bgr",3,[["primitive",8]]]]],[[["luma",3,[["primitive",8]]]]],[[["rgba",3,[["primitive",8]]]]],[[["bgra",3,[["primitive",8]]]]],[[["lumaa",3,[["primitive",8]]]]],[[["dynamicimage",4]]],null,null,[[["frame",3]],["u32",0]],[[["",26,[["bufread",8],["seek",8]]],["imageformat",4]],["imageresult",6,[["dynamicimage",4]]]],[[],["imageresult",6,[["dynamicimage",4]]]],[[["imageformat",4]],["imageresult",6,[["dynamicimage",4]]]],[[["",0]]],[[["rgb",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["",0],["",0]]],[[["rgb",3,[["primitive",8]]],["rgb",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]],["bgr",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]],["luma",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]],["rgba",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]],["bgra",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]],["lumaa",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["",0]]],[[["rgb",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["",0]]],[[["",0]]],null,[[["delay",3],["delay",3]],["bool",0]],[[["imagebuffer",3,[["",26,[["partialeq",8],["pixel",8]]],["partialeq",8]]],["imagebuffer",3]],["bool",0]],[[["colortype",4],["colortype",4]],["bool",0]],[[["extendedcolortype",4],["extendedcolortype",4]],["bool",0]],[[["rgb",3,[["",26,[["partialeq",8],["primitive",8]]]]],["rgb",3]],["bool",0]],[[["bgr",3,[["",26,[["partialeq",8],["primitive",8]]]]],["bgr",3]],["bool",0]],[[["luma",3,[["",26,[["partialeq",8],["primitive",8]]]]],["luma",3]],["bool",0]],[[["rgba",3,[["",26,[["partialeq",8],["primitive",8]]]]],["rgba",3]],["bool",0]],[[["bgra",3,[["",26,[["partialeq",8],["primitive",8]]]]],["bgra",3]],["bool",0]],[[["lumaa",3,[["",26,[["partialeq",8],["primitive",8]]]]],["lumaa",3]],["bool",0]],[[["dynamicimage",4],["dynamicimage",4]],["bool",0]],[[["imageformat",4],["imageformat",4]],["bool",0]],[[["imageoutputformat",4],["imageoutputformat",4]],["bool",0]],[[["progress",3],["progress",3]],["bool",0]],[[["box",3,[["iterator",8]]]],["frames",3]],[[["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["rgbaimage",6]],["frame",3]],[[["u32",0],["u32",0]],["imagebuffer",3,[["pixel",8],["vec",3]]]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["u32",0],["u32",0]],["dynamicimage",4]],[[["frames",3]],["option",4,[["imageresult",6,[["frame",3]]]]]],[[["pixels",3,[["genericimageview",8]]]],["option",4]],[[["delay",3]]],[[],["imageresult",6,[["dynamicimage",4]]]],[[["",0]],["extendedcolortype",4]],[[["",0]],["extendedcolortype",4]],[[["delay",3],["delay",3]],["option",4,[["ordering",4]]]],[[["",0]],["pixels",3]],[[["",0]],["pixels",3]],[[["imagebuffer",3]],["pixels",3]],[[["imagebuffer",3]],["pixelsmut",3]],null,null,[[["",0],["u32",0],["u32",0]]],[[["subimage",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["dynamicimage",4],["u32",0],["u32",0],["rgba",3,[["u8",0]]]]],[[],["imageresult",6]],[[],["imageresult",6]],[[["fn",8]],["imageresult",6]],[[["fn",8]],["imageresult",6]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["imageresult",6]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["imageresult",6]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0],["fn",8]],["imageresult",6]],[[["progress",3]],["u64",0]],[[["dynamicimage",4],["u32",0],["u32",0],["filtertype",4]],["dynamicimage",4]],[[["dynamicimage",4],["u32",0],["u32",0],["filtertype",4]],["dynamicimage",4]],[[["dynamicimage",4],["u32",0],["u32",0],["filtertype",4]],["dynamicimage",4]],[[["dynamicimage",4]],["dynamicimage",4]],[[["dynamicimage",4]],["dynamicimage",4]],[[["dynamicimage",4]],["dynamicimage",4]],[[["imagebuffer",3]],["rows",3]],[[["imagebuffer",3]],["rowsmut",3]],[[["imagebuffer",3]],["samplelayout",3]],[[["imagebuffer",3]],["imageresult",6]],[[["dynamicimage",4]],["imageresult",6]],[[["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[["u32",0],["u32",0],["colortype",4],["imageformat",4]],["imageresult",6]],[[["imagebuffer",3],["imageformat",4]],["imageresult",6]],[[["dynamicimage",4],["imageformat",4]],["imageresult",6]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["subimage",3],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],null,[[["dynamicimage",4],["u32",0],["u32",0]],["dynamicimage",4]],[[["dynamicimage",4],["u32",0],["u32",0]],["dynamicimage",4]],null,[[["",0]],["bgr",3]],[[["rgb",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["bgr",3,[["primitive",8]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgr",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgr",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["",0]],["bgra",3]],[[["rgb",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["bgra",3,[["primitive",8]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgra",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["imagebuffer",3,[["bgra",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["dynamicimage",4]],["vec",3,[["u8",0]]]],[[["subimage",3]],["imagebuffer",3,[["vec",3]]]],[[["",0]],["luma",3]],[[["rgb",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["luma",3,[["primitive",8]]]],[[["dynamicimage",4]],["grayimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["luma",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["grayimage",6]],[[["",0]],["lumaa",3]],[[["rgb",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["lumaa",3,[["primitive",8]]]],[[["dynamicimage",4]],["grayalphaimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["lumaa",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["grayalphaimage",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["rgb",3]],[[["rgb",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["rgb",3,[["primitive",8]]]],[[["dynamicimage",4]],["rgbimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["rgb",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["rgbimage",6]],[[["",0]],["rgba",3]],[[["rgb",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["bgr",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["luma",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["rgba",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["bgra",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["lumaa",3,[["primitive",8]]]],["rgba",3,[["primitive",8]]]],[[["dynamicimage",4]],["rgbaimage",6]],[[["dynamicimage",4]],["imagebuffer",3,[["rgba",3,[["u16",0]]],["vec",3,[["u16",0]]]]]],[[["dynamicimage",4]],["rgbaimage",6]],[[["frame",3]],["u32",0]],[[["progress",3]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["u32",0],["u32",0]]],[[["",0],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["",0],["u32",0],["u32",0]]],[[["",0],["u32",0],["u32",0]]],[[["imagebuffer",3],["u32",0],["u32",0]]],[[["dynamicimage",4],["f32",0],["i32",0]],["dynamicimage",4]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["subimage",3],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["imagebuffer",3]],["u32",0]],[[["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[["dynamicimage",4],["",0],["into",8,[["imageoutputformat",4]]]],["imageresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pixels",3,[["pixel",8]]]],["pixels",3,[["pixel",8]]]],[[["rows",3,[["pixel",8]]]],["rows",3,[["pixel",8]]]],[[["enumeratepixels",3,[["pixel",8]]]],["enumeratepixels",3,[["pixel",8]]]],[[["enumeraterows",3,[["pixel",8]]]],["enumeraterows",3,[["pixel",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["pixels",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["pixelsmut",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["rows",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["rowsmut",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["enumeratepixels",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["enumeraterows",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["enumeratepixelsmut",3,[["pixel",8]]],["formatter",3]],["result",6]],[[["enumeraterowsmut",3,[["pixel",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pixels",3,[["pixel",8]]]],["usize",0]],[[["pixelsmut",3,[["pixel",8]]]],["usize",0]],[[["rows",3,[["pixel",8]]]],["usize",0]],[[["rowsmut",3,[["pixel",8]]]],["usize",0]],[[["enumeratepixels",3,[["pixel",8]]]],["usize",0]],[[["enumeraterows",3,[["pixel",8]]]],["usize",0]],[[["enumeratepixelsmut",3,[["pixel",8]]]],["usize",0]],[[["enumeraterowsmut",3,[["pixel",8]]]],["usize",0]],[[["pixels",3,[["pixel",8]]]],["option",4]],[[["pixelsmut",3,[["pixel",8]]]],["option",4]],[[["rows",3,[["pixel",8]]]],["option",4,[["pixels",3,[["pixel",8]]]]]],[[["rowsmut",3,[["pixel",8]]]],["option",4,[["pixelsmut",3,[["pixel",8]]]]]],[[["enumeratepixels",3,[["pixel",8]]]],["option",4]],[[["enumeraterows",3,[["pixel",8]]]],["option",4]],[[["enumeratepixelsmut",3,[["pixel",8]]]],["option",4]],[[["enumeraterowsmut",3,[["pixel",8]]]],["option",4]],[[["pixels",3,[["pixel",8]]]],["option",4]],[[["pixelsmut",3,[["pixel",8]]]],["option",4]],[[["rows",3,[["pixel",8]]]],["option",4,[["pixels",3,[["pixel",8]]]]]],[[["rowsmut",3,[["pixel",8]]]],["option",4,[["pixelsmut",3,[["pixel",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["bmpencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["",26,[["read",8],["seek",8]]]],["imageresult",6,[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]]]]],[[["",0]],["bmpencoder",3,[["write",8]]]],[[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["bmpdecoder",3,[["",26,[["read",8],["seek",8]]]]],["u32",0],["u32",0],["u32",0],["u32",0],["fn",8]],["imageresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bmpencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["ddsdecoder",3,[["read",8]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["ddsdecoder",3,[["read",8]]]]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["ddsdecoder",3,[["read",8]]]],["imageresult",6]],[[["read",8]],["imageresult",6,[["ddsdecoder",3,[["read",8]]]]]],[[["ddsdecoder",3,[["read",8]]]],["imageresult",6]],[[["ddsdecoder",3,[["read",8]]]],["u64",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dxtvariant",4]],["dxtvariant",4]],[[["",0],["",0]]],[[["dxtdecoder",3,[["read",8]]]],["colortype",4]],[[["dxtvariant",4]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["dxtdecoder",3,[["read",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["dxtencoder",3,[["write",8]]],["u32",0],["u32",0],["dxtvariant",4]],["imageresult",6]],[[["dxtvariant",4],["dxtvariant",4]],["bool",0]],[[["dxtvariant",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["dxtdecoder",3,[["read",8]]]],["imageresult",6]],[[["read",8],["u32",0],["u32",0],["dxtvariant",4]],["result",4,[["dxtdecoder",3,[["read",8]]],["imageerror",4]]]],[[["write",8]],["dxtencoder",3,[["write",8]]]],[[["dxtreader",3,[["read",8]]]],["result",6,[["usize",0]]]],[[["dxtdecoder",3,[["read",8]]]],["imageresult",6]],[[["dxtdecoder",3,[["",26,[["read",8],["seek",8]]]]],["u32",0],["u32",0],["u32",0],["u32",0],["fn",8]],["imageresult",6]],[[["dxtdecoder",3,[["read",8]]]],["u64",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["farbfelddecoder",3,[["read",8]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["farbfelddecoder",3,[["read",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["farbfeldencoder",3,[["write",8]]],["u32",0],["u32",0]],["imageresult",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["farbfelddecoder",3,[["read",8]]]],["imageresult",6]],[[["read",8]],["imageresult",6,[["farbfelddecoder",3,[["read",8]]]]]],[[["write",8]],["farbfeldencoder",3,[["write",8]]]],[[["farbfeldreader",3,[["read",8]]]],["result",6,[["usize",0]]]],[[["farbfelddecoder",3,[["",26,[["read",8],["seek",8]]]]],["u32",0],["u32",0],["u32",0],["u32",0],["fn",8]],["imageresult",6]],[[["farbfelddecoder",3,[["read",8]]]],["u64",0]],[[["farbfeldreader",3,[["",26,[["read",8],["seek",8]]]]],["seekfrom",4]],["result",6,[["u64",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["farbfeldencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["repeat",4]],["repeat",4]],[[["",0],["",0]]],[[["gifdecoder",3,[["read",8]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["gifdecoder",3,[["read",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["gifencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[["gifencoder",3,[["write",8]]],["frame",3]],["imageresult",6]],[[["gifencoder",3,[["write",8]]]],["imageresult",6]],[[["repeat",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["gifdecoder",3,[["read",8]]]],["frames",3]],[[["gifdecoder",3,[["read",8]]]],["imageresult",6]],[[["read",8]],["imageresult",6,[["gifdecoder",3,[["read",8]]]]]],[[["write",8]],["gifencoder",3,[["write",8]]]],[[["write",8],["i32",0]],["gifencoder",3,[["write",8]]]],[[["gifreader",3]],["result",6,[["usize",0]]]],[[["gifdecoder",3,[["read",8]]]],["imageresult",6]],[[["gifreader",3],["vec",3]],["result",6,[["usize",0]]]],[[["gifencoder",3,[["write",8]]],["repeat",4]],["imageresult",6]],[[["",0]]],[[["gifencoder",3,[["write",8]]]],["imageresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["rgbe8pixel",3]],["rgbe8pixel",3]],[[["hdrmetadata",3]],["hdrmetadata",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["hdradapter",3,[["bufread",8]]]],["colortype",4]],null,[[],["rgbe8pixel",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["hdradapter",3,[["bufread",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["hdrencoder",3,[["write",8]]],["usize",0],["usize",0]],["imageresult",6]],[[["rgbe8pixel",3],["rgbe8pixel",3]],["bool",0]],null,[[["hdradapter",3,[["",26,[["debug",8],["bufread",8]]]]],["formatter",3]],["result",6]],[[["hdrdecoder",3,[["debug",8]]],["formatter",3]],["result",6]],[[["rgbe8pixel",3],["formatter",3]],["result",6]],[[["hdrmetadata",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hdrdecoder",3,[["bufread",8]]]]],[[["hdradapter",3,[["bufread",8]]]],["imageresult",6]],[[["hdrdecoder",3,[["bufread",8]]]],["hdrmetadata",3]],[[["rgbe8pixel",3],["rgbe8pixel",3]],["bool",0]],[[["write",8]],["hdrencoder",3,[["write",8]]]],[[["bufread",8]],["imageresult",6,[["hdradapter",3,[["bufread",8]]]]]],[[["bufread",8]],["imageresult",6,[["hdrdecoder",3,[["bufread",8]]]]]],[[["bufread",8]],["imageresult",6,[["hdradapter",3,[["bufread",8]]]]]],[[["hdrimagedecoderiterator",3,[["bufread",8]]]],["option",4]],null,null,[[["hdrreader",3]],["result",6,[["usize",0]]]],[[["hdradapter",3,[["bufread",8]]]],["imageresult",6]],[[["hdrdecoder",3,[["bufread",8]]]],["imageresult",6,[["vec",3,[["rgb",3,[["f32",0]]]]]]]],[[["hdrdecoder",3,[["bufread",8]]]],["imageresult",6,[["vec",3,[["rgb",3,[["u8",0]]]]]]]],[[["hdrdecoder",3,[["bufread",8]]]],["imageresult",6,[["vec",3,[["rgbe8pixel",3]]]]]],[[["hdrdecoder",3,[["bufread",8]]],["",26,[["send",8],["sync",8],["fn",8]]]],["imageresult",6]],[[["asref",8,[["path",3]]]],["result",6,[["vec",3,[["rgb",3,[["f32",0]]]]]]]],[[["hdradapter",3,[["",26,[["bufread",8],["seek",8]]]]],["u32",0],["u32",0],["u32",0],["u32",0],["fn",8]],["imageresult",6]],[[["hdrreader",3],["vec",3]],["result",6,[["usize",0]]]],[[["u8",0],["u8",0],["u8",0],["u8",0]],["rgbe8pixel",3]],[[["hdrimagedecoderiterator",3,[["bufread",8]]]]],[[["rgbe8pixel",3]],["rgb",3,[["f32",0]]]],[[["rgbe8pixel",3]],["rgb",3,[["",26,[["primitive",8],["zero",8]]]]]],[[["rgbe8pixel",3],["f32",0],["f32",0]],["rgb",3,[["",26,[["primitive",8],["zero",8]]]]]],[[["",0]]],[[["",0]]],[[["rgb",3,[["f32",0]]]],["rgbe8pixel",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["bufread",8],["bool",0]],["imageresult",6,[["hdrdecoder",3,[["bufread",8]]]]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["icodecoder",3,[["",26,[["read",8],["seek",8]]]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["icodecoder",3,[["",26,[["read",8],["seek",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["icoencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["icodecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["",26,[["read",8],["seek",8]]]],["imageresult",6,[["icodecoder",3,[["",26,[["read",8],["seek",8]]]]]]]],[[["write",8]],["icoencoder",3,[["write",8]]]],[[["icodecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["icoencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pixeldensityunit",4]],["pixeldensityunit",4]],[[["pixeldensity",3]],["pixeldensity",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["jpegdecoder",3,[["read",8]]]],["colortype",4]],[[],["pixeldensity",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["jpegdecoder",3,[["read",8]]]]],[[["u16",0]],["pixeldensity",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["jpegencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[["jpegencoder",3,[["write",8]]],["",0]],["imageresult",6]],[[["pixeldensityunit",4],["pixeldensityunit",4]],["bool",0]],[[["pixeldensity",3],["pixeldensity",3]],["bool",0]],[[["pixeldensityunit",4],["formatter",3]],["result",6]],[[["pixeldensity",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["jpegdecoder",3,[["read",8]]]],["imageresult",6]],[[["pixeldensity",3],["pixeldensity",3]],["bool",0]],[[["read",8]],["imageresult",6,[["jpegdecoder",3,[["read",8]]]]]],[[["",0]],["jpegencoder",3,[["write",8]]]],[[["",0],["u8",0]],["jpegencoder",3,[["write",8]]]],[[["jpegdecoder",3,[["read",8]]]],["imageresult",6]],[[["jpegdecoder",3,[["read",8]]],["u16",0],["u16",0]],["imageresult",6]],[[["jpegencoder",3,[["write",8]]],["pixeldensity",3]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["jpegencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pngdecoder",3,[["read",8]]]],["apngdecoder",3,[["read",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compressiontype",4]],["compressiontype",4]],[[["filtertype",4]],["filtertype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["pngdecoder",3,[["read",8]]]],["colortype",4]],[[],["compressiontype",4]],[[],["filtertype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["pngdecoder",3,[["read",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["pngencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[["compressiontype",4],["compressiontype",4]],["bool",0]],[[["filtertype",4],["filtertype",4]],["bool",0]],[[["compressiontype",4],["formatter",3]],["result",6]],[[["filtertype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["apngdecoder",3,[["read",8]]]],["frames",3]],[[["pngdecoder",3,[["read",8]]]],["imageresult",6]],[[["pngdecoder",3,[["read",8]]]],["bool",0]],[[["compressiontype",4],["compressiontype",4]],["bool",0]],[[["filtertype",4],["filtertype",4]],["bool",0]],[[["read",8]],["imageresult",6,[["pngdecoder",3,[["read",8]]]]]],[[["write",8]],["pngencoder",3,[["write",8]]]],[[["write",8],["compressiontype",4],["filtertype",4]],["pngencoder",3,[["write",8]]]],[[["pngreader",3,[["read",8]]]],["result",6,[["usize",0]]]],[[["pngdecoder",3,[["read",8]]]],["imageresult",6]],[[["pngreader",3,[["read",8]]],["vec",3]],["result",6,[["usize",0]]]],[[["pngdecoder",3,[["read",8]]]],["u64",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["pngencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pnmheader",3]],["option",4,[["arbitraryheader",3]]]],[[["pnmheader",3]],["option",4,[["bitmapheader",3]]]],[[["pnmheader",3]],["option",4,[["graymapheader",3]]]],[[["pnmheader",3]],["option",4,[["pixmapheader",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["sampleencoding",4]],["sampleencoding",4]],[[["pnmsubtype",4]],["pnmsubtype",4]],[[["bitmapheader",3]],["bitmapheader",3]],[[["graymapheader",3]],["graymapheader",3]],[[["pixmapheader",3]],["pixmapheader",3]],[[["arbitraryheader",3]],["arbitraryheader",3]],[[["arbitrarytupltype",4]],["arbitrarytupltype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["pnmdecoder",3,[["read",8]]]],["colortype",4]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["pnmdecoder",3,[["read",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["pnmencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,[[["sampleencoding",4],["sampleencoding",4]],["bool",0]],[[["pnmsubtype",4],["pnmsubtype",4]],["bool",0]],[[["sampleencoding",4],["formatter",3]],["result",6]],[[["pnmsubtype",4],["formatter",3]],["result",6]],[[["bitmapheader",3],["formatter",3]],["result",6]],[[["graymapheader",3],["formatter",3]],["result",6]],[[["pixmapheader",3],["formatter",3]],["result",6]],[[["arbitraryheader",3],["formatter",3]],["result",6]],[[["arbitrarytupltype",4],["formatter",3]],["result",6]],[[]],[[]],[[["bitmapheader",3]],["pnmheader",3]],[[["arbitraryheader",3]],["pnmheader",3]],[[["pixmapheader",3]],["pnmheader",3]],[[["graymapheader",3]],["pnmheader",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pnmheader",3]],["u32",0]],null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pnmdecoder",3,[["read",8]]]]],[[["pnmdecoder",3,[["read",8]]]],["imageresult",6]],[[["pnmsubtype",4]]],[[["pnmheader",3]],["u32",0]],null,null,null,[[["pnmsubtype",4],["pnmsubtype",4]],["bool",0]],[[["read",8]],["imageresult",6,[["pnmdecoder",3,[["read",8]]]]]],[[["write",8]],["pnmencoder",3,[["write",8]]]],[[["pnmdecoder",3,[["read",8]]]],["extendedcolortype",4]],[[["pnmdecoder",3,[["read",8]]]],["imageresult",6]],[[["pnmsubtype",4]],["sampleencoding",4]],[[["pnmdecoder",3,[["read",8]]]],["pnmsubtype",4]],[[["pnmheader",3]],["pnmsubtype",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["pnmheader",3]],["u32",0]],null,null,null,null,[[["pnmencoder",3,[["write",8]]]],["pnmencoder",3,[["write",8]]]],[[["pnmencoder",3,[["write",8]]],["pnmheader",3]],["pnmencoder",3,[["write",8]]]],[[["pnmencoder",3,[["write",8]]],["pnmsubtype",4]],["pnmencoder",3,[["write",8]]]],[[["pnmheader",3],["write",8]],["result",6]],[[["pnmencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["tgaencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["",26,[["read",8],["seek",8]]]],["imageresult",6,[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]]]],[[["write",8]],["tgaencoder",3,[["write",8]]]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]],["extendedcolortype",4]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["tgadecoder",3,[["",26,[["read",8],["seek",8]]]]]],["u64",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["tgaencoder",3,[["write",8]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tiffdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["tiffdecoder",3,[["",26,[["read",8],["seek",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["tiffdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[],["result",4,[["tiffdecoder",3],["imageerror",4]]]],[[["",26,[["write",8],["seek",8]]]],["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]]],[[["tiffreader",3]],["result",6,[["usize",0]]]],[[["tiffdecoder",3,[["",26,[["read",8],["seek",8]]]]]],["imageresult",6]],[[["tiffreader",3],["vec",3]],["result",6,[["usize",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]],["u32",0],["u32",0],["colortype",4]],["imageresult",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["webpdecoder",3,[["read",8]]]],["colortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["webpdecoder",3,[["read",8]]]]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["webpdecoder",3,[["read",8]]]],["imageresult",6]],[[["read",8]],["imageresult",6,[["webpdecoder",3,[["read",8]]]]]],[[["webpdecoder",3,[["read",8]]]],["imageresult",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["frame",3]],["frame",3]],[[["",0],["",0]]],[[["vp8decoder",3,[["read",8]]]],["imageresult",6,[["frame",3]]]],[[],["frame",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["frame",3],["formatter",3]],["result",6]],null,[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,[[["read",8]],["vp8decoder",3,[["read",8]]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["unsupportederrorkind",4]],["unsupportederrorkind",4]],[[["parametererrorkind",4]],["parametererrorkind",4]],[[["limiterrorkind",4]],["limiterrorkind",4]],[[["imageformathint",4]],["imageformathint",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["unsupportederrorkind",4],["unsupportederrorkind",4]],["bool",0]],[[["parametererrorkind",4],["parametererrorkind",4]],["bool",0]],[[["limiterrorkind",4],["limiterrorkind",4]],["bool",0]],[[["imageformathint",4],["imageformathint",4]],["bool",0]],[[["imageerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["imageerror",4],["formatter",3]],["result",6]],[[["unsupportederror",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportederror",3],["formatter",3]],["result",6]],[[["unsupportederrorkind",4],["formatter",3]],["result",6]],[[["encodingerror",3],["formatter",3]],["result",6]],[[["encodingerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["parametererror",3],["formatter",3]],["result",6]],[[["parametererror",3],["formatter",3]],["result",4,[["error",3]]]],[[["parametererrorkind",4],["formatter",3]],["result",6]],[[["decodingerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["decodingerror",3],["formatter",3]],["result",6]],[[["limiterror",3],["formatter",3]],["result",4,[["error",3]]]],[[["limiterror",3],["formatter",3]],["result",6]],[[["limiterrorkind",4],["formatter",3]],["result",6]],[[["imageformathint",4],["formatter",3]],["result",6]],[[["imageformathint",4],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportederror",3]],["imageformathint",4]],[[["encodingerror",3]],["imageformathint",4]],[[["decodingerror",3]],["imageformathint",4]],[[["error",4]],["imageerror",4]],[[["error",3]],["imageerror",4]],[[]],[[]],[[["imageformathint",4]],["unsupportederror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["imageformathint",4]],[[]],[[["imageformat",4]],["imageformathint",4]],[[["imageformathint",4],["unsupportederrorkind",4]],["unsupportederror",3]],[[["imageformathint",4]],["encodingerror",3]],[[["imageformathint",4]],["decodingerror",3]],[[["parametererrorkind",4]],["parametererror",3]],[[["limiterrorkind",4]],["limiterror",3]],[[["unsupportederrorkind",4],["",0]]],[[["parametererrorkind",4],["",0]]],[[["limiterrorkind",4],["",0]]],[[["imageformathint",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["unsupportederror",3]],["unsupportederrorkind",4]],[[["parametererror",3]],["parametererrorkind",4]],[[["limiterror",3]],["limiterrorkind",4]],[[["unsupportederrorkind",4],["unsupportederrorkind",4]],["bool",0]],[[["parametererrorkind",4],["parametererrorkind",4]],["bool",0]],[[["limiterrorkind",4],["limiterrorkind",4]],["bool",0]],[[["imageformathint",4],["imageformathint",4]],["bool",0]],[[["imageformathint",4],["into",8,[["box",3,[["error",8]]]]]],["encodingerror",3]],[[["imageformathint",4],["into",8,[["box",3,[["error",8]]]]]],["decodingerror",3]],[[["imageerror",4]],["option",4,[["error",8]]]],[[["encodingerror",3]],["option",4,[["error",8]]]],[[["parametererror",3]],["option",4,[["error",8]]]],[[["decodingerror",3]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["flatsamples",3]],["flatsamples",3]],[[["flatsamples",3]]],[[["flatsamples",3]],["flatsamples",3]],[[["flatsamples",3]]],[[["flatsamples",3]],["result",4,[["view",3],["error",4]]]],[[["flatsamples",3]],["result",4,[["viewmut",3],["error",4]]]],[[["flatsamples",3]],["result",4,[["view",3],["error",4]]]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["flatsamples",3]]],[[["samplelayout",3]]],[[["view",3,[["pixel",8]]]]],[[["viewmut",3,[["pixel",8]]]]],null,null,[[["flatsamples",3,[["clone",8]]]],["flatsamples",3,[["clone",8]]]],[[["samplelayout",3]],["samplelayout",3]],[[["view",3,[["clone",8],["",26,[["clone",8],["pixel",8]]]]]],["view",3,[["clone",8],["",26,[["clone",8],["pixel",8]]]]]],[[["viewmut",3,[["clone",8],["",26,[["clone",8],["pixel",8]]]]]],["viewmut",3,[["clone",8],["",26,[["clone",8],["pixel",8]]]]]],[[["error",4]],["error",4]],[[["normalform",4]],["normalform",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["u8",0],["u32",0],["u32",0]],["samplelayout",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["view",3,[["pixel",8]]]]],[[["viewmut",3,[["pixel",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["samplelayout",3],["samplelayout",3]],["bool",0]],[[["error",4],["error",4]],["bool",0]],[[["normalform",4],["normalform",4]],["bool",0]],[[["flatsamples",3]]],[[["samplelayout",3]]],[[["flatsamples",3],["usize",0]],["bool",0]],[[["samplelayout",3],["usize",0]],["bool",0]],[[["view",3,[["pixel",8]]]],["flatsamples",3]],[[["viewmut",3,[["pixel",8]]]],["flatsamples",3]],[[["flatsamples",3,[["debug",8]]],["formatter",3]],["result",6]],[[["samplelayout",3],["formatter",3]],["result",6]],[[["view",3,[["debug",8],["",26,[["debug",8],["pixel",8]]]]],["formatter",3]],["result",6]],[[["viewmut",3,[["debug",8],["",26,[["debug",8],["pixel",8]]]]],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["normalform",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["flatsamples",3],["u8",0],["u32",0],["u32",0]],["option",4]],[[["view",3,[["pixel",8]]],["u8",0],["u32",0],["u32",0]],["option",4]],[[["viewmut",3,[["pixel",8]]],["u8",0],["u32",0],["u32",0]],["option",4]],[[["view",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["flatsamples",3],["u8",0],["u32",0],["u32",0]],["option",4]],[[["view",3,[["pixel",8]]],["u8",0],["u32",0],["u32",0]],["option",4]],[[["viewmut",3,[["pixel",8]]],["u8",0],["u32",0],["u32",0]],["option",4]],[[["flatsamples",3]],["bool",0]],[[["samplelayout",3]],["bool",0]],[[["samplelayout",3],["",0]]],[[["error",4],["",0]]],[[["normalform",4],["",0]]],null,null,[[["flatsamples",3]],["option",4]],[[["view",3,[["pixel",8]]]]],[[["viewmut",3,[["pixel",8]]]]],[[["flatsamples",3]],["option",4]],[[["view",3,[["pixel",8]]]]],[[["viewmut",3,[["pixel",8]]]]],[[["flatsamples",3],["u8",0],["u32",0],["u32",0]],["bool",0]],[[["samplelayout",3],["u8",0],["u32",0],["u32",0]],["bool",0]],[[["view",3,[["pixel",8]]],["u32",0],["u32",0]],["bool",0]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]],["bool",0]],[[["flatsamples",3],["u8",0],["u32",0],["u32",0]],["usize",0]],[[["samplelayout",3],["u8",0],["u32",0],["u32",0]],["usize",0]],[[["flatsamples",3]]],[[["flatsamples",3],["u8",0],["u32",0],["u32",0]],["option",4,[["usize",0]]]],[[["samplelayout",3],["u8",0],["u32",0],["u32",0]],["option",4,[["usize",0]]]],[[["flatsamples",3],["usize",0],["usize",0],["usize",0]],["option",4,[["usize",0]]]],[[["samplelayout",3],["usize",0],["usize",0],["usize",0]],["option",4,[["usize",0]]]],[[["flatsamples",3]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["view",3,[["pixel",8]]]],["view",3,[["pixel",8]]]],[[["viewmut",3,[["pixel",8]]]],["viewmut",3,[["pixel",8]]]],[[["viewmut",3,[["pixel",8]]]],["viewmut",3,[["pixel",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["view",3,[["pixel",8]]]],["flatsamples",3]],[[["viewmut",3,[["pixel",8]]]],["flatsamples",3]],[[["flatsamples",3],["normalform",4]],["bool",0]],[[["samplelayout",3],["normalform",4]],["bool",0]],null,[[["flatsamples",3]],["option",4,[["usize",0]]]],[[["samplelayout",3]],["option",4,[["usize",0]]]],[[["view",3,[["pixel",8]]]],["usize",0]],[[["viewmut",3,[["pixel",8]]]],["usize",0]],[[["samplelayout",3],["samplelayout",3]],["bool",0]],[[["error",4],["error",4]],["bool",0]],[[["normalform",4],["normalform",4]],["option",4,[["ordering",4]]]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["u8",0],["u32",0],["u32",0]],["samplelayout",3]],[[["view",3,[["pixel",8]]]],["",0]],[[["viewmut",3,[["pixel",8]]]],["",0]],null,[[["flatsamples",3],["u8",0],["u32",0],["u32",0]]],[[["samplelayout",3],["u8",0],["u32",0],["u32",0]]],[[["view",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["viewmut",3,[["pixel",8]]],["u32",0],["u32",0]]],[[["flatsamples",3]]],[[["samplelayout",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["flatsamples",3]],["flatsamples",3,[["vec",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["flatsamples",3]],["result",4,[["imagebuffer",3]]]],[[["view",3,[["pixel",8]]]],["result",4,[["viewmut",3,[["pixel",8]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0],["u32",0],["u32",0]],["flatsamples",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8,[["path",3]]]],["result",6,[["vec",3,[["rgb",3,[["f32",0]]]]]]]],[[["u8",0],["u8",0],["u8",0],["u8",0]],["rgbe8pixel",3]],[[["rgb",3,[["f32",0]]]],["rgbe8pixel",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["f32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["filtertype",4]],["filtertype",4]],[[["",0],["",0]]],null,null,[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["subimage",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,[[["usize",0]]],[[["filtertype",4],["filtertype",4]],["bool",0]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["imagebuffer",3]],["imageresult",6]],[[["",0]]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["imagebuffer",3]],["imageresult",6]],[[["",0]]],[[["filtertype",4],["formatter",3]],["result",6]],[[]],null,[[["",0],["",0],["",0]]],null,null,[[],["usize",0]],[[]],null,[[["",0],["",0],["u32",0],["u32",0]]],[[["u32",0],["u32",0]]],[[["",0],["",0],["u32",0],["u32",0]]],[[["",0],["u32",0],["u32",0],["filtertype",4]],["imagebuffer",3,[["vec",3]]]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["imagebuffer",3]],["imageresult",6]],[[["",0]]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["imagebuffer",3]],["imageresult",6]],[[["",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["imagebuffer",3]],["imageresult",6]],[[["",0],["u32",0],["u32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["f32",0],["i32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["",0],["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["i32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["i32",0]]],[[["bilevel",3]],["bilevel",3]],[[["",0],["",0]]],[[["",0],["f32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["f32",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["imagebuffer",3],["",0]]],[[["usize",0]]],[[]],[[["",0]],["imagebuffer",3,[["luma",3],["vec",3]]]],[[["",0]],["bool",0]],[[["bilevel",3]],["bool",0]],[[["",0],["i32",0]],["imagebuffer",3,[["vec",3]]]],[[["",0],["i32",0]]],[[["imagebuffer",3],["",0]],["imagebuffer",3,[["luma",3,[["u8",0]]],["vec",3,[["u8",0]]]]]],[[["",0]],["usize",0]],[[["bilevel",3],["luma",3]],["usize",0]],[[],["usize",0]],[[]],[[["",0]]],[[["",0],["usize",0]],["option",4]],[[["bilevel",3],["usize",0]],["option",4]],[[["",0]]],[[["bilevel",3],["luma",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["reader",3,[["read",8]]]]],[[["reader",3,[["",26,[["bufread",8],["seek",8]]]]]],["imageresult",6,[["dynamicimage",4]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["reader",3,[["read",8]]]],["option",4,[["imageformat",4]]]],[[]],[[],["usize",0]],[[]],[[["reader",3,[["",26,[["bufread",8],["seek",8]]]]]],["imageresult",6]],[[["reader",3,[["read",8]]]],["read",8]],[[["read",8]],["reader",3,[["read",8]]]],[[],["result",6,[["reader",3,[["bufreader",3,[["file",3]]]]]]]],[[["reader",3,[["read",8]]],["imageformat",4]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["read",8],["imageformat",4]],["reader",3,[["read",8]]]],[[["reader",3,[["",26,[["bufread",8],["seek",8]]]]]],["result",6,[["reader",3,[["",26,[["bufread",8],["seek",8]]]]]]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["rect",3]],["rect",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["rect",3],["rect",3]],["bool",0]],[[["rect",3],["formatter",3]],["result",6]],[[]],[[["rect",3],["",0]]],null,[[],["usize",0]],[[]],[[["rect",3],["rect",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["neuquant",3]],["neuquant",3]],[[["neuquant",3]],["bool",0]],[[["neuquant",3]],["usize",0]],[[["neuquant",3],["rgba",3]],["usize",0]],[[],["usize",0]],[[["neuquant",3]]],[[]],[[["neuquant",3],["usize",0]],["option",4]],[[["neuquant",3],["usize",0]],["option",4]],[[["neuquant",3],["rgba",3]]],[[["neuquant",3]]],[[["i32",0],["usize",0]],["neuquant",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Rgb"],[3,"Bgr"],[3,"Luma"],[3,"Rgba"],[3,"Bgra"],[3,"LumaA"],[4,"ExtendedColorType"],[4,"ImageFormat"],[4,"ColorType"],[4,"ImageOutputFormat"],[8,"Pixel"],[4,"DynamicImage"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"EncodableLayout"],[3,"ImageBuffer"],[3,"SubImage"],[3,"Frames"],[3,"Frame"],[3,"Delay"],[3,"Progress"],[3,"Pixels"],[6,"GrayImage"],[8,"AnimationDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[13,"ImageLuma8"],[13,"ImageLumaA8"],[13,"ImageRgb8"],[13,"ImageRgba8"],[13,"ImageBgr8"],[13,"ImageBgra8"],[13,"ImageLuma16"],[13,"ImageLumaA16"],[13,"ImageRgb16"],[13,"ImageRgba16"],[13,"Unknown"],[13,"Jpeg"],[13,"Pnm"],[13,"Unsupported"],[3,"Pixels"],[3,"PixelsMut"],[3,"Rows"],[3,"RowsMut"],[3,"EnumeratePixels"],[3,"EnumerateRows"],[3,"EnumeratePixelsMut"],[3,"EnumerateRowsMut"],[8,"ConvertBuffer"],[3,"BmpDecoder"],[3,"BmpEncoder"],[3,"DdsDecoder"],[4,"DXTVariant"],[3,"DxtDecoder"],[3,"DxtReader"],[3,"DxtEncoder"],[3,"FarbfeldReader"],[3,"FarbfeldDecoder"],[3,"FarbfeldEncoder"],[4,"Repeat"],[3,"GifDecoder"],[3,"GifReader"],[3,"GifEncoder"],[13,"Finite"],[3,"HdrReader"],[3,"HdrImageDecoderIterator"],[3,"HdrEncoder"],[3,"HdrAdapter"],[3,"HdrDecoder"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"IcoDecoder"],[3,"IcoEncoder"],[4,"PixelDensityUnit"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"PixelDensity"],[4,"FilterType"],[4,"CompressionType"],[3,"PngDecoder"],[3,"PngReader"],[3,"ApngDecoder"],[3,"PngEncoder"],[4,"PNMSubtype"],[4,"SampleEncoding"],[4,"ArbitraryTuplType"],[3,"PnmHeader"],[3,"PnmDecoder"],[3,"PnmEncoder"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[3,"ArbitraryHeader"],[13,"Custom"],[13,"Bitmap"],[13,"Graymap"],[13,"Pixmap"],[3,"TgaDecoder"],[3,"TgaEncoder"],[3,"TiffDecoder"],[3,"TiffReader"],[3,"TiffEncoder"],[3,"WebPDecoder"],[3,"Vp8Decoder"],[3,"Frame"],[4,"UnsupportedErrorKind"],[4,"ImageError"],[4,"LimitErrorKind"],[4,"ParameterErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[13,"Decoding"],[13,"Encoding"],[13,"Parameter"],[13,"Limits"],[13,"Unsupported"],[13,"IoError"],[13,"Exact"],[13,"Name"],[13,"PathExtension"],[13,"Generic"],[13,"Color"],[13,"Format"],[13,"GenericFeature"],[4,"NormalForm"],[4,"Error"],[3,"FlatSamples"],[3,"ViewMut"],[3,"SampleLayout"],[3,"View"],[13,"NormalFormRequired"],[13,"WrongColor"],[4,"FilterType"],[8,"ColorMap"],[3,"BiLevel"],[3,"Reader"],[3,"Rect"],[3,"NeuQuant"]]},\
"input":{"doc":"A flexible structure for user interactions to be used in …","t":[13,3,8,4,13,3,8,4,13,13,13,13,3,8,13,13,2,2,2,2,13,8,13,13,13,13,4,4,13,13,8,2,13,4,13,13,3,8,4,13,2,13,13,13,13,4,13,4,13,2,13,2,13,2,13,2,13,13,13,8,13,8,13,3,8,13,3,8,13,13,13,13,13,8,6,4,13,3,8,13,13,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,10,11,11,10,11,11,11,11,11,10,11,10,11,11,11,11,10,11,10,11,10,11,10,11,10,11,0,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,12,10,11,11,10,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,8,8,8,13,13,13,13,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,10,11,10,11,10,11,11,11,11,11,11,11],"n":["AfterRender","AfterRenderArgs","AfterRenderEvent","Button","Button","ButtonArgs","ButtonEvent","ButtonState","Cancel","Cancel","Centered","Close","CloseArgs","CloseEvent","Controller","ControllerAxis","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","Cursor","CursorEvent","Custom","Down","Drop","End","Event","FileDrag","FileDrag","Focus","FocusEvent","GenericEvent","Hat","HatState","Hover","Idle","IdleArgs","IdleEvent","Input","Input","Key","Keyboard","Left","LeftDown","LeftUp","Loop","Loop","Motion","Mouse","MouseButton","MouseCursor","MouseCursorEvent","MouseRelative","MouseRelativeEvent","MouseScroll","MouseScrollEvent","Move","Move","Press","PressEvent","Release","ReleaseEvent","Render","RenderArgs","RenderEvent","Resize","ResizeArgs","ResizeEvent","Right","RightDown","RightUp","Start","Text","TextEvent","TimeStamp","Touch","Touch","TouchArgs","TouchEvent","Up","Update","UpdateArgs","UpdateEvent","after_render","after_render","after_render_args","after_render_args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","button","button_args","button_args","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close_args","close_args","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","controller","controller_axis","cursor","cursor","cursor_args","cursor_args","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","draw_size","draw_size","dt","dt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_id","event_id","ext_dt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_args","focus_args","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after_render_args","from_after_render_args","from_button","from_button","from_button_args","from_button_args","from_close_args","from_close_args","from_controller_axis_args","from_cursor","from_cursor","from_dt","from_dt","from_dt","from_dt","from_focused","from_focused","from_idle_args","from_idle_args","from_pos","from_pos","from_pos","from_render_args","from_render_args","from_resize_args","from_resize_args","from_text","from_text","from_touch_args","from_touch_args","from_update_args","from_update_args","generic_event","hash","hash","hash","hash","hash","hash","hash","hash","id","idle","idle","idle_args","idle_args","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_3d","keyboard","mouse","mouse_cursor","mouse_relative","mouse_scroll","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new_3d","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","position_3d","position_3d","press","press_args","press_args","pressure","pressure_3d","pressure_3d","release","release_args","release_args","render","render","render_args","render_args","resize","resize","resize_args","resize_args","scancode","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","text","text","text_args","text_args","time_stamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","touch","touch","touch","touch_args","touch_args","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_args","update_args","viewport","viewport","window_size","window_size","with_args","0","0","0","0","0","0","0","1","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","axis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","controller_axis","controller_axis_args","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_controller_axis_args","hash","hash","id","id","id","into","into","into","ne","ne","ne","new","new","new","partial_cmp","partial_cmp","partial_cmp","position","serialize","serialize","serialize","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","which","0","AFTER_RENDER","BUTTON","CLOSE","CONTROLLER_AXIS","CURSOR","EventId","FILE_DRAG","FOCUS","IDLE","MOUSE_CURSOR","MOUSE_RELATIVE","MOUSE_SCROLL","RENDER","RESIZE","TEXT","TOUCH","UPDATE","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","hash","into","ne","partial_cmp","to_owned","try_from","try_into","type_id","GenericEvent","event_id","time_stamp","with_args","A","ALT","ALT_GUI","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CTRL","CTRL_ALT","CTRL_GUI","CTRL_SHIFT","CTRL_SHIFT_ALT","CTRL_SHIFT_ALT_GUI","CTRL_SHIFT_GUI","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","GUI","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","LeftParen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","ModifierKey","Mute","N","NO_MODIFIER","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","RightParen","S","SHIFT","SHIFT_ALT","SHIFT_ALT_GUI","SHIFT_GUI","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code","complement","contains","default","deserialize","deserialize","difference","empty","eq","eq","event","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","not","partial_cmp","partial_cmp","remove","serialize","serialize","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","Button6","Button7","Button8","Left","Middle","MouseButton","MouseCursorEvent","MouseRelativeEvent","MouseScrollEvent","Right","Unknown","X1","X2","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","fmt","from","from","from_pos","from_pos","from_pos","hash","into","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll_args","partial_cmp","serialize","to_owned","try_from","try_into","type_id"],"q":["inputinput::Button","","","","input::Event","","","","","","input::FileDrag","","input::Input","","","","","","","","input::Loop","","","","input::Motion","","","","","input::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input::event_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input::generic_event","","","","input::keyboardinput::mouse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["After rendering and swapping buffers.","After render arguments.","After rendering and buffers are swapped.","Models different kinds of buttons.","Changed button state.","Button arguments.","Changed button state.","Stores button state.","The cancel of touch, for example the window loses focus.","A file was hovered, but has exited the window.","Centered (no direction).","Window closed.","Close arguments.","Window is closing.","A controller button.","Controller axis move event.","","","","","Window gained or lost cursor.","When window gets or loses cursor.","Custom event.","Down direction.","A file has been dropped into the window.","The end of touch, for example taking a finger away from a …","Models all events.","Models dragging and dropping files.","A file is being dragged or dropped over the window.","Window gained or lost focus.","When window gets or loses focus.","","A controller hat (d-Pad)","Stores controller hat state.","A file is being hovered over the window.","Do background tasks that can be done incrementally.","Idle arguments, such as expected idle time in seconds.","When background tasks should be performed.","Models input events.","Input events.","","A keyboard button.","Left direction.","Left-down direction.","Left-up direction.","Models loop events.","Events that commonly used by event loops.","Models different kinds of motion.","A mouse button.","","Position in window coordinates.","","Position in relative coordinates.","","Position in scroll ticks.","","The move of touch, for example a finger moving while …","Moved mouse cursor.","Button was pressed.","The press of a button.","Button was released.","The release of a button.","Render graphics.","Render arguments.","When the next frame should be rendered.","Window got resized.","Resize arguments.","When the window is resized.","Right direction.","Right-down direction.","Right-up direction.","The start of touch, for example a finger pressed down on a …","Text (usually from keyboard).","When receiving text from user, such as typing a character.","The type of time stamp.","Stores the touch state.","Touch event.","Touch arguments","When a touch is started, moved, ended or cancelled.","Up direction.","Update the state of the application.","Update arguments, such as delta time in seconds.","When the application state should be updated.","Calls closure if this is an after render event.","","Returns after render arguments.","Returns after render arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a button event.","","The button that changed state.","Returns button arguments.","Returns button arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a close event.","","Returns close arguments.","Returns close arguments.","","","","","","","","","Back-end agnostic controller events.","","Calls closure if this is a cursor event.","","Returns cursor arguments.","Returns cursor arguments.","","","","","","","","","","","","","","","","","A unique identifier for touch device.","The width and height of rendered area in pixels.","The width of rendered area in pixels.","Expected idle time in seconds.","Delta time in seconds.","","","","","","","","","","","","","","","","","","Event identifiers.","","Extrapolated time in seconds, used to do smooth animation.","","","","","","","","","","","","","","","","","","Calls closure if this is a focus event.","","Returns focus arguments.","Returns focus arguments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Creates an after render event.","","Creates a press event.","Creates a release event.","Creates a button event.","","Creates a close event from arguments.","","","Creates a cursor event.","","Creates an update event with delta time.","Creates an update event with delta time.","Creates an update event with delta time.","Creates an update event with delta time.","Creates a focus event.","","Creates an idle event.","","","","","Creates a render event.","","Creates a resize event.","","Creates a text event.","","Creates a touch event.","","Creates an update event.","","Trait for generic events","","","","","","","","","A unique identifier for touch event.","Calls closure if this is an idle event.","","Returns idle arguments.","Returns idle arguments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the touch is in 3D.","Back-end agnostic keyboard keys.","Back-end agnostic mouse buttons.","","","","","","","","","","","","","","","Creates arguments for 2D touch.","Creates arguments for 3D touch.","","","","","","","","","","","","","","","","","","The position of the touch in 2D.","The position of the touch in 3D.","The touch position, normalized 0..1.","Calls closure if this is a press event.","Returns press arguments.","Returns press arguments.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","The touch pressure vector, normalized 0..1.","Calls closure if this is a release event.","Returns release arguments.","Returns release arguments.","Calls closure if this is a render event.","","Returns render arguments.","Returns render arguments.","Calls closure if this is a resize event.","","Returns resize arguments.","Returns resize arguments.","An optional scancode that tells the physical layout of a …","","","","","","","","","","","","","","","","","New state of the button.","Calls closure if this is a text event.","","Returns text arguments.","Returns text arguments.","","","","","","","","","","","","","","","","","","","Calls closure if this is a touch event.","","The touch state.","Returns touch arguments.","Returns touch arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is an update event.","","Returns update arguments.","Returns update arguments.","Returns viewport information filling entire render area.","Returns viewport information filling entire render area.","The width and height of rendered area in points.","The width and height of rendered area in points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","The axis that moved.","","","","","","","Which button was pressed.","","","","","","","","","Calls closure if this is a controller axis event.","Returns controller axis arguments.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a controller axis event.","","","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerAxisArgs</code> object. Intended for use …","","","","Position of the controller. Usually [-1.0, 1.0], though …","","","","Which button was pressed.","","","","","","","","","","","","","Which hat on the controller was changed","","Event id for after render event.","Event id for button event.","Event id for close event.","Event id for controller axis event.","Event id for cursor event.","Used to identify events arguments provided by traits.","Event id for file drag event.","Event id for focus event.","Event id for idle event.","Event id for mouse cursor event.","Event id for mouse relative event.","Event id for mouse scroll event.","Event id for render event.","Event id for resize event.","Event id for text event.","Event id for touch event.","Event id for update event.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Implemented by all events.","The id of this event.","Gets the time stamp of this event.","Calls closure with arguments","","Alt.","Alt + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Ctrl.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift.","Ctrl + Shift + Alt.","Ctrl + Shift + Alt + Gui.","Ctrl + Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gui.","","","","","","","","","","","","","Represent a keyboard key. Keycodes follows SDL …","","","","","","","","","","","","","","","","","","","No modifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift.","Shift + Alt.","Shift + Alt + Gui.","Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns an id of the key","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","Change modifier key state depending on input.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Left mouse button.","Middle mouse button.","Represent a mouse button.","The position of the mouse cursor.","The relative movement of mouse cursor.","The scroll of the mouse wheel.","Right mouse button.","Unknown mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","","","","","","","","","Returns the argument unchanged.","","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","","Calls <code>U::from(self)</code>.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments.","","","","","",""],"i":[1,0,0,0,2,0,0,0,3,4,5,2,0,0,6,7,0,0,0,0,2,0,8,5,4,3,0,0,2,2,0,0,6,0,4,1,0,0,0,8,0,6,5,5,5,0,8,0,6,0,7,0,7,0,7,0,3,2,9,0,9,0,1,0,0,2,0,0,5,5,5,3,2,0,0,0,7,0,0,5,1,0,0,10,8,10,10,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,19,8,12,19,19,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,20,8,20,20,11,9,12,13,3,6,5,4,0,8,21,8,21,21,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,17,15,16,14,18,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,0,8,15,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,22,8,22,22,11,9,12,13,14,15,16,3,17,18,6,6,6,6,7,7,7,5,4,2,2,2,2,2,2,1,1,1,1,1,8,8,8,8,8,8,8,8,10,8,23,24,19,8,20,8,8,21,8,25,25,26,26,22,8,25,8,8,8,8,27,8,28,8,29,8,30,8,26,8,0,11,9,12,13,3,6,5,4,17,25,8,25,25,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,17,0,0,8,8,8,12,14,15,16,17,18,6,7,4,2,1,17,17,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,17,17,17,23,23,23,17,17,17,24,24,24,27,8,27,27,28,8,28,28,12,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,12,29,8,29,29,8,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,30,8,17,30,30,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,11,9,12,13,14,15,16,3,17,18,6,7,5,4,2,1,8,26,8,26,26,15,16,15,16,8,31,32,33,34,35,36,37,35,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,0,0,0,0,57,58,59,57,58,59,57,58,58,59,57,58,59,57,58,59,60,60,58,59,57,58,59,57,58,59,57,58,59,57,60,58,59,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,57,58,59,57,59,58,59,57,58,59,57,58,59,57,58,59,57,59,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,63,64,64,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,63,63,63,63,63,63,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,63,63,64,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,63,64,63,64,63,64,63,64,63,63,64,64,64,64,63,64,64,64,63,64,64,64,64,64,64,64,63,64,63,63,64,64,64,64,64,63,64,64,64,64,63,64,64,64,64,64,63,64,64,63,64,64,64,64,64,63,64,64,63,64,63,64,63,64,65,65,65,65,65,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,67,68,65,65,66,66,67,67,68,68,65,65,65,65,65,65],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["afterrenderargs",3]]]],[[["",0]],["option",4,[["afterrenderargsoption",4]],[[["event",4]],["option",4]],null,[[["",0]],["option",4,[["buttonargs",3]]]],[[["",0]],["option",4,[["buttonargs",3]]]],[[["afterrenderargs",3]],["afterrenderargs",3]],[[["buttonstate",4]],["buttonstate",4]],[[["buttonargs",3]],["buttonargs",3]],[[["closeargs",3]],["closeargs",3]],[[["idleargs",3]],["idleargs",3]],[[["renderargs",3]],["renderargs",3]],[[["resizeargs",3]],["resizeargs",3]],[[["touch",4]],["touch",4]],[[["touchargs",3]],["touchargs",3]],[[["updateargs",3]],["updateargs",3]],[[["button",4]],["button",4]],[[["motion",4]],["motion",4]],[[["hatstate",4]],["hatstate",4]],[[["filedrag",4]],["filedrag",4]],[[["input",4]],["input",4]],[[["loop",4]],["loop",4]],[[["event",4]],["event",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["closeargs",3]]]],[[["",0]],["option",4,[["closeargs",3]]]],[[["afterrenderargs",3],["afterrenderargs",3]],["ordering",4]],[[["buttonstate",4],["buttonstate",4]],["ordering",4]],[[["buttonargs",3],["buttonargs",3]],["ordering",4]],[[["closeargs",3],["closeargs",3]],["ordering",4]],[[["touch",4],["touch",4]],["ordering",4]],[[["button",4],["button",4]],["ordering",4]],[[["hatstate",4],["hatstate",4]],["ordering",4]],[[["filedrag",4],["filedrag",4]],["ordering",4]],null,[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],[[["",0]],["option",4,[["bool",0]]]],[[],["result",4,[["afterrenderargs",3]]]],[[],["result",4,[["buttonstate",4]]]],[[],["result",4,[["buttonargs",3]]]],[[],["result",4,[["closeargs",3]]]],[[],["result",4,[["idleargs",3]]]],[[],["result",4,[["renderargs",3]]]],[[],["result",4,[["resizeargs",3]]]],[[],["result",4,[["touch",4]]]],[[],["result",4,[["touchargs",3]]]],[[],["result",4,[["updateargs",3]]]],[[],["result",4,[["button",4]]]],[[],["result",4,[["motion",4]]]],[[],["result",4,[["hatstate",4]]]],[[],["result",4,[["filedrag",4]]]],[[],["result",4,[["input",4]]]],[[],["result",4,[["loop",4]]]],null,null,null,null,null,[[["afterrenderargs",3],["afterrenderargs",3]],["bool",0]],[[["buttonstate",4],["buttonstate",4]],["bool",0]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["closeargs",3],["closeargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touch",4],["touch",4]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["hatstate",4],["hatstate",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[["event",4],["event",4]],["bool",0]],null,[[["event",4]],["eventid",3]],null,[[["afterrenderargs",3],["formatter",3]],["result",6]],[[["buttonstate",4],["formatter",3]],["result",6]],[[["buttonargs",3],["formatter",3]],["result",6]],[[["closeargs",3],["formatter",3]],["result",6]],[[["idleargs",3],["formatter",3]],["result",6]],[[["renderargs",3],["formatter",3]],["result",6]],[[["resizeargs",3],["formatter",3]],["result",6]],[[["touch",4],["formatter",3]],["result",6]],[[["touchargs",3],["formatter",3]],["result",6]],[[["updateargs",3],["formatter",3]],["result",6]],[[["button",4],["formatter",3]],["result",6]],[[["motion",4],["formatter",3]],["result",6]],[[["hatstate",4],["formatter",3]],["result",6]],[[["filedrag",4],["formatter",3]],["result",6]],[[["input",4],["formatter",3]],["result",6]],[[["loop",4],["formatter",3]],["result",6]],[[["event",4],["formatter",3]],["result",6]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],[[["",0]],["option",4,[["bool",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["key",4]],["button",4]],[[["mousebutton",4]],["button",4]],[[["controllerbutton",3]],["button",4]],[[["touchargs",3]],["motion",4]],[[["controlleraxisargs",3]],["motion",4]],[[]],[[]],[[]],[[["buttonargs",3]],["input",4]],[[]],[[["controlleraxisargs",3]],["input",4]],[[["touchargs",3]],["input",4]],[[["closeargs",3]],["input",4]],[[["motion",4]],["input",4]],[[["updateargs",3]],["loop",4]],[[["idleargs",3]],["loop",4]],[[["afterrenderargs",3]],["loop",4]],[[["renderargs",3]],["loop",4]],[[]],[[["updateargs",3]],["event",4]],[[["afterrenderargs",3]],["event",4]],[[["renderargs",3]],["event",4]],[[]],[[["idleargs",3]],["event",4]],[[],["event",4]],[[],["event",4]],[[["loop",4]],["event",4]],[[["afterrenderargs",3],["",0]],["option",4]],[[["afterrenderargs",3],["event",4]],["option",4,[["event",4]]]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["buttonargs",3],["",0]],["option",4]],[[["buttonargs",3],["event",4]],["option",4,[["event",4]]]],[[["closeargs",3],["",0]],["option",4]],[[["closeargs",3],["event",4]],["option",4,[["event",4]]]],[[["controlleraxisargs",3],["event",4]],["option",4,[["event",4]]]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["f64",0],["",0]],["option",4]],[[["f64",0],["",0]],["option",4]],[[["f64",0],["",0]],["option",4]],[[["f64",0],["",0]],["option",4]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["idleargs",3],["",0]],["option",4]],[[["idleargs",3],["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["renderargs",3],["",0]],["option",4]],[[["renderargs",3],["event",4]],["option",4,[["event",4]]]],[[["resizeargs",3],["",0]],["option",4]],[[["resizeargs",3],["event",4]],["option",4,[["event",4]]]],[[["str",0],["",0]],["option",4]],[[["str",0],["event",4]],["option",4,[["event",4]]]],[[["touchargs",3],["",0]],["option",4]],[[["touchargs",3],["event",4]],["option",4,[["event",4]]]],[[["updateargs",3],["",0]],["option",4]],[[["updateargs",3],["event",4]],["option",4,[["event",4]]]],null,[[["afterrenderargs",3],["",0]]],[[["buttonstate",4],["",0]]],[[["buttonargs",3],["",0]]],[[["closeargs",3],["",0]]],[[["touch",4],["",0]]],[[["button",4],["",0]]],[[["hatstate",4],["",0]]],[[["filedrag",4],["",0]]],null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["idleargs",3]]]],[[["",0]],["option",4,[["idleargs",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["event",4]],["option",4]],[[["event",4]],["option",4]],[[["event",4]],["option",4]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[["i64",0],["i64",0],["f64",0],["touch",4]],["touchargs",3]],[[["i64",0],["i64",0],["touch",4]],["touchargs",3]],[[["afterrenderargs",3],["afterrenderargs",3]],["option",4,[["ordering",4]]]],[[["buttonstate",4],["buttonstate",4]],["option",4,[["ordering",4]]]],[[["buttonargs",3],["buttonargs",3]],["option",4,[["ordering",4]]]],[[["closeargs",3],["closeargs",3]],["option",4,[["ordering",4]]]],[[["idleargs",3],["idleargs",3]],["option",4,[["ordering",4]]]],[[["renderargs",3],["renderargs",3]],["option",4,[["ordering",4]]]],[[["resizeargs",3],["resizeargs",3]],["option",4,[["ordering",4]]]],[[["touch",4],["touch",4]],["option",4,[["ordering",4]]]],[[["touchargs",3],["touchargs",3]],["option",4,[["ordering",4]]]],[[["updateargs",3],["updateargs",3]],["option",4,[["ordering",4]]]],[[["button",4],["button",4]],["option",4,[["ordering",4]]]],[[["motion",4],["motion",4]],["option",4,[["ordering",4]]]],[[["hatstate",4],["hatstate",4]],["option",4,[["ordering",4]]]],[[["filedrag",4],["filedrag",4]],["option",4,[["ordering",4]]]],[[["input",4],["input",4]],["option",4,[["ordering",4]]]],[[["loop",4],["loop",4]],["option",4,[["ordering",4]]]],[[["event",4],["event",4]],["option",4,[["ordering",4]]]],[[["touchargs",3]]],[[["touchargs",3]]],null,[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["",0]],["option",4,[["button",4]]]],[[["touchargs",3]],["f64",0]],[[["touchargs",3]]],null,[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["",0]],["option",4,[["button",4]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["renderargs",3]]]],[[["",0]],["option",4,[["renderargs",3]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["resizeargs",3]]]],[[["",0]],["option",4,[["resizeargs",3]]]],null,[[["afterrenderargs",3]],["result",4]],[[["buttonstate",4]],["result",4]],[[["buttonargs",3]],["result",4]],[[["closeargs",3]],["result",4]],[[["idleargs",3]],["result",4]],[[["renderargs",3]],["result",4]],[[["resizeargs",3]],["result",4]],[[["touch",4]],["result",4]],[[["touchargs",3]],["result",4]],[[["updateargs",3]],["result",4]],[[["button",4]],["result",4]],[[["motion",4]],["result",4]],[[["hatstate",4]],["result",4]],[[["filedrag",4]],["result",4]],[[["input",4]],["result",4]],[[["loop",4]],["result",4]],null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["string",3]]]],[[["",0]],["option",4,[["string",3]]]],[[["event",4]],["option",4,[["timestamp",6]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],null,[[["",0]],["option",4,[["touchargs",3]]]],[[["",0]],["option",4,[["touchargs",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["updateargs",3]]]],[[["",0]],["option",4,[["updateargs",3]]]],[[["renderargs",3]],["viewport",3]],[[["resizeargs",3]],["viewport",3]],null,null,[[["event",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["controllerbutton",3]],["controllerbutton",3]],[[["controllerhat",3]],["controllerhat",3]],[[["controlleraxisargs",3]],["controlleraxisargs",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["controllerbutton",3],["controllerbutton",3]],["ordering",4]],[[["controllerhat",3],["controllerhat",3]],["ordering",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["controlleraxisargs",3]]]],[[],["result",4,[["controllerbutton",3]]]],[[],["result",4,[["controllerhat",3]]]],[[],["result",4,[["controlleraxisargs",3]]]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["controllerbutton",3],["formatter",3]],["result",6]],[[["controllerhat",3],["formatter",3]],["result",6]],[[["controlleraxisargs",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["controlleraxisargs",3],["",0]],["option",4]],[[["controllerbutton",3],["",0]]],[[["controllerhat",3],["",0]]],null,null,null,[[]],[[]],[[]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["u32",0],["u8",0]],["controllerbutton",3]],[[["u32",0],["u8",0],["hatstate",4]],["controllerhat",3]],[[["u32",0],["u8",0],["f64",0]],["controlleraxisargs",3]],[[["controllerbutton",3],["controllerbutton",3]],["option",4,[["ordering",4]]]],[[["controllerhat",3],["controllerhat",3]],["option",4,[["ordering",4]]]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["option",4,[["ordering",4]]]],null,[[["controllerbutton",3]],["result",4]],[[["controllerhat",3]],["result",4]],[[["controlleraxisargs",3]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["eventid",3]],["eventid",3]],[[["",0],["",0]]],[[["eventid",3],["eventid",3]],["ordering",4]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["formatter",3]],["result",6]],[[]],[[["eventid",3],["",0]]],[[]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["eventid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["eventid",3]],[[["",0]],["option",4,[["timestamp",6]]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["u8",0]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["modifierkey",3]],["modifierkey",3]],[[["key",4]],["key",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["modifierkey",3],["modifierkey",3]],["ordering",4]],[[["key",4],["key",4]],["ordering",4]],[[["key",4]],["i32",0]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[],["modifierkey",3]],[[],["result",4,[["modifierkey",3]]]],[[],["result",4,[["key",4]]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["key",4],["key",4]],["bool",0]],[[["modifierkey",3],["",0]]],[[["modifierkey",3],["intoiterator",8]]],[[["modifierkey",3],["formatter",3]],["result",6]],[[["modifierkey",3],["formatter",3]],["result",6]],[[["modifierkey",3],["formatter",3]],["result",6]],[[["modifierkey",3],["formatter",3]],["result",6]],[[["modifierkey",3],["formatter",3]],["result",6]],[[["key",4],["formatter",3]],["result",6]],[[]],[[]],[[["u32",0]],["key",4]],[[["u8",0]],["option",4,[["modifierkey",3]]]],[[["u8",0]],["modifierkey",3]],[[["u8",0]],["modifierkey",3]],[[["intoiterator",8]],["modifierkey",3]],[[["modifierkey",3],["",0]]],[[["key",4],["",0]]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[]],[[]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["option",4,[["ordering",4]]]],[[["key",4],["key",4]],["option",4,[["ordering",4]]]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["result",4]],[[["key",4]],["result",4]],[[["modifierkey",3],["modifierkey",3],["bool",0]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["",0]]],[[["",0]]],[[["modifierkey",3],["modifierkey",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["mousebutton",4]],["mousebutton",4]],[[["",0],["",0]]],[[["mousebutton",4],["mousebutton",4]],["ordering",4]],[[],["result",4,[["mousebutton",4]]]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["mousebutton",4],["formatter",3]],["result",6]],[[]],[[["u32",0]],["mousebutton",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["mousebutton",4],["",0]]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["mousebutton",4],["mousebutton",4]],["option",4,[["ordering",4]]]],[[["mousebutton",4]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Loop"],[4,"Input"],[4,"Touch"],[4,"FileDrag"],[4,"HatState"],[4,"Button"],[4,"Motion"],[4,"Event"],[4,"ButtonState"],[8,"AfterRenderEvent"],[3,"AfterRenderArgs"],[3,"ButtonArgs"],[3,"CloseArgs"],[3,"IdleArgs"],[3,"RenderArgs"],[3,"ResizeArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[8,"ButtonEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"ResizeEvent"],[8,"TextEvent"],[8,"TouchEvent"],[13,"Keyboard"],[13,"Mouse"],[13,"Controller"],[13,"Hat"],[13,"Input"],[13,"Loop"],[13,"Custom"],[13,"Hover"],[13,"Drop"],[13,"Button"],[13,"Move"],[13,"Text"],[13,"Resize"],[13,"Focus"],[13,"Cursor"],[13,"FileDrag"],[13,"Close"],[13,"Render"],[13,"AfterRender"],[13,"Update"],[13,"Idle"],[13,"MouseCursor"],[13,"MouseRelative"],[13,"MouseScroll"],[13,"ControllerAxis"],[13,"Touch"],[3,"ControllerAxisArgs"],[3,"ControllerButton"],[3,"ControllerHat"],[8,"ControllerAxisEvent"],[3,"EventId"],[8,"GenericEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"]]},\
"instant":{"doc":"","t":[3,6,18,18,18,18,18,6,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","ne","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":["instant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]]],[[["duration",3]],["u128",0]],[[["duration",3]],["u128",0]],[[["duration",3]],["u128",0]],[[["duration",3]],["u64",0]],[[["duration",3]],["f32",0]],[[["duration",3]],["f64",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["duration",3],["duration",3]],["option",4,[["duration",3]]]],[[["duration",3],["u32",0]],["option",4,[["duration",3]]]],[[["duration",3],["u32",0]],["option",4,[["duration",3]]]],[[["duration",3],["duration",3]],["option",4,[["duration",3]]]],[[["duration",3]],["duration",3]],[[["",0],["",0]]],[[["duration",3],["duration",3]],["ordering",4]],[[],["duration",3]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["u32",0]]],[[["duration",3],["duration",3]],["f32",0]],[[["duration",3],["duration",3]],["f64",0]],[[["duration",3],["f32",0]],["duration",3]],[[["duration",3],["f64",0]],["duration",3]],[[["duration",3],["duration",3]],["bool",0]],[[["duration",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["f32",0]],["duration",3]],[[["f64",0]],["duration",3]],[[["duration",3],["",0]]],[[]],[[["duration",3]],["bool",0]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["u32",0]]],[[["duration",3],["f32",0]],["duration",3]],[[["duration",3],["f64",0]],["duration",3]],[[["duration",3],["duration",3]],["bool",0]],[[["u64",0],["u32",0]],["duration",3]],[[],["f64",0]],[[["duration",3],["duration",3]],["option",4,[["ordering",4]]]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["u32",0]],["duration",3]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]],["duration",3]],[[["duration",3],["duration",3]]],[[["duration",3]],["u32",0]],[[["duration",3]],["u32",0]],[[["duration",3]],["u32",0]],[[],["duration",3]],[[],["duration",3]],[[["",0]]],[[],["result",4]],[[["f32",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[["f64",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Duration"]]},\
"interpolation":{"doc":"Interpolation algorithms.","t":[13,13,13,13,13,13,13,13,13,13,13,13,8,4,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,16,13,13,13,10,10,10,11,11,10,10,10,10,10,10,10,11,11,5,10,10,10,10,10,10,11,10,10,10,11,11,5,10,5,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11],"n":["BackIn","BackInOut","BackOut","BounceIn","BounceInOut","BounceOut","CircularIn","CircularInOut","CircularOut","CubicIn","CubicInOut","CubicOut","Ease","EaseFunction","ElasticIn","ElasticInOut","ElasticOut","ExponentialIn","ExponentialInOut","ExponentialOut","Lerp","QuadraticIn","QuadraticInOut","QuadraticOut","QuarticIn","QuarticInOut","QuarticOut","QuinticIn","QuinticInOut","QuinticOut","Scalar","SineIn","SineInOut","SineOut","back_in","back_in_out","back_out","borrow","borrow_mut","bounce_in","bounce_in_out","bounce_out","calc","circular_in","circular_in_out","circular_out","clone","clone_into","cub_bez","cubic_in","cubic_in_out","cubic_out","elastic_in","elastic_in_out","elastic_out","eq","exponential_in","exponential_in_out","exponential_out","from","into","lerp","lerp","quad_bez","quadratic_in","quadratic_in_out","quadratic_out","quartic_in","quartic_in_out","quartic_out","quintic_in","quintic_in_out","quintic_out","sine_in","sine_in_out","sine_out","to_owned","try_from","try_into","type_id"],"q":["interpolation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","Describes a type that can linearly interpolate between two …","","","","","","","","","","The scaling type for linear interpolation.","","","","","","","","","","","","Calculate the eased value, normalized","","","","","","Performs cubic beziér interpolation. This is done by …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Performs linear interpolation. A linear interpolation …","Given <code>self</code> and another point <code>other</code>, return a point on a …","Performs quadratic beziér interpolation. This is done by …","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,1,3,3,3,1,1,3,3,3,3,3,3,3,1,1,0,3,3,3,3,3,3,1,3,3,3,1,1,0,2,0,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["easefunction",4]]],[[]],[[]],[[]],[[["easefunction",4]],["easefunction",4]],[[["",0],["",0]]],[[["",0],["",0],["",0],["",0]],["lerp",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["easefunction",4],["easefunction",4]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["lerp",8]],[[["",0],["",0]]],[[["",0],["",0],["",0]],["lerp",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"EaseFunction"],[8,"Lerp"],[8,"Ease"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","t":[13,13,13,13,3,4,13,13,3,13,13,13,13,13,4,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["ArithmeticEntropyCoding","CMYK32","ComponentCount","DNL","Decoder","Error","Format","Hierarchical","ImageInfo","Internal","Io","L8","Lossless","NonIntegerSubsamplingRatio","PixelFormat","RGB24","SamplePrecision","SubsamplingRatio","Unsupported","UnsupportedFeature","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","height","icc_profile","info","init","init","init","init","init","into","into","into","into","into","ne","new","pixel_bytes","pixel_format","read_info","scale","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width","0","0","0","0","0","0"],"q":["jpeg_decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jpeg_decoder::Error","","","","jpeg_decoder::UnsupportedFeature",""],"d":["JPEG using arithmetic entropy coding instead of Huffman …","CMYK, 8 bits per channel","Number of components in an image. 1, 3 and 4 components …","An image can specify a zero height in the frame header and …","JPEG decoder","Errors that can occur while decoding a JPEG image.","The image is not formatted properly. The string contains …","Hierarchical JPEG.","Represents metadata of an image.","An internal error occurred while decoding the image.","An I/O error occurred while decoding the image.","Luminance (grayscale), 8 bits","Lossless JPEG.","A subsampling ratio not representable as an integer.","An enumeration over combinations of color spaces and bit …","RGB, 8 bits per channel","Sample precision in bits. 8 bit sample precision is what …","Subsampling ratio.","The image makes use of a JPEG feature not (currently) …","An enumeration over JPEG features (currently) unsupported …","","","","","","","","","","","","","","","Decodes the image and returns the decoded pixels if …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The height of the image, in pixels.","Returns the embeded icc profile if the image contains one.","Returns metadata about the image.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>Decoder</code> using the reader <code>reader</code>.","Determine the size in bytes of each pixel in this format","The pixel format of the image.","Tries to read metadata from the image without decoding it.","Configure the decoder to scale the image during decoding.","","","","","","","","","","","","","","","","","","","","The width of the image, in pixels.","","","","","",""],"i":[1,2,1,1,0,0,3,1,0,3,3,2,1,1,0,2,1,1,3,0,4,2,5,1,3,4,2,5,1,3,2,5,2,5,4,4,2,5,1,3,4,2,5,1,3,4,2,5,1,3,2,5,2,5,1,3,3,4,2,5,1,3,3,5,4,4,4,2,5,1,3,4,2,5,1,3,5,4,2,5,4,4,3,2,5,3,4,2,5,1,3,4,2,5,1,3,4,2,5,1,3,5,6,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pixelformat",4]],["pixelformat",4]],[[["imageinfo",3]],["imageinfo",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["decoder",3,[["read",8]]]],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["pixelformat",4],["pixelformat",4]],["bool",0]],[[["imageinfo",3],["imageinfo",3]],["bool",0]],[[["pixelformat",4],["formatter",3]],["result",6]],[[["imageinfo",3],["formatter",3]],["result",6]],[[["unsupportedfeature",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["ioerror",3]],["error",4]],null,[[["decoder",3,[["read",8]]]],["option",4,[["vec",3,[["u8",0]]]]]],[[["decoder",3,[["read",8]]]],["option",4,[["imageinfo",3]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[["imageinfo",3],["imageinfo",3]],["bool",0]],[[["read",8]],["decoder",3,[["read",8]]]],[[["pixelformat",4]],["usize",0]],null,[[["decoder",3,[["read",8]]]],["result",4,[["error",4]]]],[[["decoder",3,[["read",8]]],["u16",0],["u16",0]],["result",4,[["error",4]]]],[[["error",4]],["option",4,[["stderror",8]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null],"p":[[4,"UnsupportedFeature"],[4,"PixelFormat"],[4,"Error"],[3,"Decoder"],[3,"ImageInfo"],[13,"Format"],[13,"Unsupported"],[13,"Io"],[13,"Internal"],[13,"SamplePrecision"],[13,"ComponentCount"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[["",0]]],null],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ACCOUNTING","AF_APPLETALK","AF_CCITT","AF_CHAOS","AF_CNT","AF_COIP","AF_DATAKIT","AF_DECnet","AF_DLI","AF_E164","AF_ECMA","AF_HYLINK","AF_IMPLINK","AF_INET","AF_INET6","AF_IPX","AF_ISDN","AF_ISO","AF_LAT","AF_LINK","AF_LOCAL","AF_NATM","AF_NDRV","AF_NETBIOS","AF_NS","AF_OSI","AF_PPP","AF_PUP","AF_ROUTE","AF_SIP","AF_SNA","AF_SYSTEM","AF_SYS_CONTROL","AF_UNIX","AF_UNSPEC","AIO_ALLDONE","AIO_CANCELED","AIO_LISTIO_MAX","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_DEFAULT","AI_MASK","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_UNUSABLE","AI_V4MAPPED","AI_V4MAPPED_CFG","ALTWERASE","ALT_DIGITS","AM_STR","ARPOP_REPLY","ARPOP_REQUEST","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","ATTR_BIT_MAP_COUNT","ATTR_CMNEXT_CLONEID","ATTR_CMNEXT_EXT_FLAGS","ATTR_CMNEXT_LINKID","ATTR_CMNEXT_NOFIRMLINKPATH","ATTR_CMNEXT_PRIVATESIZE","ATTR_CMNEXT_REALDEVID","ATTR_CMNEXT_REALFSID","ATTR_CMNEXT_RECURSIVE_GENCOUNT","ATTR_CMNEXT_RELPATH","ATTR_CMN_ACCESSMASK","ATTR_CMN_ACCTIME","ATTR_CMN_ADDEDTIME","ATTR_CMN_BKUPTIME","ATTR_CMN_CHGTIME","ATTR_CMN_CRTIME","ATTR_CMN_DATA_PROTECT_FLAGS","ATTR_CMN_DEVID","ATTR_CMN_DOCUMENT_ID","ATTR_CMN_EXTENDED_SECURITY","ATTR_CMN_FILEID","ATTR_CMN_FLAGS","ATTR_CMN_FNDRINFO","ATTR_CMN_FSID","ATTR_CMN_FULLPATH","ATTR_CMN_GEN_COUNT","ATTR_CMN_GRPID","ATTR_CMN_GRPUUID","ATTR_CMN_MODTIME","ATTR_CMN_NAME","ATTR_CMN_OBJID","ATTR_CMN_OBJPERMANENTID","ATTR_CMN_OBJTAG","ATTR_CMN_OBJTYPE","ATTR_CMN_OWNERID","ATTR_CMN_PARENTID","ATTR_CMN_PAROBJID","ATTR_CMN_RETURNED_ATTRS","ATTR_CMN_SCRIPT","ATTR_CMN_USERACCESS","ATTR_CMN_UUID","ATTR_DIR_ALLOCSIZE","ATTR_DIR_DATALENGTH","ATTR_DIR_ENTRYCOUNT","ATTR_DIR_IOBLOCKSIZE","ATTR_DIR_LINKCOUNT","ATTR_DIR_MOUNTSTATUS","ATTR_FILE_ALLOCSIZE","ATTR_FILE_DATAALLOCSIZE","ATTR_FILE_DATALENGTH","ATTR_FILE_DEVTYPE","ATTR_FILE_FORKCOUNT","ATTR_FILE_FORKLIST","ATTR_FILE_IOBLOCKSIZE","ATTR_FILE_LINKCOUNT","ATTR_FILE_RSRCALLOCSIZE","ATTR_FILE_RSRCLENGTH","ATTR_FILE_TOTALSIZE","ATTR_VOL_ALLOCATIONCLUMP","ATTR_VOL_ATTRIBUTES","ATTR_VOL_CAPABILITIES","ATTR_VOL_DIRCOUNT","ATTR_VOL_ENCODINGSUSED","ATTR_VOL_FILECOUNT","ATTR_VOL_FSTYPE","ATTR_VOL_INFO","ATTR_VOL_IOBLOCKSIZE","ATTR_VOL_MAXOBJCOUNT","ATTR_VOL_MINALLOCATION","ATTR_VOL_MOUNTEDDEVICE","ATTR_VOL_MOUNTFLAGS","ATTR_VOL_MOUNTPOINT","ATTR_VOL_NAME","ATTR_VOL_OBJCOUNT","ATTR_VOL_QUOTA_SIZE","ATTR_VOL_RESERVED_SIZE","ATTR_VOL_SIGNATURE","ATTR_VOL_SIZE","ATTR_VOL_SPACEAVAIL","ATTR_VOL_SPACEFREE","ATTR_VOL_SPACEUSED","ATTR_VOL_UUID","AT_EACCESS","AT_FDCWD","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","B0","B110","B115200","B1200","B134","B14400","B150","B1800","B19200","B200","B230400","B2400","B28800","B300","B38400","B4800","B50","B57600","B600","B7200","B75","B76800","B9600","BIOCFLUSH","BIOCGBLEN","BIOCGDLT","BIOCGDLTLIST","BIOCGETIF","BIOCGHDRCMPLT","BIOCGRSIG","BIOCGRTIMEOUT","BIOCGSEESENT","BIOCGSTATS","BIOCIMMEDIATE","BIOCPROMISC","BIOCSBLEN","BIOCSDLT","BIOCSETF","BIOCSETFNR","BIOCSETIF","BIOCSHDRCMPLT","BIOCSRSIG","BIOCSRTIMEOUT","BIOCSSEESENT","BIOCVERSION","BOOT_TIME","BPF_ALIGNMENT","BRKINT","BS0","BS1","BSDLY","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_OBJERR","CCCryptorStatus","CCRNGStatus","CCRandomGenerateBytes","CCStatus","CIGNORE","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_MONOTONIC","CLOCK_MONOTONIC_RAW","CLOCK_MONOTONIC_RAW_APPROX","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","CLOCK_UPTIME_RAW","CLOCK_UPTIME_RAW_APPROX","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CODESET","CONNECT_DATA_AUTHENTICATED","CONNECT_DATA_IDEMPOTENT","CONNECT_RESUME_ON_READ_WRITE","COPYFILE_ACL","COPYFILE_CHECK","COPYFILE_CLONE","COPYFILE_CLONE_FORCE","COPYFILE_CONTINUE","COPYFILE_COPY_DATA","COPYFILE_COPY_XATTR","COPYFILE_DATA","COPYFILE_DATA_SPARSE","COPYFILE_ERR","COPYFILE_EXCL","COPYFILE_FINISH","COPYFILE_METADATA","COPYFILE_MOVE","COPYFILE_NOFOLLOW","COPYFILE_NOFOLLOW_DST","COPYFILE_NOFOLLOW_SRC","COPYFILE_PACK","COPYFILE_PRESERVE_DST_TRACKED","COPYFILE_PROGRESS","COPYFILE_QUIT","COPYFILE_RECURSE_DIR","COPYFILE_RECURSE_DIR_CLEANUP","COPYFILE_RECURSE_ERROR","COPYFILE_RECURSE_FILE","COPYFILE_RECURSIVE","COPYFILE_RUN_IN_PLACE","COPYFILE_SECURITY","COPYFILE_SKIP","COPYFILE_START","COPYFILE_STAT","COPYFILE_UNLINK","COPYFILE_UNPACK","COPYFILE_VERBOSE","COPYFILE_XATTR","CPU_STATE_IDLE","CPU_STATE_MAX","CPU_STATE_NICE","CPU_STATE_SYSTEM","CPU_STATE_USER","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTLFLAG_ANYBODY","CTLFLAG_KERN","CTLFLAG_LOCKED","CTLFLAG_MASKED","CTLFLAG_NOAUTO","CTLFLAG_NOLOCK","CTLFLAG_OID2","CTLFLAG_RD","CTLFLAG_RW","CTLFLAG_SECURE","CTLFLAG_WR","CTLTYPE","CTLTYPE_INT","CTLTYPE_NODE","CTLTYPE_OPAQUE","CTLTYPE_QUAD","CTLTYPE_STRING","CTLTYPE_STRUCT","CTL_DEBUG","CTL_DEBUG_MAXID","CTL_DEBUG_NAME","CTL_DEBUG_VALUE","CTL_HW","CTL_KERN","CTL_MACHDEP","CTL_MAXID","CTL_NET","CTL_UNSPEC","CTL_USER","CTL_VFS","CTL_VM","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DEAD_PROCESS","DIR","DIR_MNTSTATUS_MNTPOINT","DLT_ARCNET","DLT_ATM_RFC1483","DLT_AX25","DLT_CHAOS","DLT_EN10MB","DLT_EN3MB","DLT_FDDI","DLT_IEEE802","DLT_LOOP","DLT_NULL","DLT_PPP","DLT_PRONET","DLT_RAW","DLT_SLIP","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_MD_ORDER","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EAUTH","EBADARCH","EBADEXEC","EBADF","EBADMACHO","EBADMSG","EBADRPC","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDEVERR","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EFTYPE","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELAST","ELOOP","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENEEDAUTH","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOATTR","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPOLICY","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROCLIM","EPROCUNAVAIL","EPROGMISMATCH","EPROGUNAVAIL","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","EPWROFF","EQFULL","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMOTE","EROFS","ERPCMISMATCH","ESHLIBVERS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUSERS","EVFILT_AIO","EVFILT_FS","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VM","EVFILT_VNODE","EVFILT_WRITE","EV_ADD","EV_CLEAR","EV_DELETE","EV_DISABLE","EV_DISPATCH","EV_ENABLE","EV_EOF","EV_ERROR","EV_FLAG0","EV_FLAG1","EV_ONESHOT","EV_OOBAND","EV_POLL","EV_RECEIPT","EV_SYSFLAGS","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","EXTA","EXTB","EXTPROC","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIODTYPE","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOSETOWN","FLUSHO","FOPEN_MAX","FSOPT_ATTR_CMN_EXTENDED","FSOPT_NOFOLLOW","FSOPT_NOFOLLOW_ANY","FSOPT_PACK_INVAL_ATTRS","FSOPT_REPORT_FULLSIZE","FSOPT_RETURN_REALDEV","F_ALLOCATEALL","F_ALLOCATECONTIG","F_BARRIERFSYNC","F_DUPFD","F_DUPFD_CLOEXEC","F_FREEZE_FS","F_FULLFSYNC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETPATH","F_GETPATH_NOFIRMLINK","F_GLOBAL_NOCACHE","F_LOCK","F_LOG2PHYS","F_LOG2PHYS_EXT","F_NOCACHE","F_NODIRECT","F_OK","F_PEOFPOSMODE","F_PREALLOCATE","F_RDADVISE","F_RDAHEAD","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_TEST","F_THAW_FS","F_TLOCK","F_ULOCK","F_UNLCK","F_VOLPOSMODE","F_WRLCK","GETALL","GETNCNT","GETPID","GETVAL","GETZCNT","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRPQUOTA","HOST_CPU_LOAD_INFO","HOST_CPU_LOAD_INFO_COUNT","HOST_EXPIRED_TASK_INFO","HOST_EXTMOD_INFO64","HOST_LOAD_INFO","HOST_VM_INFO","HOST_VM_INFO64","HOST_VM_INFO64_COUNT","HUPCL","HW_AVAILCPU","HW_BUS_FREQ","HW_BYTEORDER","HW_CACHELINE","HW_CPU_FREQ","HW_DISKNAMES","HW_DISKSTATS","HW_EPOCH","HW_FLOATINGPT","HW_L1DCACHESIZE","HW_L1ICACHESIZE","HW_L2CACHESIZE","HW_L2SETTINGS","HW_L3CACHESIZE","HW_L3SETTINGS","HW_MACHINE","HW_MACHINE_ARCH","HW_MAXID","HW_MEMSIZE","HW_MODEL","HW_NCPU","HW_PAGESIZE","HW_PHYSMEM","HW_PRODUCT","HW_TARGET","HW_TB_FREQ","HW_USERMEM","HW_VECTORUNIT","ICANON","ICRNL","IEXTEN","IFF_ALLMULTI","IFF_ALTPHYS","IFF_BROADCAST","IFF_DEBUG","IFF_LINK0","IFF_LINK1","IFF_LINK2","IFF_LOOPBACK","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_OACTIVE","IFF_POINTOPOINT","IFF_PROMISC","IFF_RUNNING","IFF_SIMPLEX","IFF_UP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INT_MAX","INT_MIN","IOV_MAX","IPC_CREAT","IPC_EXCL","IPC_M","IPC_NOWAIT","IPC_PRIVATE","IPC_R","IPC_RMID","IPC_SET","IPC_STAT","IPC_W","IPPROTO_3PC","IPPROTO_ADFS","IPPROTO_AH","IPPROTO_AHIP","IPPROTO_APES","IPPROTO_ARGUS","IPPROTO_AX25","IPPROTO_BHA","IPPROTO_BLT","IPPROTO_BRSATMON","IPPROTO_CFTP","IPPROTO_CHAOS","IPPROTO_CMTP","IPPROTO_CPHB","IPPROTO_CPNX","IPPROTO_DDP","IPPROTO_DGP","IPPROTO_DIVERT","IPPROTO_DONE","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EMCON","IPPROTO_ENCAP","IPPROTO_EON","IPPROTO_ESP","IPPROTO_ETHERIP","IPPROTO_FRAGMENT","IPPROTO_GGP","IPPROTO_GMTP","IPPROTO_GRE","IPPROTO_HELLO","IPPROTO_HMP","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDPR","IPPROTO_IDRP","IPPROTO_IGMP","IPPROTO_IGP","IPPROTO_IGRP","IPPROTO_IL","IPPROTO_INLSP","IPPROTO_INP","IPPROTO_IP","IPPROTO_IPCOMP","IPPROTO_IPCV","IPPROTO_IPEIP","IPPROTO_IPIP","IPPROTO_IPPC","IPPROTO_IPV6","IPPROTO_IRTP","IPPROTO_KRYPTOLAN","IPPROTO_LARP","IPPROTO_LEAF1","IPPROTO_LEAF2","IPPROTO_MAX","IPPROTO_MEAS","IPPROTO_MHRP","IPPROTO_MICP","IPPROTO_MTP","IPPROTO_MUX","IPPROTO_ND","IPPROTO_NHRP","IPPROTO_NONE","IPPROTO_NSP","IPPROTO_NVPII","IPPROTO_OSPFIGP","IPPROTO_PGM","IPPROTO_PIGP","IPPROTO_PIM","IPPROTO_PRM","IPPROTO_PUP","IPPROTO_PVP","IPPROTO_RAW","IPPROTO_RCCMON","IPPROTO_RDP","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RVD","IPPROTO_SATEXPAK","IPPROTO_SATMON","IPPROTO_SCCSP","IPPROTO_SCTP","IPPROTO_SDRP","IPPROTO_SEP","IPPROTO_SRPC","IPPROTO_ST","IPPROTO_SVMTP","IPPROTO_SWIPE","IPPROTO_TCF","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TPXX","IPPROTO_TRUNK1","IPPROTO_TRUNK2","IPPROTO_TTP","IPPROTO_UDP","IPPROTO_VINES","IPPROTO_VISA","IPPROTO_VMTP","IPPROTO_WBEXPAK","IPPROTO_WBMON","IPPROTO_WSN","IPPROTO_XNET","IPPROTO_XTP","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOTECT","IPV6_BOUND_IF","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_HOPLIMIT","IPV6_JOIN_GROUP","IPV6_LEAVE_GROUP","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_PKTINFO","IPV6_RECVPKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_BOUND_IF","IP_DONTFRAG","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_PKTINFO","IP_RECVDSTADDR","IP_RECVIF","IP_RECVTOS","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","ISIG","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","KERN_ABORTED","KERN_AFFINITY","KERN_AIOMAX","KERN_AIOPROCMAX","KERN_AIOTHREADS","KERN_ALREADY_IN_SET","KERN_ALREADY_WAITING","KERN_ARGMAX","KERN_BOOTFILE","KERN_BOOTTIME","KERN_CHECKOPENEVT","KERN_CLASSIC","KERN_CLASSICHANDLER","KERN_CLOCKRATE","KERN_CODESIGN_ERROR","KERN_COREDUMP","KERN_COREFILE","KERN_DEFAULT_SET","KERN_DOMAINNAME","KERN_DUMMY","KERN_DUMPDEV","KERN_EXCEPTION_PROTECTED","KERN_EXEC","KERN_FAILURE","KERN_FILE","KERN_HOSTID","KERN_HOSTNAME","KERN_INSUFFICIENT_BUFFER_SIZE","KERN_INVALID_ADDRESS","KERN_INVALID_ARGUMENT","KERN_INVALID_CAPABILITY","KERN_INVALID_HOST","KERN_INVALID_LEDGER","KERN_INVALID_MEMORY_CONTROL","KERN_INVALID_NAME","KERN_INVALID_OBJECT","KERN_INVALID_POLICY","KERN_INVALID_PROCESSOR_SET","KERN_INVALID_RIGHT","KERN_INVALID_SECURITY","KERN_INVALID_TASK","KERN_INVALID_VALUE","KERN_IPC","KERN_JOB_CONTROL","KERN_KDBUFWAIT","KERN_KDCPUMAP","KERN_KDDFLAGS","KERN_KDEBUG","KERN_KDEFLAGS","KERN_KDENABLE","KERN_KDGETBUF","KERN_KDGETENTROPY","KERN_KDGETREG","KERN_KDPIDEX","KERN_KDPIDTR","KERN_KDREADCURTHRMAP","KERN_KDREADTR","KERN_KDREMOVE","KERN_KDSETBUF","KERN_KDSETREG","KERN_KDSETRTCDEC","KERN_KDSETUP","KERN_KDSET_TYPEFILTER","KERN_KDTHRMAP","KERN_KDWRITEMAP","KERN_KDWRITETR","KERN_LOCK_OWNED","KERN_LOCK_OWNED_SELF","KERN_LOCK_SET_DESTROYED","KERN_LOCK_UNSTABLE","KERN_LOGSIGEXIT","KERN_LOW_PRI_DELAY","KERN_LOW_PRI_WINDOW","KERN_MAXFILES","KERN_MAXFILESPERPROC","KERN_MAXID","KERN_MAXPARTITIONS","KERN_MAXPROC","KERN_MAXPROCPERUID","KERN_MAXVNODES","KERN_MEMORY_DATA_MOVED","KERN_MEMORY_ERROR","KERN_MEMORY_FAILURE","KERN_MEMORY_PRESENT","KERN_MEMORY_RESTART_COPY","KERN_NAME_EXISTS","KERN_NETBOOT","KERN_NGROUPS","KERN_NISDOMAINNAME","KERN_NODE_DOWN","KERN_NOT_DEPRESSED","KERN_NOT_IN_SET","KERN_NOT_RECEIVER","KERN_NOT_SUPPORTED","KERN_NOT_WAITING","KERN_NO_ACCESS","KERN_NO_SPACE","KERN_NTP_PLL","KERN_NX_PROTECTION","KERN_OPENEVT_PROC","KERN_OPERATION_TIMED_OUT","KERN_OSRELDATE","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OSVERSION","KERN_POLICY_LIMIT","KERN_POLICY_STATIC","KERN_POSIX","KERN_POSIX1","KERN_PROC","KERN_PROCARGS","KERN_PROCARGS2","KERN_PROCDELAYTERM","KERN_PROCNAME","KERN_PROC_ALL","KERN_PROC_LCID","KERN_PROC_PGRP","KERN_PROC_PID","KERN_PROC_RUID","KERN_PROC_SESSION","KERN_PROC_TTY","KERN_PROC_UID","KERN_PROF","KERN_PROTECTION_FAILURE","KERN_PS_STRINGS","KERN_RAGEVNODE","KERN_RAGE_PROC","KERN_RAGE_THREAD","KERN_RESOURCE_SHORTAGE","KERN_RIGHT_EXISTS","KERN_RPC_CONTINUE_ORPHAN","KERN_RPC_SERVER_TERMINATED","KERN_RPC_TERMINATE_ORPHAN","KERN_SAFEBOOT","KERN_SAVED_IDS","KERN_SECURELVL","KERN_SEMAPHORE_DESTROYED","KERN_SHREG_PRIVATIZABLE","KERN_SPECULATIVE_READS","KERN_SUCCESS","KERN_SUGID_COREDUMP","KERN_SYMFILE","KERN_SYSV","KERN_TERMINATED","KERN_TFP","KERN_TFP_POLICY","KERN_TFP_POLICY_DEFAULT","KERN_TFP_POLICY_DENY","KERN_THALTSTACK","KERN_THREADNAME","KERN_TRANSLATE","KERN_TTY","KERN_UNOPENEVT_PROC","KERN_UNRAGE_PROC","KERN_UNRAGE_THREAD","KERN_UPDATEINTERVAL","KERN_UREFS_OVERFLOW","KERN_USRSTACK32","KERN_USRSTACK64","KERN_VERSION","KERN_VNODE","KIPC_MAXSOCKBUF","KIPC_MAX_DATALEN","KIPC_MAX_HDR","KIPC_MAX_LINKHDR","KIPC_MAX_PROTOHDR","KIPC_MBSTAT","KIPC_NMBCLUSTERS","KIPC_SOCKBUF_WASTE","KIPC_SOMAXCONN","KIPC_SOQLIMITCOMPAT","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_SEGMENT","LC_SEGMENT_64","LC_TIME","LC_TIME_MASK","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LOCAL_PEERCRED","LOCAL_PEEREPID","LOCAL_PEEREUUID","LOCAL_PEERPID","LOCAL_PEERUUID","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_INSTALL","LOG_KERN","LOG_LAUNCHD","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NETINFO","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_RAS","LOG_REMOTEAUTH","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","MACH_PORT_NULL","MACH_TASK_BASIC_INFO","MACH_TASK_BASIC_INFO_COUNT","MADV_CAN_REUSE","MADV_DONTNEED","MADV_FREE","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_ZERO_WIRED_PAGES","MAP_ANON","MAP_ANONYMOUS","MAP_COPY","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_HASSEMAPHORE","MAP_JIT","MAP_NOCACHE","MAP_NOEXTEND","MAP_NORESERVE","MAP_PRIVATE","MAP_RENAME","MAP_SHARED","MAXCOMLEN","MAXFREQ","MAXPATHLEN","MAXPHASE","MAXSEC","MAXTC","MAXTHREADNAMESIZE","MCL_CURRENT","MCL_FUTURE","MDMBUF","MEMORY_OBJECT_NULL","MH_MAGIC","MH_MAGIC_64","MINCORE_INCORE","MINCORE_MODIFIED","MINCORE_MODIFIED_OTHER","MINCORE_REFERENCED","MINCORE_REFERENCED_OTHER","MINSEC","MINSIGSTKSZ","MNT_ASYNC","MNT_AUTOMOUNTED","MNT_CPROTECT","MNT_DEFWRITE","MNT_DONTBROWSE","MNT_DOVOLFS","MNT_EXPORTED","MNT_FORCE","MNT_IGNORE_OWNERSHIP","MNT_JOURNALED","MNT_LOCAL","MNT_MULTILABEL","MNT_NOATIME","MNT_NOBLOCK","MNT_NODEV","MNT_NOEXEC","MNT_NOSUID","MNT_NOUSERXATTR","MNT_NOWAIT","MNT_QUARANTINE","MNT_QUOTA","MNT_RDONLY","MNT_RELOAD","MNT_ROOTFS","MNT_SNAPSHOT","MNT_SYNCHRONOUS","MNT_UNION","MNT_UPDATE","MNT_WAIT","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_PPSMAX","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOF","MSG_EOR","MSG_FLUSH","MSG_HAVEMORE","MSG_HOLD","MSG_OOB","MSG_PEEK","MSG_RCVMORE","MSG_SEND","MSG_TRUNC","MSG_WAITALL","MS_ASYNC","MS_DEACTIVATE","MS_INVALIDATE","MS_KILLPAGES","MS_SYNC","NANOSECOND","NCCS","NET_RT_DUMP","NET_RT_FLAGS","NET_RT_IFLIST","NET_RT_IFLIST2","NEW_TIME","NI_DGRAM","NI_MAXHOST","NI_MAXSERV","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSCOPE","NI_NUMERICSERV","NL0","NL1","NLDLY","NOEXPR","NOFLSH","NOKERNINFO","NOSTR","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_BACKGROUND","NOTE_CHILD","NOTE_CRITICAL","NOTE_DELETE","NOTE_EXEC","NOTE_EXIT","NOTE_EXITSTATUS","NOTE_EXIT_CSERROR","NOTE_EXIT_DECRYPTFAIL","NOTE_EXIT_DETAIL","NOTE_EXIT_DETAIL_MASK","NOTE_EXIT_MEMORY","NOTE_EXTEND","NOTE_FFAND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_FFNOP","NOTE_FFOR","NOTE_FORK","NOTE_LEEWAY","NOTE_LINK","NOTE_LOWAT","NOTE_NONE","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACK","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","NOTE_WRITE","NTP_API","OCRNL","OFDEL","OFILL","OLD_TIME","ONLCR","ONLRET","ONOCR","ONOEOT","OPOST","OS_LOG_TYPE_DEBUG","OS_LOG_TYPE_DEFAULT","OS_LOG_TYPE_ERROR","OS_LOG_TYPE_FAULT","OS_LOG_TYPE_INFO","OS_SIGNPOST_EVENT","OS_SIGNPOST_INTERVAL_BEGIN","OS_SIGNPOST_INTERVAL_END","OS_UNFAIR_LOCK_INIT","OXTABS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_DSYNC","O_EVTONLY","O_EXCL","O_EXLOCK","O_FSYNC","O_NDELAY","O_NOCTTY","O_NOFOLLOW","O_NOFOLLOW_ANY","O_NONBLOCK","O_RDONLY","O_RDWR","O_SHLOCK","O_SYMLINK","O_SYNC","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_APPLETALK","PF_CCITT","PF_CHAOS","PF_CNT","PF_COIP","PF_DATAKIT","PF_DECnet","PF_DLI","PF_ECMA","PF_HYLINK","PF_IMPLINK","PF_INET","PF_INET6","PF_IPX","PF_ISDN","PF_ISO","PF_KEY","PF_LAT","PF_LINK","PF_LOCAL","PF_NATM","PF_NDRV","PF_NETBIOS","PF_NS","PF_OSI","PF_PIP","PF_PPP","PF_PUP","PF_ROUTE","PF_RTIP","PF_SIP","PF_SNA","PF_SYSTEM","PF_UNIX","PF_UNSPEC","PF_XTP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_CLOEXEC_DEFAULT","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETEXEC","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_START_SUSPENDED","PRIO_DARWIN_BG","PRIO_DARWIN_NONUI","PRIO_DARWIN_PROCESS","PRIO_DARWIN_THREAD","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROCESSOR_BASIC_INFO","PROCESSOR_CPU_LOAD_INFO","PROCESSOR_PM_REGS_INFO","PROCESSOR_SET_BASIC_INFO","PROCESSOR_SET_LOAD_INFO","PROCESSOR_TEMPERATURE","PROC_CSM_ALL","PROC_CSM_NOSMT","PROC_CSM_TECS","PROC_PIDPATHINFO_MAXSIZE","PROC_PIDTASKALLINFO","PROC_PIDTASKINFO","PROC_PIDTBSDINFO","PROC_PIDTHREADINFO","PROC_PIDVNODEPATHINFO","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_INTROSPECTION_THREAD_CREATE","PTHREAD_INTROSPECTION_THREAD_DESTROY","PTHREAD_INTROSPECTION_THREAD_START","PTHREAD_INTROSPECTION_THREAD_TERMINATE","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PT_ATTACH","PT_ATTACHEXC","PT_CONTINUE","PT_DENY_ATTACH","PT_DETACH","PT_FIRSTMACH","PT_FORCEQUOTA","PT_KILL","PT_READ_D","PT_READ_I","PT_READ_U","PT_SIGEXC","PT_STEP","PT_THUPDATE","PT_TRACE_ME","PT_WRITE_D","PT_WRITE_I","PT_WRITE_U","P_ALL","P_PGID","P_PID","QCMD","QOS_CLASS_BACKGROUND","QOS_CLASS_DEFAULT","QOS_CLASS_UNSPECIFIED","QOS_CLASS_USER_INITIATED","QOS_CLASS_USER_INTERACTIVE","QOS_CLASS_UTILITY","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETQUOTA","Q_SYNC","RADIXCHAR","RAND_MAX","REG_ASSERT","REG_ATOI","REG_BACKR","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_BASIC","REG_DUMP","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_EMPTY","REG_EPAREN","REG_ERANGE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_INVARG","REG_ITOA","REG_LARGE","REG_NEWLINE","REG_NOMATCH","REG_NOSPEC","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_PEND","REG_STARTEND","REG_TRACE","RENAME_EXCL","RENAME_SWAP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RTAX_AUTHOR","RTAX_BRD","RTAX_DST","RTAX_GATEWAY","RTAX_GENMASK","RTAX_IFA","RTAX_IFP","RTAX_MAX","RTAX_NETMASK","RTA_AUTHOR","RTA_BRD","RTA_DST","RTA_GATEWAY","RTA_GENMASK","RTA_IFA","RTA_IFP","RTA_NETMASK","RTF_BLACKHOLE","RTF_BROADCAST","RTF_CLONING","RTF_CONDEMNED","RTF_DEAD","RTF_DELCLONE","RTF_DONE","RTF_DYNAMIC","RTF_GATEWAY","RTF_GLOBAL","RTF_HOST","RTF_IFREF","RTF_IFSCOPE","RTF_LLINFO","RTF_LOCAL","RTF_MODIFIED","RTF_MULTICAST","RTF_NOIFREF","RTF_PINNED","RTF_PRCLONING","RTF_PROTO1","RTF_PROTO2","RTF_PROTO3","RTF_PROXY","RTF_REJECT","RTF_ROUTER","RTF_STATIC","RTF_UP","RTF_WASCLONED","RTF_XRESOLVE","RTLD_DEFAULT","RTLD_FIRST","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTLD_SELF","RTM_ADD","RTM_CHANGE","RTM_DELADDR","RTM_DELETE","RTM_DELMADDR","RTM_GET","RTM_GET2","RTM_IFINFO","RTM_IFINFO2","RTM_LOCK","RTM_LOSING","RTM_MISS","RTM_NEWADDR","RTM_NEWMADDR","RTM_NEWMADDR2","RTM_OLDADD","RTM_OLDDEL","RTM_REDIRECT","RTM_RESOLVE","RTM_VERSION","RTV_EXPIRE","RTV_HOPCOUNT","RTV_MTU","RTV_RPIPE","RTV_RTT","RTV_RTTVAR","RTV_SPIPE","RTV_SSTHRESH","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_INFO_V0","RUSAGE_INFO_V1","RUSAGE_INFO_V2","RUSAGE_INFO_V3","RUSAGE_INFO_V4","RUSAGE_SELF","R_OK","SAE_ASSOCID_ALL","SAE_ASSOCID_ANY","SAE_CONNID_ALL","SAE_CONNID_ANY","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCALE_PPM","SCHED_FIFO","SCHED_OTHER","SCHED_RR","SCM_CREDS","SCM_RIGHTS","SCM_TIMESTAMP","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SEM_FAILED","SEM_UNDO","SETALL","SETVAL","SF_APPEND","SF_ARCHIVED","SF_IMMUTABLE","SF_SETTABLE","SHMLBA","SHM_R","SHM_RDONLY","SHM_RND","SHM_W","SHUTDOWN_TIME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEMT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGNATURE","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCGIFADDR","SOCK_DGRAM","SOCK_MAXADDRLEN","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_LOCAL","SOL_SOCKET","SOMAXCONN","SO_ACCEPTCONN","SO_BROADCAST","SO_DEBUG","SO_DONTROUTE","SO_DONTTRUNC","SO_ERROR","SO_KEEPALIVE","SO_LABEL","SO_LINGER","SO_LINGER_SEC","SO_NKE","SO_NOADDRERR","SO_NOSIGPIPE","SO_NOTIFYCONFLICT","SO_NP_EXTENSIONS","SO_NREAD","SO_NWRITE","SO_OOBINLINE","SO_PEERLABEL","SO_RANDOMPORT","SO_RCVBUF","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_REUSESHAREUID","SO_SNDBUF","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMP_MONOTONIC","SO_TYPE","SO_USELOOPBACK","SO_WANTMORE","SO_WANTOOBFLAG","SS_DISABLE","SS_ONSTACK","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","ST_NOSUID","ST_RDONLY","SUPERPAGE_NONE","SUPERPAGE_SIZE_2MB","SUPERPAGE_SIZE_ANY","SYSDIR_DIRECTORY_ADMIN_APPLICATION","SYSDIR_DIRECTORY_ALL_APPLICATIONS","SYSDIR_DIRECTORY_ALL_LIBRARIES","SYSDIR_DIRECTORY_APPLICATION","SYSDIR_DIRECTORY_APPLICATION_SUPPORT","SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION","SYSDIR_DIRECTORY_CACHES","SYSDIR_DIRECTORY_CORESERVICE","SYSDIR_DIRECTORY_DEMO_APPLICATION","SYSDIR_DIRECTORY_DESKTOP","SYSDIR_DIRECTORY_DEVELOPER","SYSDIR_DIRECTORY_DEVELOPER_APPLICATION","SYSDIR_DIRECTORY_DOCUMENT","SYSDIR_DIRECTORY_DOCUMENTATION","SYSDIR_DIRECTORY_DOWNLOADS","SYSDIR_DIRECTORY_INPUT_METHODS","SYSDIR_DIRECTORY_LIBRARY","SYSDIR_DIRECTORY_MOVIES","SYSDIR_DIRECTORY_MUSIC","SYSDIR_DIRECTORY_PICTURES","SYSDIR_DIRECTORY_PREFERENCE_PANES","SYSDIR_DIRECTORY_PRINTER_DESCRIPTION","SYSDIR_DIRECTORY_SHARED_PUBLIC","SYSDIR_DIRECTORY_USER","SYSDIR_DOMAIN_MASK_ALL","SYSDIR_DOMAIN_MASK_LOCAL","SYSDIR_DOMAIN_MASK_NETWORK","SYSDIR_DOMAIN_MASK_SYSTEM","SYSDIR_DOMAIN_MASK_USER","SYSPROTO_CONTROL","SYSPROTO_EVENT","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TASK_THREAD_TIMES_INFO","TASK_THREAD_TIMES_INFO_COUNT","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_FASTOPEN","TCP_KEEPALIVE","TCP_KEEPCNT","TCP_KEEPINTVL","TCP_MAXSEG","TCP_NODELAY","TCP_NOOPT","TCP_NOPUSH","TCSADRAIN","TCSAFLUSH","TCSANOW","THOUSEP","THREAD_AFFINITY_POLICY","THREAD_AFFINITY_POLICY_COUNT","THREAD_AFFINITY_TAG_NULL","THREAD_BACKGROUND_POLICY","THREAD_BACKGROUND_POLICY_COUNT","THREAD_BACKGROUND_POLICY_DARWIN_BG","THREAD_BASIC_INFO","THREAD_BASIC_INFO_COUNT","THREAD_EXTENDED_INFO","THREAD_EXTENDED_INFO_COUNT","THREAD_EXTENDED_POLICY","THREAD_EXTENDED_POLICY_COUNT","THREAD_IDENTIFIER_INFO","THREAD_IDENTIFIER_INFO_COUNT","THREAD_LATENCY_QOS_POLICY","THREAD_LATENCY_QOS_POLICY_COUNT","THREAD_PRECEDENCE_POLICY","THREAD_PRECEDENCE_POLICY_COUNT","THREAD_STANDARD_POLICY","THREAD_STANDARD_POLICY_COUNT","THREAD_THROUGHPUT_QOS_POLICY","THREAD_THROUGHPUT_QOS_POLICY_COUNT","THREAD_TIME_CONSTRAINT_POLICY","THREAD_TIME_CONSTRAINT_POLICY_COUNT","TH_FLAGS_GLOBAL_FORCED_IDLE","TH_FLAGS_IDLE","TH_FLAGS_SWAPPED","TH_STATE_HALTED","TH_STATE_RUNNING","TH_STATE_STOPPED","TH_STATE_UNINTERRUPTIBLE","TH_STATE_WAITING","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCDTR","TIOCCONS","TIOCDCDTIMESTAMP","TIOCDRAIN","TIOCDSIMICROCODE","TIOCEXCL","TIOCEXT","TIOCFLUSH","TIOCGDRAINWAIT","TIOCGETD","TIOCGPGRP","TIOCGWINSZ","TIOCIXOFF","TIOCIXON","TIOCMBIC","TIOCMBIS","TIOCMGDTRWAIT","TIOCMGET","TIOCMODG","TIOCMODS","TIOCMSDTRWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCPTYGNAME","TIOCPTYGRANT","TIOCPTYUNLK","TIOCREMOTE","TIOCSBRK","TIOCSCONS","TIOCSCTTY","TIOCSDRAINWAIT","TIOCSDTR","TIOCSETD","TIOCSIG","TIOCSPGRP","TIOCSTART","TIOCSTAT","TIOCSTI","TIOCSTOP","TIOCSWINSZ","TIOCTIMESTAMP","TIOCUCNTL","TMP_MAX","TOSTOP","T_FMT","T_FMT_AMPM","UF_APPEND","UF_COMPRESSED","UF_HIDDEN","UF_IMMUTABLE","UF_NODUMP","UF_OPAQUE","UF_SETTABLE","UF_TRACKED","USER_BC_BASE_MAX","USER_BC_DIM_MAX","USER_BC_SCALE_MAX","USER_BC_STRING_MAX","USER_COLL_WEIGHTS_MAX","USER_CS_PATH","USER_EXPR_NEST_MAX","USER_LINE_MAX","USER_MAXID","USER_POSIX2_CHAR_TERM","USER_POSIX2_C_BIND","USER_POSIX2_C_DEV","USER_POSIX2_FORT_DEV","USER_POSIX2_FORT_RUN","USER_POSIX2_LOCALEDEF","USER_POSIX2_SW_DEV","USER_POSIX2_UPE","USER_POSIX2_VERSION","USER_PROCESS","USER_RE_DUP_MAX","USER_STREAM_MAX","USER_TZNAME_MAX","USRQUOTA","UTIME_NOW","UTIME_OMIT","UTUN_OPT_FLAGS","UTUN_OPT_IFNAME","VDISCARD","VDSUSP","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VM_FLAGS_ALIAS_MASK","VM_FLAGS_ANYWHERE","VM_FLAGS_FIXED","VM_FLAGS_NO_CACHE","VM_FLAGS_OVERWRITE","VM_FLAGS_PURGABLE","VM_FLAGS_RANDOM_ADDR","VM_FLAGS_RESILIENT_CODESIGN","VM_FLAGS_RESILIENT_MEDIA","VM_FLAGS_RETURN_4K_DATA_ADDR","VM_FLAGS_RETURN_DATA_ADDR","VM_FLAGS_SUPERPAGE_MASK","VM_FLAGS_SUPERPAGE_NONE","VM_FLAGS_SUPERPAGE_SHIFT","VM_FLAGS_SUPERPAGE_SIZE_2MB","VM_FLAGS_SUPERPAGE_SIZE_ANY","VM_FLAGS_USER_ALLOCATE","VM_FLAGS_USER_MAP","VM_FLAGS_USER_REMAP","VM_LOADAVG","VM_MACHFACTOR","VM_MAKE_TAG","VM_MAXID","VM_MEMORY_ACCELERATE","VM_MEMORY_ANALYSIS_TOOL","VM_MEMORY_APPKIT","VM_MEMORY_APPLICATION_SPECIFIC_1","VM_MEMORY_APPLICATION_SPECIFIC_16","VM_MEMORY_ASL","VM_MEMORY_ASSETSD","VM_MEMORY_ATS","VM_MEMORY_CARBON","VM_MEMORY_CGIMAGE","VM_MEMORY_COREDATA","VM_MEMORY_COREDATA_OBJECTIDS","VM_MEMORY_COREGRAPHICS","VM_MEMORY_COREGRAPHICS_BACKINGSTORES","VM_MEMORY_COREGRAPHICS_DATA","VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","VM_MEMORY_COREGRAPHICS_MISC","VM_MEMORY_COREGRAPHICS_SHARED","VM_MEMORY_COREGRAPHICS_XALLOC","VM_MEMORY_COREIMAGE","VM_MEMORY_COREPROFILE","VM_MEMORY_CORESERVICES","VM_MEMORY_COREUI","VM_MEMORY_COREUIFILE","VM_MEMORY_CORPSEINFO","VM_MEMORY_DHMM","VM_MEMORY_DYLD","VM_MEMORY_DYLD_MALLOC","VM_MEMORY_DYLIB","VM_MEMORY_FOUNDATION","VM_MEMORY_GENEALOGY","VM_MEMORY_GLSL","VM_MEMORY_GUARD","VM_MEMORY_IMAGEIO","VM_MEMORY_IOKIT","VM_MEMORY_JAVA","VM_MEMORY_JAVASCRIPT_CORE","VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","VM_MEMORY_LAYERKIT","VM_MEMORY_LIBDISPATCH","VM_MEMORY_MACH_MSG","VM_MEMORY_MALLOC","VM_MEMORY_MALLOC_HUGE","VM_MEMORY_MALLOC_LARGE","VM_MEMORY_MALLOC_LARGE_REUSABLE","VM_MEMORY_MALLOC_LARGE_REUSED","VM_MEMORY_MALLOC_NANO","VM_MEMORY_MALLOC_SMALL","VM_MEMORY_MALLOC_TINY","VM_MEMORY_OBJC_DISPATCHERS","VM_MEMORY_OPENCL","VM_MEMORY_OS_ALLOC_ONCE","VM_MEMORY_RAWCAMERA","VM_MEMORY_REALLOC","VM_MEMORY_SBRK","VM_MEMORY_SCENEKIT","VM_MEMORY_SHARED_PMAP","VM_MEMORY_SKYWALK","VM_MEMORY_SQLITE","VM_MEMORY_STACK","VM_MEMORY_SWIFT_METADATA","VM_MEMORY_SWIFT_RUNTIME","VM_MEMORY_TCMALLOC","VM_MEMORY_UNSHARED_PMAP","VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","VM_METER","VM_PAGE_QUERY_PAGE_COPIED","VM_PAGE_QUERY_PAGE_CS_NX","VM_PAGE_QUERY_PAGE_CS_TAINTED","VM_PAGE_QUERY_PAGE_CS_VALIDATED","VM_PAGE_QUERY_PAGE_DIRTY","VM_PAGE_QUERY_PAGE_EXTERNAL","VM_PAGE_QUERY_PAGE_FICTITIOUS","VM_PAGE_QUERY_PAGE_PAGED_OUT","VM_PAGE_QUERY_PAGE_PRESENT","VM_PAGE_QUERY_PAGE_REF","VM_PAGE_QUERY_PAGE_SPECULATIVE","VM_PROT_EXECUTE","VM_PROT_NONE","VM_PROT_READ","VM_PROT_WRITE","VM_SWAPUSAGE","VOL_CAPABILITIES_FORMAT","VOL_CAPABILITIES_INTERFACES","VOL_CAP_FMT_2TB_FILESIZE","VOL_CAP_FMT_64BIT_OBJECT_IDS","VOL_CAP_FMT_CASE_PRESERVING","VOL_CAP_FMT_CASE_SENSITIVE","VOL_CAP_FMT_DECMPFS_COMPRESSION","VOL_CAP_FMT_DIR_HARDLINKS","VOL_CAP_FMT_DOCUMENT_ID","VOL_CAP_FMT_FAST_STATFS","VOL_CAP_FMT_HARDLINKS","VOL_CAP_FMT_HIDDEN_FILES","VOL_CAP_FMT_JOURNAL","VOL_CAP_FMT_JOURNAL_ACTIVE","VOL_CAP_FMT_NO_IMMUTABLE_FILES","VOL_CAP_FMT_NO_PERMISSIONS","VOL_CAP_FMT_NO_ROOT_TIMES","VOL_CAP_FMT_NO_VOLUME_SIZES","VOL_CAP_FMT_OPENDENYMODES","VOL_CAP_FMT_PATH_FROM_ID","VOL_CAP_FMT_PERSISTENTOBJECTIDS","VOL_CAP_FMT_SEALED","VOL_CAP_FMT_SHARED_SPACE","VOL_CAP_FMT_SPARSE_FILES","VOL_CAP_FMT_SYMBOLICLINKS","VOL_CAP_FMT_VOL_GROUPS","VOL_CAP_FMT_WRITE_GENERATION_COUNT","VOL_CAP_FMT_ZERO_RUNS","VOL_CAP_INT_ADVLOCK","VOL_CAP_INT_ALLOCATE","VOL_CAP_INT_ATTRLIST","VOL_CAP_INT_CLONE","VOL_CAP_INT_COPYFILE","VOL_CAP_INT_EXCHANGEDATA","VOL_CAP_INT_EXTENDED_ATTR","VOL_CAP_INT_EXTENDED_SECURITY","VOL_CAP_INT_FLOCK","VOL_CAP_INT_MANLOCK","VOL_CAP_INT_NAMEDSTREAMS","VOL_CAP_INT_NFSEXPORT","VOL_CAP_INT_READDIRATTR","VOL_CAP_INT_RENAME_EXCL","VOL_CAP_INT_RENAME_OPENFAIL","VOL_CAP_INT_RENAME_SWAP","VOL_CAP_INT_SEARCHFS","VOL_CAP_INT_SNAPSHOT","VOL_CAP_INT_USERACCESS","VOL_CAP_INT_VOL_RENAME","VQUIT","VREPRINT","VSTART","VSTATUS","VSTOP","VSUSP","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_OK","XATTR_CREATE","XATTR_NODEFAULT","XATTR_NOFOLLOW","XATTR_NOSECURITY","XATTR_REPLACE","XATTR_SHOWCOMPRESSION","XUCRED_VERSION","X_OK","YESEXPR","YESSTR","_CS_DARWIN_USER_CACHE_DIR","_CS_DARWIN_USER_DIR","_CS_DARWIN_USER_TEMP_DIR","_CS_PATH","_IOFBF","_IOLBF","_IONBF","_NSGetEnviron","_NSGetExecutablePath","_PC_CHOWN_RESTRICTED","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_VDISABLE","_POSIX_VDISABLE","_PTHREAD_COND_SIG_init","_PTHREAD_MUTEX_SIG_init","_PTHREAD_RWLOCK_SIG_init","_RLIMIT_POSIX_FLAG","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FILE_LOCKING","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_UTX_HOSTSIZE","_UTX_IDSIZE","_UTX_LINESIZE","_UTX_USERSIZE","_WSTATUS","_WSTOPPED","__PTHREAD_CONDATTR_SIZE__","__PTHREAD_COND_SIZE__","__PTHREAD_MUTEX_SIZE__","__PTHREAD_RWLOCKATTR_SIZE__","__PTHREAD_RWLOCK_SIZE__","__cpu","__cs","__darwin_mcontext64","__darwin_mmst_reg","__darwin_x86_exception_state64","__darwin_x86_float_state64","__darwin_x86_thread_state64","__darwin_xmm_reg","__err","__error","__es","__faultvaddr","__fpu_cs","__fpu_dp","__fpu_ds","__fpu_fop","__fpu_ftw","__fpu_ip","__fpu_mxcsr","__fpu_mxcsrmask","__fpu_reserved","__fpu_reserved1","__fpu_rsrv1","__fpu_rsrv2","__fpu_rsrv3","__fpu_stmm0","__fpu_stmm1","__fpu_stmm2","__fpu_stmm3","__fpu_stmm4","__fpu_stmm5","__fpu_stmm6","__fpu_stmm7","__fpu_xmm0","__fpu_xmm1","__fpu_xmm10","__fpu_xmm11","__fpu_xmm12","__fpu_xmm13","__fpu_xmm14","__fpu_xmm15","__fpu_xmm2","__fpu_xmm3","__fpu_xmm4","__fpu_xmm5","__fpu_xmm6","__fpu_xmm7","__fpu_xmm8","__fpu_xmm9","__fs","__fs","__gs","__mmst_reg","__mmst_rsrv","__r10","__r11","__r12","__r13","__r14","__r15","__r8","__r9","__rax","__rbp","__rbx","__rcx","__rdi","__rdx","__rflags","__rip","__rsi","__rsp","__ss","__trapno","__xmm_reg","_dyld_get_image_header","_dyld_get_image_name","_dyld_get_image_vmaddr_slide","_dyld_image_count","_exit","_key","_seq","abort","abs","accept","access","acct","actime","active_count","active_count","address","addrinfo","adjtime","affinity_tag","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arc4random","arc4random_buf","arc4random_uniform","arphdr","array","atexit","atof","atoi","attr_dataoffset","attr_length","attrgroup_t","attribute_set_t","attrlist","attrreference_t","backtrace","backtrace_async","backtrace_from_fp","backtrace_image_offsets","backtrace_symbols","backtrace_symbols_fd","basename","batch_free","batch_malloc","bh_caplen","bh_datalen","bh_hdrlen","bh_tstamp","bind","bitmapcount","blkcnt_t","blksize_t","blocks_in_use","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpf_hdr","brk","bsearch","buf","bytes_free","bytes_total","bytes_used","c_cc","c_cflag","c_char","c_double","c_float","c_iflag","c_int","c_ispeed","c_lflag","c_long","c_longlong","c_oflag","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","calloc","capabilities","cc_t","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","chdir","chflags","chmod","chown","chroot","chunks_free","chunks_used","claimed_address","clearerr","clock_getres","clock_gettime","clock_settime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clonefile","clonefileat","close","closedir","closelog","cmd","cmd","cmd","cmdsize","cmdsize","cmdsize","cmsg_len","cmsg_level","cmsg_type","cmsghdr","commonattr","commonattr","compressions","compressor_page_count","computation","confstr","connect","connectx","constant","constraint","copyfile","copyfile_flags_t","copyfile_state_t","cow_faults","cow_faults","cpu_subtype","cpu_subtype_t","cpu_ticks","cpu_type","cpu_type_t","cpu_usage","cpusubtype","cpusubtype","cputype","cputype","cr_groups","cr_ngroups","cr_uid","cr_version","creat","cuid","currency_symbol","d_ino","d_name","d_namlen","d_reclen","d_seekoff","d_type","data","data","decimal_point","decompressions","default_policy","denom","destroy","dev_t","difftime","dirattr","dirattr","dirent","dirfd","dirname","disconnectx","dispatch_qaddr","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlopen","dlsym","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curbytes","dqb_curinodes","dqb_id","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_spare","dqblk","drand48","dup","dup2","duplocale","e_tdev","e_tpgid","endgrent","endpwent","endservent","endutxent","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","esterror","esterror","events","exchangedata","execl","execle","execlp","execv","execve","execvp","exit","ext","external_page_count","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_flags_ext","f_frsize","f_fsid","f_fsid","f_fssubtype","f_fstypename","f_iosize","f_mntfromname","f_mntonname","f_namemax","f_owner","f_reserved","f_type","faccessat","faults","faults","fchdir","fchflags","fchmod","fchmodat","fchown","fchownat","fclonefileat","fclose","fcntl","fcopyfile","fd","fd_set","fdopen","fdopendir","feof","ferror","fflags","fflags","fflush","fgetattrlist","fgetc","fgetpos","fgets","fgetxattr","fileattr","fileattr","fileno","fileoff","fileoff","filesize","filesize","filetype","filetype","filter","filter","flag","flags","flags","flags","flags","flags","flags","flags","flistxattr","flock","flock","fmemopen","fmount","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fopen","fork","forkattr","forkattr","forkpty","fpathconf","fpos_t","fprintf","fputc","fputs","frac_digits","fread","free","free","free_count","free_count","free_definite_size","freeaddrinfo","freeifaddrs","freelocale","fremovexattr","freopen","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fseek","fseeko","fsetattrlist","fsetpos","fsetxattr","fsfilcnt_t","fsid_t","fst_bytesalloc","fst_flags","fst_length","fst_offset","fst_posmode","fstat","fstatat","fstatfs","fstatvfs","fstore_t","fsync","ftell","ftello","ftok","ftruncate","futimens","futimes","fwrite","gai_strerror","getaddrinfo","getattrlist","getattrlistat","getattrlistbulk","getchar","getchar_unlocked","getcwd","getdomainname","getdtablesize","getegid","getenv","geteuid","getfsstat","getgid","getgrent","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","gethostuuid","getifaddrs","getitimer","getline","getloadavg","getlogin","getmntinfo","getnameinfo","getopt","getopt_long","getpeereid","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprogname","getprotobyname","getprotobynumber","getpwent","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrlimit","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid_t","gl_offs","gl_pathc","gl_pathv","glob","glob_t","globfree","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","group","grouping","h_addr_list","h_addrtype","h_aliases","h_length","h_name","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr_cnt","headers","hits","hits","host_flavor_t","host_info64_t","host_info_t","host_processor_info","host_statistics","host_statistics64","host_t","hostent","hstrerror","iconv","iconv_close","iconv_open","iconv_t","id_t","ident","ident","idtype_t","if_data","if_data64","if_freenameindex","if_index","if_indextoname","if_msghdr","if_msghdr2","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_dstaddr","ifa_flags","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifi_addrlen","ifi_addrlen","ifi_baudrate","ifi_baudrate","ifi_collisions","ifi_collisions","ifi_hdrlen","ifi_hdrlen","ifi_hwassist","ifi_ibytes","ifi_ibytes","ifi_ierrors","ifi_ierrors","ifi_imcasts","ifi_imcasts","ifi_ipackets","ifi_ipackets","ifi_iqdrops","ifi_iqdrops","ifi_lastchange","ifi_lastchange","ifi_metric","ifi_metric","ifi_mtu","ifi_mtu","ifi_noproto","ifi_noproto","ifi_obytes","ifi_obytes","ifi_oerrors","ifi_oerrors","ifi_omcasts","ifi_omcasts","ifi_opackets","ifi_opackets","ifi_physical","ifi_physical","ifi_recvquota","ifi_recvquota","ifi_recvtiming","ifi_recvtiming","ifi_reserved1","ifi_reserved2","ifi_type","ifi_type","ifi_typelen","ifi_typelen","ifi_unused1","ifi_unused1","ifi_unused2","ifi_xmitquota","ifi_xmitquota","ifi_xmittiming","ifi_xmittiming","ifm_addrs","ifm_addrs","ifm_data","ifm_data","ifm_flags","ifm_flags","ifm_index","ifm_index","ifm_msglen","ifm_msglen","ifm_snd_drops","ifm_snd_len","ifm_snd_maxlen","ifm_timer","ifm_type","ifm_type","ifm_version","ifm_version","image_offset","importance","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in_addr","in_addr_t","in_pktinfo","in_port_t","inactive_count","inactive_count","initgroups","initprot","initprot","ino_t","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","integer_t","internal_page_count","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","introspect","ioctl","iov_base","iov_len","iovec","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","is_master","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_value","itimerval","jitcnt","jitter","jrand48","kCCAlignmentError","kCCBufferTooSmall","kCCCallSequenceError","kCCDecodeError","kCCInvalidKey","kCCKeySizeError","kCCMemoryFailure","kCCOverflow","kCCParamError","kCCRNGFailure","kCCSuccess","kCCUnimplemented","kCCUnspecifiedError","kern_return_t","kevent","kevent","kevent64","kevent64_s","key_t","kill","killpg","kqueue","l2p_contigbytes","l2p_devoffset","l2p_flags","l_len","l_linger","l_onoff","l_pid","l_start","l_type","l_whence","labs","lchown","lcong48","lconv","ledger_array_t","ledger_t","linger","link","linkat","lio_listio","listen","listxattr","load_average","load_command","locale_t","localeconv","localeconv_l","localtime","localtime_r","lockf","log2phys","login_tty","lookups","lookups","lrand48","lseek","lstat","lutimes","mach_absolute_time","mach_factor","mach_header","mach_header_64","mach_host_self","mach_msg_type_number_t","mach_port_t","mach_task_basic_info","mach_task_basic_info_data_t","mach_task_basic_info_t","mach_task_self","mach_task_self_","mach_thread_self","mach_timebase_info","mach_timebase_info","mach_timebase_info_data_t","mach_vm_address_t","mach_vm_map","mach_vm_offset_t","mach_vm_size_t","machine","madvise","magic","magic","major","makedev","malloc","malloc","malloc_default_zone","malloc_good_size","malloc_introspection_t","malloc_printf","malloc_size","malloc_statistics_t","malloc_zone_calloc","malloc_zone_check","malloc_zone_free","malloc_zone_from_ptr","malloc_zone_log","malloc_zone_malloc","malloc_zone_print","malloc_zone_print_ptr_info","malloc_zone_realloc","malloc_zone_statistics","malloc_zone_t","malloc_zone_valloc","max_align_t","max_size_in_use","maxerror","maxerror","maxprot","maxprot","mcontext_t","mem_entry_name_port_t","memalign","memchr","memcmp","memcpy","memmem","memmove","memory_object_offset_t","memory_object_t","memset","memset_pattern16","memset_pattern4","memset_pattern8","memset_s","microseconds","mincore","minor","mkdir","mkdirat","mkdtemp","mkfifo","mknod","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mrand48","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","mstats","mstats","msync","munlock","munlockall","munmap","n_cs_precedes","n_sep_by_space","n_sign_posn","name","nanosleep","nativeattr","natural_t","ncmds","ncmds","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negative_sign","newlocale","nfds_t","nice","nl_item","nl_langinfo","nlink_t","no_data","nodename","nrand48","nsects","nsects","ntp_adjtime","ntp_gettime","ntptimeval","numer","off_t","offset","offset","open","open_memstream","open_wmemstream","openat","opendir","openlog","openpty","option","os_log_create","os_log_t","os_log_type_enabled","os_log_type_t","os_signpost_enabled","os_signpost_id_generate","os_signpost_id_make_with_pointer","os_signpost_id_t","os_signpost_type_t","os_unfair_lock","os_unfair_lock_assert_not_owner","os_unfair_lock_assert_owner","os_unfair_lock_lock","os_unfair_lock_s","os_unfair_lock_t","os_unfair_lock_trylock","os_unfair_lock_unlock","p_aliases","p_cs_precedes","p_name","p_proto","p_sep_by_space","p_sign_posn","pageins","pageins","pageouts","pageouts","passwd","pathconf","pause","pbi_comm","pbi_flags","pbi_gid","pbi_name","pbi_nfiles","pbi_nice","pbi_pgid","pbi_pid","pbi_pjobc","pbi_ppid","pbi_rgid","pbi_ruid","pbi_start_tvsec","pbi_start_tvusec","pbi_status","pbi_svgid","pbi_svuid","pbi_uid","pbi_xstatus","pbsd","pclose","period","perror","pid_t","pipe","policy","policy","policy_t","poll","pollfd","popen","positive_sign","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getarchpref_np","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setarchpref_np","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppsfreq","pread","preadv","precision","preemptible","pressure_relief","printf","priority","proc_bsdinfo","proc_kmsgbuf","proc_libversion","proc_listallpids","proc_listchildpids","proc_listpgrppids","proc_listpids","proc_name","proc_pid_rusage","proc_pidfdinfo","proc_pidfileportinfo","proc_pidinfo","proc_pidpath","proc_regionfilename","proc_set_csm","proc_set_no_smt","proc_setthread_csm","proc_setthread_no_smt","proc_taskallinfo","proc_taskinfo","proc_threadinfo","proc_vnodepathinfo","processor_basic_info","processor_basic_info_data_t","processor_basic_info_t","processor_count","processor_cpu_load_info","processor_cpu_load_info_data_t","processor_cpu_load_info_t","processor_flavor_t","processor_info_array_t","processor_info_t","processor_set_basic_info","processor_set_basic_info_data_t","processor_set_basic_info_t","processor_set_load_info","processor_set_load_info_data_t","processor_set_load_info_t","protoent","pselect","pseudo_AF_HDRCMPLT","pseudo_AF_KEY","pseudo_AF_PIP","pseudo_AF_RTIP","pseudo_AF_XTP","pth_cpu_usage","pth_cpu_usage","pth_curpri","pth_curpri","pth_flags","pth_flags","pth_maxpriority","pth_maxpriority","pth_name","pth_name","pth_policy","pth_policy","pth_priority","pth_priority","pth_run_state","pth_run_state","pth_sleep_time","pth_sleep_time","pth_system_time","pth_system_time","pth_user_time","pth_user_time","pthread_atfork","pthread_attr_destroy","pthread_attr_get_qos_class_np","pthread_attr_getschedparam","pthread_attr_init","pthread_attr_set_qos_class_np","pthread_attr_setdetachstate","pthread_attr_setschedparam","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_condattr_t","pthread_cpu_number_np","pthread_create","pthread_create_from_mach_thread","pthread_detach","pthread_exit","pthread_from_mach_thread_np","pthread_get_qos_class_np","pthread_get_stackaddr_np","pthread_get_stacksize_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_introspection_getspecific_np","pthread_introspection_hook_install","pthread_introspection_hook_t","pthread_introspection_setspecific_np","pthread_jit_write_callback_t","pthread_jit_write_freeze_callbacks_np","pthread_jit_write_protect_np","pthread_jit_write_protect_supported_np","pthread_jit_write_with_callback_np","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mach_thread_np","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_set_qos_class_self_np","pthread_setname_np","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_t","pthread_threadid_np","pti_cow_faults","pti_csw","pti_faults","pti_messages_received","pti_messages_sent","pti_numrunning","pti_pageins","pti_policy","pti_priority","pti_resident_size","pti_syscalls_mach","pti_syscalls_unix","pti_threadnum","pti_threads_system","pti_threads_user","pti_total_system","pti_total_user","pti_virtual_size","ptinfo","ptrace","ptrdiff_t","ptsname","purgeable_count","purgeable_count","purges","purges","putchar","putchar_unlocked","putenv","puts","pututxline","pvi_cdir","pvi_rdir","pw_change","pw_class","pw_dir","pw_expire","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwritev","qos_class_t","qsort","querylocale","quotactl","ra_count","ra_offset","radvisory","raise","rand","reactivations","reactivations","read","readdir","readdir_r","readlink","readlinkat","readv","realloc","realloc","realpath","recv","recvfrom","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","release","remove","removexattr","rename","renameat","renameatx_np","renamex_np","res_init","reserved","reserved","resident_size","resident_size_max","revents","rewind","rewinddir","rfu_1","ri_billed_energy","ri_billed_system_time","ri_billed_system_time","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_cpu_time_qos_background","ri_cpu_time_qos_background","ri_cpu_time_qos_default","ri_cpu_time_qos_default","ri_cpu_time_qos_legacy","ri_cpu_time_qos_legacy","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_utility","ri_cpu_time_qos_utility","ri_cycles","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_instructions","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interval_max_phys_footprint","ri_lifetime_max_phys_footprint","ri_logical_writes","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_runnable_time","ri_serviced_energy","ri_serviced_system_time","ri_serviced_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","rlim_cur","rlim_max","rlim_t","rlimit","rm_eo","rm_so","rmdir","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","run_state","running","rusage","rusage_info_t","rusage_info_v0","rusage_info_v1","rusage_info_v2","rusage_info_v3","rusage_info_v4","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_endpoints_t","sa_family","sa_family_t","sa_flags","sa_len","sa_mask","sa_sigaction","sae_associd_t","sae_connid_t","sae_dstaddr","sae_dstaddrlen","sae_srcaddr","sae_srcaddrlen","sae_srcif","sbrk","sc_family","sc_id","sc_len","sc_reserved","sc_unit","scanf","sched_get_priority_max","sched_get_priority_min","sched_param","sched_priority","sched_yield","sdl_alen","sdl_data","sdl_family","sdl_index","sdl_len","sdl_nlen","sdl_slen","sdl_type","seconds","seed48","seekdir","segment_command","segment_command_64","segname","segname","select","sem_base","sem_close","sem_ctime","sem_flg","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_pad1","sem_pad2","sem_pad3","sem_perm","sem_post","sem_t","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semid_ds","semop","semun","send","sendfile","sendmsg","sendto","servent","setattrlist","setattrlistat","setbuf","setdomainname","setegid","setenv","seteuid","setgid","setgrent","setgroups","sethostid","sethostname","setitimer","setlocale","setlogmask","setpgid","setpriority","setprogname","setpwent","setregid","setreuid","setrlimit","setservent","setsid","setsockopt","settimeofday","setuid","setutxent","setvbuf","setxattr","sf_hdtr","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_internal","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_addr","si_code","si_errno","si_pid","si_pid","si_signo","si_status","si_status","si_uid","si_uid","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_attributes","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","sigpending","sigprocmask","sigset_t","sigval","sigwait","sin6_addr","sin6_family","sin6_flowinfo","sin6_len","sin6_port","sin6_scope_id","sin_addr","sin_addr","sin_family","sin_family","sin_len","sin_len","sin_other","sin_port","sin_port","sin_srcaddr","sin_tos","sin_zero","sival_ptr","size","size","size_allocated","size_in_use","size_t","sizeofcmds","sizeofcmds","sleep","sleep_time","slot_num","snd_family","snd_len","snd_name","snprintf","sockaddr","sockaddr_ctl","sockaddr_dl","sockaddr_in","sockaddr_in6","sockaddr_inarp","sockaddr_ndrv","sockaddr_storage","sockaddr_un","socket","socketpair","socklen_t","speculative_count","speculative_count","speed_t","sprintf","srand","srand48","ss_family","ss_flags","ss_len","ss_size","ss_sp","ss_sysaddr","sscanf","ssize_t","st_atime","st_atime_nsec","st_birthtime","st_birthtime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_flags","st_gen","st_gid","st_ino","st_lspare","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_qspare","st_rdev","st_size","st_uid","stabil","stack_t","stat","stat","statfs","statfs","status","statvfs","statvfs","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strpbrk","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtonum","strtoul","strxfrm","sun_family","sun_len","sun_path","suseconds_t","suspend_count","suspend_count","swapins","swapouts","symlink","symlinkat","sync","syscall","sysconf","sysctl","sysctlbyname","sysctlnametomib","sysdir_get_next_search_path_enumeration","sysdir_search_path_directory_t","sysdir_search_path_domain_mask_t","sysdir_search_path_enumeration_state","sysdir_start_search_path_enumeration","syslog","sysname","system","system_time","system_time","system_time","tai","task_count","task_create","task_flavor_t","task_for_pid","task_info","task_info_t","task_inspect_t","task_set_info","task_t","task_terminate","task_thread_times_info","task_thread_times_info_data_t","task_thread_times_info_t","task_threads","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","telldir","termios","thousands_sep","thread_act_array_t","thread_act_t","thread_affinity_policy","thread_affinity_policy_data_t","thread_affinity_policy_t","thread_background_policy","thread_background_policy_data_t","thread_background_policy_t","thread_basic_info","thread_basic_info_data_t","thread_basic_info_t","thread_count","thread_extended_info","thread_extended_info_data_t","thread_extended_info_t","thread_extended_policy","thread_extended_policy_data_t","thread_extended_policy_t","thread_flavor_t","thread_handle","thread_id","thread_identifier_info","thread_identifier_info_data_t","thread_identifier_info_t","thread_info","thread_info_t","thread_inspect_t","thread_latency_qos_policy","thread_latency_qos_policy_data_t","thread_latency_qos_policy_t","thread_latency_qos_t","thread_latency_qos_tier","thread_policy_flavor_t","thread_policy_get","thread_policy_set","thread_policy_t","thread_precedence_policy","thread_precedence_policy_data_t","thread_precedence_policy_t","thread_standard_policy","thread_standard_policy_data_t","thread_standard_policy_t","thread_t","thread_throughput_qos_policy","thread_throughput_qos_policy_data_t","thread_throughput_qos_policy_t","thread_throughput_qos_t","thread_throughput_qos_tier","thread_time_constraint_policy","thread_time_constraint_policy_data_t","thread_time_constraint_policy_t","throttled_count","time","time","time_state","time_t","time_value_t","timegm","times","timeshare","timespec","timeval","timeval32","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","total_uncompressed_pages_in_compressor","toupper","trailers","trl_cnt","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uc_link","uc_mcontext","uc_mcsize","uc_onstack","uc_sigmask","uc_stack","ucontext_t","udata","udata","uid","uid_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","uname","ungetc","unlink","unlinkat","unlockpt","unmount","unsetenv","useconds_t","uselocale","user_time","user_time","user_time","usleep","ut_host","ut_id","ut_line","ut_pid","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpx","utmpxname","utsname","uuid","uuid_t","val","val","valid","validattr","valloc","version","version","vi_fsid","vi_pad","vi_stat","vi_type","vinfo_stat","vip_path","vip_vi","virtual_size","vm_address_t","vm_deallocate","vm_inherit_t","vm_map_t","vm_offset_t","vm_page_size","vm_prot_t","vm_range_t","vm_size_t","vm_statistics","vm_statistics64","vm_statistics64_data_t","vm_statistics64_t","vm_statistics_data_t","vm_statistics_t","vmaddr","vmaddr","vmsize","vmsize","vnode_info","vnode_info_path","vol_attributes_attr_t","vol_capabilities_attr_t","vol_capabilities_set_t","volattr","volattr","vst_atime","vst_atimensec","vst_birthtime","vst_birthtimensec","vst_blksize","vst_blocks","vst_ctime","vst_ctimensec","vst_dev","vst_flags","vst_gen","vst_gid","vst_ino","vst_mode","vst_mtime","vst_mtimensec","vst_nlink","vst_qspare","vst_rdev","vst_size","vst_uid","wait","wait4","waitid","waitpid","wchar_t","wcslen","wcstombs","winsize","wire_count","wire_count","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xsu_avail","xsu_encrypted","xsu_pagesize","xsu_total","xsu_used","xsw_usage","xucred","zero_fill_count","zero_fill_count","zone_name"],"q":["libcddata includes security that replaces the TFO-cookie","data is idempotent","resume connect() on read/writehird Party Connect","Any distributed FS","IP6 Auth Header","any host internal protocol","any private encr. scheme","Argus","AX.25 Frames","BHA","Bulk Data Transfer","BackRoom SATNET Monitoring","CFTP","Chaos","Control Message Transport","Comp. Prot. HeartBeat","Comp. Prot. Net. Executive","Datagram Delivery","dissimilar gateway prot.","divert pseudo-protocol","last return value of *_input(), meaning “all job for …","IP6 destination option","exterior gateway protocol","EMCON","encapsulation header","ISO cnlp","IP6 Encap Sec. Payload","Ethernet IP encapsulation","IP6 fragmentation header","gateway2 (deprecated)","GMTP","General Routing Encap.","“hello” routing protocol","Host Monitoring","IP6 hop-by-hop options","","","xns idp","InterDomain Policy Routing","InterDomain Routing","group mgmt protocol","NSFNET-IGP","Cisco/GXS IGRP","IL transport protocol","Integ. Net Layer Security","Merit Internodal","","payload compression (IPComp)","Packet Core Utility","IP encapsulated in IP","for compatibility","Pluribus Packet Core","","Reliable Transaction","Kryptolan","Locus Address Resoloution","Leaf-1","Leaf-2","","DCN Measurement Subsystems","Mobile Host Routing","Mobile Int.ing control","Multicast Transport","Multiplexing","Sun net disk proto (temp.)","Next Hop Resolution","IP6 no next header","Network Services","network voice protocol","OSPFIGP","PGM","private interior gateway","Protocol Independent Mcast","Packet Radio Measurement","pup","Packet Video Protocol","raw IP packet","BBN RCC Monitoring","Reliable Data","IP6 routing header","resource reservation","Remote Virtual Disk","SATNET/Backroom EXPAK","Satnet Monitoring","Semaphore Comm. security","SCTP","Source Demand Routing","Sequential Exchange","Strite RPC protocol","Stream protocol II.","Secure VMTP","IP with encryption","TCF","","tp-4 w/ class negotiation","TP++ Transport","Trunk-1","Trunk-2","TTP","","Banyon VINES","VISA Protocol","VMTP","WIDEBAND EXPAK","WIDEBAND Monitoring","Wang Span Network","Cross Net Debuggersae_associd_t)(-1ULL))","","((sae_connid_tnable/Disable TCP Fastopen on this socketquivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notesalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmsghdr",0]],["c_uchar",0]],[[["msghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],[[["msghdr",0],["cmsghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["fd_set",0]]],[[["c_int",6],["fd_set",0]],["bool",0]],[[["c_int",6],["fd_set",0]]],null,[[["fd_set",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["bool",0]],null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],null,null,null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dir",4]],["dir",4]],[[["group",3]],["group",3]],[[["utimbuf",3]],["utimbuf",3]],[[["timeval",3]],["timeval",3]],[[["timespec",3]],["timespec",3]],[[["rlimit",3]],["rlimit",3]],[[["rusage",3]],["rusage",3]],[[["ipv6_mreq",3]],["ipv6_mreq",3]],[[["hostent",3]],["hostent",3]],[[["iovec",3]],["iovec",3]],[[["pollfd",3]],["pollfd",3]],[[["winsize",3]],["winsize",3]],[[["linger",3]],["linger",3]],[[["sigval",3]],["sigval",3]],[[["itimerval",3]],["itimerval",3]],[[["tms",3]],["tms",3]],[[["servent",3]],["servent",3]],[[["protoent",3]],["protoent",3]],[[["file",4]],["file",4]],[[["fpos_t",4]],["fpos_t",4]],[[["sockaddr",3]],["sockaddr",3]],[[["sockaddr_in6",3]],["sockaddr_in6",3]],[[["passwd",3]],["passwd",3]],[[["ifaddrs",3]],["ifaddrs",3]],[[["fd_set",3]],["fd_set",3]],[[["tm",3]],["tm",3]],[[["msghdr",3]],["msghdr",3]],[[["cmsghdr",3]],["cmsghdr",3]],[[["fsid_t",3]],["fsid_t",3]],[[["if_nameindex",3]],["if_nameindex",3]],[[["regex_t",3]],["regex_t",3]],[[["regmatch_t",3]],["regmatch_t",3]],[[["option",3]],["option",3]],[[["sockaddr_un",3]],["sockaddr_un",3]],[[["utsname",3]],["utsname",3]],[[["timezone",4]],["timezone",4]],[[["qos_class_t",4]],["qos_class_t",4]],[[["sysdir_search_path_directory_t",4]],["sysdir_search_path_directory_t",4]],[[["sysdir_search_path_domain_mask_t",4]],["sysdir_search_path_domain_mask_t",4]],[[["ip_mreq",3]],["ip_mreq",3]],[[["ip_mreqn",3]],["ip_mreqn",3]],[[["ip_mreq_source",3]],["ip_mreq_source",3]],[[["aiocb",3]],["aiocb",3]],[[["glob_t",3]],["glob_t",3]],[[["addrinfo",3]],["addrinfo",3]],[[["mach_timebase_info",3]],["mach_timebase_info",3]],[[["stat",3]],["stat",3]],[[["pthread_mutexattr_t",3]],["pthread_mutexattr_t",3]],[[["pthread_condattr_t",3]],["pthread_condattr_t",3]],[[["pthread_rwlockattr_t",3]],["pthread_rwlockattr_t",3]],[[["siginfo_t",3]],["siginfo_t",3]],[[["sigaction",3]],["sigaction",3]],[[["stack_t",3]],["stack_t",3]],[[["fstore_t",3]],["fstore_t",3]],[[["radvisory",3]],["radvisory",3]],[[["statvfs",3]],["statvfs",3]],[[["dl_info",3]],["dl_info",3]],[[["sockaddr_in",3]],["sockaddr_in",3]],[[["kevent64_s",3]],["kevent64_s",3]],[[["dqblk",3]],["dqblk",3]],[[["if_msghdr",3]],["if_msghdr",3]],[[["termios",3]],["termios",3]],[[["flock",3]],["flock",3]],[[["sf_hdtr",3]],["sf_hdtr",3]],[[["lconv",3]],["lconv",3]],[[["proc_taskinfo",3]],["proc_taskinfo",3]],[[["proc_bsdinfo",3]],["proc_bsdinfo",3]],[[["proc_taskallinfo",3]],["proc_taskallinfo",3]],[[["xsw_usage",3]],["xsw_usage",3]],[[["xucred",3]],["xucred",3]],[[["mach_header",3]],["mach_header",3]],[[["mach_header_64",3]],["mach_header_64",3]],[[["segment_command",3]],["segment_command",3]],[[["segment_command_64",3]],["segment_command_64",3]],[[["load_command",3]],["load_command",3]],[[["sockaddr_dl",3]],["sockaddr_dl",3]],[[["sockaddr_inarp",3]],["sockaddr_inarp",3]],[[["sockaddr_ctl",3]],["sockaddr_ctl",3]],[[["in_pktinfo",3]],["in_pktinfo",3]],[[["in6_pktinfo",3]],["in6_pktinfo",3]],[[["ipc_perm",3]],["ipc_perm",3]],[[["sembuf",3]],["sembuf",3]],[[["arphdr",3]],["arphdr",3]],[[["in_addr",3]],["in_addr",3]],[[["sockaddr_ndrv",3]],["sockaddr_ndrv",3]],[[["sa_endpoints_t",3]],["sa_endpoints_t",3]],[[["timex",3]],["timex",3]],[[["ntptimeval",3]],["ntptimeval",3]],[[["thread_standard_policy",3]],["thread_standard_policy",3]],[[["thread_extended_policy",3]],["thread_extended_policy",3]],[[["thread_time_constraint_policy",3]],["thread_time_constraint_policy",3]],[[["thread_precedence_policy",3]],["thread_precedence_policy",3]],[[["thread_affinity_policy",3]],["thread_affinity_policy",3]],[[["thread_background_policy",3]],["thread_background_policy",3]],[[["thread_latency_qos_policy",3]],["thread_latency_qos_policy",3]],[[["thread_throughput_qos_policy",3]],["thread_throughput_qos_policy",3]],[[["malloc_statistics_t",3]],["malloc_statistics_t",3]],[[["mstats",3]],["mstats",3]],[[["vm_range_t",3]],["vm_range_t",3]],[[["sched_param",3]],["sched_param",3]],[[["vinfo_stat",3]],["vinfo_stat",3]],[[["vnode_info",3]],["vnode_info",3]],[[["vnode_info_path",3]],["vnode_info_path",3]],[[["proc_vnodepathinfo",3]],["proc_vnodepathinfo",3]],[[["vm_statistics",3]],["vm_statistics",3]],[[["task_thread_times_info",3]],["task_thread_times_info",3]],[[["rusage_info_v0",3]],["rusage_info_v0",3]],[[["rusage_info_v1",3]],["rusage_info_v1",3]],[[["rusage_info_v2",3]],["rusage_info_v2",3]],[[["rusage_info_v3",3]],["rusage_info_v3",3]],[[["rusage_info_v4",3]],["rusage_info_v4",3]],[[["image_offset",3]],["image_offset",3]],[[["attrlist",3]],["attrlist",3]],[[["attrreference_t",3]],["attrreference_t",3]],[[["vol_capabilities_attr_t",3]],["vol_capabilities_attr_t",3]],[[["attribute_set_t",3]],["attribute_set_t",3]],[[["vol_attributes_attr_t",3]],["vol_attributes_attr_t",3]],[[["kevent",3]],["kevent",3]],[[["semid_ds",3]],["semid_ds",3]],[[["shmid_ds",3]],["shmid_ds",3]],[[["proc_threadinfo",3]],["proc_threadinfo",3]],[[["statfs",3]],["statfs",3]],[[["dirent",3]],["dirent",3]],[[["pthread_rwlock_t",3]],["pthread_rwlock_t",3]],[[["pthread_mutex_t",3]],["pthread_mutex_t",3]],[[["pthread_cond_t",3]],["pthread_cond_t",3]],[[["sockaddr_storage",3]],["sockaddr_storage",3]],[[["utmpx",3]],["utmpx",3]],[[["sigevent",3]],["sigevent",3]],[[["processor_cpu_load_info",3]],["processor_cpu_load_info",3]],[[["processor_basic_info",3]],["processor_basic_info",3]],[[["processor_set_basic_info",3]],["processor_set_basic_info",3]],[[["processor_set_load_info",3]],["processor_set_load_info",3]],[[["time_value_t",3]],["time_value_t",3]],[[["thread_basic_info",3]],["thread_basic_info",3]],[[["thread_identifier_info",3]],["thread_identifier_info",3]],[[["thread_extended_info",3]],["thread_extended_info",3]],[[["if_data64",3]],["if_data64",3]],[[["if_msghdr2",3]],["if_msghdr2",3]],[[["vm_statistics64",3]],["vm_statistics64",3]],[[["mach_task_basic_info",3]],["mach_task_basic_info",3]],[[["log2phys",3]],["log2phys",3]],[[["os_unfair_lock_s",3]],["os_unfair_lock_s",3]],[[["semun",19]],["semun",19]],[[["timeval32",3]],["timeval32",3]],[[["if_data",3]],["if_data",3]],[[["bpf_hdr",3]],["bpf_hdr",3]],[[["pthread_attr_t",3]],["pthread_attr_t",3]],[[["ucontext_t",3]],["ucontext_t",3]],[[["__darwin_mcontext64",3]],["__darwin_mcontext64",3]],[[["__darwin_x86_exception_state64",3]],["__darwin_x86_exception_state64",3]],[[["__darwin_x86_thread_state64",3]],["__darwin_x86_thread_state64",3]],[[["__darwin_x86_float_state64",3]],["__darwin_x86_float_state64",3]],[[["__darwin_mmst_reg",3]],["__darwin_mmst_reg",3]],[[["__darwin_xmm_reg",3]],["__darwin_xmm_reg",3]],[[["malloc_introspection_t",3]],["malloc_introspection_t",3]],[[["malloc_zone_t",3]],["malloc_zone_t",3]],[[["max_align_t",3]],["max_align_t",3]],[[["in6_addr",3]],["in6_addr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["group",3],["group",3]],["bool",0]],[[["utimbuf",3],["utimbuf",3]],["bool",0]],[[["timeval",3],["timeval",3]],["bool",0]],[[["timespec",3],["timespec",3]],["bool",0]],[[["rlimit",3],["rlimit",3]],["bool",0]],[[["rusage",3],["rusage",3]],["bool",0]],[[["ipv6_mreq",3],["ipv6_mreq",3]],["bool",0]],[[["hostent",3],["hostent",3]],["bool",0]],[[["iovec",3],["iovec",3]],["bool",0]],[[["pollfd",3],["pollfd",3]],["bool",0]],[[["winsize",3],["winsize",3]],["bool",0]],[[["linger",3],["linger",3]],["bool",0]],[[["sigval",3],["sigval",3]],["bool",0]],[[["itimerval",3],["itimerval",3]],["bool",0]],[[["tms",3],["tms",3]],["bool",0]],[[["servent",3],["servent",3]],["bool",0]],[[["protoent",3],["protoent",3]],["bool",0]],[[["sockaddr",3],["sockaddr",3]],["bool",0]],[[["sockaddr_in6",3],["sockaddr_in6",3]],["bool",0]],[[["passwd",3],["passwd",3]],["bool",0]],[[["ifaddrs",3],["ifaddrs",3]],["bool",0]],[[["fd_set",3],["fd_set",3]],["bool",0]],[[["tm",3],["tm",3]],["bool",0]],[[["msghdr",3],["msghdr",3]],["bool",0]],[[["cmsghdr",3],["cmsghdr",3]],["bool",0]],[[["fsid_t",3],["fsid_t",3]],["bool",0]],[[["if_nameindex",3],["if_nameindex",3]],["bool",0]],[[["regex_t",3],["regex_t",3]],["bool",0]],[[["regmatch_t",3],["regmatch_t",3]],["bool",0]],[[["option",3],["option",3]],["bool",0]],[[["sockaddr_un",3],["sockaddr_un",3]],["bool",0]],[[["utsname",3],["utsname",3]],["bool",0]],[[["os_unfair_lock",6],["os_unfair_lock",6]],["bool",0]],[[["ip_mreq",3],["ip_mreq",3]],["bool",0]],[[["ip_mreqn",3],["ip_mreqn",3]],["bool",0]],[[["ip_mreq_source",3],["ip_mreq_source",3]],["bool",0]],[[["aiocb",3],["aiocb",3]],["bool",0]],[[["glob_t",3],["glob_t",3]],["bool",0]],[[["addrinfo",3],["addrinfo",3]],["bool",0]],[[["mach_timebase_info",3],["mach_timebase_info",3]],["bool",0]],[[["stat",3],["stat",3]],["bool",0]],[[["pthread_mutexattr_t",3],["pthread_mutexattr_t",3]],["bool",0]],[[["pthread_condattr_t",3],["pthread_condattr_t",3]],["bool",0]],[[["pthread_rwlockattr_t",3],["pthread_rwlockattr_t",3]],["bool",0]],[[["siginfo_t",3],["siginfo_t",3]],["bool",0]],[[["sigaction",3],["sigaction",3]],["bool",0]],[[["stack_t",3],["stack_t",3]],["bool",0]],[[["fstore_t",3],["fstore_t",3]],["bool",0]],[[["radvisory",3],["radvisory",3]],["bool",0]],[[["statvfs",3],["statvfs",3]],["bool",0]],[[["dl_info",3],["dl_info",3]],["bool",0]],[[["sockaddr_in",3],["sockaddr_in",3]],["bool",0]],[[["kevent64_s",3],["kevent64_s",3]],["bool",0]],[[["dqblk",3],["dqblk",3]],["bool",0]],[[["if_msghdr",3],["if_msghdr",3]],["bool",0]],[[["termios",3],["termios",3]],["bool",0]],[[["flock",3],["flock",3]],["bool",0]],[[["sf_hdtr",3],["sf_hdtr",3]],["bool",0]],[[["lconv",3],["lconv",3]],["bool",0]],[[["proc_taskinfo",3],["proc_taskinfo",3]],["bool",0]],[[["proc_bsdinfo",3],["proc_bsdinfo",3]],["bool",0]],[[["proc_taskallinfo",3],["proc_taskallinfo",3]],["bool",0]],[[["xsw_usage",3],["xsw_usage",3]],["bool",0]],[[["xucred",3],["xucred",3]],["bool",0]],[[["mach_header",3],["mach_header",3]],["bool",0]],[[["mach_header_64",3],["mach_header_64",3]],["bool",0]],[[["segment_command",3],["segment_command",3]],["bool",0]],[[["segment_command_64",3],["segment_command_64",3]],["bool",0]],[[["load_command",3],["load_command",3]],["bool",0]],[[["sockaddr_dl",3],["sockaddr_dl",3]],["bool",0]],[[["sockaddr_inarp",3],["sockaddr_inarp",3]],["bool",0]],[[["sockaddr_ctl",3],["sockaddr_ctl",3]],["bool",0]],[[["in_pktinfo",3],["in_pktinfo",3]],["bool",0]],[[["in6_pktinfo",3],["in6_pktinfo",3]],["bool",0]],[[["ipc_perm",3],["ipc_perm",3]],["bool",0]],[[["sembuf",3],["sembuf",3]],["bool",0]],[[["arphdr",3],["arphdr",3]],["bool",0]],[[["in_addr",3],["in_addr",3]],["bool",0]],[[["sockaddr_ndrv",3],["sockaddr_ndrv",3]],["bool",0]],[[["sa_endpoints_t",3],["sa_endpoints_t",3]],["bool",0]],[[["timex",3],["timex",3]],["bool",0]],[[["ntptimeval",3],["ntptimeval",3]],["bool",0]],[[["thread_standard_policy",3],["thread_standard_policy",3]],["bool",0]],[[["thread_extended_policy",3],["thread_extended_policy",3]],["bool",0]],[[["thread_time_constraint_policy",3],["thread_time_constraint_policy",3]],["bool",0]],[[["thread_precedence_policy",3],["thread_precedence_policy",3]],["bool",0]],[[["thread_affinity_policy",3],["thread_affinity_policy",3]],["bool",0]],[[["thread_background_policy",3],["thread_background_policy",3]],["bool",0]],[[["thread_latency_qos_policy",3],["thread_latency_qos_policy",3]],["bool",0]],[[["thread_throughput_qos_policy",3],["thread_throughput_qos_policy",3]],["bool",0]],[[["malloc_statistics_t",3],["malloc_statistics_t",3]],["bool",0]],[[["mstats",3],["mstats",3]],["bool",0]],[[["vm_range_t",3],["vm_range_t",3]],["bool",0]],[[["sched_param",3],["sched_param",3]],["bool",0]],[[["vinfo_stat",3],["vinfo_stat",3]],["bool",0]],[[["vnode_info",3],["vnode_info",3]],["bool",0]],[[["vnode_info_path",3],["vnode_info_path",3]],["bool",0]],[[["proc_vnodepathinfo",3],["proc_vnodepathinfo",3]],["bool",0]],[[["vm_statistics",3],["vm_statistics",3]],["bool",0]],[[["task_thread_times_info",3],["task_thread_times_info",3]],["bool",0]],[[["rusage_info_v0",3],["rusage_info_v0",3]],["bool",0]],[[["rusage_info_v1",3],["rusage_info_v1",3]],["bool",0]],[[["rusage_info_v2",3],["rusage_info_v2",3]],["bool",0]],[[["rusage_info_v3",3],["rusage_info_v3",3]],["bool",0]],[[["rusage_info_v4",3],["rusage_info_v4",3]],["bool",0]],[[["image_offset",3],["image_offset",3]],["bool",0]],[[["attrlist",3],["attrlist",3]],["bool",0]],[[["attrreference_t",3],["attrreference_t",3]],["bool",0]],[[["vol_capabilities_attr_t",3],["vol_capabilities_attr_t",3]],["bool",0]],[[["attribute_set_t",3],["attribute_set_t",3]],["bool",0]],[[["vol_attributes_attr_t",3],["vol_attributes_attr_t",3]],["bool",0]],[[["kevent",3],["kevent",3]],["bool",0]],[[["semid_ds",3],["semid_ds",3]],["bool",0]],[[["shmid_ds",3],["shmid_ds",3]],["bool",0]],[[["proc_threadinfo",3],["proc_threadinfo",3]],["bool",0]],[[["statfs",3],["statfs",3]],["bool",0]],[[["dirent",3],["dirent",3]],["bool",0]],[[["pthread_rwlock_t",3],["pthread_rwlock_t",3]],["bool",0]],[[["pthread_mutex_t",3],["pthread_mutex_t",3]],["bool",0]],[[["pthread_cond_t",3],["pthread_cond_t",3]],["bool",0]],[[["sockaddr_storage",3],["sockaddr_storage",3]],["bool",0]],[[["utmpx",3],["utmpx",3]],["bool",0]],[[["sigevent",3],["sigevent",3]],["bool",0]],[[["processor_cpu_load_info",3],["processor_cpu_load_info",3]],["bool",0]],[[["processor_basic_info",3],["processor_basic_info",3]],["bool",0]],[[["processor_set_basic_info",3],["processor_set_basic_info",3]],["bool",0]],[[["processor_set_load_info",3],["processor_set_load_info",3]],["bool",0]],[[["time_value_t",3],["time_value_t",3]],["bool",0]],[[["thread_basic_info",3],["thread_basic_info",3]],["bool",0]],[[["thread_identifier_info",3],["thread_identifier_info",3]],["bool",0]],[[["thread_extended_info",3],["thread_extended_info",3]],["bool",0]],[[["if_data64",3],["if_data64",3]],["bool",0]],[[["if_msghdr2",3],["if_msghdr2",3]],["bool",0]],[[["vm_statistics64",3],["vm_statistics64",3]],["bool",0]],[[["mach_task_basic_info",3],["mach_task_basic_info",3]],["bool",0]],[[["log2phys",3],["log2phys",3]],["bool",0]],[[["semun",19],["semun",19]],["bool",0]],[[["timeval32",3],["timeval32",3]],["bool",0]],[[["if_data",3],["if_data",3]],["bool",0]],[[["bpf_hdr",3],["bpf_hdr",3]],["bool",0]],[[["pthread_attr_t",3],["pthread_attr_t",3]],["bool",0]],[[["ucontext_t",3],["ucontext_t",3]],["bool",0]],[[["__darwin_mcontext64",3],["__darwin_mcontext64",3]],["bool",0]],[[["__darwin_x86_exception_state64",3],["__darwin_x86_exception_state64",3]],["bool",0]],[[["__darwin_x86_thread_state64",3],["__darwin_x86_thread_state64",3]],["bool",0]],[[["__darwin_x86_float_state64",3],["__darwin_x86_float_state64",3]],["bool",0]],[[["__darwin_mmst_reg",3],["__darwin_mmst_reg",3]],["bool",0]],[[["__darwin_xmm_reg",3],["__darwin_xmm_reg",3]],["bool",0]],[[["malloc_introspection_t",3],["malloc_introspection_t",3]],["bool",0]],[[["malloc_zone_t",3],["malloc_zone_t",3]],["bool",0]],[[["in6_addr",3],["in6_addr",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dir",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["utimbuf",3],["formatter",3]],["result",6]],[[["timeval",3],["formatter",3]],["result",6]],[[["timespec",3],["formatter",3]],["result",6]],[[["rlimit",3],["formatter",3]],["result",6]],[[["rusage",3],["formatter",3]],["result",6]],[[["ipv6_mreq",3],["formatter",3]],["result",6]],[[["hostent",3],["formatter",3]],["result",6]],[[["iovec",3],["formatter",3]],["result",6]],[[["pollfd",3],["formatter",3]],["result",6]],[[["winsize",3],["formatter",3]],["result",6]],[[["linger",3],["formatter",3]],["result",6]],[[["sigval",3],["formatter",3]],["result",6]],[[["itimerval",3],["formatter",3]],["result",6]],[[["tms",3],["formatter",3]],["result",6]],[[["servent",3],["formatter",3]],["result",6]],[[["protoent",3],["formatter",3]],["result",6]],[[["file",4],["formatter",3]],["result",6]],[[["fpos_t",4],["formatter",3]],["result",6]],[[["sockaddr",3],["formatter",3]],["result",6]],[[["sockaddr_in6",3],["formatter",3]],["result",6]],[[["passwd",3],["formatter",3]],["result",6]],[[["ifaddrs",3],["formatter",3]],["result",6]],[[["fd_set",3],["formatter",3]],["result",6]],[[["tm",3],["formatter",3]],["result",6]],[[["msghdr",3],["formatter",3]],["result",6]],[[["cmsghdr",3],["formatter",3]],["result",6]],[[["fsid_t",3],["formatter",3]],["result",6]],[[["if_nameindex",3],["formatter",3]],["result",6]],[[["regex_t",3],["formatter",3]],["result",6]],[[["regmatch_t",3],["formatter",3]],["result",6]],[[["option",3],["formatter",3]],["result",6]],[[["sockaddr_un",3],["formatter",3]],["result",6]],[[["utsname",3],["formatter",3]],["result",6]],[[["os_unfair_lock",6],["formatter",3]],["result",6]],[[["timezone",4],["formatter",3]],["result",6]],[[["qos_class_t",4],["formatter",3]],["result",6]],[[["sysdir_search_path_directory_t",4],["formatter",3]],["result",6]],[[["sysdir_search_path_domain_mask_t",4],["formatter",3]],["result",6]],[[["ip_mreq",3],["formatter",3]],["result",6]],[[["ip_mreqn",3],["formatter",3]],["result",6]],[[["ip_mreq_source",3],["formatter",3]],["result",6]],[[["aiocb",3],["formatter",3]],["result",6]],[[["glob_t",3],["formatter",3]],["result",6]],[[["addrinfo",3],["formatter",3]],["result",6]],[[["mach_timebase_info",3],["formatter",3]],["result",6]],[[["stat",3],["formatter",3]],["result",6]],[[["pthread_mutexattr_t",3],["formatter",3]],["result",6]],[[["pthread_condattr_t",3],["formatter",3]],["result",6]],[[["pthread_rwlockattr_t",3],["formatter",3]],["result",6]],[[["siginfo_t",3],["formatter",3]],["result",6]],[[["sigaction",3],["formatter",3]],["result",6]],[[["stack_t",3],["formatter",3]],["result",6]],[[["fstore_t",3],["formatter",3]],["result",6]],[[["radvisory",3],["formatter",3]],["result",6]],[[["statvfs",3],["formatter",3]],["result",6]],[[["dl_info",3],["formatter",3]],["result",6]],[[["sockaddr_in",3],["formatter",3]],["result",6]],[[["kevent64_s",3],["formatter",3]],["result",6]],[[["dqblk",3],["formatter",3]],["result",6]],[[["if_msghdr",3],["formatter",3]],["result",6]],[[["termios",3],["formatter",3]],["result",6]],[[["flock",3],["formatter",3]],["result",6]],[[["sf_hdtr",3],["formatter",3]],["result",6]],[[["lconv",3],["formatter",3]],["result",6]],[[["proc_taskinfo",3],["formatter",3]],["result",6]],[[["proc_bsdinfo",3],["formatter",3]],["result",6]],[[["proc_taskallinfo",3],["formatter",3]],["result",6]],[[["xsw_usage",3],["formatter",3]],["result",6]],[[["xucred",3],["formatter",3]],["result",6]],[[["mach_header",3],["formatter",3]],["result",6]],[[["mach_header_64",3],["formatter",3]],["result",6]],[[["segment_command",3],["formatter",3]],["result",6]],[[["segment_command_64",3],["formatter",3]],["result",6]],[[["load_command",3],["formatter",3]],["result",6]],[[["sockaddr_dl",3],["formatter",3]],["result",6]],[[["sockaddr_inarp",3],["formatter",3]],["result",6]],[[["sockaddr_ctl",3],["formatter",3]],["result",6]],[[["in_pktinfo",3],["formatter",3]],["result",6]],[[["in6_pktinfo",3],["formatter",3]],["result",6]],[[["ipc_perm",3],["formatter",3]],["result",6]],[[["sembuf",3],["formatter",3]],["result",6]],[[["arphdr",3],["formatter",3]],["result",6]],[[["in_addr",3],["formatter",3]],["result",6]],[[["sockaddr_ndrv",3],["formatter",3]],["result",6]],[[["sa_endpoints_t",3],["formatter",3]],["result",6]],[[["timex",3],["formatter",3]],["result",6]],[[["ntptimeval",3],["formatter",3]],["result",6]],[[["thread_standard_policy",3],["formatter",3]],["result",6]],[[["thread_extended_policy",3],["formatter",3]],["result",6]],[[["thread_time_constraint_policy",3],["formatter",3]],["result",6]],[[["thread_precedence_policy",3],["formatter",3]],["result",6]],[[["thread_affinity_policy",3],["formatter",3]],["result",6]],[[["thread_background_policy",3],["formatter",3]],["result",6]],[[["thread_latency_qos_policy",3],["formatter",3]],["result",6]],[[["thread_throughput_qos_policy",3],["formatter",3]],["result",6]],[[["malloc_statistics_t",3],["formatter",3]],["result",6]],[[["mstats",3],["formatter",3]],["result",6]],[[["vm_range_t",3],["formatter",3]],["result",6]],[[["sched_param",3],["formatter",3]],["result",6]],[[["vinfo_stat",3],["formatter",3]],["result",6]],[[["vnode_info",3],["formatter",3]],["result",6]],[[["vnode_info_path",3],["formatter",3]],["result",6]],[[["proc_vnodepathinfo",3],["formatter",3]],["result",6]],[[["vm_statistics",3],["formatter",3]],["result",6]],[[["task_thread_times_info",3],["formatter",3]],["result",6]],[[["rusage_info_v0",3],["formatter",3]],["result",6]],[[["c_void",4],["formatter",3]],["result",4,[["error",3]]]],[[["rusage_info_v1",3],["formatter",3]],["result",6]],[[["rusage_info_v2",3],["formatter",3]],["result",6]],[[["rusage_info_v3",3],["formatter",3]],["result",6]],[[["rusage_info_v4",3],["formatter",3]],["result",6]],[[["image_offset",3],["formatter",3]],["result",6]],[[["attrlist",3],["formatter",3]],["result",6]],[[["attrreference_t",3],["formatter",3]],["result",6]],[[["vol_capabilities_attr_t",3],["formatter",3]],["result",6]],[[["attribute_set_t",3],["formatter",3]],["result",6]],[[["vol_attributes_attr_t",3],["formatter",3]],["result",6]],[[["kevent",3],["formatter",3]],["result",6]],[[["semid_ds",3],["formatter",3]],["result",6]],[[["shmid_ds",3],["formatter",3]],["result",6]],[[["proc_threadinfo",3],["formatter",3]],["result",6]],[[["statfs",3],["formatter",3]],["result",6]],[[["dirent",3],["formatter",3]],["result",6]],[[["pthread_rwlock_t",3],["formatter",3]],["result",6]],[[["pthread_mutex_t",3],["formatter",3]],["result",6]],[[["pthread_cond_t",3],["formatter",3]],["result",6]],[[["sockaddr_storage",3],["formatter",3]],["result",6]],[[["utmpx",3],["formatter",3]],["result",6]],[[["sigevent",3],["formatter",3]],["result",6]],[[["processor_cpu_load_info",3],["formatter",3]],["result",6]],[[["processor_basic_info",3],["formatter",3]],["result",6]],[[["processor_set_basic_info",3],["formatter",3]],["result",6]],[[["processor_set_load_info",3],["formatter",3]],["result",6]],[[["time_value_t",3],["formatter",3]],["result",6]],[[["thread_basic_info",3],["formatter",3]],["result",6]],[[["thread_identifier_info",3],["formatter",3]],["result",6]],[[["thread_extended_info",3],["formatter",3]],["result",6]],[[["if_data64",3],["formatter",3]],["result",6]],[[["if_msghdr2",3],["formatter",3]],["result",6]],[[["vm_statistics64",3],["formatter",3]],["result",6]],[[["mach_task_basic_info",3],["formatter",3]],["result",6]],[[["log2phys",3],["formatter",3]],["result",6]],[[["semun",19],["formatter",3]],["result",6]],[[["timeval32",3],["formatter",3]],["result",6]],[[["if_data",3],["formatter",3]],["result",6]],[[["bpf_hdr",3],["formatter",3]],["result",6]],[[["pthread_attr_t",3],["formatter",3]],["result",6]],[[["ucontext_t",3],["formatter",3]],["result",6]],[[["__darwin_mcontext64",3],["formatter",3]],["result",6]],[[["__darwin_x86_exception_state64",3],["formatter",3]],["result",6]],[[["__darwin_x86_thread_state64",3],["formatter",3]],["result",6]],[[["__darwin_x86_float_state64",3],["formatter",3]],["result",6]],[[["__darwin_mmst_reg",3],["formatter",3]],["result",6]],[[["__darwin_xmm_reg",3],["formatter",3]],["result",6]],[[["malloc_introspection_t",3],["formatter",3]],["result",6]],[[["malloc_zone_t",3],["formatter",3]],["result",6]],[[["in6_addr",3],["formatter",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["group",3],["",0]]],[[["utimbuf",3],["",0]]],[[["timeval",3],["",0]]],[[["timespec",3],["",0]]],[[["rlimit",3],["",0]]],[[["rusage",3],["",0]]],[[["ipv6_mreq",3],["",0]]],[[["hostent",3],["",0]]],[[["iovec",3],["",0]]],[[["pollfd",3],["",0]]],[[["winsize",3],["",0]]],[[["linger",3],["",0]]],[[["sigval",3],["",0]]],[[["itimerval",3],["",0]]],[[["tms",3],["",0]]],[[["servent",3],["",0]]],[[["protoent",3],["",0]]],[[["sockaddr",3],["",0]]],[[["sockaddr_in6",3],["",0]]],[[["passwd",3],["",0]]],[[["ifaddrs",3],["",0]]],[[["fd_set",3],["",0]]],[[["tm",3],["",0]]],[[["msghdr",3],["",0]]],[[["cmsghdr",3],["",0]]],[[["fsid_t",3],["",0]]],[[["if_nameindex",3],["",0]]],[[["regex_t",3],["",0]]],[[["regmatch_t",3],["",0]]],[[["option",3],["",0]]],[[["sockaddr_un",3],["",0]]],[[["utsname",3],["",0]]],[[["os_unfair_lock",6],["",0]]],[[["ip_mreq",3],["",0]]],[[["ip_mreqn",3],["",0]]],[[["ip_mreq_source",3],["",0]]],[[["aiocb",3],["",0]]],[[["glob_t",3],["",0]]],[[["addrinfo",3],["",0]]],[[["mach_timebase_info",3],["",0]]],[[["stat",3],["",0]]],[[["pthread_mutexattr_t",3],["",0]]],[[["pthread_condattr_t",3],["",0]]],[[["pthread_rwlockattr_t",3],["",0]]],[[["siginfo_t",3],["",0]]],[[["sigaction",3],["",0]]],[[["stack_t",3],["",0]]],[[["fstore_t",3],["",0]]],[[["radvisory",3],["",0]]],[[["statvfs",3],["",0]]],[[["dl_info",3],["",0]]],[[["sockaddr_in",3],["",0]]],[[["kevent64_s",3],["",0]]],[[["dqblk",3],["",0]]],[[["if_msghdr",3],["",0]]],[[["termios",3],["",0]]],[[["flock",3],["",0]]],[[["sf_hdtr",3],["",0]]],[[["lconv",3],["",0]]],[[["proc_taskinfo",3],["",0]]],[[["proc_bsdinfo",3],["",0]]],[[["proc_taskallinfo",3],["",0]]],[[["xsw_usage",3],["",0]]],[[["xucred",3],["",0]]],[[["mach_header",3],["",0]]],[[["mach_header_64",3],["",0]]],[[["segment_command",3],["",0]]],[[["segment_command_64",3],["",0]]],[[["load_command",3],["",0]]],[[["sockaddr_dl",3],["",0]]],[[["sockaddr_inarp",3],["",0]]],[[["sockaddr_ctl",3],["",0]]],[[["in_pktinfo",3],["",0]]],[[["in6_pktinfo",3],["",0]]],[[["ipc_perm",3],["",0]]],[[["sembuf",3],["",0]]],[[["arphdr",3],["",0]]],[[["in_addr",3],["",0]]],[[["sockaddr_ndrv",3],["",0]]],[[["sa_endpoints_t",3],["",0]]],[[["timex",3],["",0]]],[[["ntptimeval",3],["",0]]],[[["thread_standard_policy",3],["",0]]],[[["thread_extended_policy",3],["",0]]],[[["thread_time_constraint_policy",3],["",0]]],[[["thread_precedence_policy",3],["",0]]],[[["thread_affinity_policy",3],["",0]]],[[["thread_background_policy",3],["",0]]],[[["thread_latency_qos_policy",3],["",0]]],[[["thread_throughput_qos_policy",3],["",0]]],[[["malloc_statistics_t",3],["",0]]],[[["mstats",3],["",0]]],[[["vm_range_t",3],["",0]]],[[["sched_param",3],["",0]]],[[["vinfo_stat",3],["",0]]],[[["vnode_info",3],["",0]]],[[["vnode_info_path",3],["",0]]],[[["proc_vnodepathinfo",3],["",0]]],[[["vm_statistics",3],["",0]]],[[["task_thread_times_info",3],["",0]]],[[["rusage_info_v0",3],["",0]]],[[["rusage_info_v1",3],["",0]]],[[["rusage_info_v2",3],["",0]]],[[["rusage_info_v3",3],["",0]]],[[["rusage_info_v4",3],["",0]]],[[["image_offset",3],["",0]]],[[["attrlist",3],["",0]]],[[["attrreference_t",3],["",0]]],[[["vol_capabilities_attr_t",3],["",0]]],[[["attribute_set_t",3],["",0]]],[[["vol_attributes_attr_t",3],["",0]]],[[["kevent",3],["",0]]],[[["semid_ds",3],["",0]]],[[["shmid_ds",3],["",0]]],[[["proc_threadinfo",3],["",0]]],[[["statfs",3],["",0]]],[[["dirent",3],["",0]]],[[["pthread_rwlock_t",3],["",0]]],[[["pthread_mutex_t",3],["",0]]],[[["pthread_cond_t",3],["",0]]],[[["sockaddr_storage",3],["",0]]],[[["utmpx",3],["",0]]],[[["sigevent",3],["",0]]],[[["processor_cpu_load_info",3],["",0]]],[[["processor_basic_info",3],["",0]]],[[["processor_set_basic_info",3],["",0]]],[[["processor_set_load_info",3],["",0]]],[[["time_value_t",3],["",0]]],[[["thread_basic_info",3],["",0]]],[[["thread_identifier_info",3],["",0]]],[[["thread_extended_info",3],["",0]]],[[["if_data64",3],["",0]]],[[["if_msghdr2",3],["",0]]],[[["vm_statistics64",3],["",0]]],[[["mach_task_basic_info",3],["",0]]],[[["log2phys",3],["",0]]],[[["semun",19],["",0]]],[[["timeval32",3],["",0]]],[[["if_data",3],["",0]]],[[["bpf_hdr",3],["",0]]],[[["pthread_attr_t",3],["",0]]],[[["ucontext_t",3],["",0]]],[[["__darwin_mcontext64",3],["",0]]],[[["__darwin_x86_exception_state64",3],["",0]]],[[["__darwin_x86_thread_state64",3],["",0]]],[[["__darwin_x86_float_state64",3],["",0]]],[[["__darwin_mmst_reg",3],["",0]]],[[["__darwin_xmm_reg",3],["",0]]],[[["malloc_introspection_t",3],["",0]]],[[["malloc_zone_t",3],["",0]]],[[["in6_addr",3],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mach_port_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["i32",0]],[[["i32",0],["i32",0]],["dev_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dev_t",6]],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["group",3],["group",3]],["bool",0]],[[["utimbuf",3],["utimbuf",3]],["bool",0]],[[["timeval",3],["timeval",3]],["bool",0]],[[["timespec",3],["timespec",3]],["bool",0]],[[["rlimit",3],["rlimit",3]],["bool",0]],[[["rusage",3],["rusage",3]],["bool",0]],[[["ipv6_mreq",3],["ipv6_mreq",3]],["bool",0]],[[["hostent",3],["hostent",3]],["bool",0]],[[["iovec",3],["iovec",3]],["bool",0]],[[["pollfd",3],["pollfd",3]],["bool",0]],[[["winsize",3],["winsize",3]],["bool",0]],[[["linger",3],["linger",3]],["bool",0]],[[["sigval",3],["sigval",3]],["bool",0]],[[["itimerval",3],["itimerval",3]],["bool",0]],[[["tms",3],["tms",3]],["bool",0]],[[["servent",3],["servent",3]],["bool",0]],[[["protoent",3],["protoent",3]],["bool",0]],[[["sockaddr",3],["sockaddr",3]],["bool",0]],[[["sockaddr_in6",3],["sockaddr_in6",3]],["bool",0]],[[["passwd",3],["passwd",3]],["bool",0]],[[["ifaddrs",3],["ifaddrs",3]],["bool",0]],[[["fd_set",3],["fd_set",3]],["bool",0]],[[["tm",3],["tm",3]],["bool",0]],[[["msghdr",3],["msghdr",3]],["bool",0]],[[["cmsghdr",3],["cmsghdr",3]],["bool",0]],[[["fsid_t",3],["fsid_t",3]],["bool",0]],[[["if_nameindex",3],["if_nameindex",3]],["bool",0]],[[["regex_t",3],["regex_t",3]],["bool",0]],[[["regmatch_t",3],["regmatch_t",3]],["bool",0]],[[["option",3],["option",3]],["bool",0]],[[["ip_mreq",3],["ip_mreq",3]],["bool",0]],[[["ip_mreqn",3],["ip_mreqn",3]],["bool",0]],[[["ip_mreq_source",3],["ip_mreq_source",3]],["bool",0]],[[["aiocb",3],["aiocb",3]],["bool",0]],[[["glob_t",3],["glob_t",3]],["bool",0]],[[["addrinfo",3],["addrinfo",3]],["bool",0]],[[["mach_timebase_info",3],["mach_timebase_info",3]],["bool",0]],[[["stat",3],["stat",3]],["bool",0]],[[["pthread_mutexattr_t",3],["pthread_mutexattr_t",3]],["bool",0]],[[["pthread_condattr_t",3],["pthread_condattr_t",3]],["bool",0]],[[["pthread_rwlockattr_t",3],["pthread_rwlockattr_t",3]],["bool",0]],[[["siginfo_t",3],["siginfo_t",3]],["bool",0]],[[["sigaction",3],["sigaction",3]],["bool",0]],[[["stack_t",3],["stack_t",3]],["bool",0]],[[["fstore_t",3],["fstore_t",3]],["bool",0]],[[["radvisory",3],["radvisory",3]],["bool",0]],[[["statvfs",3],["statvfs",3]],["bool",0]],[[["dl_info",3],["dl_info",3]],["bool",0]],[[["sockaddr_in",3],["sockaddr_in",3]],["bool",0]],[[["kevent64_s",3],["kevent64_s",3]],["bool",0]],[[["dqblk",3],["dqblk",3]],["bool",0]],[[["if_msghdr",3],["if_msghdr",3]],["bool",0]],[[["termios",3],["termios",3]],["bool",0]],[[["flock",3],["flock",3]],["bool",0]],[[["sf_hdtr",3],["sf_hdtr",3]],["bool",0]],[[["lconv",3],["lconv",3]],["bool",0]],[[["proc_taskinfo",3],["proc_taskinfo",3]],["bool",0]],[[["proc_bsdinfo",3],["proc_bsdinfo",3]],["bool",0]],[[["proc_taskallinfo",3],["proc_taskallinfo",3]],["bool",0]],[[["xsw_usage",3],["xsw_usage",3]],["bool",0]],[[["xucred",3],["xucred",3]],["bool",0]],[[["mach_header",3],["mach_header",3]],["bool",0]],[[["mach_header_64",3],["mach_header_64",3]],["bool",0]],[[["segment_command",3],["segment_command",3]],["bool",0]],[[["segment_command_64",3],["segment_command_64",3]],["bool",0]],[[["load_command",3],["load_command",3]],["bool",0]],[[["sockaddr_dl",3],["sockaddr_dl",3]],["bool",0]],[[["sockaddr_inarp",3],["sockaddr_inarp",3]],["bool",0]],[[["sockaddr_ctl",3],["sockaddr_ctl",3]],["bool",0]],[[["in_pktinfo",3],["in_pktinfo",3]],["bool",0]],[[["in6_pktinfo",3],["in6_pktinfo",3]],["bool",0]],[[["ipc_perm",3],["ipc_perm",3]],["bool",0]],[[["sembuf",3],["sembuf",3]],["bool",0]],[[["arphdr",3],["arphdr",3]],["bool",0]],[[["in_addr",3],["in_addr",3]],["bool",0]],[[["sockaddr_ndrv",3],["sockaddr_ndrv",3]],["bool",0]],[[["sa_endpoints_t",3],["sa_endpoints_t",3]],["bool",0]],[[["timex",3],["timex",3]],["bool",0]],[[["ntptimeval",3],["ntptimeval",3]],["bool",0]],[[["thread_standard_policy",3],["thread_standard_policy",3]],["bool",0]],[[["thread_extended_policy",3],["thread_extended_policy",3]],["bool",0]],[[["thread_time_constraint_policy",3],["thread_time_constraint_policy",3]],["bool",0]],[[["thread_precedence_policy",3],["thread_precedence_policy",3]],["bool",0]],[[["thread_affinity_policy",3],["thread_affinity_policy",3]],["bool",0]],[[["thread_background_policy",3],["thread_background_policy",3]],["bool",0]],[[["thread_latency_qos_policy",3],["thread_latency_qos_policy",3]],["bool",0]],[[["thread_throughput_qos_policy",3],["thread_throughput_qos_policy",3]],["bool",0]],[[["malloc_statistics_t",3],["malloc_statistics_t",3]],["bool",0]],[[["mstats",3],["mstats",3]],["bool",0]],[[["vm_range_t",3],["vm_range_t",3]],["bool",0]],[[["sched_param",3],["sched_param",3]],["bool",0]],[[["vinfo_stat",3],["vinfo_stat",3]],["bool",0]],[[["vnode_info",3],["vnode_info",3]],["bool",0]],[[["vnode_info_path",3],["vnode_info_path",3]],["bool",0]],[[["proc_vnodepathinfo",3],["proc_vnodepathinfo",3]],["bool",0]],[[["vm_statistics",3],["vm_statistics",3]],["bool",0]],[[["task_thread_times_info",3],["task_thread_times_info",3]],["bool",0]],[[["rusage_info_v0",3],["rusage_info_v0",3]],["bool",0]],[[["rusage_info_v1",3],["rusage_info_v1",3]],["bool",0]],[[["rusage_info_v2",3],["rusage_info_v2",3]],["bool",0]],[[["rusage_info_v3",3],["rusage_info_v3",3]],["bool",0]],[[["rusage_info_v4",3],["rusage_info_v4",3]],["bool",0]],[[["image_offset",3],["image_offset",3]],["bool",0]],[[["attrlist",3],["attrlist",3]],["bool",0]],[[["attrreference_t",3],["attrreference_t",3]],["bool",0]],[[["vol_capabilities_attr_t",3],["vol_capabilities_attr_t",3]],["bool",0]],[[["attribute_set_t",3],["attribute_set_t",3]],["bool",0]],[[["vol_attributes_attr_t",3],["vol_attributes_attr_t",3]],["bool",0]],[[["timeval32",3],["timeval32",3]],["bool",0]],[[["if_data",3],["if_data",3]],["bool",0]],[[["bpf_hdr",3],["bpf_hdr",3]],["bool",0]],[[["ucontext_t",3],["ucontext_t",3]],["bool",0]],[[["__darwin_mcontext64",3],["__darwin_mcontext64",3]],["bool",0]],[[["__darwin_x86_exception_state64",3],["__darwin_x86_exception_state64",3]],["bool",0]],[[["__darwin_x86_thread_state64",3],["__darwin_x86_thread_state64",3]],["bool",0]],[[["__darwin_x86_float_state64",3],["__darwin_x86_float_state64",3]],["bool",0]],[[["__darwin_mmst_reg",3],["__darwin_mmst_reg",3]],["bool",0]],[[["__darwin_xmm_reg",3],["__darwin_xmm_reg",3]],["bool",0]],[[["malloc_introspection_t",3],["malloc_introspection_t",3]],["bool",0]],[[["malloc_zone_t",3],["malloc_zone_t",3]],["bool",0]],[[["in6_addr",3],["in6_addr",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["siginfo_t",3]],["c_void",0]],null,null,null,[[["siginfo_t",3]],["pid_t",6]],null,null,[[["siginfo_t",3]],["c_int",6]],null,[[["siginfo_t",3]],["uid_t",6]],null,[[["siginfo_t",3]],["sigval",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"qos_class_t"],[4,"sysdir_search_path_directory_t"],[4,"sysdir_search_path_domain_mask_t"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"ipc_perm"],[3,"utimbuf"],[3,"vm_statistics"],[3,"vm_statistics64"],[3,"vm_range_t"],[3,"thread_affinity_policy"],[3,"addrinfo"],[3,"aiocb"],[3,"arphdr"],[19,"semun"],[3,"attrreference_t"],[3,"malloc_zone_t"],[3,"bpf_hdr"],[3,"attrlist"],[3,"malloc_statistics_t"],[4,"DIR"],[3,"group"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"fd_set"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"fsid_t"],[3,"if_nameindex"],[3,"regex_t"],[3,"regmatch_t"],[3,"option"],[3,"sockaddr_un"],[3,"utsname"],[4,"timezone"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"glob_t"],[3,"mach_timebase_info"],[3,"stat"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"sembuf"],[3,"in_addr"],[3,"sockaddr_ndrv"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"thread_standard_policy"],[3,"thread_extended_policy"],[3,"thread_time_constraint_policy"],[3,"thread_precedence_policy"],[3,"thread_background_policy"],[3,"thread_latency_qos_policy"],[3,"thread_throughput_qos_policy"],[3,"mstats"],[3,"sched_param"],[3,"vinfo_stat"],[3,"vnode_info"],[3,"vnode_info_path"],[3,"proc_vnodepathinfo"],[3,"task_thread_times_info"],[3,"rusage_info_v0"],[4,"c_void"],[3,"rusage_info_v1"],[3,"rusage_info_v2"],[3,"rusage_info_v3"],[3,"rusage_info_v4"],[3,"image_offset"],[3,"vol_capabilities_attr_t"],[3,"attribute_set_t"],[3,"vol_attributes_attr_t"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[3,"time_value_t"],[3,"thread_basic_info"],[3,"thread_identifier_info"],[3,"thread_extended_info"],[3,"if_data64"],[3,"if_msghdr2"],[3,"mach_task_basic_info"],[3,"log2phys"],[3,"os_unfair_lock_s"],[3,"timeval32"],[3,"if_data"],[3,"pthread_attr_t"],[3,"ucontext_t"],[3,"malloc_introspection_t"],[3,"max_align_t"],[3,"in6_addr"],[6,"os_unfair_lock"]],"a":{"__errno_location":[2357],"errno":[2357]}},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,2,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["record",3]],["arguments",3]],[[["recordbuilder",3],["arguments",3]],["recordbuilder",3]],[[["level",4]],["str",0]],[[["levelfilter",4]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["recordbuilder",3]],["record",3]],[[["metadatabuilder",3]],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],["level",4]],[[["levelfilter",4]],["levelfilter",4]],[[["record",3]],["record",3]],[[["metadata",3]],["metadata",3]],[[["level",4],["level",4]],["ordering",4]],[[["levelfilter",4],["levelfilter",4]],["ordering",4]],[[["metadata",3],["metadata",3]],["ordering",4]],[[["metadatabuilder",3],["metadatabuilder",3]],["ordering",4]],null,[[["",0],["metadata",3]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["metadata",3],["metadata",3]],["bool",0]],[[["metadatabuilder",3],["metadatabuilder",3]],["bool",0]],[[["parselevelerror",3],["parselevelerror",3]],["bool",0]],null,[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]]],[[["level",4],["formatter",3]],["result",6]],[[["level",4],["formatter",3]],["result",6]],[[["levelfilter",4],["formatter",3]],["result",6]],[[["levelfilter",4],["formatter",3]],["result",6]],[[["record",3],["formatter",3]],["result",6]],[[["recordbuilder",3],["formatter",3]],["result",6]],[[["metadata",3],["formatter",3]],["result",6]],[[["metadatabuilder",3],["formatter",3]],["result",6]],[[["setloggererror",3],["formatter",3]],["result",6]],[[["setloggererror",3],["formatter",3]],["result",6]],[[["parselevelerror",3],["formatter",3]],["result",6]],[[["parselevelerror",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["level",4]]]],[[["str",0]],["result",4,[["levelfilter",4]]]],[[["level",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["level",4],["",0]]],[[["levelfilter",4],["",0]]],[[["metadata",3],["",0]]],[[["metadatabuilder",3],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["iterator",8]],[[],["iterator",8]],[[["level",4],["levelfilter",4]],["bool",0]],[[["level",4],["level",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[["record",3]],["level",4]],[[["recordbuilder",3],["level",4]],["recordbuilder",3]],[[["metadata",3]],["level",4]],[[["metadatabuilder",3],["level",4]],["metadatabuilder",3]],[[["record",3]],["option",4,[["u32",0]]]],[[["recordbuilder",3],["option",4,[["u32",0]]]],["recordbuilder",3]],[[["",0],["record",3]]],null,null,[[],["log",8]],[[["level",4],["level",4]],["bool",0]],[[["level",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["levelfilter",4]],["bool",0]],[[["levelfilter",4],["level",4]],["bool",0]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[["record",3]],["metadata",3]],[[["recordbuilder",3],["metadata",3]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["record",3]],["option",4,[["str",0]]]],[[["recordbuilder",3],["option",4,[["str",0]]]],["recordbuilder",3]],[[["metadata",3],["metadata",3]],["bool",0]],[[["metadatabuilder",3],["metadatabuilder",3]],["bool",0]],[[["parselevelerror",3],["parselevelerror",3]],["bool",0]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["level",4],["level",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4],["level",4]],["option",4,[["ordering",4]]]],[[["metadata",3],["metadata",3]],["option",4,[["ordering",4]]]],[[["metadatabuilder",3],["metadatabuilder",3]],["option",4,[["ordering",4]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["levelfilter",4]]],[[["record",3]],["str",0]],[[["recordbuilder",3],["str",0]],["recordbuilder",3]],[[["metadata",3]],["str",0]],[[["metadatabuilder",3],["str",0]],["metadatabuilder",3]],[[["levelfilter",4]],["option",4,[["level",4]]]],[[["level",4]],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"malloc_buf":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11],"n":["MallocBuffer","borrow","borrow_mut","deref","from","into","new","try_from","try_into","type_id"],"q":["malloc_buf","","","","","","","","",""],"d":["A type that represents a <code>malloc</code>’d chunk of memory.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs a new <code>MallocBuffer</code> for a <code>malloc</code>’d buffer with …","","",""],"i":[0,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["mallocbuffer",3]]],[[]],[[]],[[["",0],["usize",0]],["option",4,[["mallocbuffer",3,[["copy",8]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"MallocBuffer"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14,14,14,14,14],"n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":["memoffset","","","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null],"p":[]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":[13,13,13,4,13,13,13,4,4,6,4,13,13,13,13,13,13,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,11,11,11,11,5,5,0,11,11,11,11,11,0,11,11,11,11,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,5,13,13,13,13,13,13,13,4,11,11,11,11,0,5,5,5,5,11,11,11,11,11,11,0,11,11,11,11,3,17,11,11,11,5,11,11,0,11,11,11,11,11,11,17,17,17,17,12,3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Block","Buf","Data","DataFormat","ErrNo","Finish","Full","MZError","MZFlush","MZResult","MZStatus","Mem","NeedDict","None","Ok","Param","Partial","Raw","Stream","StreamEnd","StreamResult","Sync","Version","Zlib","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_consumed","bytes_written","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deflate","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","inflate","into","into","into","into","into","ne","new","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BestCompression","BestSpeed","CompressionLevel","DefaultCompression","DefaultLevel","NoCompression","UberCompression","borrow","borrow_mut","clone","clone_into","compress_to_vec","compress_to_vec_zlib","core","eq","fmt","from","hash","into","stream","to_owned","try_from","try_into","type_id","BadParam","CallbackFunc","CompressionStrategy","CompressorOxide","Default","Done","Filtered","Finish","Fixed","Full","HuffmanOnly","None","Okay","PutBufFailed","RLE","Sync","TDEFLFlush","TDEFLStatus","adler32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","compress_to_output","create_comp_flags_from_zip_params","data_format","default","deflate_flags","eq","eq","eq","flags","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","new","new","prev_return_status","put_buf_func","reset","set_compression_level","set_compression_level_raw","set_format_and_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TDEFL_COMPUTE_ADLER32","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_RAW_BLOCKS","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_WRITE_ZLIB_HEADER","deflate","Adler32Mismatch","BadParam","Done","Failed","FailedCannotMakeProgress","HasMoreOutput","NeedsMoreInput","TINFLStatus","borrow","borrow_mut","clone","clone_into","core","decompress_to_vec","decompress_to_vec_with_limit","decompress_to_vec_zlib","decompress_to_vec_zlib_with_limit","eq","fmt","from","from_i32","hash","into","stream","to_owned","try_from","try_into","type_id","DecompressorOxide","TINFL_LZ_DICT_SIZE","adler32","borrow","borrow_mut","decompress","default","from","inflate_flags","init","into","new","try_from","try_into","type_id","TINFL_FLAG_COMPUTE_ADLER32","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","0","FullReset","InflateState","MinReset","ResetPolicy","ZeroReset","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompressor","default","from","from","from","from","inflate","into","into","into","into","last_status","new","new_boxed","new_boxed_with_window_bits","reset","reset","reset","reset","reset","reset_as","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["miniz_oxide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate::core::deflate_flags","","","","","","","","miniz_oxide::deflate::stream","miniz_oxide::inflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::inflate::core","","","","","","","","","","","","","","","miniz_oxide::inflate::core::inflate_flags","","","","miniz_oxide::inflate::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Not implemented.","","","How compressed data is wrapped.","","Attempt to flush the remaining data and end the stream.","Same as <code>Sync</code>, but resets the compression dictionary so …","A list of miniz failed status codes.","A list of flush types.","<code>Result</code> alias for all miniz status codes both successful …","A list of miniz successful status codes.","","","Don’t force any flushing. Used when more input data is …","","","Zlib partial flush. Currently treated as <code>Sync</code>.","Raw DEFLATE.","","","A structure containg the result of a call to the inflate …","Finish compressing the currently buffered data, and output …","","Wrapped using the zlib format.","","","","","","","","","","","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","","","","","","","","","","","This module contains functionality for compression.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","This module contains functionality for decompression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an MZFlush value from an integer value.","The return status of the call.","","","","","","","","","","","","","","","","","","","","","Slow/high compression. Do a lot of checks to try to find …","Fast compression. Uses a special compression routine that …","How much processing the compressor should do to compress …","Use the default compression level.","Default compromise between speed and compression.","Don’t do any compression, only output uncompressed …","Even more checks, can be very slow.","","","","","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","Streaming compression functionality.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Extra streaming compression functionality.","","","","","","Callback function and user used in <code>compress_to_output</code>.","Strategy setting for compression.","Main compression struct.","Don’t use any of the special strategies.","","Only use matches that are at least 5 bytes long.","Try to flush everything and end the stream.","Only use static/fixed blocks. (Blocks using the default …","Same as sync, but reset the dictionary so that the …","Don’t look for matches, only huffman encode the literals.","Compress as much as there is space for, and then return …","","","Only look for matches with a distance of 1, i.e do …","Try to flush the current data and output an empty raw …","A list of deflate flush types.","Return status codes.","Get the adler32 checksum of the currently encoded data.","","","","","","","","","","","","","","","","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used by …","Returns whether the compressor is wrapping the data in a …","Initialize the compressor with a level of 4, zlib wrapper …","","","","","Get the raw compressor flags.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CompressorOxide</code> with the given flags.","","Get the return status of the previous <code>compress</code> call with …","","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","","","","","","","","","","","","","","","","","","","Should we compute the adler32 checksum.","Only use matches that are at least 6 bytes long.","Force the compressor to only output raw/uncompressed …","Force the compressor to only output static blocks. (Blocks …","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Whether to use a zlib wrapper.","Try to compress from input to output with the given …","The decompression went fine, but the adler32 checksum did …","One or more of the input parameters were invalid.","Finished decomression without issues.","Failed to decompress due to invalid data.","More input data was expected, but the caller indicated …","There is still pending data that didn’t fit in the …","The decompressor needs more input data to continue …","Return status codes.","","","","","Streaming decompression functionality.","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data in <code>input</code> to a vector. …","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data (with a zlib wrapper) …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Extra streaming decompression functionality.","","","","","Main decompression struct.","","Returns the adler32 checksum of the currently decompressed …","","","Main decompression function. Keeps decompressing data from …","Create a new tinfl_decompressor with all fields set to 0.","Returns the argument unchanged.","","Set the current state to <code>Start</code>.","Calls <code>U::from(self)</code>.","Create a new tinfl_decompressor with all fields set to 0.","","","","Should we calculate the adler32 checksum of the output …","There is more input that hasn’t been given to the …","Should we try to parse a zlib header?","The output buffer should not wrap around.","","Full reset of the state, including zeroing memory.","A struct that compbines a decompressor with extra data for …","Resets state, without performing expensive ops (e.g. …","Tag that determines reset policy of InflateState","Resets state and zero memory, continuing to use the same …","","","","","","","","","Access the innner decompressor.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the status of the last call to <code>inflate</code> with this …","Create a new state.","Create a new state on the heap.","Create a new state using miniz/zlib style window bits …","Performs reset","","","","Reset the decompressor without re-allocating memory, using …","Resets the state according to specified policy.","","","","","","","","","","","",""],"i":[1,2,2,0,2,1,1,0,0,0,0,2,3,1,3,2,1,4,2,3,0,1,2,4,1,3,2,4,5,1,3,2,4,5,5,5,1,3,2,4,5,1,3,2,4,5,0,1,3,2,4,5,1,3,2,4,5,6,6,1,3,2,4,5,1,3,2,4,5,0,1,3,2,4,5,5,1,5,1,3,2,4,5,1,3,2,4,5,1,3,2,4,5,1,3,2,4,5,7,7,0,7,7,7,7,7,7,7,7,0,0,0,7,7,7,7,7,0,7,7,7,7,8,0,0,0,9,8,9,10,9,10,9,10,8,8,9,10,0,0,11,11,12,9,10,8,11,12,9,10,8,9,10,8,9,10,8,0,0,0,11,11,0,9,10,8,11,9,10,8,11,12,9,10,10,8,9,10,8,11,12,9,10,8,11,10,11,12,11,11,11,11,9,10,8,11,12,9,10,8,11,12,9,10,8,11,12,9,10,8,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,0,13,13,13,13,0,0,0,0,0,13,13,13,13,13,13,0,13,13,13,13,0,0,14,14,14,0,14,14,0,14,14,14,14,14,14,0,0,0,0,15,0,0,0,0,0,16,17,15,18,16,17,15,18,18,18,16,17,15,18,0,16,17,15,18,18,18,18,18,19,16,17,15,18,18,16,17,15,18,16,17,15,18,16,17,15,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["mzflush",4]],["mzflush",4]],[[["mzstatus",4]],["mzstatus",4]],[[["mzerror",4]],["mzerror",4]],[[["dataformat",4]],["dataformat",4]],[[["streamresult",3]],["streamresult",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["mzflush",4],["mzflush",4]],["bool",0]],[[["mzstatus",4],["mzstatus",4]],["bool",0]],[[["mzerror",4],["mzerror",4]],["bool",0]],[[["dataformat",4],["dataformat",4]],["bool",0]],[[["streamresult",3],["streamresult",3]],["bool",0]],[[["mzflush",4],["formatter",3]],["result",6]],[[["mzstatus",4],["formatter",3]],["result",6]],[[["mzerror",4],["formatter",3]],["result",6]],[[["dataformat",4],["formatter",3]],["result",6]],[[["streamresult",3],["formatter",3]],["result",6]],[[["streamresult",3]],["mzresult",6]],[[["streamresult",3]],["mzresult",6]],[[]],[[]],[[]],[[]],[[]],[[["mzflush",4],["",0]]],[[["mzstatus",4],["",0]]],[[["mzerror",4],["",0]]],[[["dataformat",4],["",0]]],[[["streamresult",3],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[["streamresult",3],["streamresult",3]],["bool",0]],[[["i32",0]],["result",4,[["mzflush",4],["mzerror",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["compressionlevel",4]],["compressionlevel",4]],[[["",0],["",0]]],[[["u8",0]],["vec",3,[["u8",0]]]],[[["u8",0]],["vec",3,[["u8",0]]]],null,[[["compressionlevel",4],["compressionlevel",4]],["bool",0]],[[["compressionlevel",4],["formatter",3]],["result",6]],[[]],[[["compressionlevel",4],["",0]]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["compressoroxide",3]],["u32",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compressionstrategy",4]],["compressionstrategy",4]],[[["tdeflflush",4]],["tdeflflush",4]],[[["tdeflstatus",4]],["tdeflstatus",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["compressoroxide",3],["tdeflflush",4]]],[[["compressoroxide",3],["tdeflflush",4],["fnmut",8]]],[[["i32",0],["i32",0],["i32",0]],["u32",0]],[[["compressoroxide",3]],["dataformat",4]],[[],["compressoroxide",3]],null,[[["compressionstrategy",4],["compressionstrategy",4]],["bool",0]],[[["tdeflflush",4],["tdeflflush",4]],["bool",0]],[[["tdeflstatus",4],["tdeflstatus",4]],["bool",0]],[[["compressoroxide",3]],["i32",0]],[[["compressionstrategy",4],["formatter",3]],["result",6]],[[["tdeflflush",4],["formatter",3]],["result",6]],[[["tdeflstatus",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["mzflush",4]],["tdeflflush",4]],[[]],[[]],[[["compressionstrategy",4],["",0]]],[[["tdeflflush",4],["",0]]],[[["tdeflstatus",4],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["compressoroxide",3]],[[["i32",0]],["result",4,[["tdeflflush",4],["mzerror",4]]]],[[["compressoroxide",3]],["tdeflstatus",4]],null,[[["compressoroxide",3]]],[[["compressoroxide",3],["compressionlevel",4]]],[[["compressoroxide",3],["u8",0]]],[[["compressoroxide",3],["dataformat",4],["u8",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["compressoroxide",3],["mzflush",4]],["streamresult",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["tinflstatus",4]],["tinflstatus",4]],[[["",0],["",0]]],null,[[],["result",4,[["vec",3,[["u8",0]]],["tinflstatus",4]]]],[[["usize",0]],["result",4,[["vec",3,[["u8",0]]],["tinflstatus",4]]]],[[],["result",4,[["vec",3,[["u8",0]]],["tinflstatus",4]]]],[[["usize",0]],["result",4,[["vec",3,[["u8",0]]],["tinflstatus",4]]]],[[["tinflstatus",4],["tinflstatus",4]],["bool",0]],[[["tinflstatus",4],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["tinflstatus",4]]]],[[["tinflstatus",4],["",0]]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["decompressoroxide",3]],["option",4,[["u32",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["decompressoroxide",3],["usize",0],["u32",0]]],[[],["decompressoroxide",3]],[[]],null,[[["decompressoroxide",3]]],[[]],[[],["decompressoroxide",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["inflatestate",3]],["decompressoroxide",3]],[[],["inflatestate",3]],[[]],[[]],[[]],[[]],[[["inflatestate",3],["mzflush",4]],["streamresult",3]],[[]],[[]],[[]],[[]],[[["inflatestate",3]],["tinflstatus",4]],[[["dataformat",4]],["inflatestate",3]],[[["dataformat",4]],["box",3,[["inflatestate",3]]]],[[["i32",0]],["box",3,[["inflatestate",3]]]],[[["",0],["inflatestate",3]]],[[["minreset",3],["inflatestate",3]]],[[["zeroreset",3],["inflatestate",3]]],[[["fullreset",3],["inflatestate",3]]],[[["inflatestate",3],["dataformat",4]]],[[["inflatestate",3],["resetpolicy",8]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"MZFlush"],[4,"MZError"],[4,"MZStatus"],[4,"DataFormat"],[3,"StreamResult"],[6,"MZResult"],[4,"CompressionLevel"],[4,"TDEFLStatus"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[3,"CompressorOxide"],[3,"CallbackFunc"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[3,"FullReset"],[3,"MinReset"],[3,"ZeroReset"],[3,"InflateState"],[8,"ResetPolicy"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":[5,5],"n":["get","get_physical"],"q":["num_cpus",""],"d":["Returns the number of available CPUs of the current system.","Returns the number of physical cores of the current system."],"i":[0,0],"f":[[[],["usize",0]],[[],["usize",0]]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,11,12,12],"n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","ne","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,2,3,2,3,0,4,4,3,3,0,5,0,5,0,5,0,5,5,3,5,5,3,2,3,0,5,3,0,5,2,3,2,5,5,5,0,5,0,5,0,3,2,2,5,0,4,5,0,4,4,3,2,3,2,3,2,3,3,3],"f":[null,null,null,null,null,[[["average",8],["average",8]],["average",8]],[[["",0],["",0]]],[[["average",8],["average",8]],["average",8]],[[["",0],["",0]]],[[["",26,[["integer",8],["clone",8]]],["",26,[["integer",8],["clone",8]]]],["",26,[["integer",8],["clone",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["roots",8]],["roots",8]],[[["",0]]],[[["",0]]],[[["extendedgcd",3,[["clone",8]]]],["extendedgcd",3,[["clone",8]]]],[[["",0],["",0]]],[[["integer",8],["integer",8]],["integer",8]],[[["",0],["",0]]],[[["integer",8],["integer",8]],["integer",8]],[[["",0],["",0]]],[[["integer",8],["integer",8]]],[[["",0],["",0]]],[[["integer",8],["integer",8]]],[[["",0],["",0]]],[[["",0],["",0]],["bool",0]],[[["extendedgcd",3,[["partialeq",8]]],["extendedgcd",3]],["bool",0]],[[["",0],["",0]],["extendedgcd",3]],[[["",0],["",0]]],[[["extendedgcd",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[["integer",8],["integer",8]],["integer",8]],[[["",0],["",0]]],null,[[["integer",8],["integer",8]]],[[["",0],["",0]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["bool",0]],[[["integer",8],["integer",8]],["integer",8]],[[["",0],["",0]]],[[["integer",8],["integer",8]],["integer",8]],[[["",0],["",0]]],[[],["",26,[["integer",8],["clone",8]]]],[[["extendedgcd",3,[["partialeq",8]]],["extendedgcd",3]],["bool",0]],[[],["iterbinomial",3]],[[["iterbinomial",3]],["option",4]],[[["",0],["",0]]],[[["roots",8],["u32",0]],["roots",8]],[[["",0],["u32",0]]],[[["",0],["",0]]],[[["roots",8]],["roots",8]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[8,"Average"],[3,"IterBinomial"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["num_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,0,0,0,0,0,0,1,2,5,6,1,2,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["range",3,[["clone",8]]]],["range",3,[["clone",8]]]],[[["rangeinclusive",3,[["clone",8]]]],["rangeinclusive",3,[["clone",8]]]],[[["rangestep",3,[["clone",8]]]],["rangestep",3,[["clone",8]]]],[[["rangestepinclusive",3,[["clone",8]]]],["rangestepinclusive",3,[["clone",8]]]],[[["rangefrom",3,[["clone",8]]]],["rangefrom",3,[["clone",8]]]],[[["rangestepfrom",3,[["clone",8]]]],["rangestepfrom",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["range",3]],["bound",4]],[[["rangeinclusive",3]],["bound",4]],[[["rangefrom",3]],["bound",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["range",3]],["option",4]],[[["rangeinclusive",3]],["option",4]],[[["rangestep",3]],["option",4]],[[["rangestepinclusive",3]],["option",4]],[[["rangefrom",3]],["option",4]],[[["rangestepfrom",3]],["option",4]],[[["range",3]],["option",4]],[[["rangeinclusive",3]],["option",4]],[[],["range",3]],[[],["rangefrom",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepfrom",3]],[[],["rangestepinclusive",3]],[[["range",3]]],[[["rangeinclusive",3]]],[[["rangefrom",3]]],[[["rangestepfrom",3]]],[[["range",3]],["bound",4]],[[["rangeinclusive",3]],["bound",4]],[[["rangefrom",3]],["bound",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","tn":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","ne","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":["num_rationald":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1],"f":[null,null,null,null,null,[[["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],[[["ratio",3],["",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["",26,[["clone",8],["integer",8]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3],["",0]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",26,[["clone",8],["integer",8],["numassign",8]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3]]],[[["",26,[["floatcore",8],["numcast",8]]]],["option",4,[["ratio",3,[["",26,[["integer",8],["signed",8],["bounded",8],["numcast",8],["clone",8]]]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["checkedmul",8],["checkedadd",8]]]]],["ratio",3]],["option",4,[["ratio",3,[["",26,[["clone",8],["integer",8],["checkedmul",8],["checkedadd",8]]]]]]]],[[["ratio",3],["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3],["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["checkedmul",8],["checkedsub",8]]]]],["ratio",3]],["option",4,[["ratio",3,[["",26,[["clone",8],["integer",8],["checkedmul",8],["checkedsub",8]]]]]]]],[[["ratio",3,[["clone",8]]]],["ratio",3,[["clone",8]]]],[[["parseratioerror",3]],["parseratioerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ordering",4]],[[["ratio",3]],["",0]],[[["ratio",3],["",0]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",26,[["clone",8],["integer",8],["numassign",8]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["bool",0]],[[["parseratioerror",3],["parseratioerror",3]],["bool",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["upperexp",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["debug",8]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["display",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["octal",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["binary",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["lowerhex",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["upperhex",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["lowerexp",8],["clone",8],["integer",8]]]]],["formatter",3]],["result",6]],[[["parseratioerror",3],["formatter",3]],["result",6]],[[["parseratioerror",3],["formatter",3]],["result",6]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[["f32",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["f32",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["f64",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["i128",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["i64",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["",26,[["clone",8],["integer",8]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["str",0]],["result",4,[["ratio",3,[["",26,[["fromstr",8],["clone",8],["integer",8]]]]],["parseratioerror",3]]]],[[["str",0],["u32",0]],["result",4,[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["parseratioerror",3]]]],[[["u128",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["u128",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["i64",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["i8",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["usize",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["i128",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["isize",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["u8",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["u16",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["u128",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["u32",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["i32",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["i16",0]]]]]],[[["u64",0]],["option",4,[["ratio",3,[["u64",0]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["hash",8]]]]],["",0]]],[[["ratio",3]]],[[]],[[]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["bool",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],["bool",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["bool",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],["bool",0]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["bool",0]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3]],["ratio",3]],[[["ratio",3],["",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3],["",0]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",26,[["clone",8],["integer",8],["numassign",8]]]]],[[["parseratioerror",3],["parseratioerror",3]],["bool",0]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["",26,[["clone",8],["integer",8]]],["",26,[["clone",8],["integer",8]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[],["ratio",3]],[[["ratio",3]],["",0]],[[],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["option",4,[["ordering",4]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]],["i64",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]]],[[["ratio",3],["u16",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["i32",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]],["u8",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]]],[[["ratio",3],["u8",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]],["u8",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]]],[[["ratio",3],["u8",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]],["u16",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]]],[[["ratio",3],["u16",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]],["u16",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]],["u32",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]]],[[["ratio",3],["u32",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]],["u32",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]]],[[["ratio",3],["u32",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]],["u64",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]]],[[["ratio",3],["u64",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]],["u64",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]]],[[["ratio",3],["u64",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]],["u128",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]]],[[["ratio",3],["u128",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]],["u128",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]]],[[["ratio",3],["u128",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]],["usize",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]]],[[["ratio",3],["usize",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]],["usize",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]]],[[["ratio",3],["usize",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]],["i8",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]]],[[["ratio",3],["i8",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]],["i8",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u8",0]]]]]]]],[[["ratio",3],["i8",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]],["i16",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]]],[[["ratio",3],["i16",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]],["i16",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u16",0]]]]]]]],[[["ratio",3],["i16",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["isize",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]],["isize",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]]],[[["ratio",3],["isize",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]],["isize",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["usize",0]]]]]]]],[[["ratio",3],["i128",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]],["i128",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]]],[[["ratio",3],["i128",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]],["i128",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u128",0]]]]]]]],[[["ratio",3],["i64",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["i64",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]],["i64",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u64",0]]]]]]]],[[["ratio",3],["i32",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]],["i32",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]]],[[["ratio",3],["i32",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]],["i32",0]],["ratio",3,[["",26,[["clone",8],["integer",8],["pow",8,[["u32",0]]]]]]]],[[],["ratio",3,[["",26,[["integer",8],["clone",8]]]]]],[[],["ratio",3,[["",26,[["integer",8],["clone",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["",0]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["",26,[["clone",8],["integer",8]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",26,[["clone",8],["integer",8],["numassign",8]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["signed",8]]]]]],[[["ratio",3],["",0]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3],["ratio",3]],["ratio",3]],[[["ratio",3],["",0]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3],["ratio",3]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]],["",26,[["clone",8],["integer",8]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",0]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["",26,[["clone",8],["integer",8],["numassign",8]]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]],["ratio",3,[["",26,[["clone",8],["integer",8],["numassign",8]]]]]]],[[],["ratio",3,[["",26,[["integer",8],["clone",8]]]]]],[[],["ratio",3,[["",26,[["integer",8],["clone",8]]]]]],[[["ratio",3,[["usize",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["isize",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["i64",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["u64",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["i32",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["u32",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["i16",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["u16",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["i8",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["u8",0]]]],["option",4,[["f64",0]]]],[[["ratio",3,[["i32",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["isize",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["u8",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["usize",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["i8",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["i64",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["u16",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["u64",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["i16",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["u32",0]]]],["option",4,[["i128",0]]]],[[["ratio",3,[["u32",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["isize",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["u8",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["usize",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["i8",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["i64",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["u16",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["u64",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["i32",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["i16",0]]]],["option",4,[["i64",0]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["",26,[["clone",8],["integer",8]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["ratio",3,[["u64",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["i16",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["isize",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["u32",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["usize",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["u8",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["i32",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["i64",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["i8",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["u16",0]]]],["option",4,[["u128",0]]]],[[["ratio",3,[["i8",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["u64",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["u16",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["u32",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["i64",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["i16",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["i32",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["usize",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["u8",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["isize",0]]]],["option",4,[["u64",0]]]],[[["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["ratio",3,[["",26,[["clone",8],["integer",8]]]]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[2,2,2,2,2,2,2,2,2,2,2,13,2,2,2,4,2,16,2,13,2,2,8,8,8,8,2,8,8,2,3,2,2,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,11,11,11,0,0,2,2,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,2,0,0,2,0,0,2,11,11,11,11,11,11,11,2,8,8,8,10,10,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,10,10,11,10,11,10,10,10,11,10,11,10,10,10,10,10,10,10,10,10,10,11,10,10,11,10,10,10,11,10,10,10,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,10,11,10,11,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,11,10,10,11,10,10,10,10,10,10,10,11,10,10,10,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,5,10,5,10,10,10,5,10],"n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","","","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::euclid","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,0,0,0,0,1,3,3,1,3,2,0,0,1,3,3,0,0,0,0,0,0,0,3,1,3,1,3,1,3,0,0,0,0,4,5,4,6,0,0,0,0,7,0,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,12,13,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,12,12,12,12,12,13,13,12,12,13,13,12,13,12,12,13,12,13,12,13,12,12,12,13,12,13,12,13,12,13,12,12,12,12,12,12,13,12,13,12,12,13,0,0,14,15,0,14,14,15,0,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,20,21,22,23,24,0,0,25,25,26,26,0,27,27,0,0,28,28,29,0,0,0,30,31,32,0,0,0,0,33,34,35,33,36,0,0,0,0,0,0,37,38,39,40,41,42,43,0,0,0,43,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,0,45,45,45,0,45],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,[[["partialord",8],["partialord",8],["partialord",8]],["partialord",8]],[[["partialord",8],["partialord",8]],["partialord",8]],[[["partialord",8],["partialord",8]],["partialord",8]],null,[[["floaterrorkind",4],["formatter",3]],["result",6]],[[["parsefloaterror",3],["formatter",3]],["result",6]],[[["parsefloaterror",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0],["u32",0]],["result",4]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[["numcast",8]],["option",4,[["numcast",8]]]],[[["toprimitive",8]],["option",4]],[[["f32",0]],["option",4]],[[["f64",0]],["option",4]],[[["i128",0]],["option",4]],[[["i16",0]],["option",4]],[[["i32",0]],["option",4]],[[["i64",0]],["option",4]],[[["i8",0]],["option",4]],[[["isize",0]],["option",4]],[[["u128",0]],["option",4]],[[["u16",0]],["option",4]],[[["u32",0]],["option",4]],[[["u64",0]],["option",4]],[[["u8",0]],["option",4]],[[["usize",0]],["option",4]],[[["",0]],["option",4,[["f32",0]]]],[[["",0]],["option",4,[["f64",0]]]],[[["",0]],["option",4,[["i128",0]]]],[[["",0]],["option",4,[["i16",0]]]],[[["",0]],["option",4,[["i32",0]]]],[[["",0]],["option",4,[["i64",0]]]],[[["",0]],["option",4,[["i8",0]]]],[[["",0]],["option",4,[["isize",0]]]],[[["",0]],["option",4,[["u128",0]]]],[[["",0]],["option",4,[["u16",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]],["option",4,[["u64",0]]]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]]],[[["i32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["one",8]],[[]],[[["",0]]],[[["",0]]],[[],["zero",8]],[[]],null,[[],["u32",0]],[[],["u32",0]],[[]],[[]],[[],["u32",0]],[[],["u32",0]],[[["u32",0]]],[[]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[],["u32",0]],[[],["u32",0]],[[["u32",0]]],[[["u32",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["u32",0]],["option",4]],[[["",0],["",0]],["option",4]],null,null,[[["",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[]],null,null,null,[[]],[[["",0]]],null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[["",0],["",0]]],null,null,null,null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],[[["",0],["",0]]],null,null,[[["",26,[["clone",8],["one",8],["checkedmul",8]]],["usize",0]],["option",4,[["",26,[["clone",8],["one",8],["checkedmul",8]]]]]],[[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8]]]]]]]]]]]]]]]]]]],["usize",0]],["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8]]]]]]]]]]]]]]]]]]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["signed",8]],["signed",8]],[[["",0]]],[[["signed",8],["signed",8]],["signed",8]],[[["",0],["",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["signed",8]],["signed",8]],[[["",0]]]],"p":[[4,"FloatErrorKind"],[8,"Num"],[3,"ParseFloatError"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"NumCast"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"One"],[8,"Zero"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"],[8,"Signed"]]},\
"objc":{"doc":"Objective-C Runtime bindings and wrapper for Rust.","t":[8,8,3,16,8,8,3,11,11,11,11,11,14,11,11,0,11,10,10,11,11,11,11,11,11,11,11,11,10,14,0,0,14,11,11,11,11,11,11,11,11,11,11,11,11,16,16,3,8,3,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,6,3,3,17,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,5,5,5,5,5,5,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,5,5,5,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Encode","EncodeArguments","Encoding","Encs","Message","MessageArguments","MessageError","as_str","borrow","borrow","borrow_mut","borrow_mut","class","clone","clone_into","declare","description","encode","encodings","eq","fmt","fmt","fmt","from","from","from_str","into","into","invoke","msg_send","rc","runtime","sel","send_message","send_message","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_message","verify_message","Args","Callee","ClassDecl","MethodImplementation","ProtocolDecl","Ret","add_class_method","add_class_method_description","add_ivar","add_method","add_method_description","add_protocol","add_protocol","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","imp","into","into","new","new","register","register","root","try_from","try_from","try_into","try_into","type_id","type_id","StrongPtr","WeakPtr","autorelease","autoreleasepool","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","drop","drop","fmt","from","from","into","into","load","new","new","retain","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","weak","BOOL","Class","Imp","Ivar","Method","NO","Object","Protocol","Sel","YES","adopted_protocols","adopted_protocols","argument_type","arguments_count","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class_addIvar","class_addMethod","class_addProtocol","class_conformsToProtocol","class_copyIvarList","class_copyMethodList","class_copyProtocolList","class_createInstance","class_getInstanceMethod","class_getInstanceSize","class_getInstanceVariable","class_getName","class_getSuperclass","classes","classes_count","clone","clone_into","conforms_to","conforms_to","encode","encode","encode","encode","encode","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ptr","get","get","get_ivar","get_mut_ivar","implementation","instance_method","instance_methods","instance_size","instance_variable","instance_variables","into","into","into","into","into","into","ivar_getName","ivar_getOffset","ivar_getTypeEncoding","metaclass","method_copyArgumentType","method_copyReturnType","method_exchangeImplementations","method_getImplementation","method_getName","method_getNumberOfArguments","method_setImplementation","name","name","name","name","name","objc_allocateClassPair","objc_allocateProtocol","objc_autorelease","objc_autoreleasePoolPop","objc_autoreleasePoolPush","objc_copyClassList","objc_copyProtocolList","objc_copyWeak","objc_destroyWeak","objc_disposeClassPair","objc_getClass","objc_getClassList","objc_getProtocol","objc_initWeak","objc_loadWeakRetained","objc_registerClassPair","objc_registerProtocol","objc_release","objc_retain","object_dispose","object_getClass","offset","protocol_addMethodDescription","protocol_addProtocol","protocol_conformsToProtocol","protocol_copyProtocolList","protocol_getName","protocol_isEqual","protocols","register","return_type","sel_getName","sel_registerName","set_ivar","superclass","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_encoding","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["objc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objc::declare","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objc::rc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objc::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Types that have an Objective-C type encoding.","Types that represent a group of arguments, where each has …","An Objective-C type encoding.","The type as which the encodings for Self will be returned.","Types that may be sent Objective-C messages. For example: …","Types that may be used as the arguments of an Objective-C …","An error encountered while attempting to send a message.","Returns self as a <code>str</code>.","","","","","Gets a reference to a <code>Class</code>.","","","Functionality for declaring Objective-C classes.","","Returns the Objective-C type encoding for Self.","Returns the Objective-C type encodings for Self.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an <code>Encoding</code> from its string representation. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invoke an <code>Imp</code> with the given object, selector, and …","Sends a message to an object.","Utilities for reference counting Objective-C objects.","A Rust interface for the functionality of the Objective-C …","Registers a selector, returning a <code>Sel</code>.","Sends a message to self with the given selector and …","Sends a message to self with the given selector and …","","","","","","","","","Verifies that the argument and return types match the …","Verifies that the argument and return types match the …","The argument types of the method.","The callee type of the method.","A type for declaring a new class and adding new methods …","Types that can be used as the implementation of an …","A type for declaring a new protocol and adding new methods …","The return type of the method.","Adds a class method with the given name and implementation …","Adds a class method declaration with a given description …","Adds an ivar with type <code>T</code> and the provided name to self. …","Adds a method with the given name and implementation to …","Adds an instance method declaration with a given …","Adds a protocol to self. Panics if the protocol wasn’t …","Adds a requirement on another protocol.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns self as an <code>Imp</code> of a method.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a <code>ClassDecl</code> with the given name and superclass. …","Constructs a <code>ProtocolDecl</code> with the given name. Returns <code>None</code>…","Registers self, consuming it and returning a reference to …","Registers self, consuming it and returning a reference to …","Constructs a <code>ClassDecl</code> declaring a new root class with the …","","","","","","","A pointer that strongly references an object, ensuring it …","A pointer that weakly references an object, allowing to …","Autoreleases self, meaning that the object is not …","Execute <code>f</code> in the context of a new autorelease pool. The …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads the object self points to, returning a <code>StrongPtr</code>. If …","Constructs a <code>StrongPtr</code> to a newly created object that …","Constructs a <code>WeakPtr</code> to the given object. Unsafe because …","Retains the given object and constructs a <code>StrongPtr</code> to it. …","","","","","","","","","Returns a <code>WeakPtr</code> to self.","The Objective-C <code>BOOL</code> type.","A type that represents an Objective-C class.","A pointer to the start of a method implementation.","A type that represents an instance variable.","A type that represents a method in a class definition.","The equivalent of false for Objective-C’s <code>BOOL</code> type.","A type that represents an instance of a class.","A type that represents an Objective-C protocol.","A type that represents a method selector.","The equivalent of true for Objective-C’s <code>BOOL</code> type.","Get a list of the protocols to which this class conforms.","Get a list of the protocols to which this protocol …","Returns the <code>Encoding</code> of a single parameter type of self, or","Returns the number of arguments accepted by self.","Returns a pointer to the raw selector.","","","","","","","","","","","","","Returns the class of self.","","","","","","","","","","","","","","Obtains the list of registered class definitions.","Returns the total number of registered classes.","","","Checks whether this class conforms to the specified …","Checks whether this protocol conforms to the specified …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wraps a raw pointer to a selector into a <code>Sel</code> object.","Returns the class definition of a specified class, or <code>None</code> …","Returns the protocol definition of a specified protocol, …","Returns a reference to the ivar of self with the given …","Returns a mutable reference to the ivar of self with the …","Returns the implementation of self.","Returns a specified instance method for self, or <code>None</code> if …","Describes the instance methods implemented by self.","Returns the size of instances of self.","Returns the ivar for a specified instance variable of …","Describes the instance variables declared by self.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the metaclass of self.","","","","","","","","Returns the name of the method specified by self.","Returns the name of self.","Returns the name of self.","Returns the name of self.","Returns the name of self.","","","","","","","","","","","","","","","","","","","","","","Returns the offset of self.","","","","","","","Obtains the list of registered protocol definitions.","Registers a method with the Objective-C runtime system, …","Returns the <code>Encoding</code> of self’s return type.","","","Sets the value of the ivar of self with the given name. …","Returns the superclass of self, or <code>None</code> if self is a root …","","","","","","","","","","","","","","Returns the <code>Encoding</code> of self.","","","","","",""],"i":[0,0,0,1,0,0,0,2,2,3,2,3,0,2,2,0,3,4,1,2,2,3,3,2,3,2,2,3,5,0,0,0,0,6,6,2,3,2,3,2,3,2,3,6,6,7,7,0,0,0,7,8,9,8,8,9,8,9,8,9,8,9,8,8,9,7,8,9,8,9,8,9,8,8,9,8,9,8,9,0,0,10,0,10,11,10,11,10,11,10,11,10,10,11,10,10,11,10,11,11,10,11,10,10,11,10,11,10,11,10,11,10,0,0,0,0,0,0,0,0,0,0,12,13,14,14,15,15,16,14,12,13,17,15,16,14,12,13,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,15,15,12,13,15,12,12,17,17,15,12,13,15,12,13,17,15,16,14,12,13,17,15,12,13,17,17,14,12,12,12,12,12,15,16,14,12,13,17,0,0,0,12,0,0,0,0,0,0,0,15,16,14,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,13,15,14,0,0,17,12,15,15,16,14,12,13,17,15,16,14,12,13,17,16,15,16,14,12,13,17],"f":[null,null,null,null,null,null,null,[[["encoding",3]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["encoding",3]],["encoding",3]],[[["",0],["",0]]],null,[[["messageerror",3]],["str",0]],[[],["encoding",3]],[[]],[[["encoding",3],["encoding",3]],["bool",0]],[[["encoding",3],["formatter",3]],["result",6]],[[["messageerror",3],["formatter",3]],["result",6]],[[["messageerror",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["encoding",3]],[[]],[[]],[[["imp",6],["object",0],["sel",3]]],null,null,null,null,[[["",0],["sel",3]],["result",4,[["messageerror",3]]]],[[["",0],["sel",3]],["result",4,[["messageerror",3]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["sel",3]],["result",4,[["messageerror",3]]]],[[["",0],["sel",3]],["result",4,[["messageerror",3]]]],null,null,null,null,null,null,[[["classdecl",3],["sel",3]]],[[["protocoldecl",3],["sel",3],["bool",0]]],[[["classdecl",3],["str",0]]],[[["classdecl",3],["sel",3]]],[[["protocoldecl",3],["sel",3],["bool",0]]],[[["classdecl",3],["protocol",3]]],[[["protocoldecl",3],["protocol",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["classdecl",3]]],[[]],[[]],[[],["imp",6]],[[]],[[]],[[["str",0],["class",3]],["option",4,[["classdecl",3]]]],[[["str",0]],["option",4,[["protocoldecl",3]]]],[[["classdecl",3]],["class",3]],[[["protocoldecl",3]],["protocol",3]],[[["str",0]],["option",4,[["classdecl",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["strongptr",3]],["object",0]],[[["fnonce",8]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["strongptr",3]],["strongptr",3]],[[["weakptr",3]],["weakptr",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["strongptr",3]],["object",0]],[[["strongptr",3]]],[[["weakptr",3]]],[[["strongptr",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["weakptr",3]],["strongptr",3]],[[["object",0]],["strongptr",3]],[[["object",0]],["weakptr",3]],[[["object",0]],["strongptr",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["strongptr",3]],["weakptr",3]],null,null,null,null,null,null,null,null,null,null,[[["class",3]],["mallocbuffer",3,[["protocol",3]]]],[[["protocol",3]],["mallocbuffer",3,[["protocol",3]]]],[[["method",3],["usize",0]],["option",4,[["encoding",3]]]],[[["method",3]],["usize",0]],[[["sel",3]],["c_void",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["object",3]],["class",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mallocbuffer",3,[["class",3]]]],[[],["usize",0]],[[["sel",3]],["sel",3]],[[["",0],["",0]]],[[["class",3],["protocol",3]],["bool",0]],[[["protocol",3],["protocol",3]],["bool",0]],[[],["encoding",3]],[[],["encoding",3]],[[],["encoding",3]],[[],["encoding",3]],[[],["encoding",3]],[[["sel",3],["sel",3]],["bool",0]],[[["class",3],["class",3]],["bool",0]],[[["protocol",3],["protocol",3]],["bool",0]],[[["sel",3],["formatter",3]],["result",6]],[[["class",3],["formatter",3]],["result",6]],[[["protocol",3],["formatter",3]],["result",6]],[[["object",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["c_void",0]],["sel",3]],[[["str",0]],["option",4,[["class",3]]]],[[["str",0]],["option",4,[["protocol",3]]]],[[["object",3],["str",0]],["",0]],[[["object",3],["str",0]],["",0]],[[["method",3]],["imp",6]],[[["class",3],["sel",3]],["option",4,[["method",3]]]],[[["class",3]],["mallocbuffer",3,[["method",3]]]],[[["class",3]],["usize",0]],[[["class",3],["str",0]],["option",4,[["ivar",3]]]],[[["class",3]],["mallocbuffer",3,[["ivar",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["class",3]],["class",3]],null,null,null,null,null,null,null,[[["sel",3]],["str",0]],[[["ivar",3]],["str",0]],[[["method",3]],["sel",3]],[[["class",3]],["str",0]],[[["protocol",3]],["str",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ivar",3]],["isize",0]],null,null,null,null,null,null,[[],["mallocbuffer",3,[["protocol",3]]]],[[["str",0]],["sel",3]],[[["method",3]],["encoding",3]],null,null,[[["object",3],["str",0]]],[[["class",3]],["option",4,[["class",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["ivar",3]],["encoding",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[8,"EncodeArguments"],[3,"Encoding"],[3,"MessageError"],[8,"Encode"],[8,"MessageArguments"],[8,"Message"],[8,"MethodImplementation"],[3,"ClassDecl"],[3,"ProtocolDecl"],[3,"StrongPtr"],[3,"WeakPtr"],[3,"Class"],[3,"Protocol"],[3,"Method"],[3,"Sel"],[3,"Ivar"],[3,"Object"]]},\
"owned_ttf_parser":{"doc":"Extends ttf_parser with owned version of <code>Face</code>: <code>OwnedFace</code>.","t":[12,12,12,13,8,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,8,4,3,3,8,3,13,13,13,13,13,13,13,13,3,3,3,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,3,13,4,3,3,4,3,3,13,3,18,3,13,13,13,4,3,13,13,13,13,13,13,3,3,4,4,13,13,0,12,12,0,10,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,0,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,12,12,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,0,12,12,11,11,11,0,12,12,11,11,12,0,12,12,12,0,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,11,11,11,11,10,0,12,12,0,12,12,12,0,12,12,10,0,12,12,0,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,11,10,11,11,11,11,11,12,12,0,12,12,10,11,0,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,12,12,12,12,0,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,6,3,3,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,3,13,13,3,3,4,13,13,13,13,13,3,3,3,13,3,13,3,13,3,13,4,3,3,4,13,4,3,3,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,6,3,13,13,13,13,3,13,6,6,3,13,3,13,3,3,6,13,4,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,3,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,3,13,3,3,3,3,13,3,3,13,3,13,13,3,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,3,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,4,3,6,6,6,4,4,4,3,6,6,3,13,13,13,13,13,13,13,13,13,13,6,3,6,3,3,3,6,6,8,3,3,3,3,8,3,3,6,6,3,3,6,6,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,11,12,11,11,10,10,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,4,3,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12],"n":["0","0","0","ArgumentsStackLimitReached","AsFaceRef","BboxOverflow","Black","BlendRegionsLimitReached","Bold","CFFError","Condensed","Custom","DataAfterEndChar","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Face","FaceIndexOutOfBounds","FaceMut","FaceParsingError","FaceTables","Fixed","FromData","GlyphId","InvalidArgumentsStackLength","InvalidItemVariationDataIndex","InvalidNumberOfBlendOperands","InvalidOperator","InvalidSeacCode","InvalidSubroutineIndex","Iso","Italic","LazyArray16","LazyArray32","LazyArrayIter16","LazyArrayIter32","Light","LineMetrics","Macintosh","MalformedFont","Medium","MissingEndChar","MissingMoveTo","NestingLimitReached","NoGlyph","NoHeadTable","NoHheaTable","NoLocalSubroutines","NoMaxpTable","Normal","Normal","Normal","NormalizedCoordinate","Oblique","Other","OutlineBuilder","OwnedFace","PNG","PlatformId","PreParsedSubtables","RasterGlyphImage","RasterImageFormat","RawFace","RawFaceTables","ReadOutOfBounds","Rect","SIZE","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Tag","Thin","UltraCondensed","UltraExpanded","Unicode","UnknownMagic","UnsupportedOperator","Variation","VariationAxis","Weight","Width","Windows","ZeroBBox","ankr","ankr","ankr","apple_layout","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_slice","as_u32","ascender","avar","avar","avar","axis","binary_search","binary_search","binary_search_by","binary_search_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","cbdt","cbdt","cbdt","cblc","cblc","cff","cff","cff","cff2","cff2","cff2","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmap","cmap","cmap","cmp","cmp","count","count","curve_to","data","def_value","default","default","default","default","default","default","descender","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","feat","feat","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts_in_collection","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_lossy","from_raw_tables","from_slice","from_slice","from_vec","fvar","fvar","fvar","gdef","gdef","gdef","get","get","get","global_bounding_box","glyf","glyf","glyf","glyph_bounding_box","glyph_hor_advance","glyph_hor_side_bearing","glyph_index","glyph_index","glyph_name","glyph_raster_image","glyph_svg_image","glyph_variation_index","glyph_ver_advance","glyph_ver_side_bearing","glyph_y_origin","glyphs_hor_kerning","gpos","gpos","gpos","gsub","gsub","gsub","gvar","gvar","gvar","has_non_default_variation_coordinates","hash","hash","head","head","head","height","height","height","hhea","hhea","hhea","hidden","hmtx","hmtx","hmtx","hvar","hvar","hvar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_vec","is_bold","is_empty","is_italic","is_monospaced","is_null","is_oblique","is_regular","is_variable","italic_angle","kern","kern","kern","kerx","kerx","kerx","last","len","len","line_gap","line_to","loca","loca","max_value","maxp","maxp","maxp","min_value","morx","morx","morx","move_to","mvar","mvar","mvar","name","name","name","name_id","name_id","names","ne","ne","ne","ne","ne","ne","ne","new","new","next","next","number_of_glyphs","opentype_layout","os2","os2","os2","outline_glyph","parse","parse","parse","parse","partial_cmp","partial_cmp","pixels_per_em","position","post","post","post","quad_to","range","sbix","sbix","sbix","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","slice","strikeout_metrics","style","subscript_metrics","superscript_metrics","svg","svg","svg","table","table_data","tables","tag","thickness","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trak","trak","trak","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","underline_metrics","units_per_em","value","variation_axes","variation_coordinates","vertical_ascender","vertical_descender","vertical_height","vertical_line_gap","vhea","vhea","vhea","vmtx","vmtx","vorg","vorg","vorg","vvar","vvar","weight","width","width","width","x","x_height","x_max","x_min","x_offset","x_size","y","y_max","y_min","y_offset","y_size","0","Point","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","fmt","fmt","from","from","into","into","ne","parse","parse","points","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","ExtendedStateTable","GenericStateEntry","Lookup","StateEntry","StateTable","ValueOffset","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","entry","entry","extra","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_advance","has_mark","has_offset","has_push","has_reset","into","into","into","into","into","kerning","new_state","new_state","next","parse","parse","parse","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value_offset","DELETED_GLYPH","END_OF_TEXT","OUT_OF_BOUNDS","START_OF_TEXT","AxisValueMap","SegmentMaps","SegmentMapsIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from_coordinate","into","into","into","into","into_iter","into_iter","len","map_coordinates","next","parse","parse","segment_maps","to_coordinate","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_name","into","outline","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","ByteEncodingTable","Format","Found","GlyphVariationResult","HighByteMappingThroughTable","ManyToOneRangeMappings","MixedCoverage","SegmentMappingToDeltaValues","SegmentedCoverage","Subtable","Subtable0","Subtable10","Subtable12","Subtable13","Subtable14","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","TrimmedArray","TrimmedTableMapping","UnicodeVariationSequences","UseDefault","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","default","encoding_id","eq","first_code_point","first_code_point","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","glyph_ids","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_variation_index","glyphs","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_unicode","len","ne","next","parse","parse","parse","parse","parse","parse","parse","parse","parse","platform_id","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","FeatureName","FeatureNames","FeatureNamesIter","SettingName","Table","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_setting_index","exclusive","feature","find","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","len","name_index","name_index","names","next","parse","parse","setting","setting_names","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Table","VariationAxis","axes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_value","eq","fmt","fmt","from","from","hidden","into","into","max_value","min_value","name_id","ne","parse","parse","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Base","Component","GlyphClass","Ligature","Mark","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","eq","fmt","from","from","glyph_class","glyph_mark_attachment_class","glyph_variation_delta","has_glyph_classes","hash","into","into","is_mark_glyph","parse","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","Anchor","AnchorMatrix","ChainContext","ClassMatrix","Context","Cursive","CursiveAdjustment","CursiveAnchorSet","Device","Format1","Format1","Format2","Format2","Hinting","HintingDevice","LigatureArray","MarkArray","MarkToBase","MarkToBaseAdjustment","MarkToLigature","MarkToLigatureAdjustment","MarkToMark","MarkToMarkAdjustment","Pair","PairAdjustment","PairSet","PairSets","PositioningSubtable","Single","SingleAdjustment","ValueRecord","ValueRecordsArray","Variation","VariationDevice","anchors","base_coverage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cols","coverage","coverage","coverage","coverage","default","entry","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","inner_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","len","len","len","ligature_array","ligature_coverage","mark1_coverage","mark2_coverage","mark2_matrix","mark_coverage","mark_coverage","marks","marks","marks","outer_index","parse","rows","sets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x_advance","x_advance_device","x_delta","x_device","x_placement","x_placement_device","y","y_advance","y_advance_device","y_delta","y_device","y_placement","y_placement_device","0","0","classes","coverage","coverage","matrix","sets","0","0","0","0","0","0","0","0","coverage","coverage","value","values","Alternate","AlternateSet","AlternateSets","AlternateSubstitution","ChainContext","Context","Format1","Format2","Ligature","Ligature","LigatureSet","LigatureSets","LigatureSubstitution","Multiple","MultipleSubstitution","ReverseChainSingle","ReverseChainSingleSubstitution","Sequence","SequenceList","Single","SingleSubstitution","SubstitutionSubtable","alternate_sets","alternates","backtrack_coverages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","coverage","coverage","coverage","coverage","coverage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","glyph","into","into","into","into","into","into","into","into","into","is_reverse","ligature_sets","lookahead_coverages","parse","sequences","substitutes","substitutes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","coverage","coverage","delta","substitutes","0","0","0","0","0","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","IndexToLocationFormat","Long","Short","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","global_bbox","index_to_location_format","into","into","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units_per_em","Table","ascender","borrow","borrow_mut","clone","clone_into","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Metrics","Table","advance","advance","bearings","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","metrics","number_of_metrics","parse","parse","side_bearing","side_bearing","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","advance_offset","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","side_bearing_offset","to_owned","try_from","try_into","type_id","Format","Format0","Format1","Format2","Format3","KerningPair","Subtable","Subtable0","Subtable2","Subtable3","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into_iter","into_iter","left","len","next","pair","pairs","parse","parse","parse","parse","parse","right","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable","0","0","0","0","AnchorPoints","EntryData","Format","Format0","Format1","Format2","Format4","Format6","Subtable","Subtable0","Subtable1","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","action_index","anchor_points","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","get","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","next","pairs","parse","parse","state_table","state_table","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","0","0","0","0","0","Long","Short","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_range","into","len","parse","to_owned","try_from","try_into","type_id","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","number_of_glyphs","parse","to_owned","try_from","try_into","type_id","Chain","Chains","ChainsIter","Contextual","ContextualEntryData","ContextualSubtable","Coverage","Feature","Insertion","InsertionEntryData","InsertionSubtable","Ligature","LigatureSubtable","NonContextual","Rearrangement","Subtable","SubtableKind","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","current_index","current_insert_index","default_flags","disable_flags","enable_flags","feature_flags","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all_directions","is_backwards","is_logical","is_vertical","kind","kind","ligature_actions","ligatures","lookup","mark_index","marked_insert_index","next","next","parse","parse","parse","parse","setting","state","state","state","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","metric_offset","parse","to_owned","try_from","try_into","type_id","Custom","Iso","Macintosh","Name","Names","NamesIter","PlatformId","Table","Unicode","Windows","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","encoding_id","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_unicode","language_id","len","name","name_id","names","next","parse","parse","platform_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","0","ChainedContextLookup","ChainedSequenceRule","ChainedSequenceRuleSet","ChainedSequenceRuleSets","Class","ClassDefinition","ContextLookup","Coverage","Feature","FeatureIndex","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LanguageIndex","LanguageSystem","LanguageSystemList","LayoutTable","Lookup","LookupFlags","LookupIndex","LookupList","LookupSubtable","LookupSubtables","LookupSubtablesIter","RangeRecord","RecordList","RecordListItem","RecordListIter","Script","ScriptIndex","ScriptList","SequenceLookupRecord","SequenceRule","SequenceRuleSet","SequenceRuleSets","VariationIndex","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","coverage","coverage","default_language","end","feature_indices","features","find","find_index","find_substitute","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","ignore_base_glyphs","ignore_flags","ignore_ligatures","ignore_marks","index","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","languages","len","len","lookahead","lookup_indices","lookup_list_index","lookups","lookups","lookups","mark_attachment_type","mark_filtering_set","next","next","parse","parse","parse","parse","parse","parse","parse","parse","required_feature","right_to_left","scripts","sequence_index","start","subtables","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_mark_filtering_set","value","variations","backtrack_classes","backtrack_coverages","coverage","coverage","coverage","input_classes","input_coverages","lookahead_classes","lookahead_coverages","lookups","sets","sets","classes","records","start","classes","coverage","coverage","coverage","coverages","lookups","sets","sets","glyphs","records","Black","Bold","Condensed","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Italic","Light","Medium","Normal","Normal","Normal","Oblique","Other","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Table","Thin","UltraCondensed","UltraExpanded","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","is_bold","ne","ne","parse","partial_cmp","strikeout_metrics","style","subscript_metrics","superscript_metrics","to_number","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","use_typographic_metrics","version","weight","width","windows_ascender","windows_descender","x_height","x_offset","x_size","y_offset","y_size","0","Names","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get","into","into","is_monospaced","italic_angle","len","names","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline_metrics","Strike","Strikes","StrikesIter","Table","best_strike","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_iter","into_iter","len","len","next","parse","pixels_per_em","ppi","strikes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SvgDocumentsList","SvgDocumentsListIter","Table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","documents","find","fmt","fmt","from","from","from","get","into","into","into","into_iter","into_iter","len","next","parse","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Table","Track","TrackData","Tracks","TracksIter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get","horizontal","into","into","into","into","into","into_iter","into_iter","len","name_index","next","parse","sizes","to_owned","to_owned","to_owned","to_owned","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","values","vertical","Table","ascender","borrow","borrow_mut","clone","clone_into","default","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Table","VerticalOriginMetrics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_y","fmt","fmt","from","from","glyph_id","glyph_y_origin","into","into","metrics","parse","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y"],"q":["owned_ttf_parserowned_ttf_parser::Weight","owned_ttf_parser::ankr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::apple_layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::apple_layout::class","","","owned_ttf_parser::apple_layout::state","owned_ttf_parser::avar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::cbdt","","","","","","","","","","","","","","owned_ttf_parser::cblc","","","","","","","","","","","","","owned_ttf_parser::cff","","","","","","","","","","","","","","","owned_ttf_parser::cff2","","","","","","","","","","","","","","","owned_ttf_parser::cmapowned_ttf_parser::cmap::Format","","","","","","","","owned_ttf_parser::cmap::GlyphVariationResult","owned_ttf_parser::feat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::fvar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::gdef","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::glyf","","","","","","","","","","","","","","owned_ttf_parser::gposowned_ttf_parser::gpos::Device","","owned_ttf_parser::gpos::PairAdjustment","","","","","owned_ttf_parser::gpos::PositioningSubtable","","","","","","","","owned_ttf_parser::gpos::SingleAdjustment","","","","owned_ttf_parser::gsub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::gsub::SingleSubstitution","","","","owned_ttf_parser::gsub::SubstitutionSubtable","","","","","","","owned_ttf_parser::gvar","","","","","","","","","","","","","","owned_ttf_parser::head","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::hhea","","","","","","","","","","","","","","","","","owned_ttf_parser::hmtx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::hvar","","","","","","","","","","","","","","","owned_ttf_parser::kern","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::kern::Format","","","","owned_ttf_parser::kerxowned_ttf_parser::kerx::Format","","","","","owned_ttf_parser::loca","","","","","","","","","","","","","","","","","owned_ttf_parser::loca::Table","","owned_ttf_parser::maxp","","","","","","","","","","","","","","owned_ttf_parser::morxowned_ttf_parser::morx::SubtableKind","","","","","owned_ttf_parser::mvar","","","","","","","","","","","","","","owned_ttf_parser::name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::name_id","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::opentype_layoutowned_ttf_parser::opentype_layout::ChainedContextLookup","","","","","","","","","","","","owned_ttf_parser::opentype_layout::ClassDefinition","","","owned_ttf_parser::opentype_layout::ContextLookup","","","","","","","","owned_ttf_parser::opentype_layout::Coverage","","owned_ttf_parser::os2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::os2::Weight","owned_ttf_parser::post","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::sbix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::svg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::trak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owned_ttf_parser::vhea","","","","","","","","","","","","","","","","","","owned_ttf_parser::vorg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Used to perform a cheap conversion to a <code>Face</code> reference.","","","","","A list of errors that can occur during a CFF glyph …","","","","","","","","","A font face.","The face index is larger than the number of faces in the …","Trait exposing mutable operations on a <code>ttf_parser::Face</code>.","A list of font face parsing errors.","Parsed face tables.","A 32-bit signed fixed-point number (16.16).","A trait for parsing raw binary data of fixed size.","A type-safe wrapper for glyph ID.","","","","","","","","A form that is generally cursive in nature.","A slice-like container that converts internal binary data …","A slice-like container that converts internal binary data …","An iterator over <code>LazyArray16</code>.","An iterator over <code>LazyArray32</code>.","","A line metrics.","","An attempt to read out of bounds detected.","","","","","","The <code>head</code> table is missing or malformed.","The <code>hhea</code> table is missing or malformed.","","The <code>maxp</code> table is missing or malformed.","","","A face that is neither italic not obliqued.","A variation coordinate in a normalized coordinate system.","A typically-sloped version of the regular face.","","A trait for glyph outline construction.","An owned version of font <code>Face</code>.","","A platform ID.","A <code>Face</code> with cmap &amp; kern subtables parsed once on …","A glyph’s raster image.","A glyph raster image format.","A raw font face.","A list of all supported tables as raw data.","","A rectangle.","Object’s raw data size.","A script metrics used by subscript and superscript.","","","","A face style.","A 4-byte tag.","","","","","Face data must start with <code>0x00010000</code>, <code>0x74727565</code>, …","","A font variation value.","A variation axis.","A face weight.","A face width.","","","An Anchor Point Table implementation.","","","This module contains Apple Advanced Typography Layout …","Convert to a <code>Face</code> reference.","","","","","","","Extracts a slice containing the data passed into …","Returns tag value as <code>u32</code> number.","Returns a horizontal face ascender.","An Axis Variations Table implementation.","","","An axis tag name.","Performs a binary search by specified <code>key</code>.","Performs a binary search by specified <code>key</code>.","Performs a binary search using specified closure.","Performs a binary search using specified closure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns face’s capital height.","A Color Bitmap Data Table implementation.","","","A Color Bitmap Location Table implementation.","","A Compact Font Format Table implementation.","","","A Compact Font Format 2 Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","A Character to Glyph Index Mapping Table implementation.","","","","","","","Appends a CurveTo segment.","A raw image data. It’s up to the caller to decode it.","","","","","","","","Returns a horizontal face descender.","","","","","","","","","","","A Feature Name Table implementation.","","","","","","","","","","","","","","","","","","","","","","Returns the number of fonts stored in a TrueType font …","An image format.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new coordinate.","Creates a new coordinate.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from provided <code>RawFaceTables</code>.","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","Creates an <code>OwnedFace</code> from owned data.","A Font Variations Table implementation.","","","A Glyph Definition Table implementation.","","","Returns a value at <code>index</code>.","Returns a value at <code>index</code>.","Returns the coordinate value as f2.14.","Returns a bounding box that large enough to enclose any …","A Glyph Data Table implementation.","","","Returns a tight glyph bounding box.","Returns glyph’s horizontal advance.","Returns glyph’s horizontal side bearing.","Maps a character to a <code>GlyphId</code> using pre-parsed unicode …","Resolves a Glyph ID for a code point.","Returns glyph’s name.","Returns a reference to a glyph’s raster image.","Returns a reference to a glyph’s SVG image.","Resolves a variation of a Glyph ID from two code points.","Returns glyph’s vertical advance.","Returns glyph’s vertical side bearing.","Returns glyph’s vertical origin according to Vertical …","Returns horizontal kerning for a pair of glyphs using …","A Glyph Positioning Table implementation.","","","A Glyph Substitution Table implementation.","","","A Glyph Variations Table implementation.","","","Checks that face has non-default variation coordinates.","","","A Font Header Table implementation.","","","Returns rect’s height.","Returns face’s height.","Image height.","A Horizontal Header Table implementation.","","","","A Horizontal/Vertical Metrics Table implementation.","","","A Horizontal/Vertical Metrics Variations Table …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Unwraps the data passed into <code>OwnedFace::from_vec</code>.","Checks that face is marked as <em>Bold</em>.","Checks if array is empty.","Checks that face is marked as <em>Italic</em>.","Checks that face is marked as <em>Monospaced</em>.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","Checks that face is marked as <em>Oblique</em>.","Checks that face is marked as <em>Regular</em>.","Checks that face is variable.","Returns face’s italic angle.","A Kerning Table implementation.","","","An Extended Kerning Table implementation.","","","Returns the last value.","Returns array’s length.","Returns array’s length.","Returns a horizontal face line gap.","Appends a LineTo segment.","An Index to Location Table implementation.","","","A Maximum Profile Table implementation.","","","","An Extended Glyph Metamorphosis Table implementation.","","","Appends a MoveTo segment.","A Metrics Variations Table implementation.","","","A Naming Table implementation.","","","A list of name ID’s.","An axis name in the <code>name</code> table.","Returns a list of names.","","","","","","","","Creates a new <code>LazyArray</code>.","Creates a new <code>LazyArray</code>.","","","Returns a total number of glyphs in the face.","This module contains OpenType Layout supplementary tables …","A OS/2 and Windows Metrics Table implementation.","","","Outlines a glyph and returns its tight bounding box.","Parses an object from a raw data.","","","","","","A pixels per em of the selected strike.","Line position.","A PostScript Table implementation.","","","Appends a QuadTo segment.","Returns a <code>RangeRecord</code> for a glyph.","A Standard Bitmap Graphics Table implementation.","","","Sets a variation axis coordinate.","","","","","","","Sets a variation axis coordinate.","Returns sub-array.","Returns face’s strikeout metrics.","Returns face style.","Returns face’s subscript metrics.","Returns face’s superscript metrics.","An SVG Table implementation.","","","Returns the raw data of a selected table.","Returns the raw data of a selected table.","Returns low-level face tables.","","Line thickness.","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","","","","","","","","","","","A Tracking Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a horizontal typographic face ascender.","Returns a horizontal typographic face descender.","Returns a horizontal typographic face line gap.","Returns face’s underline metrics.","Returns face’s units per EM.","An axis value.","Returns an iterator over variation axes.","Returns the current normalized variation coordinates.","Returns a vertical face ascender.","Returns a vertical face descender.","Returns a vertical face height.","Returns a vertical face line gap.","A Vertical Header Table implementation.","","","","","A Vertical Origin Table implementation.","","","","","Returns face’s weight.","Returns rect’s width.","Returns face’s width.","Image width.","Horizontal offset.","Returns face’s x height.","","","X offset.","Horizontal face size.","Vertical offset.","","","Y offset.","Vertical face size.","","An anchor point.","An Anchor Point Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Parses a table from raw data.","Returns a list of anchor points for the specified glyph.","","","","","","","","","","","An Extended State Table.","A State Table entry.","A lookup table.","A legacy state entry used by StateTable.","A State Table.","A type-safe wrapper for a kerning value offset.","","","","","","","","","","","Predefined classes.","Returns a glyph class.","Returns a glyph class.","","","","","","","","","","","Returns a class entry.","Returns a class entry.","Additional data.","Entry flags.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If set, advance to the next glyph before going to the new …","If set, remember this glyph as the marked glyph.","Checks that entry has an offset.","If set, push this glyph on the kerning stack.","If set, reset the kerning data (clear the stack).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns kerning at offset.","Produces a new state.","A new state.","Returns the next offset.","","Parses an Extended State Table from a stream.","Parses a lookup table from raw data.","Predefined states.","","","","","","","","","","","","","","","","","","","","","Returns a value associated with the specified glyph.","Returns a value offset.","","","","","An axis value map.","A list of segment maps.","An iterator over maps.","An Axis Variations Table.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of segments.","Maps coordinates.","","","Parses a table from raw data.","The segment maps array — one segment map for each axis …","The modified, normalized coordinate value.","","","","","","","","","","","","","","","","A Color Bitmap Data Table.","","","","","","Returns the argument unchanged.","Returns a raster image for the glyph.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Color Bitmap Location Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Compact Font Format Table.","","","","","","Returns the argument unchanged.","Returns a glyph name.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","A Compact Font Format 2 Table.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","","A character encoding subtable variant.","Glyph was found in the variation encoding table.","A result of a variation glyph mapping.","","","","","","A character encoding subtable.","A format 0 subtable.","A format 10 subtable.","A format 12 subtable.","A format 13 subtable.","A format 14 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of subtables.","An iterator over <code>Subtables</code>.","A Character to Glyph Index Mapping Table.","","","","Glyph should be looked in other, non-variation tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for all codepoints contained in this subtable.","","Subtable encoding.","","First character code of subrange.","First character code covered.","","","","","","","","","","","","","","A subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a subtable at an index.","Just a list of 256 8bit glyph IDs.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Maps a character to a glyph ID.","Resolves a variation of a glyph ID from two code points.","Array of glyph indexes for character codes in the range.","Array of glyph indices for the character codes covered.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current encoding is Unicode compatible.","Returns the number","","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Subtable platform.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A feature names.","A list fo feature names.","An iterator over <code>FeatureNames</code>.","A setting name.","A Feature Name Table.","","","","","","","","","","","","","","","","","","","The index of the default setting in the <code>setting_names</code>.","The feature’s exclusive settings. If set, the feature …","The feature’s ID.","Finds a feature name by ID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a feature name at an index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of feature names.","The <code>name</code> table index for the feature’s name in a …","The <code>name</code> table index for the feature’s name in a …","A list of feature names. Sorted by <code>FeatureName.feature</code>.","","","Parses a table from raw data.","The setting.","The feature’s setting names.","","","","","","","","","","","","","","","","","","","","A Font Variations Table.","A variation axis.","A list of variation axes.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An axis name in the <code>name</code> table.","","","Parses a table from raw data.","","","","","","","","","","","","A glyph class.","","","A Glyph Definition Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns glyph’s class according to Glyph Class …","Returns glyph’s mark attachment class according to Mark …","Returns glyph’s variation delta at a specified index …","Checks that face has Glyph Class Definition Table.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that glyph is a mark according to Mark Glyph Sets …","Parses a table from raw data.","","","","","","","","","","A Glyph Data Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An Anchor Table.","An <code>Anchor</code> parsing helper.","","A <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.","","","A Cursive Attachment Positioning Subtable.","A list of entry and exit <code>Anchor</code> pairs.","A Device Table.","","","","","","A Device Table hinting values.","An array or ligature anchor matrices.","A Mark Array.","","A Mark-to-Base Attachment Positioning Subtable.","","A Mark-to-Ligature Attachment Positioning Subtable.","","A Mark-to-Mark Attachment Positioning Subtable.","","A Pair Adjustment Positioning Subtable.","A <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.","A list of <code>PairSet</code>s.","A glyph positioning lookup subtable enumeration.","","A Single Adjustment Positioning Subtable.","A Value Record.","An array of Value Records.","","A Device Table indexes into Item Variation Store.","An anchors matrix.","A base coverage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of columns in the matrix.","Returns the subtable coverage.","Returns the subtable coverage.","Returns the subtable coverage.","","","Returns an entry <code>Anchor</code> at index.","Returns an exit <code>Anchor</code> at index.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>ValueRecord</code> at index.","Returns a <code>ValueRecord</code> pair using the second glyph.","Returns a value at <code>index</code>.","Returns a <code>ValueRecord</code> pair using specified classes.","Returns an <code>AnchorMatrix</code> at index.","Returns contained data at index.","Returns an <code>Anchor</code> at position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns array’s length.","Returns array’s length.","Returns the number of items.","Returns the array length.","Returns the array length.","","","","","","A mark coverage.","","A list of mark anchors.","","","","","Number of rows in the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal value, in design units.","Horizontal adjustment for advance, in design units — …","A <code>Device</code> table with horizontal adjustment for advance.","Returns X-axis delta.","A <code>Device</code> table with horizontal value.","Horizontal adjustment for placement, in design units.","A <code>Device</code> table with horizontal adjustment for placement.","Vertical value, in design units.","Vertical adjustment for advance, in design units — only …","A <code>Device</code> table with vertical adjustment for advance.","Returns Y-axis delta.","A <code>Device</code> table with vertical value.","Vertical adjustment for placement, in design units.","A <code>Device</code> table with vertical adjustment for placement.","","","","","","","","","","","","","","","","","","","","","A list of glyphs for Alternate Substitution Subtable.","A set of <code>AlternateSet</code>.","A Alternate Substitution Subtable.","","","","","Glyph components for one ligature.","","A <code>Ligature</code> set.","A list of <code>Ligature</code> sets.","A Ligature Substitution Subtable.","","A Multiple Substitution Subtable.","","A Reverse Chaining Contextual Single Substitution Subtable.","A sequence of glyphs for Multiple Substitution Subtable.","A list of <code>Sequence</code> tables.","","A Single Substitution Subtable.","A glyph substitution lookup subtable enumeration.","","Array of alternate glyph IDs, in arbitrary order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyph components for one ligature.","Returns the subtable coverage.","Returns the subtable coverage.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ligature to substitute.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that the current subtable is <em>Reverse Chaining </em>…","","","","","A list of substitute glyphs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Glyph Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An index format used by the Index to Location Table.","","","A Font Header Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A bounding box that large enough to enclose any glyph from …","An index format used by the Index to Location Table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","","","","","Units per EM.","A Horizontal Header Table.","Face ascender.","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>hmtx</code> table.","Parses a table from raw data.","","","","","Horizontal/Vertical Metrics.","A Horizontal/Vertical Metrics Table.","Returns advance for a glyph.","Width/Height advance for <code>hmtx</code>/<code>vmtx</code>.","Side bearings for glyph IDs greater than or equal to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics indexed by glyph ID.","Sum of long metrics + bearings.","","Parses a table from raw data.","Returns side bearing for a glyph.","Left/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.","","","","","","","","","A Horizontal/Vertical Metrics Variations Table.","Returns advance offset for a glyph.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","Returns side bearing offset for a glyph.","","","","","A kerning subtable format.","","","","","A kerning pair.","A kerning subtable.","A format 0 subtable.","A format 2 subtable.","A format 3 subtable.","A list of subtables.","An iterator over kerning subtables.","A Kerning Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns left glyph ID.","Returns the number of subtables.","","Glyphs pair.","A list of kerning pairs.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Returns right glyph ID.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kerning value.","Indicates that subtable is variable.","","","","","A container of Anchor Points used by <code>Subtable4</code>.","A state machine entry.","An extended kerning subtable format.","","","","","","A kerning subtable.","A format 0 subtable.","A format 1 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of extended kerning subtables.","An iterator over extended kerning subtables.","An Extended Kerning Table.","An action index.","Anchor points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mark and current anchor points at action index.","Returns kerning for a pair of glyphs.","Returns kerning at action index.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A list of kerning pairs.","","Parses a table from raw data.","A state table.","A state table.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tuple count.","","","","","","","","","","","","","Indicates that subtable is variable.","","","","","","Long offsets.","Short offsets.","An Index to Location Table.","","","","","","Returns the argument unchanged.","Returns glyph’s range in the <code>glyf</code> table.","Calls <code>U::from(self)</code>.","Returns offsets length.","Parses a table from raw data.","","","","","","","A Maximum Profile Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The total number of glyphs in the face.","Parses a table from raw data.","","","","","A metamorphosis chain.","A list of metamorphosis chains.","An iterator over metamorphosis chains.","","A contextual subtable state table trailing data.","A contextual subtable.","A subtable coverage.","The feature table is used to compute the sub-feature flags …","","A contextual subtable state table trailing data.","An insertion subtable.","","A ligature subtable.","","","A subtable in a metamorphosis chain.","A subtable kind.","A list of subtables in a metamorphosis chain.","An iterator over a metamorphosis chain subtables.","An Extended Glyph Metamorphosis Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of metamorphosis chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ligature components.","A subtable coverage.","A current index.","A current insert index.","Default chain features.","Complement of flags for the settings that this feature and …","Flags for the settings that this feature and setting …","Subtable feature flags.","A list of chain features.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insertion glyphs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, this subtable will be applied to both horizontal …","If true, this subtable will process glyphs in descending …","If true, this subtable will process glyphs in logical order","If true, this subtable will only be applied to vertical …","The type of feature.","A subtable kind.","Ligature actions.","Ligatures.","Returns a Lookup at index.","A mark index.","A marked insert index.","","","","","","Parses a table from raw data.","The feature’s setting (aka selector).","The contextual glyph substitution state table.","A state table.","A state table.","A list of chain subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Metrics Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a metric offset by tag.","Parses a table from raw data.","","","","","","","","A Name Record.","A list of face names.","An iterator over face names.","A platform ID.","A Naming Table.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform-specific encoding ID.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a name at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current Name data has a Unicode encoding.","A language ID.","Returns a number of name records.","A raw name data.","A Name ID.","A list of names.","","","Parses a table from raw data.","A platform ID.","","","","","","Returns the Name’s data as a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Chained Contextual Lookup Subtable.","A Chained Sequence Rule.","A set of <code>ChainedSequenceRule</code>.","A list of <code>ChainedSequenceRule</code> sets.","A value of Class Definition Table.","A Class Definition Table.","A Contextual Lookup Subtable.","A Coverage Table.","A Feature.","An index in <code>FeatureList</code>.","A list of <code>Feature</code> records.","A Feature Variations Table.","Simple glyph contexts.","Simple glyph contexts.","","","Class-based glyph contexts.","Class-based glyph contexts.","","","Coverage-based glyph contexts.","Coverage-based glyph contexts.","An index in <code>LanguageSystemList</code>.","A Language System Table.","A list of <code>LanguageSystem</code> records.","A Layout Table.","A Lookup Table.","Lookup table flags.","An index in <code>LookupList</code>.","A list of <code>Lookup</code> values.","A trait for parsing Lookup subtables.","A list of lookup subtables.","An iterator over lookup subtables.","A record that describes a range of glyph IDs.","A data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …","A trait to parse item in <code>RecordList</code>.","An iterator over <code>RecordList</code> values.","A Script Table.","An index in <code>ScriptList</code>.","A list of <code>Script</code> records.","A sequence rule record.","A sequence rule.","A set of <code>SequenceRule</code>s.","A list of <code>SequenceRuleSet</code>s.","An index in <code>FeatureVariations</code>.","Contains either glyph IDs or glyph Classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that glyph is present.","Returns the subtable coverage.","Returns the subtable coverage.","Default language.","Last glyph ID in the range","Array of indices into the FeatureList, in arbitrary order.","A list of all supported features.","Returns RecordList value by <code>Tag</code>.","Returns a <code>VariationIndex</code> for variation coordinates.","Returns a <code>Feature</code> at specified indices.","Lookup qualifiers.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parses a subtable at index.","Returns RecordList value by index.","Returns the coverage index of the glyph or <code>None</code> if it is …","Returns the glyph class of the glyph (zero if it is not …","","","","","Returns RecordList value index by <code>Tag</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates an iterator over subtables.","","Checks that RecordList is empty.","List of supported languages, excluding the default one. …","Returns a number of items in the LookupSubtables.","Returns a number of items in the RecordList.","Contains either glyph IDs or glyph Classes.","","","","","A list of all lookups.","","Index into GDEF mark glyph sets structure.","","","Parses raw data.","Parses raw data.","","","","","","","Index of a feature required for this language system.","","A list of all supported scripts.","","First glyph ID in the range","Available subtables.","Script tag.","Language tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coverage Index of first glyph ID in range.","Used to substitute an alternate set of lookup tables to …","","","","","","","","","","","","","","","","","","","","","","","","Array of glyph IDs. Sorted.","Array of glyph ranges. Ordered by <code>RangeRecord.start</code>.","","","","","","","","","A form that is generally cursive in nature.","","","","","A face that is neither italic not obliqued.","A typically-sloped version of the regular face.","","A script metrics used by subscript and superscript.","","","","A face style.","A OS/2 and Windows Metrics Table.","","","","A face weight.","A face width.","","","","","","","","","","","Returns capital height.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if face is bold.","","","Parses a table from raw data.","","Returns strikeout metrics.","Returns style.","Returns subscript metrics.","Returns superscript metrics.","Returns a numeric representation of a weight.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","Returns typographic ascender.","Returns typographic descender.","Returns typographic line gap.","Checks if typographic metrics should be used.","Table version.","Returns weight class.","Returns face width.","Returns Windows ascender.","Returns Windows descender.","Returns x height.","X offset.","Horizontal face size.","Y offset.","Vertical face size.","","A list of glyph names.","A PostScript Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph name by ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flag that indicates that the font is monospaced.","Italic angle in counter-clockwise degrees from the …","Returns names count.","A list of glyph names.","Parses a table from raw data.","","","","","","","","","Underline metrics.","A strike of glyphs.","A list of <code>Strike</code>s.","An iterator over <code>Strikes</code>.","A Standard Bitmap Graphics Table.","Selects the best matching <code>Strike</code> based on <code>pixels_per_em</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph data.","Returns a strike at the index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of glyphs in this strike.","Returns the number of strikes.","","Parses a table from raw data.","The pixels per EM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A list of <code>Strike</code>s.","","","","","","","","","","","","","","","","A list of SVG documents.","An iterator over <code>SvgDocumentsList</code> values.","An SVG Table.","","","","","","","","","","","","","","A list of SVG documents.","Returns a SVG document data by glyph ID.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns SVG document data at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of SVG documents in the list.","","Parses a table from raw data.","","","","","","","","","","","","","A Tracking Table.","A single track.","A track data.","A list of tracks.","An iterator over <code>Tracks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a track at index.","Horizontal track data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of tracks.","The <code>name</code> table index for the track’s name.","","Parses a table from raw data.","A list of sizes.","","","","","A list of tracks.","","","","","","","","","","","","","","","","A track value.","A list of tracking values for each size.","Vertical track data.","A Vertical Header Table.","Face ascender.","","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>vmtx</code> table.","Parses a table from raw data.","","","","","A Vertical Origin Table.","Vertical origin metrics for the Vertical Origin Table.","","","","","","","","","Default origin.","","","Returns the argument unchanged.","Returns the argument unchanged.","Glyph ID.","Returns glyph’s Y origin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics for each glyph.","","Parses a table from raw data.","","","","","","","","","Y coordinate, in the font’s design coordinate system, of …"],"i":[1,2,3,4,0,4,5,4,5,0,6,7,4,6,5,6,6,5,0,8,0,0,0,0,0,0,4,4,4,4,4,4,7,9,0,0,0,0,5,0,7,8,5,4,4,4,4,8,8,4,8,5,6,9,0,9,5,0,0,10,0,0,0,0,0,0,4,0,11,0,5,6,6,0,0,5,6,6,7,8,4,0,0,0,0,7,4,0,12,13,0,14,15,15,16,16,17,17,15,3,17,0,12,13,18,19,20,19,20,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,17,0,12,13,0,12,0,12,13,0,12,13,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,28,0,12,13,2,3,21,22,28,26,29,19,21,20,2,23,12,17,4,2,23,18,3,24,25,10,26,8,0,12,13,15,16,1,19,20,4,2,23,18,3,3,24,25,10,26,8,8,27,17,0,26,15,16,16,16,1,19,21,20,22,4,2,23,23,23,18,3,24,25,10,26,8,27,12,13,17,3,3,17,27,17,15,0,12,13,0,12,13,19,20,23,17,0,12,13,17,17,17,16,17,17,17,17,17,17,17,17,16,0,12,13,0,12,13,0,12,13,17,2,3,0,12,13,25,17,26,0,12,13,29,0,12,13,0,12,13,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,19,21,20,22,15,17,19,17,17,3,17,17,17,17,0,12,13,0,12,13,19,19,20,17,28,0,12,29,0,12,13,29,0,12,13,28,0,12,13,0,12,13,0,29,17,2,23,18,3,24,25,26,19,20,21,22,17,0,0,12,13,17,11,1,2,3,2,3,26,24,0,12,13,28,19,0,12,13,30,15,15,16,16,17,17,17,19,17,17,17,17,0,12,13,27,17,17,29,24,3,3,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,3,8,0,12,13,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,15,16,1,19,21,20,22,4,2,23,18,3,24,25,10,26,8,27,12,13,17,17,17,17,17,17,18,17,17,17,17,17,17,0,12,13,12,13,0,12,13,12,13,17,25,17,26,26,17,25,25,31,31,26,25,25,31,31,32,0,0,33,34,33,34,33,34,33,34,33,33,33,34,33,34,33,34,33,33,34,34,33,34,33,34,33,34,33,34,33,33,0,0,0,0,0,0,35,36,37,38,39,35,36,37,38,39,0,37,38,35,36,37,38,39,35,36,37,38,39,37,38,35,35,35,36,37,38,39,35,36,37,38,39,35,35,35,35,35,35,36,37,38,39,37,37,35,36,35,38,39,0,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,39,35,0,0,0,0,0,0,0,0,40,41,42,43,40,41,42,43,41,42,43,41,42,43,41,42,43,40,41,42,43,41,40,41,42,43,40,42,42,43,40,41,43,43,41,41,42,43,40,41,42,43,40,41,42,43,40,41,42,43,0,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,0,49,0,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,49,50,51,52,53,54,55,56,57,49,58,48,59,60,61,50,51,52,53,54,55,56,57,49,58,48,59,60,61,51,52,53,54,55,56,57,49,58,48,59,60,61,51,52,53,54,55,56,57,49,58,48,59,60,61,51,52,53,54,55,56,57,59,60,59,49,54,55,51,52,53,54,55,56,57,49,58,48,59,60,61,59,50,51,52,53,54,55,56,57,49,58,48,59,60,61,60,51,51,52,53,54,55,56,57,58,59,59,54,55,50,51,52,53,54,55,56,57,49,58,48,59,60,61,50,60,59,60,49,50,51,52,53,54,55,56,57,58,61,59,61,51,52,53,54,55,56,57,49,58,48,59,60,61,50,51,52,53,54,55,56,57,49,58,48,59,60,61,50,51,52,53,54,55,56,57,49,58,48,59,60,61,50,51,52,53,54,55,56,57,49,58,48,59,60,61,62,63,64,65,66,67,68,69,70,0,0,0,0,0,71,72,73,74,75,71,72,73,74,75,72,73,74,75,72,73,74,75,73,73,73,74,72,73,74,75,71,72,73,74,75,74,71,72,73,74,75,71,74,74,72,73,75,71,72,75,72,73,72,73,74,75,71,72,73,74,75,71,72,73,74,75,71,72,73,74,75,0,0,76,29,76,29,76,29,76,29,76,29,29,29,76,29,76,29,29,76,29,29,29,29,29,76,29,29,76,29,76,29,76,29,76,77,77,0,77,77,0,77,78,77,78,77,78,77,78,77,78,77,77,77,78,78,78,78,78,77,77,78,78,78,77,77,78,77,78,77,78,77,78,0,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,80,0,80,80,0,0,0,81,82,81,82,83,0,0,0,80,0,80,0,80,0,80,0,0,0,0,80,0,0,0,83,0,84,84,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,98,81,82,80,93,87,92,92,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,88,89,90,91,95,96,98,86,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,88,90,92,95,96,94,94,99,99,99,84,94,84,94,99,86,80,98,93,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,85,86,83,87,88,81,89,90,91,82,92,93,84,94,95,96,97,98,99,80,97,87,87,85,97,87,87,97,87,87,85,97,87,87,100,101,102,103,102,102,103,104,105,106,107,108,109,110,111,112,113,112,113,114,0,0,0,114,114,115,115,0,114,0,0,0,114,0,114,0,0,0,114,0,0,116,117,118,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,121,115,114,120,116,122,118,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,121,115,119,120,117,116,121,122,118,114,114,122,118,114,120,119,118,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,115,119,120,117,116,121,122,118,114,123,124,123,124,125,126,127,128,129,130,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,0,133,133,0,133,134,133,134,133,134,133,134,133,133,134,133,134,134,134,133,134,134,133,134,133,134,133,134,133,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,136,136,137,136,136,137,137,136,137,136,137,136,137,136,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,139,139,139,139,0,0,0,0,0,0,0,0,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,143,140,139,141,142,144,145,146,147,141,140,139,141,142,143,144,145,146,147,141,144,145,146,141,141,141,140,139,141,142,143,144,145,146,147,142,143,140,142,143,140,144,140,144,145,146,147,140,147,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,140,139,141,142,143,144,145,146,147,140,141,148,149,150,151,0,0,0,152,152,152,152,152,0,0,0,0,0,0,0,0,0,153,154,155,153,156,157,158,154,159,152,160,161,162,163,155,153,156,157,158,154,159,152,160,161,162,163,155,153,156,157,158,154,159,152,160,161,162,163,155,153,156,157,158,154,159,152,160,161,162,163,156,154,155,153,156,157,158,154,159,152,160,161,163,160,155,153,156,157,158,154,159,152,160,161,162,163,158,155,156,157,159,160,160,160,160,155,153,156,157,158,154,159,152,160,161,162,163,161,162,162,155,153,163,156,154,163,155,153,156,157,158,154,159,152,160,161,162,163,155,153,156,157,158,154,159,152,160,161,162,163,155,153,156,157,158,154,159,152,160,161,162,163,160,155,153,156,157,158,154,159,152,160,161,162,163,160,164,165,166,167,168,169,169,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,171,0,172,172,172,172,172,172,172,172,172,172,172,172,172,0,0,0,173,0,0,0,0,173,0,0,173,0,173,173,0,0,0,0,0,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,177,181,175,178,184,174,174,181,184,174,175,176,177,178,179,173,180,181,182,184,185,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,179,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,182,183,185,186,180,180,180,180,174,181,177,177,176,175,178,183,186,174,175,178,187,174,176,177,179,184,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,174,175,176,177,178,179,173,180,181,182,183,184,185,186,187,188,189,190,191,192,0,193,193,193,193,193,193,193,193,193,193,193,193,193,7,7,7,0,0,0,0,0,7,7,7,194,195,196,197,7,194,195,196,197,7,194,195,196,197,7,194,195,196,197,196,195,197,194,7,7,194,195,197,7,194,195,196,197,195,7,194,195,196,197,195,196,194,194,195,194,194,197,196,7,197,194,7,194,195,196,197,194,7,194,195,196,197,7,194,195,196,197,7,194,195,196,197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,199,200,201,202,199,200,201,202,199,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,201,199,200,212,216,213,210,211,215,215,208,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,209,211,201,202,198,198,198,198,211,206,203,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,209,211,211,212,209,211,203,214,207,206,203,210,198,208,204,205,217,218,207,198,212,213,214,216,213,198,210,207,216,208,212,213,214,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,204,205,199,206,207,200,203,208,209,198,210,211,212,213,214,215,216,201,202,198,216,210,219,220,221,219,220,219,220,219,220,220,221,219,222,223,222,224,225,224,226,226,226,225,224,227,228,5,5,6,6,5,6,6,5,9,5,5,5,6,9,9,5,0,5,6,6,0,0,5,6,6,0,0,5,6,9,31,229,5,6,9,31,229,229,5,6,9,31,229,5,6,9,31,229,6,5,6,9,5,6,9,31,5,6,9,31,229,5,5,6,9,31,229,5,6,9,31,5,6,9,31,229,229,5,31,229,6,229,229,229,229,5,6,5,6,9,31,229,5,6,9,31,229,5,6,9,31,229,5,6,9,31,229,229,229,229,229,229,229,229,229,229,229,31,31,31,31,32,0,0,230,231,230,231,230,231,230,231,230,230,231,230,231,230,230,231,231,231,230,231,231,230,231,230,231,230,231,230,231,231,0,0,0,0,232,233,234,235,232,233,234,235,232,234,235,232,234,235,232,234,235,232,233,234,235,232,234,235,233,234,235,232,233,235,234,235,233,232,234,234,232,234,235,232,233,234,235,232,233,234,235,232,233,234,235,232,0,0,0,236,237,238,236,237,238,236,237,238,236,237,238,237,238,236,236,238,236,237,238,236,236,237,238,236,237,236,237,238,236,237,238,236,237,238,236,237,238,236,237,238,0,0,0,0,0,239,240,241,242,243,239,240,241,242,243,240,241,242,243,240,241,242,243,241,242,240,241,242,243,239,240,241,242,243,241,243,239,240,241,242,243,239,241,241,240,239,243,242,240,241,242,243,242,239,240,241,242,243,239,240,241,242,243,239,240,241,242,243,240,240,243,0,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,0,0,245,246,245,246,245,246,245,246,246,245,246,245,246,245,246,245,246,246,245,246,245,246,245,246,245,246,245,246,245],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["face",3]],[[["ownedface",3]],["face",3]],[[["ownedface",3]],["face",3]],[[["preparsedsubtables",3]],["face",3]],[[["preparsedsubtables",3]],["face",3]],[[["face",3]],["face",3]],[[["face",3]],["face",3]],[[["ownedface",3]]],[[["tag",3]],["u32",0]],[[["face",3]],["i16",0]],null,null,null,null,[[["lazyarray16",3],["",0]],["option",4]],[[["lazyarray32",3],["",0]],["option",4]],[[["lazyarray16",3]],["option",4]],[[["lazyarray32",3]],["optionface",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,null,[[["preparsedsubtables",3,[["clone",8]]]],["preparsedsubtables",3,[["clone",8]]]],[[["fixed",3]],["fixed",3]],[[["lazyarray16",3]],["lazyarray16",3]],[[["lazyarrayiter16",3]],["lazyarrayiter16",3]],[[["lazyarray32",3]],["lazyarray32",3]],[[["lazyarrayiter32",3]],["lazyarrayiter32",3]],[[["cfferror",4]],["cfferror",4]],[[["glyphid",3]],["glyphid",3]],[[["normalizedcoordinate",3]],["normalizedcoordinate",3]],[[["variation",3]],["variation",3]],[[["tag",3]],["tag",3]],[[["linemetrics",3]],["linemetrics",3]],[[["rect",3]],["rect",3]],[[["rasterimageformat",4]],["rasterimageformat",4]],[[["rasterglyphimage",3]],["rasterglyphimage",3]],[[["faceparsingerror",4]],["faceparsingerror",4]],[[["rawface",3]],["rawface",3]],[[["rawfacetables",3]],["rawfacetables",3]],[[["facetables",3]],["facetables",3]],[[["face",3]],["face",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],null,null,null,[[["glyphid",3],["glyphid",3]],["ordering",4]],[[["tag",3],["tag",3]],["ordering",4]],[[["lazyarrayiter16",3]],["usize",0]],[[["lazyarrayiter32",3]],["usize",0]],[[["",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]]],null,null,[[],["lazyarray16",3]],[[],["lazyarrayiter16",3]],[[],["lazyarray32",3]],[[],["glyphid",3]],[[],["normalizedcoordinate",3]],[[],["rawfacetables",3]],[[["face",3]],["i16",0]],[[["cfferror",4],["cfferror",4]],["bool",0]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["normalizedcoordinate",3],["normalizedcoordinate",3]],["bool",0]],[[["variation",3],["variation",3]],["bool",0]],[[["tag",3],["tag",3]],["bool",0]],[[["linemetrics",3],["linemetrics",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["rasterimageformat",4],["rasterimageformat",4]],["bool",0]],[[["rasterglyphimage",3],["rasterglyphimage",3]],["bool",0]],[[["faceparsingerror",4],["faceparsingerror",4]],["bool",0]],null,null,null,[[["ownedface",3],["formatter",3]],["result",6]],[[["preparsedsubtables",3],["formatter",3]],["result",6]],[[["fixed",3],["formatter",3]],["result",4,[["error",3]]]],[[["lazyarray16",3],["formatter",3]],["result",4,[["error",3]]]],[[["lazyarray32",3],["formatter",3]],["result",4,[["error",3]]]],[[["cfferror",4],["formatter",3]],["result",4,[["error",3]]]],[[["glyphid",3],["formatter",3]],["result",4,[["error",3]]]],[[["normalizedcoordinate",3],["formatter",3]],["result",4,[["error",3]]]],[[["variation",3],["formatter",3]],["result",4,[["error",3]]]],[[["tag",3],["formatter",3]],["result",4,[["error",3]]]],[[["tag",3],["formatter",3]],["result",4,[["error",3]]]],[[["linemetrics",3],["formatter",3]],["result",4,[["error",3]]]],[[["rect",3],["formatter",3]],["result",4,[["error",3]]]],[[["rasterimageformat",4],["formatter",3]],["result",4,[["error",3]]]],[[["rasterglyphimage",3],["formatter",3]],["result",4,[["error",3]]]],[[["faceparsingerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["faceparsingerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["rawface",3],["formatter",3]],["result",4,[["error",3]]]],[[["face",3],["formatter",3]],["result",4,[["error",3]]]],[[],["option",4,[["u32",0]]]],null,[[]],[[["ownedface",3]],["preparsedsubtables",3,[["ownedface",3]]]],[[["face",3]],["preparsedsubtables",3,[["face",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]],["normalizedcoordinate",3]],[[["i16",0]],["normalizedcoordinate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tag",3]],[[],["tag",3]],[[["rawfacetables",3]],["result",4,[["face",3],["faceparsingerror",4]]]],[[["u32",0]],["result",4,[["rawface",3],["faceparsingerror",4]]]],[[["u32",0]],["result",4,[["face",3],["faceparsingerror",4]]]],[[["vec",3,[["u8",0]]],["u32",0]],["result",4,[["ownedface",3],["faceparsingerror",4]]]],null,null,null,null,null,null,[[["lazyarray16",3],["u16",0]],["option",4]],[[["lazyarray32",3],["u32",0]],["option",4]],[[["normalizedcoordinate",3]],["i16",0]],[[["face",3]],["rect",3]],null,null,null,[[["face",3],["glyphid",3]],["option",4,[["rect",3]]]],[[["face",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["preparsedsubtables",3],["char",0]],["option",4,[["glyphid",3]]]],[[["face",3],["char",0]],["option",4,[["glyphid",3]]]],[[["face",3],["glyphid",3]],["option",4,[["str",0]]]],[[["face",3],["glyphid",3],["u16",0]],["option",4,[["rasterglyphimage",3]]]],[[["face",3],["glyphid",3]],["option",4]],[[["face",3],["char",0],["char",0]],["option",4,[["glyphid",3]]]],[[["face",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["preparsedsubtables",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,[[["face",3]],["bool",0]],[[["glyphid",3],["",0]]],[[["tag",3],["",0]]],null,null,null,[[["rect",3]],["i16",0]],[[["face",3]],["i16",0]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lazyarray16",3]]],[[]],[[["lazyarray32",3]]],[[]],[[["ownedface",3]],["vec",3,[["u8",0]]]],[[["face",3]],["bool",0]],[[["lazyarray16",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["tag",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["option",4,[["f32",0]]]],null,null,null,null,null,null,[[["lazyarray16",3]],["option",4]],[[["lazyarray16",3]],["u16",0]],[[["lazyarray32",3]],["u32",0]],[[["face",3]],["i16",0]],[[["",0],["f32",0],["f32",0]]],null,null,null,null,null,null,null,null,null,null,[[["",0],["f32",0],["f32",0]]],null,null,null,null,null,null,null,null,[[["face",3]],["names",3]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["normalizedcoordinate",3],["normalizedcoordinate",3]],["bool",0]],[[["variation",3],["variation",3]],["bool",0]],[[["tag",3],["tag",3]],["bool",0]],[[["linemetrics",3],["linemetrics",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["rasterglyphimage",3],["rasterglyphimage",3]],["bool",0]],[[],["lazyarray16",3]],[[],["lazyarray32",3]],[[["lazyarrayiter16",3]],["option",4]],[[["lazyarrayiter32",3]],["option",4]],[[["face",3]],["u16",0]],null,null,null,null,[[["face",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[],["option",4]],[[],["option",4,[["fixed",3]]]],[[],["option",4,[["glyphid",3]]]],[[],["option",4,[["tag",3]]]],[[["glyphid",3],["glyphid",3]],["option",4,[["ordering",4]]]],[[["tag",3],["tag",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,[[["",0],["f32",0],["f32",0],["f32",0],["f32",0]]],[[["lazyarray16",3,[["rangerecord",3]]],["glyphid",3]],["option",4,[["rangerecord",3]]]],null,null,null,[[["",0],["tag",3],["f32",0]],["option",4]],[[["ownedface",3],["tag",3],["f32",0]],["option",4]],[[["ownedface",3],["tag",3],["f32",0]],["option",4]],[[["preparsedsubtables",3],["tag",3],["f32",0]],["option",4]],[[["preparsedsubtables",3],["tag",3],["f32",0]],["option",4]],[[["face",3],["tag",3],["f32",0]],["option",4]],[[["face",3],["tag",3],["f32",0]],["option",4]],[[["face",3],["tag",3],["f32",0]],["option",4]],[[["lazyarray16",3],["range",3,[["u16",0]]]],["option",4,[["lazyarray16",3]]]],[[["face",3]],["option",4,[["linemetrics",3]]]],[[["face",3]],["style",4]],[[["face",3]],["option",4,[["scriptmetrics",3]]]],[[["face",3]],["option",4,[["scriptmetrics",3]]]],null,null,null,[[["rawface",3],["tag",3]],["option",4]],[[["face",3],["tag",3]],["option",4]],[[["face",3]],["facetables",3]],null,null,[[["tag",3]]],[[["tag",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["linemetrics",3]]]],[[["face",3]],["u16",0]],null,[[["face",3]],["lazyarray16",3,[["variationaxis",3]]]],[[["face",3]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,[[["face",3]],["weight",4]],[[["rect",3]],["i16",0]],[[["face",3]],["width",4]],null,null,[[["face",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["point",3]],["point",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["point",3]],[[["point",3],["point",3]],["bool",0]],[[["point",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["point",3],["point",3]],["bool",0]],[[],["option",4,[["point",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["lazyarray32",3,[["point",3]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["statetable",3],["glyphid",3]],["option",4,[["u8",0]]]],[[["extendedstatetable",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["genericstateentry",3]],["genericstateentry",3]],[[["valueoffset",3]],["valueoffset",3]],[[["statetable",3]],["statetable",3]],[[["extendedstatetable",3]],["extendedstatetable",3]],[[["lookup",3]],["lookup",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["statetable",3],["u16",0],["u8",0]],["option",4,[["genericstateentry",3]]]],[[["extendedstatetable",3],["u16",0],["u16",0]],["option",4,[["genericstateentry",3]]]],null,null,[[["genericstateentry",3],["formatter",3]],["result",4,[["error",3]]]],[[["valueoffset",3],["formatter",3]],["result",4,[["error",3]]]],[[["statetable",3],["formatter",3]],["result",4,[["error",3]]]],[[["extendedstatetable",3],["formatter",3]],["result",4,[["error",3]]]],[[["lookup",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["genericstateentry",3]],["bool",0]],[[["genericstateentry",3]],["bool",0]],[[["genericstateentry",3]],["bool",0]],[[["genericstateentry",3]],["bool",0]],[[["genericstateentry",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["statetable",3],["valueoffset",3]],["option",4,[["i16",0]]]],[[["statetable",3],["u16",0]],["u16",0]],null,[[["valueoffset",3]],["valueoffset",3]],[[],["option",4,[["genericstateentry",3]]]],[[["nonzerou16",3],["stream",3]],["option",4,[["extendedstatetable",3]]]],[[["nonzerou16",3]],["option",4,[["lookup",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["lookup",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["genericstateentry",3]],["valueoffset",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["axisvaluemap",3]],["axisvaluemap",3]],[[["segmentmaps",3]],["segmentmaps",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["axisvaluemap",3],["formatter",3]],["result",4,[["error",3]]]],[[["segmentmaps",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["segmentmaps",3]]],[[["segmentmaps",3]],["u16",0]],[[["table",3]],["option",4]],[[["segmentmapsiter",3]],["option",4]],[[],["option",4,[["axisvaluemap",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["table",3],["glyphid",3],["u16",0]],["option",4,[["rasterglyphimage",3]]]],[[]],[[["table",3]],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["table",3],["glyphid",3]],["option",4,[["str",0]]]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["result",4,[["rect",3],["cfferror",4]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[],["table",3]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["result",4,[["rect",3],["cfferror",4]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullsubtable0",3]],["subtable0",3]],[[["subtable2",3]],["subtable2",3]],[[["subtable4",3]],["subtable4",3]],[[["subtable6",3]],["subtable6",3]],[[["subtable10",3]],["subtable10",3]],[[["subtable12",3]],["subtable12",3]],[[["subtable13",3]],["subtable13",3]],[[["glyphvariationresult",4]],["glyphvariationresult",4]],[[["subtable14",3]],["subtable14",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["subtable0",3],["fnmut",8]]],[[["subtable2",3],["fnmut",8]]],[[["subtable4",3],["fnmut",8]]],[[["subtable6",3],["fnmut",8]]],[[["subtable10",3],["fnmut",8]]],[[["subtable12",3],["fnmut",8]]],[[["subtable13",3],["fnmut",8]]],[[["subtable",3]]],[[],["subtables",3]],null,[[["glyphvariationresult",4],["glyphvariationresult",4]],["bool",0]],null,null,[[["subtable0",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable2",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable4",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable6",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable10",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable12",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable13",3],["formatter",3]],["result",4,[["error",3]]]],[[["glyphvariationresult",4],["formatter",3]],["result",4,[["error",3]]]],[[["subtable14",3],["formatter",3]],["result",4,[["error",3]]]],[[["format",4],["formatter",3]],["result",4,[["error",3]]]],[[["subtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtables",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3],["u16",0]],["option",4,[["subtable",3]]]],null,[[["subtable0",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable2",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable4",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable6",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable10",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable12",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable13",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable14",3],["u32",0],["u32",0]],["option",4,[["glyphvariationresult",4]]]],[[["subtable",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable",3],["u32",0],["u32",0]],["option",4,[["glyphvariationresult",4]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[["subtable",3]],["bool",0]],[[["subtables",3]],["u16",0]],[[["glyphvariationresult",4],["glyphvariationresult",4]],["bool",0]],[[["subtablesiter",3]],["option",4]],[[],["option",4,[["subtable0",3]]]],[[],["option",4,[["subtable2",3]]]],[[],["option",4,[["subtable4",3]]]],[[],["option",4,[["subtable6",3]]]],[[],["option",4,[["subtable10",3]]]],[[],["option",4,[["subtable12",3]]]],[[],["option",4,[["subtable13",3]]]],[[],["option",4,[["subtable14",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["settingname",3]],["settingname",3]],[[["featurename",3]],["featurename",3]],[[["featurenames",3]],["featurenames",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,[[["featurenames",3],["u16",0]],["option",4,[["featurename",3]]]],[[["settingname",3],["formatter",3]],["result",4,[["error",3]]]],[[["featurename",3],["formatter",3]],["result",4,[["error",3]]]],[[["featurenames",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["featurenames",3],["u16",0]],["option",4,[["featurename",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["featurenames",3]]],[[["featurenames",3]],["u16",0]],null,null,null,[[["featurenamesiter",3]],["option",4]],[[],["option",4,[["settingname",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["variationaxis",3]],["variationaxis",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["variationaxis",3],["variationaxis",3]],["bool",0]],[[["variationaxis",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,[[]],[[]],null,null,null,[[["variationaxis",3],["variationaxis",3]],["bool",0]],[[],["option",4,[["variationaxis",3]]]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["glyphclass",4]],["glyphclass",4]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["glyphclass",4],["glyphclass",4]],["ordering",4]],[[],["table",3]],[[["glyphclass",4],["glyphclass",4]],["bool",0]],[[["glyphclass",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["table",3],["glyphid",3]],["option",4,[["glyphclass",4]]]],[[["table",3],["glyphid",3]],["u16",0]],[[["table",3],["u16",0],["u16",0]],["option",4,[["f32",0]]]],[[["table",3]],["bool",0]],[[["glyphclass",4],["",0]]],[[]],[[]],[[["table",3],["glyphid",3],["option",4,[["u16",0]]]],["bool",0]],[[],["option",4,[["table",3]]]],[[["glyphclass",4],["glyphclass",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[["table",4]],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["hintingdevice",3]],["hintingdevice",3]],[[["variationdevice",3]],["variationdevice",3]],[[["device",4]],["device",4]],[[["valuerecord",3]],["valuerecord",3]],[[["valuerecordsarray",3]],["valuerecordsarray",3]],[[["singleadjustment",4]],["singleadjustment",4]],[[["pairset",3]],["pairset",3]],[[["pairsets",3]],["pairsets",3]],[[["classmatrix",3]],["classmatrix",3]],[[["pairadjustment",4]],["pairadjustment",4]],[[["cursiveanchorset",3]],["cursiveanchorset",3]],[[["cursiveadjustment",3]],["cursiveadjustment",3]],[[["marktobaseadjustment",3]],["marktobaseadjustment",3]],[[["marktoligatureadjustment",3]],["marktoligatureadjustment",3]],[[["ligaturearray",3]],["ligaturearray",3]],[[["markarray",3]],["markarray",3]],[[["anchor",3]],["anchor",3]],[[["anchormatrix",3]],["anchormatrix",3]],[[["marktomarkadjustment",3]],["marktomarkadjustment",3]],[[["positioningsubtable",4]],["positioningsubtable",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["singleadjustment",4]],["coverage",4]],[[["pairadjustment",4]],["coverage",4]],[[["positioningsubtable",4]],["coverage",4]],null,[[],["valuerecord",3]],[[["cursiveanchorset",3],["u16",0]],["option",4,[["anchor",3]]]],[[["cursiveanchorset",3],["u16",0]],["option",4,[["anchor",3]]]],[[["hintingdevice",3],["formatter",3]],["result",4,[["error",3]]]],[[["variationdevice",3],["formatter",3]],["result",4,[["error",3]]]],[[["device",4],["formatter",3]],["result",4,[["error",3]]]],[[["valuerecord",3],["formatter",3]],["result",4,[["error",3]]]],[[["valuerecordsarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["singleadjustment",4],["formatter",3]],["result",4,[["error",3]]]],[[["pairset",3],["formatter",3]],["result",4,[["error",3]]]],[[["pairsets",3],["formatter",3]],["result",4,[["error",3]]]],[[["classmatrix",3],["formatter",3]],["result",4,[["error",3]]]],[[["pairadjustment",4],["formatter",3]],["result",4,[["error",3]]]],[[["cursiveanchorset",3],["formatter",3]],["result",4,[["error",3]]]],[[["cursiveadjustment",3],["formatter",3]],["result",4,[["error",3]]]],[[["marktobaseadjustment",3],["formatter",3]],["result",4,[["error",3]]]],[[["marktoligatureadjustment",3],["formatter",3]],["result",4,[["error",3]]]],[[["ligaturearray",3],["formatter",3]],["result",4,[["error",3]]]],[[["markarray",3],["formatter",3]],["result",4,[["error",3]]]],[[["anchor",3],["formatter",3]],["result",4,[["error",3]]]],[[["anchormatrix",3],["formatter",3]],["result",4,[["error",3]]]],[[["marktomarkadjustment",3],["formatter",3]],["result",4,[["error",3]]]],[[["positioningsubtable",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["valuerecordsarray",3],["u16",0]],["option",4,[["valuerecord",3]]]],[[["pairset",3],["glyphid",3]],["option",4]],[[["pairsets",3],["u16",0]],["option",4,[["pairset",3]]]],[[["classmatrix",3]],["option",4]],[[["ligaturearray",3],["u16",0]],["option",4,[["anchormatrix",3]]]],[[["markarray",3],["u16",0]],["option",4]],[[["anchormatrix",3],["u16",0],["u16",0]],["option",4,[["anchor",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["valuerecordsarray",3]],["u16",0]],[[["pairsets",3]],["u16",0]],[[["cursiveanchorset",3]],["u16",0]],[[["ligaturearray",3]],["u16",0]],[[["markarray",3]],["u16",0]],null,null,null,null,null,null,null,null,null,null,null,[[["u16",0]],["option",4,[["positioningsubtable",4]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["hintingdevice",3],["u16",0],["option",4]],["option",4,[["i32",0]]]],null,null,null,null,null,null,[[["hintingdevice",3],["u16",0],["option",4]],["option",4,[["i32",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["singlesubstitution",4]],["singlesubstitution",4]],[[["sequence",3]],["sequence",3]],[[["multiplesubstitution",3]],["multiplesubstitution",3]],[[["alternateset",3]],["alternateset",3]],[[["alternatesubstitution",3]],["alternatesubstitution",3]],[[["ligature",3]],["ligature",3]],[[["ligaturesubstitution",3]],["ligaturesubstitution",3]],[[["reversechainsinglesubstitution",3]],["reversechainsinglesubstitution",3]],[[["substitutionsubtable",4]],["substitutionsubtable",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["singlesubstitution",4]],["coverage",4]],[[["substitutionsubtable",4]],["coverage",4]],null,null,null,null,[[["singlesubstitution",4],["formatter",3]],["result",4,[["error",3]]]],[[["sequence",3],["formatter",3]],["result",4,[["error",3]]]],[[["multiplesubstitution",3],["formatter",3]],["result",4,[["error",3]]]],[[["alternateset",3],["formatter",3]],["result",4,[["error",3]]]],[[["alternatesubstitution",3],["formatter",3]],["result",4,[["error",3]]]],[[["ligature",3],["formatter",3]],["result",4,[["error",3]]]],[[["ligaturesubstitution",3],["formatter",3]],["result",4,[["error",3]]]],[[["reversechainsinglesubstitution",3],["formatter",3]],["result",4,[["error",3]]]],[[["substitutionsubtable",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["substitutionsubtable",4]],["bool",0]],null,null,[[["u16",0]],["option",4,[["substitutionsubtable",4]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["table",3],["table",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["indextolocationformat",4]],["indextolocationformat",4]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indextolocationformat",4],["indextolocationformat",4]],["bool",0]],[[["indextolocationformat",4],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,null,[[]],[[]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],null,[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["table",3],["glyphid",3]],["option",4,[["u16",0]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["metrics",3]],["metrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["metrics",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,[[],["option",4,[["metrics",3]]]],[[["u16",0],["nonzerou16",3]],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["i16",0]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["table",3],["glyphid",3]],["option",4,[["f32",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["f32",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["kerningpair",3]],["kerningpair",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["subtable0",3]],["subtable0",3]],[[["subtable2",3]],["subtable2",3]],[[["subtable3",3]],["subtable3",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["subtablesiter",3]],[[["kerningpair",3],["formatter",3]],["result",4,[["error",3]]]],[[["format",4],["formatter",3]],["result",4,[["error",3]]]],[[["subtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtables",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable0",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable2",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable3",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtable",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable0",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable2",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable3",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["kerningpair",3]],["glyphid",3]],[[["subtables",3]],["u32",0]],[[["subtablesiter",3]],["option",4]],null,null,[[],["option",4,[["kerningpair",3]]]],[[],["option",4,[["subtable0",3]]]],[[["u8",0]],["option",4,[["subtable2",3]]]],[[],["option",4,[["subtable3",3]]]],[[],["option",4,[["table",3]]]],[[["kerningpair",3]],["glyphid",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["subtable0",3]],["subtable0",3]],[[["entrydata",3]],["entrydata",3]],[[["subtable1",3]],["subtable1",3]],[[["subtable2",3]],["subtable2",3]],[[["anchorpoints",3]],["anchorpoints",3]],[[["subtable4",3]],["subtable4",3]],[[["subtable6",3]],["subtable6",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["subtable1",3]]],[[["subtable4",3]]],[[["subtable0",3],["formatter",3]],["result",4,[["error",3]]]],[[["entrydata",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable1",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable2",3],["formatter",3]],["result",4,[["error",3]]]],[[["anchorpoints",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable4",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable6",3],["formatter",3]],["result",4,[["error",3]]]],[[["format",4],["formatter",3]],["result",4,[["error",3]]]],[[["subtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtables",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["anchorpoints",3],["u16",0]],["option",4]],[[["subtable0",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable1",3],["u16",0]],["option",4,[["i16",0]]]],[[["subtable2",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable6",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["subtablesiter",3]],["option",4]],null,[[],["option",4,[["entrydata",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",4]],["table",4]],[[["",0],["",0]]],[[["table",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["table",4],["glyphid",3]],["option",4,[["range",3,[["usize",0]]]]]],[[]],[[["table",4]],["u16",0]],[[["nonzerou16",3],["indextolocationformat",4]],["option",4,[["table",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,[[["feature",3]],["feature",3]],[[["contextualentrydata",3]],["contextualentrydata",3]],[[["contextualsubtable",3]],["contextualsubtable",3]],[[["ligaturesubtable",3]],["ligaturesubtable",3]],[[["insertionentrydata",3]],["insertionentrydata",3]],[[["insertionsubtable",3]],["insertionsubtable",3]],[[["subtablekind",4]],["subtablekind",4]],[[["coverage",3]],["coverage",3]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["chain",3]],["chain",3]],[[["chains",3]],["chains",3]],[[["chainsiter",3]],["chainsiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,[[["feature",3],["formatter",3]],["result",4,[["error",3]]]],[[["contextualentrydata",3],["formatter",3]],["result",4,[["error",3]]]],[[["contextualsubtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["ligaturesubtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["insertionentrydata",3],["formatter",3]],["result",4,[["error",3]]]],[[["insertionsubtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtablekind",4],["formatter",3]],["result",4,[["error",3]]]],[[["coverage",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtable",3],["formatter",3]],["result",4,[["error",3]]]],[[["subtables",3],["formatter",3]],["result",4,[["error",3]]]],[[["chain",3],["formatter",3]],["result",4,[["error",3]]]],[[["chains",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["chains",3]]],[[]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],null,null,null,null,[[["contextualsubtable",3],["u32",0]],["option",4,[["lookup",3]]]],null,null,[[["subtablesiter",3]],["option",4]],[[["chainsiter",3]],["option",4]],[[],["option",4,[["feature",3]]]],[[],["option",4,[["contextualentrydata",3]]]],[[],["option",4,[["insertionentrydata",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["table",3],["tag",3]],["option",4,[["f32",0]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["platformid",4]],["platformid",4]],[[["name",3]],["name",3]],[[["names",3]],["names",3]],[[["namesiter",3]],["namesiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["namesiter",3]],["usize",0]],[[],["names",3]],[[],["table",3]],null,[[["platformid",4],["platformid",4]],["bool",0]],[[["platformid",4],["formatter",3]],["result",4,[["error",3]]]],[[["name",3],["formatter",3]],["result",4,[["error",3]]]],[[["names",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["names",3],["u16",0]],["option",4,[["name",3]]]],[[]],[[]],[[]],[[]],[[]],[[["names",3]]],[[]],[[["name",3]],["bool",0]],null,[[["names",3]],["u16",0]],null,null,null,[[["namesiter",3]],["option",4]],[[],["option",4,[["platformid",4]]]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["name",3]],["option",4,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullcontextlookup",4]],["contextlookup",4]],[[["sequencerule",3]],["sequencerule",3]],[[["sequencelookuprecord",3]],["sequencelookuprecord",3]],[[["chainedcontextlookup",4]],["chainedcontextlookup",4]],[[["chainedsequencerule",3]],["chainedsequencerule",3]],[[["lookup",3]],["lookup",3]],[[["lookupsubtables",3]],["lookupsubtables",3]],[[["lookupflags",3]],["lookupflags",3]],[[["layouttable",3]],["layouttable",3]],[[["recordlist",3]],["recordlist",3]],[[["script",3]],["script",3]],[[["languagesystem",3]],["languagesystem",3]],[[["feature",3]],["feature",3]],[[["featurevariations",3]],["featurevariations",3]],[[["rangerecord",3]],["rangerecord",3]],[[["coverage",4]],["coverage",4]],[[["classdefinition",4]],["classdefinition",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["coverage",4],["glyphid",3]],["bool",0]],[[["contextlookup",4]],["coverage",4]],[[["chainedcontextlookup",4]],["coverage",4]],null,null,null,null,[[["recordlist",3],["tag",3]],["option",4]],[[["featurevariations",3]],["option",4,[["u32",0]]]],[[["featurevariations",3],["u16",0],["u32",0]],["option",4,[["feature",3]]]],null,[[["contextlookup",4],["formatter",3]],["result",4,[["error",3]]]],[[["sequencerule",3],["formatter",3]],["result",4,[["error",3]]]],[[["sequencelookuprecord",3],["formatter",3]],["result",4,[["error",3]]]],[[["chainedcontextlookup",4],["formatter",3]],["result",4,[["error",3]]]],[[["chainedsequencerule",3],["formatter",3]],["result",4,[["error",3]]]],[[["lookup",3],["formatter",3]],["result",4,[["error",3]]]],[[["lookupsubtables",3],["formatter",3]],["result",4,[["error",3]]]],[[["lookupflags",3],["formatter",3]],["result",4,[["error",3]]]],[[["layouttable",3],["formatter",3]],["result",4,[["error",3]]]],[[["recordlist",3],["formatter",3]],["result",4,[["error",3]]]],[[["script",3],["formatter",3]],["result",4,[["error",3]]]],[[["languagesystem",3],["formatter",3]],["result",4,[["error",3]]]],[[["feature",3],["formatter",3]],["result",4,[["error",3]]]],[[["featurevariations",3],["formatter",3]],["result",4,[["error",3]]]],[[["rangerecord",3],["formatter",3]],["result",4,[["error",3]]]],[[["coverage",4],["formatter",3]],["result",4,[["error",3]]]],[[["classdefinition",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lookupsubtables",3],["u16",0]],["option",4]],[[["recordlist",3],["u16",0]],["option",4]],[[["coverage",4],["glyphid",3]],["option",4,[["u16",0]]]],[[["classdefinition",4],["glyphid",3]],["u16",0]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["recordlist",3],["tag",3]],["option",4,[["u16",0]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lookupsubtables",3]],["lookupsubtablesiter",3]],[[["recordlist",3]]],[[["recordlist",3]],["bool",0]],null,[[["lookupsubtables",3]],["u16",0]],[[["recordlist",3]],["u16",0]],null,null,null,null,null,null,[[["lookupflags",3]],["u8",0]],null,[[["lookupsubtablesiter",3]],["option",4]],[[["recordlistiter",3]],["option",4]],[[["u16",0]],["option",4]],[[["tag",3]],["option",4]],[[],["option",4,[["sequencelookuprecord",3]]]],[[],["option",4,[["lookupflags",3]]]],[[["tag",3]],["option",4,[["script",3]]]],[[["tag",3]],["option",4,[["languagesystem",3]]]],[[["tag",3]],["option",4,[["feature",3]]]],[[],["option",4,[["rangerecord",3]]]],null,[[["lookupflags",3]],["bool",0]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["lookupflags",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["option",4,[["i16",0]]]],[[["weight",4]],["weight",4]],[[["width",4]],["width",4]],[[["style",4]],["style",4]],[[["scriptmetrics",3]],["scriptmetrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["width",4],["width",4]],["ordering",4]],[[],["weight",4]],[[],["width",4]],[[],["style",4]],[[["weight",4],["weight",4]],["bool",0]],[[["width",4],["width",4]],["bool",0]],[[["style",4],["style",4]],["bool",0]],[[["scriptmetrics",3],["scriptmetrics",3]],["bool",0]],[[["weight",4],["formatter",3]],["result",4,[["error",3]]]],[[["width",4],["formatter",3]],["result",4,[["error",3]]]],[[["style",4],["formatter",3]],["result",4,[["error",3]]]],[[["scriptmetrics",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u16",0]],["weight",4]],[[]],[[]],[[]],[[]],[[["weight",4],["",0]]],[[["width",4],["",0]]],[[["style",4],["",0]]],[[["scriptmetrics",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["table",3]],["bool",0]],[[["weight",4],["weight",4]],["bool",0]],[[["scriptmetrics",3],["scriptmetrics",3]],["bool",0]],[[],["option",4,[["table",3]]]],[[["width",4],["width",4]],["option",4,[["ordering",4]]]],[[["table",3]],["linemetrics",3]],[[["table",3]],["style",4]],[[["table",3]],["scriptmetrics",3]],[[["table",3]],["scriptmetrics",3]],[[["weight",4]],["u16",0]],[[["width",4]],["u16",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["bool",0]],null,[[["table",3]],["weight",4]],[[["table",3]],["width",4]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["names",3]],["names",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["names",3]],[[["names",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["names",3],["glyphid",3]],["option",4,[["str",0]]]],[[]],[[]],null,null,[[["names",3]],["u16",0]],null,[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["table",3],["u16",0]],["option",4,[["strike",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["strike",3]],["strike",3]],[[["strikes",3]],["strikes",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["strike",3],["formatter",3]],["result",4,[["error",3]]]],[[["strikes",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["strike",3],["glyphid",3]],["option",4,[["rasterglyphimage",3]]]],[[["strikes",3],["u32",0]],["option",4,[["strike",3]]]],[[]],[[]],[[]],[[]],[[]],[[["strikes",3]]],[[["strike",3]],["u16",0]],[[["strikes",3]],["u32",0]],[[["strikesiter",3]],["option",4]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["svgdocumentslist",3]],["svgdocumentslist",3]],[[["svgdocumentslistiter",3]],["svgdocumentslistiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["svgdocumentslistiter",3]],["usize",0]],null,[[["svgdocumentslist",3],["glyphid",3]],["option",4]],[[["svgdocumentslist",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["svgdocumentslist",3],["u16",0]],["option",4]],[[]],[[]],[[]],[[["svgdocumentslist",3]]],[[]],[[["svgdocumentslist",3]],["u16",0]],[[["svgdocumentslistiter",3]],["option",4]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["track",3]],["track",3]],[[["tracks",3]],["tracks",3]],[[["trackdata",3]],["trackdata",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["tracks",3]],[[],["trackdata",3]],[[["track",3],["formatter",3]],["result",4,[["error",3]]]],[[["tracks",3],["formatter",3]],["result",4,[["error",3]]]],[[["trackdata",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["tracks",3],["u16",0]],["option",4,[["track",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["tracks",3]]],[[["tracks",3]],["u16",0]],null,[[["tracksiter",3]],["option",4]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[],["table",3]],null,[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["verticaloriginmetrics",3]],["verticaloriginmetrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["verticaloriginmetrics",3],["formatter",3]],["result",4,[["error",3]]]],[[["table",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,[[["table",3],["glyphid",3]],["i16",0]],[[]],[[]],null,[[],["option",4,[["verticaloriginmetrics",3]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[3,"Fixed"],[3,"GlyphId"],[3,"Tag"],[4,"CFFError"],[4,"Weight"],[4,"Width"],[4,"PlatformId"],[4,"FaceParsingError"],[4,"Style"],[4,"RasterImageFormat"],[8,"FromData"],[3,"RawFaceTables"],[3,"FaceTables"],[8,"AsFaceRef"],[3,"OwnedFace"],[3,"PreParsedSubtables"],[3,"Face"],[3,"Variation"],[3,"LazyArray16"],[3,"LazyArray32"],[3,"LazyArrayIter16"],[3,"LazyArrayIter32"],[3,"NormalizedCoordinate"],[3,"LineMetrics"],[3,"Rect"],[3,"RasterGlyphImage"],[3,"RawFace"],[8,"OutlineBuilder"],[3,"VariationAxis"],[8,"FaceMut"],[3,"ScriptMetrics"],[13,"Other"],[3,"Point"],[3,"Table"],[3,"GenericStateEntry"],[3,"ValueOffset"],[3,"StateTable"],[3,"ExtendedStateTable"],[3,"Lookup"],[3,"SegmentMapsIter"],[3,"AxisValueMap"],[3,"SegmentMaps"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[4,"Format"],[4,"GlyphVariationResult"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable4"],[3,"Subtable6"],[3,"Subtable10"],[3,"Subtable12"],[3,"Subtable13"],[3,"Subtable14"],[3,"Subtable"],[3,"Subtables"],[3,"Table"],[13,"ByteEncodingTable"],[13,"HighByteMappingThroughTable"],[13,"SegmentMappingToDeltaValues"],[13,"TrimmedTableMapping"],[13,"TrimmedArray"],[13,"SegmentedCoverage"],[13,"ManyToOneRangeMappings"],[13,"UnicodeVariationSequences"],[13,"Found"],[3,"FeatureNamesIter"],[3,"SettingName"],[3,"FeatureName"],[3,"FeatureNames"],[3,"Table"],[3,"Table"],[4,"GlyphClass"],[3,"Table"],[3,"Table"],[4,"PositioningSubtable"],[4,"SingleAdjustment"],[4,"PairAdjustment"],[4,"Device"],[3,"MarkToBaseAdjustment"],[3,"HintingDevice"],[3,"VariationDevice"],[3,"ValueRecord"],[3,"ValueRecordsArray"],[3,"PairSet"],[3,"PairSets"],[3,"ClassMatrix"],[3,"CursiveAnchorSet"],[3,"CursiveAdjustment"],[3,"MarkToLigatureAdjustment"],[3,"LigatureArray"],[3,"MarkArray"],[3,"Anchor"],[3,"AnchorMatrix"],[3,"MarkToMarkAdjustment"],[13,"Hinting"],[13,"Variation"],[13,"Format2"],[13,"Format1"],[13,"Single"],[13,"Pair"],[13,"Cursive"],[13,"MarkToBase"],[13,"MarkToLigature"],[13,"MarkToMark"],[13,"Context"],[13,"ChainContext"],[13,"Format1"],[13,"Format2"],[4,"SubstitutionSubtable"],[4,"SingleSubstitution"],[3,"AlternateSubstitution"],[3,"AlternateSet"],[3,"ReverseChainSingleSubstitution"],[3,"Sequence"],[3,"MultipleSubstitution"],[3,"Ligature"],[3,"LigatureSubstitution"],[13,"Format1"],[13,"Format2"],[13,"Single"],[13,"Multiple"],[13,"Alternate"],[13,"Ligature"],[13,"Context"],[13,"ChainContext"],[13,"ReverseChainSingle"],[3,"Table"],[4,"IndexToLocationFormat"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Metrics"],[3,"Table"],[4,"Format"],[3,"KerningPair"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable3"],[3,"Table"],[13,"Format0"],[13,"Format1"],[13,"Format2"],[13,"Format3"],[4,"Format"],[3,"EntryData"],[3,"Subtable4"],[3,"Subtable0"],[3,"Subtable1"],[3,"Subtable2"],[3,"AnchorPoints"],[3,"Subtable6"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Table"],[13,"Format0"],[13,"Format1"],[13,"Format2"],[13,"Format4"],[13,"Format6"],[4,"Table"],[13,"Short"],[13,"Long"],[3,"Table"],[4,"SubtableKind"],[3,"Feature"],[3,"ContextualEntryData"],[3,"ContextualSubtable"],[3,"LigatureSubtable"],[3,"InsertionEntryData"],[3,"InsertionSubtable"],[3,"Coverage"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Chain"],[3,"Chains"],[3,"ChainsIter"],[3,"Table"],[13,"Rearrangement"],[13,"Contextual"],[13,"Ligature"],[13,"NonContextual"],[13,"Insertion"],[3,"Table"],[3,"Name"],[3,"Names"],[3,"NamesIter"],[3,"Table"],[3,"LookupFlags"],[4,"ContextLookup"],[4,"ChainedContextLookup"],[4,"Coverage"],[4,"ClassDefinition"],[3,"ChainedSequenceRule"],[3,"LookupSubtablesIter"],[3,"RecordListIter"],[3,"SequenceRule"],[3,"SequenceLookupRecord"],[3,"Lookup"],[3,"LookupSubtables"],[3,"LayoutTable"],[3,"RecordList"],[3,"Script"],[3,"LanguageSystem"],[3,"Feature"],[3,"FeatureVariations"],[3,"RangeRecord"],[8,"LookupSubtable"],[8,"RecordListItem"],[13,"Format2"],[13,"Format3"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format1"],[13,"Format3"],[13,"Format1"],[13,"Format2"],[3,"Table"],[3,"Names"],[3,"Table"],[3,"Table"],[3,"StrikesIter"],[3,"Strike"],[3,"Strikes"],[3,"SvgDocumentsList"],[3,"SvgDocumentsListIter"],[3,"Table"],[3,"TracksIter"],[3,"Track"],[3,"Tracks"],[3,"TrackData"],[3,"Table"],[3,"Table"],[3,"VerticalOriginMetrics"],[3,"Table"]]},\
"piston":{"doc":"A modular game engine written in Rust.","tn":["A","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","AdvancedWindow","AfterRender","AfterRenderArgs","AfterRenderEvent","Again","AltErase","Ampersand","Api","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","BuildFromWindowSettings","Button","Button","Button6","Button7","Button8","ButtonArgs","ButtonEvent","ButtonState","C","Calculator","Cancel","Cancel","Cancel","CapsLock","Caret","Centered","Clear","ClearAgain","Close","CloseArgs","CloseEvent","Colon","Comma","Computer","Controller","ControllerAxis","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cursor","CursorEvent","Custom","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DEFAULT_MAX_FPS","DEFAULT_UPS","DEFAULT_UPS_RESET","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","Down","Drop","E","Eject","End","End","Equals","Escape","Event","EventLoop","EventSettings","Events","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FileDrag","FileDrag","Find","Focus","FocusEvent","G","GenericEvent","Greater","H","Hash","Hat","HatState","Help","Home","Hover","I","Idle","IdleArgs","IdleEvent","Input","Input","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","Keyboard","L","LAlt","LCtrl","LGui","LShift","Left","Left","Left","LeftBracket","LeftDown","LeftParen","LeftUp","Less","Loop","Loop","M","Mail","MediaSelect","Menu","Middle","Minus","Mode","Motion","Mouse","MouseButton","MouseCursor","MouseCursorEvent","MouseRelative","MouseRelativeEvent","MouseScroll","MouseScrollEvent","Move","Move","Mute","N","NoWindow","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","OpenGLWindow","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Position","Power","Press","PressEvent","PrintScreen","Prior","ProcAddress","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Release","ReleaseEvent","Render","RenderArgs","RenderEvent","Resize","ResizeArgs","ResizeEvent","Return","Return2","Right","Right","Right","RightBracket","RightDown","RightParen","RightUp","S","ScrollLock","Select","Semicolon","Separator","Size","Slash","Sleep","Space","Start","Stop","Sysreq","T","Tab","Text","TextEvent","ThousandsSeparator","TimeStamp","Touch","Touch","TouchArgs","TouchEvent","U","Underscore","Undo","Unknown","Unknown","UnsupportedGraphicsApiError","Up","Up","Update","UpdateArgs","UpdateEvent","V","VolumeDown","VolumeUp","W","Window","WindowSettings","Www","X","X1","X2","Y","Z","after_render","after_render","after_render_args","api","automatic_close","automatic_close","axis","bench_mode","bench_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_window_settings","build_from_window_settings","button","button","button","button","button_args","capture_cursor","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close_args","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","controller","controller_axis","controller_axis","controller_axis_args","controllers","cursor","cursor","cursor_args","decorated","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","directx","draw_size","draw_size","draw_size","draw_size","dt","dt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event_id","event_id","event_id","exit_on_esc","exit_on_esc","expected","ext_dt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_args","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after_render_args","from_after_render_args","from_button","from_button","from_button","from_button","from_button_args","from_button_args","from_close_args","from_close_args","from_controller_axis_args","from_controller_axis_args","from_cursor","from_cursor","from_dt","from_dt","from_focused","from_focused","from_idle_args","from_idle_args","from_pos","from_pos","from_pos","from_pos","from_pos","from_pos","from_render_args","from_render_args","from_resize_args","from_resize_args","from_text","from_text","from_touch_args","from_touch_args","from_update_args","from_update_args","fullscreen","generic_event","get_automatic_close","get_automatic_close","get_automatic_close","get_controllers","get_decorated","get_event_settings","get_event_settings","get_event_settings","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_fullscreen","get_maybe_graphics_api","get_position","get_position","get_proc_address","get_resizable","get_samples","get_size","get_srgb","get_title","get_title","get_title","get_transparent","get_vsync","graphics_api","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","hide","hide","id","id","id","id","idle","idle","idle_args","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_3d","is_current","is_directx","is_metal","is_opengl","is_vulkan","keyboard","lazy","lazy","major","make_current","max_fps","max_fps","maybe_graphics_api","metal","minor","mouse","mouse_cursor","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll","mouse_scroll_args","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_3d","next","opengl","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_event","poll_event","position","position","position","position_3d","position_3d","press","press","press_args","pressure","pressure_3d","pressure_3d","release","release","release_args","render","render","render_args","resizable","resize","resize","resize_args","samples","scancode","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_automatic_close","set_automatic_close","set_automatic_close","set_bench_mode","set_capture_cursor","set_capture_cursor","set_controllers","set_decorated","set_event_settings","set_event_settings","set_event_settings","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_fullscreen","set_graphics_api","set_lazy","set_max_fps","set_maybe_graphics_api","set_position","set_position","set_resizable","set_samples","set_should_close","set_should_close","set_size","set_size","set_size","set_srgb","set_swap_buffers","set_title","set_title","set_title","set_transparent","set_ups","set_ups_reset","set_vsync","should_close","should_close","show","show","size","size","size","srgb","state","state","swap_buffers","swap_buffers","swap_buffers","swap_buffers","text","text","text_args","time_stamp","time_stamp","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","touch","touch","touch","touch_args","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_args","ups","ups","ups_reset","ups_reset","viewport","viewport","vsync","vulkan","wait_event","wait_event","wait_event_timeout","wait_event_timeout","which","width","window_size","window_size","with_args","with_args","x","y","0","0","0","0","0","0","0","1","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","axis","button","controller_axis","controller_axis_args","from_controller_axis_args","id","id","id","position","state","which","0","AFTER_RENDER","BUTTON","CLOSE","CONTROLLER_AXIS","CURSOR","EventId","FILE_DRAG","FOCUS","IDLE","MOUSE_CURSOR","MOUSE_RELATIVE","MOUSE_SCROLL","RENDER","RESIZE","TEXT","TOUCH","UPDATE","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","hash","into","ne","partial_cmp","to_owned","try_from","try_into","type_id","GenericEvent","event_id","time_stamp","with_args","A","ALT","ALT_GUI","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CTRL","CTRL_ALT","CTRL_GUI","CTRL_SHIFT","CTRL_SHIFT_ALT","CTRL_SHIFT_ALT_GUI","CTRL_SHIFT_GUI","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","GUI","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","LeftParen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","ModifierKey","Mute","N","NO_MODIFIER","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","RightParen","S","SHIFT","SHIFT_ALT","SHIFT_ALT_GUI","SHIFT_GUI","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","default","deserialize","difference","empty","eq","event","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","ne","not","partial_cmp","remove","serialize","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Button6","Button7","Button8","Left","Middle","MouseButton","MouseCursorEvent","MouseRelativeEvent","MouseScrollEvent","Right","Unknown","X1","X2","from_pos","from_pos","from_pos","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll_args"],"q":["pistonpiston::Button","","","","piston::Event","","","","","","piston::FileDrag","","piston::Input","","","","","","","","piston::Loop","","","","piston::Motion","","","","","piston::controller","","","","","","","","","","","","","","","piston::event_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston::generic_event","","","","piston::keyboardpiston::mouse","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Trait representing a window with the most features that …","After rendering and swapping buffers.","After render arguments.","After rendering and buffers are swapped.","","","","Stores graphics API version.","","","","","","","","","","","","","","","Constructs a window from a <code>WindowSettings</code> object.","Models different kinds of buttons.","Changed button state.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Button arguments.","Changed button state.","Stores button state.","","","","The cancel of touch, for example the window loses focus.","A file was hovered, but has exited the window.","","","Centered (no direction).","","","Window closed.","Close arguments.","Window is closing.","","","","A controller button.","Controller axis move event.","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","","","","","Window gained or lost cursor.","When window gets or loses cursor.","Custom event.","","","","","","","","","","","","","The default maximum frames per second.","The default updates per second.","The default delayed updates reset.","","","","","","Down direction.","A file has been dropped into the window.","","","","The end of touch, for example taking a finger away from a …","","","Models all events.","Methods implemented for changing event loop settings.","Stores event loop settings.","An event loop iterator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Models dragging and dropping files.","A file is being dragged or dropped over the window.","","Window gained or lost focus.","When window gets or loses focus.","","Implemented by all events.","","","","A controller hat (d-Pad)","Stores controller hat state.","","","A file is being hovered over the window.","","Do background tasks that can be done incrementally.","Idle arguments, such as expected idle time in seconds.","When background tasks should be performed.","Models input events.","Input events.","","","","","","","Represent a keyboard key. Keycodes follows SDL …","A keyboard button.","","","","","","","Left mouse button.","Left direction.","","Left-down direction.","","Left-up direction.","","Models loop events.","Events that commonly used by event loops.","","","","","Middle mouse button.","","","Models different kinds of motion.","A mouse button.","Represent a mouse button.","Position in window coordinates.","The position of the mouse cursor.","Position in relative coordinates.","The relative movement of mouse cursor.","Position in scroll ticks.","The scroll of the mouse wheel.","The move of touch, for example a finger moving while …","Moved mouse cursor.","","","A window without user interface, often used in server …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for OpenGL specific operations on a window.","","","","","","","","","","","Structure to store the window position.","","Button was pressed.","The press of a button.","","","The type of an OpenGL function address.","","","","","","","","","","Button was released.","The release of a button.","Render graphics.","Render arguments.","When the next frame should be rendered.","Window got resized.","Resize arguments.","When the window is resized.","","","","Right mouse button.","Right direction.","","Right-down direction.","","Right-up direction.","","","","","","Structure to store the window size.","","","","The start of touch, for example a finger pressed down on a …","","","","","Text (usually from keyboard).","When receiving text from user, such as typing a character.","","The type of time stamp.","Stores the touch state.","Touch event.","Touch arguments","When a touch is started, moved, ended or cancelled.","","","","","Unknown mouse button.","An error for when a graphics API is unsupported.","","Up direction.","Update the state of the application.","Update arguments, such as delta time in seconds.","When the application state should be updated.","","","","","Trait representing the minimum requirements for defining a …","Settings structure for window behavior.","","","Extra mouse button number 1.","Extra mouse button number 2.","","","Calls closure if this is an after render event.","","Returns after render arguments.","A string identifying the API.","Sets whether the window will automatically close when …","Sets whether built windows should automatically close when …","The axis that moved.","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds window from the given settings.","Builds the window from a <code>WindowSettings</code> object.","Errors","Calls closure if this is a button event.","","Which button was pressed.","The button that changed state.","Returns button arguments.","Sets whether to capture/grab the cursor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a close event.","","Returns close arguments.","","","","","","","","","","","","","","Returns an id of the key","Back-end agnostic controller events.","Calls closure if this is a controller axis event.","","Returns controller axis arguments.","Sets whether built windows should listen to controller …","Calls closure if this is a cursor event.","","Returns cursor arguments.","Sets whether built windows should be decorated.","","","","","","","","","","","","","","","","","","","","","","","A unique identifier for touch device.","Creates a new DirectX version.","Gets the draw size of the window.","","The width and height of rendered area in pixels.","The width of rendered area in pixels.","Expected idle time in seconds.","Delta time in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","Event identifiers.","The id of this event.","","Sets whether to exit when pressing the Esc button.","Sets whether built windows should exit when the Esc key is …","A list of supported graphics APIs.","Extrapolated time in seconds, used to do smooth animation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a focus event.","","Returns focus arguments.","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Creates an after render event.","","Creates a press event.","Creates a release event.","","","Creates a button event.","","Creates a close event from arguments.","","Creates a controller axis event.","","Creates a cursor event.","","Creates an update event with delta time.","Creates an update event with delta time.","Creates a focus event.","","Creates an idle event.","","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","","","","Creates a render event.","","Creates a resize event.","","Creates a text event.","","Creates a touch event.","","Creates an update event.","","Sets whether built windows will be fullscreen.","Trait for generic events","Gets whether the window will automatically close when …","","Gets whether built windows should automatically close when …","Gets whether built windows should listen to controller …","Gets whether built windows should be decorated.","Returns event loop settings.","","","Gets whether to exit when pressing esc.","","Gets whether built windows should exit when the Esc key is …","Gets whether built windows will be fullscreen.","Gets the graphics API version of built windows.","Gets the position of window.","","Returns the address of the specified OpenGL function if it …","Gets whether built windows should be resizable.","Gets the number of samples to use for anti-aliasing.","Gets the size of built windows.","Gets whether built windows should use hardware accelerated …","Gets a copy of the title of the window.","","Gets the title of built windows.","Gets whether built windows should be transparent.","Gets whether built windows should use vsync.","Sets the graphics API version of built windows.","","","","","","","","","","","","","The height.","Hides the window.","","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","A unique identifier for touch event.","Calls closure if this is an idle event.","","Returns idle arguments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the touch is in 3D.","Returns true if this window’s gl context is the current …","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Back-end agnostic keyboard keys.","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","Major version.","Make the window’s gl context the current gl context.","The maximum number of frames per second","The maximum number of frames per second","Sets graphics API version of built windows.","Creates a new Metal version.","Minor version.","Back-end agnostic mouse buttons.","Calls closure if this is a mouse cursor event.","","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","","Returns mouse scroll arguments.","","","","","","","","","","","","","","","","","","Creates new with default settings.","Creates a new event iterator with default UPS and FPS …","Creates a new <code>NoWindow</code>.","Creates window settings with defaults.","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerAxisArgs</code> object. Intended for use …","Creates arguments for 2D touch.","Creates arguments for 3D touch.","Returns the next event.","Creates a new OpenGL version.","","","","","","","","","","","","","","","","","","","","","","","","Polls an input event from the window.","","Sets the position of window.","The position of the touch in 2D.","Position of the controller. Usually [-1.0, 1.0], though …","The position of the touch in 3D.","The touch position, normalized 0..1.","Calls closure if this is a press event.","","Returns press arguments.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","The touch pressure vector, normalized 0..1.","Calls closure if this is a release event.","","Returns release arguments.","Calls closure if this is a render event.","","Returns render arguments.","Sets whether built windows should be resizable.","Calls closure if this is a resize event.","","Returns resize arguments.","Sets the number of samples to use for anti-aliasing.","An optional scancode that tells the physical layout of a …","","","","","","","","","","","","","","","","","","","","","","Sets whether the window will automatically close when …","","Sets whether built windows should automatically close when …","Enable or disable benchmark mode. When enabled, it will …","Sets whether to capture/grab the cursor.","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Sets event loop settings.","","","Sets whether to exit when pressing esc.","","Sets whether built windows should exit when the Esc key is …","Sets whether built windows will be fullscreen.","Sets graphics API version of built windows.","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","Sets graphics API version of built windows.","Sets the position of window.","","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Tells the window to close or stay open.","","Sets the window size.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Enable or disable automatic swapping of buffers.","Sets the title of the window.","","Sets the title of built windows.","Sets whether built windows should be transparent.","The number of updates per second","The number of delayed updates before skipping them to …","Sets whether built windows should use vsync.","Returns true if the window should close.","","Shows the window.","","Gets the size of the window.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Which button was pressed.","New state of the button.","Swaps render buffers.","Enable or disable automatic swapping of buffers.","","Enable or disable automatic swapping of buffers.","Calls closure if this is a text event.","","Returns text arguments.","Gets the time stamp of this event.","","Sets title on window.","Sets the title of built windows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a touch event.","","The touch state.","Returns touch arguments.","Sets whether built windows should be transparent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is an update event.","","Returns update arguments.","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …","Returns viewport information filling entire render area.","Returns viewport information filling entire render area.","Sets whether built windows should use vsync.","Creates a new Vulkan version.","Wait indefinitely for an input event to be available from …","","Wait for an input event to be available from the window or …","","Which hat on the controller was changed","The width.","The width and height of rendered area in points.","The width and height of rendered area in points.","Calls closure with arguments","","The x coordinate.","The y coordinate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","The axis that moved.","Which button was pressed.","Calls closure if this is a controller axis event.","Returns controller axis arguments.","Creates a controller axis event.","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","Position of the controller. Usually [-1.0, 1.0], though …","Which button was pressed.","Which hat on the controller was changed","","Event id for after render event.","Event id for button event.","Event id for close event.","Event id for controller axis event.","Event id for cursor event.","Used to identify events arguments provided by traits.","Event id for file drag event.","Event id for focus event.","Event id for idle event.","Event id for mouse cursor event.","Event id for mouse relative event.","Event id for mouse scroll event.","Event id for render event.","Event id for resize event.","Event id for text event.","Event id for touch event.","Event id for update event.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Implemented by all events.","The id of this event.","Gets the time stamp of this event.","Calls closure with arguments","","Alt.","Alt + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Ctrl.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift.","Ctrl + Shift + Alt.","Ctrl + Shift + Alt + Gui.","Ctrl + Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gui.","","","","","","","","","","","","","Represent a keyboard key. Keycodes follows SDL …","","","","","","","","","","","","","","","","","","","No modifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift.","Shift + Alt.","Shift + Alt + Gui.","Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","Change modifier key state depending on input.","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Left mouse button.","Middle mouse button.","Represent a mouse button.","The position of the mouse cursor.","The relative movement of mouse cursor.","The scroll of the mouse wheel.","Right mouse button.","Unknown mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments."],"i":[1,1,1,1,1,1,1,1,0,2,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,3,4,4,4,0,0,0,1,1,1,5,6,1,1,7,1,1,3,0,0,1,1,1,8,9,0,0,0,0,1,1,1,1,3,0,10,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,7,6,1,1,1,5,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,3,0,1,0,1,1,1,8,0,1,1,6,1,2,0,0,0,10,1,1,1,1,1,1,0,8,1,1,1,1,1,1,4,7,1,7,1,7,1,0,10,1,1,1,1,4,1,1,0,8,0,9,0,9,0,9,0,5,3,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,11,0,1,1,0,1,1,1,1,1,1,1,1,1,11,0,2,0,0,3,0,0,1,1,1,4,7,1,7,1,7,1,1,1,1,1,0,1,1,1,5,1,1,1,1,3,0,1,0,0,9,0,0,1,1,1,1,4,0,1,7,2,0,0,1,1,1,1,0,0,1,1,4,4,1,1,12,10,12,13,14,15,16,17,18,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,15,34,21,35,10,24,27,35,14,13,18,20,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,13,18,20,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,36,10,36,13,24,25,1,4,26,11,27,28,5,8,7,6,1,0,37,10,37,15,38,10,38,15,18,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,32,13,39,21,30,31,29,33,13,22,23,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,0,40,10,14,15,19,30,13,19,19,18,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,41,10,41,19,13,19,18,20,21,22,22,22,22,22,23,23,23,15,24,25,16,1,1,4,4,26,11,27,28,29,30,31,5,32,33,8,8,8,8,9,9,9,7,6,3,3,3,3,3,3,2,2,2,2,2,10,10,10,10,10,10,10,10,12,10,42,43,10,10,35,10,36,10,37,10,38,10,44,45,41,10,44,10,46,47,48,10,10,10,49,10,50,10,51,10,52,10,45,10,15,0,14,21,15,15,15,17,18,20,14,21,15,15,15,14,21,53,15,15,15,15,14,21,15,15,15,15,24,25,1,4,26,11,27,28,5,8,7,6,22,14,21,24,25,16,32,44,10,44,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,32,53,13,13,13,13,0,17,18,13,53,17,18,15,13,13,0,46,10,46,47,10,47,48,10,48,13,22,23,24,25,16,27,29,30,31,32,33,8,9,6,3,2,18,20,21,15,24,25,16,32,32,20,13,13,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,39,21,14,32,16,32,32,42,10,42,32,32,32,43,10,43,49,10,49,15,50,10,50,15,27,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,14,21,15,17,14,21,15,15,17,18,20,14,21,15,15,15,17,17,15,14,21,15,15,39,21,14,21,15,15,17,14,21,15,15,17,17,15,39,21,14,21,39,21,15,15,25,27,39,17,21,18,51,10,51,40,10,14,15,13,18,20,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,19,52,10,32,52,15,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,13,19,18,20,21,22,23,15,24,25,16,1,4,26,11,27,28,29,30,31,5,32,33,8,9,7,6,3,2,10,45,10,45,17,18,17,18,30,31,15,13,39,21,39,21,25,22,30,31,40,10,23,23,54,55,56,57,58,59,60,58,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,0,0,0,16,24,37,37,37,24,25,16,16,25,25,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,40,40,40,1,81,81,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,81,81,81,81,81,81,81,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,81,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,81,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,81,81,81,81,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,4,4,4,4,4,0,0,0,0,4,4,4,4,46,47,48,46,46,47,47,48,48],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["afterrenderargs",3]]]],null,[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,[[["bool",0]]],nullwindowsettings",3]],["result",4,[["box",3,[["error",8],["global",3]]]]]],[[["windowsettings",3]],["result",4,[["box",3,[["error",8],["global",3]]]]]],[[["windowsettings",3]],["result",4,[["nowindow",3],["box",3,[["error",8],["global",3]]]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],null,null,[[["",0]],["option",4,[["buttonargs",3]]]],[[["bool",0]]],[[["version",3]],["version",3]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["events",3]],[[["size",3]],["size",3]],[[["position",3]],["position",3]],[[["windowsettings",3]],["windowsettings",3]],[[["controllerbutton",3]],["controllerbutton",3]],[[["controllerhat",3]],["controllerhat",3]],[[["controlleraxisargs",3]],["controlleraxisargs",3]],[[["key",4]],["key",4]],[[["mousebutton",4]],["mousebutton",4]],[[["afterrenderargs",3]],["afterrenderargs",3]],[[["buttonstate",4]],["buttonstate",4]],[[["buttonargs",3]],["buttonargs",3]],[[["closeargs",3]],["closeargs",3]],[[["idleargs",3]],["idleargs",3]],[[["renderargs",3]],["renderargs",3]],[[["resizeargs",3]],["resizeargs",3]],[[["touch",4]],["touch",4]],[[["touchargs",3]],["touchargs",3]],[[["updateargs",3]],["updateargs",3]],[[["button",4]],["button",4]],[[["motion",4]],["motion",4]],[[["hatstate",4]],["hatstate",4]],[[["filedrag",4]],["filedrag",4]],[[["input",4]],["input",4]],[[["loop",4]],["loop",4]],[[["event",4]],["eventoption",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["closeargs",3]]]],[[["version",3],["version",3]],["ordering",4]],[[["controllerbutton",3],["controllerbutton",3]],["ordering",4]],[[["controllerhat",3],["controllerhat",3]],["ordering",4]],[[["key",4],["key",4]],["ordering",4]],[[["mousebutton",4],["mousebutton",4]],["ordering",4]],[[["afterrenderargs",3],["afterrenderargs",3]],["ordering",4]],[[["buttonstate",4],["buttonstate",4]],["ordering",4]],[[["buttonargs",3],["buttonargs",3]],["ordering",4]],[[["closeargs",3],["closeargs",3]],["ordering",4]],[[["touch",4],["touch",4]],["ordering",4]],[[["button",4],["button",4]],["ordering",4]],[[["hatstate",4],["hatstate",4]],["ordering",4]],[[["filedrag",4],["filedrag",4]],["ordering",4]],[[["key",4]],["i32",0]],null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["controlleraxisargs",3]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[],["eventsettings",3]],[[],["result",4,[["controllerbutton",3]]]],[[],["result",4,[["controllerhat",3]]]],[[],["result",4,[["controlleraxisargs",3]]]],[[],["result",4,[["key",4]]]],[[],["result",4,[["mousebutton",4]]]],[[],["result",4,[["afterrenderargs",3]]]],[[],["result",4,[["buttonstate",4]]]],[[],["result",4,[["buttonargs",3]]]],[[],["result",4,[["closeargs",3]]]],[[],["result",4,[["idleargs",3]]]],[[],["result",4,[["renderargs",3]]]],[[],["result",4,[["resizeargs",3]]]],[[],["result",4,[["touch",4]]]],[[],["result",4,[["touchargs",3]]]],[[],["result",4,[["updateargs",3]]]],[[],["result",4,[["button",4]]]],[[],["result",4,[["motion",4]]]],[[],["result",4,[["hatstate",4]]]],[[],["result",4,[["filedrag",4]]]],[[],["result",4,[["input",4]]]],[[],["result",4,[["loop",4]]]],null,[[["u32",0],["u32",0]],["version",3]],[[["",0]],["size",3]],[[["nowindow",3]],["size",3]],null,null,null,null,[[["version",3],["version",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["key",4],["key",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["afterrenderargs",3],["afterrenderargs",3]],["bool",0]],[[["buttonstate",4],["buttonstate",4]],["bool",0]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["closeargs",3],["closeargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touch",4],["touch",4]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["hatstate",4],["hatstate",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[["event",4],["event",4]],["bool",0]],null,[[["",0]],["eventid",3]],[[["event",4]],["eventid",3]],[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,null,[[["version",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["eventsettings",3],["formatter",3]],["result",4,[["error",3]]]],[[["nowindow",3],["formatter",3]],["result",4,[["error",3]]]],[[["size",3],["formatter",3]],["result",4,[["error",3]]]],[[["position",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowsettings",3],["formatter",3]],["result",4,[["error",3]]]],[[["controllerbutton",3],["formatter",3]],["result",4,[["error",3]]]],[[["controllerhat",3],["formatter",3]],["result",4,[["error",3]]]],[[["controlleraxisargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["key",4],["formatter",3]],["result",4,[["error",3]]]],[[["mousebutton",4],["formatter",3]],["result",4,[["error",3]]]],[[["afterrenderargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["buttonstate",4],["formatter",3]],["result",4,[["error",3]]]],[[["buttonargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["closeargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["idleargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["renderargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["resizeargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["touch",4],["formatter",3]],["result",4,[["error",3]]]],[[["touchargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["updateargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["button",4],["formatter",3]],["result",4,[["error",3]]]],[[["motion",4],["formatter",3]],["result",4,[["error",3]]]],[[["hatstate",4],["formatter",3]],["result",4,[["error",3]]]],[[["filedrag",4],["formatter",3]],["result",4,[["error",3]]]],[[["input",4],["formatter",3]],["result",4,[["error",3]]]],[[["loop",4],["formatter",3]],["result",4,[["error",3]]]],[[["event",4],["formatter",3]],["result",4,[["error",3]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],null,[[]],[[]],[[]],[[]],[[]],[[],["size",3]],[[]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[]],[[],["position",3]],[[],["position",3]],[[]],[[]],[[]],[[]],[[["u32",0]],["key",4]],[[]],[[["u32",0]],["mousebutton",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["key",4]],["button",4]],[[["controllerbutton",3]],["button",4]],[[["mousebutton",4]],["button",4]],[[]],[[["controlleraxisargs",3]],["motion",4]],[[["touchargs",3]],["motion",4]],[[]],[[]],[[]],[[["motion",4]],["input",4]],[[["buttonargs",3]],["input",4]],[[["controlleraxisargs",3]],["input",4]],[[]],[[["touchargs",3]],["input",4]],[[["closeargs",3]],["input",4]],[[["updateargs",3]],["loop",4]],[[["idleargs",3]],["loop",4]],[[["renderargs",3]],["loop",4]],[[["afterrenderargs",3]],["loop",4]],[[]],[[],["event",4]],[[["updateargs",3]],["event",4]],[[["renderargs",3]],["event",4]],[[["loop",4]],["event",4]],[[]],[[],["event",4]],[[["afterrenderargs",3]],["event",4]],[[["idleargs",3]],["event",4]],[[["afterrenderargs",3],["",0]],["option",4]],[[["afterrenderargs",3],["event",4]],["option",4,[["event",4]]]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["buttonargs",3],["",0]],["option",4]],[[["buttonargs",3],["event",4]],["option",4,[["event",4]]]],[[["closeargs",3],["",0]],["option",4]],[[["closeargs",3],["event",4]],["option",4,[["event",4]]]],[[["controlleraxisargs",3],["",0]],["option",4]],[[["controlleraxisargs",3],["event",4]],["option",4,[["event",4]]]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["f64",0],["",0]],["option",4]],[[["f64",0],["",0]],["option",4]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["idleargs",3],["",0]],["option",4]],[[["idleargs",3],["event",4]],["option",4,[["event",4]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["renderargs",3],["",0]],["option",4]],[[["renderargs",3],["event",4]],["option",4,[["event",4]]]],[[["resizeargs",3],["",0]],["option",4]],[[["resizeargs",3],["event",4]],["option",4,[["event",4]]]],[[["str",0],["",0]],["option",4]],[[["str",0],["event",4]],["option",4,[["event",4]]]],[[["touchargs",3],["",0]],["option",4]],[[["touchargs",3],["event",4]],["option",4,[["event",4]]]],[[["updateargs",3],["",0]],["option",4]],[[["updateargs",3],["event",4]],["option",4,[["event",4]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["",0]],["eventsettings",3]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["eventsettings",3]],[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["option",4,[["version",3]]]],[[["",0]],["option",4,[["position",3]]]],[[["nowindow",3]],["option",4,[["position",3]]]],[[["",0],["str",0]]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["u8",0]],[[["windowsettings",3]],["size",3]],[[["windowsettings",3]],["bool",0]],[[["",0]],["string",3]],[[["nowindow",3]],["string",3]],[[["windowsettings",3]],["string",3]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["windowsettings",3]],[[["controllerbutton",3],["",0]]],[[["controllerhat",3],["",0]]],[[["key",4],["",0]]],[[["mousebutton",4],["",0]]],[[["afterrenderargs",3],["",0]]],[[["buttonstate",4],["",0]]],[[["buttonargs",3],["",0]]],[[["closeargs",3],["",0]]],[[["touch",4],["",0]]],[[["button",4],["",0]]],[[["hatstate",4],["",0]]],[[["filedrag",4],["",0]]],null,[[["",0]]],[[["nowindow",3]]],null,null,null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["idleargs",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],null,[[["bool",0]]],null,null,[[["",0]]],[[["u64",0]]],null,[[["windowsettings",3],["option",4]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["version",3],["version",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[],["eventsettings",3]],[[["eventsettings",3]],["events",3]],[[["windowsettings",3]],["nowindow",3]],[[],["windowsettings",3]],[[["u32",0],["u8",0]],["controllerbutton",3]],[[["u32",0],["u8",0],["hatstate",4]],["controllerhat",3]],[[["u32",0],["u8",0],["f64",0]],["controlleraxisargs",3]],[[["i64",0],["i64",0],["f64",0],["touch",4]],["touchargs",3]],[[["i64",0],["i64",0],["touch",4]],["touchargs",3]],[[["events",3],["",0]],["option",4,[["event",4]]]],[[["u32",0],["u32",0]],["version",3]],[[["version",3],["version",3]],["option",4,[["ordering",4]]]],[[["controllerbutton",3],["controllerbutton",3]],["option",4,[["ordering",4]]]],[[["controllerhat",3],["controllerhat",3]],["option",4,[["ordering",4]]]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["option",4,[["ordering",4]]]],[[["key",4],["key",4]],["option",4,[["ordering",4]]]],[[["mousebutton",4],["mousebutton",4]],["option",4,[["ordering",4]]]],[[["afterrenderargs",3],["afterrenderargs",3]],["option",4,[["ordering",4]]]],[[["buttonstate",4],["buttonstate",4]],["option",4,[["ordering",4]]]],[[["buttonargs",3],["buttonargs",3]],["option",4,[["ordering",4]]]],[[["closeargs",3],["closeargs",3]],["option",4,[["ordering",4]]]],[[["idleargs",3],["idleargs",3]],["option",4,[["ordering",4]]]],[[["renderargs",3],["renderargs",3]],["option",4,[["ordering",4]]]],[[["resizeargs",3],["resizeargs",3]],["option",4,[["ordering",4]]]],[[["touch",4],["touch",4]],["option",4,[["ordering",4]]]],[[["touchargs",3],["touchargs",3]],["option",4,[["ordering",4]]]],[[["updateargs",3],["updateargs",3]],["option",4,[["ordering",4]]]],[[["button",4],["button",4]],["option",4,[["ordering",4]]]],[[["motion",4],["motion",4]],["option",4,[["ordering",4]]]],[[["hatstate",4],["hatstate",4]],["option",4,[["ordering",4]]]],[[["filedrag",4],["filedrag",4]],["option",4,[["ordering",4]]]],[[["input",4],["input",4]],["option",4,[["ordering",4]]]],[[["loop",4],["loop",4]],["option",4,[["ordering",4]]]],[[["event",4],["event",4]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["event",4]]]],[[["nowindow",3]],["option",4,[["event",4]]]],[[]],[[["touchargs",3]]],null,[[["touchargs",3]]],null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["touchargs",3]],["f64",0]],[[["touchargs",3]]],null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["renderargs",3]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["resizeargs",3]]]],[[["windowsettings",3],["u8",0]],["windowsettings",3]],null,[[["controllerbutton",3]],["result",4]],[[["controllerhat",3]],["result",4]],[[["controlleraxisargs",3]],["result",4]],[[["key",4]],["result",4]],[[["mousebutton",4]],["result",4]],[[["afterrenderargs",3]],["result",4]],[[["buttonstate",4]],["result",4]],[[["buttonargs",3]],["result",4]],[[["closeargs",3]],["result",4]],[[["idleargs",3]],["result",4]],[[["renderargs",3]],["result",4]],[[["resizeargs",3]],["result",4]],[[["touch",4]],["result",4]],[[["touchargs",3]],["result",4]],[[["updateargs",3]],["result",4]],[[["button",4]],["result",4]],[[["motion",4]],["result",4]],[[["hatstate",4]],["result",4]],[[["filedrag",4]],["result",4]],[[["input",4]],["result",4]],[[["loop",4]],["result",4]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["eventsettings",3]]],[[["eventsettings",3],["eventsettings",3]]],[[["events",3],["eventsettings",3]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3]]],[[["",0],["bool",0]]],[[["",0],["u64",0]]],[[["windowsettings",3],["option",4]]],[[["",0]]],[[["nowindow",3]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["u8",0]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["",0]]],[[["nowindow",3]]],[[["windowsettings",3],["size",3]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["string",3]]],[[["nowindow",3],["string",3]]],[[["windowsettings",3],["string",3]]],[[["windowsettings",3],["bool",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["windowsettings",3],["bool",0]]],[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["",0]]],[[["nowindow",3]]],[[["",0]],["size",3]],[[["nowindow",3]],["size",3]],[[["windowsettings",3],["size",3]],["windowsettings",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,null,[[["",0]]],[[["bool",0]]],[[["nowindow",3]]],null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["string",3]]]],[[["",0]],["option",4,[["u32",0]]]],[[["event",4]],["option",4,[["u32",0]]]],[[["string",3]]],[[["windowsettings",3],["string",3]],["windowsettings",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],null,[[["",0]],["option",4,[["touchargs",3]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["updateargs",3]]]],[[["u64",0]]],null,[[["u64",0]]],null,[[["renderargs",3]],["viewport",3]],[[["resizeargs",3]],["viewport",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],[[["",0]],["event",4]],[[["nowindow",3]],["event",4]],[[["",0],["duration",3]],["option",4,[["event",4]]]],[[["nowindow",3],["duration",3]],["option",4,[["event",4]]]],null,null,null,null,[[["",0]]],[[["event",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["",0]],["option",4,[["controlleraxisargs",3]]]],[[["controlleraxisargs",3],["",0]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["eventid",3]],["eventid",3]],[[["",0],["",0]]],[[["eventid",3],["eventid",3]],["ordering",4]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["eventid",3],["",0]]],[[]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["eventid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["eventid",3]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["u8",0]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["modifierkey",3]],["modifierkey",3]],[[["",0],["",0]]],[[["modifierkey",3],["modifierkey",3]],["ordering",4]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[],["modifierkey",3]],[[],["result",4,[["modifierkey",3]]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["modifierkey",3],["",0]]],[[["modifierkey",3]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u8",0]],["option",4,[["modifierkey",3]]]],[[["u8",0]],["modifierkey",3]],[[["u8",0]],["modifierkey",3]],[[],["modifierkey",3]],[[["modifierkey",3],["",0]]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["option",4,[["ordering",4]]]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["result",4]],[[["modifierkey",3],["modifierkey",3],["bool",0]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["",0]]],[[["modifierkey",3],["modifierkey",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]]],"p":[[4,"Key"],[4,"Loop"],[4,"Input"],[4,"MouseButton"],[4,"Touch"],[4,"FileDrag"],[4,"HatState"],[4,"Button"],[4,"Motion"],[4,"Event"],[4,"ButtonState"],[8,"AfterRenderEvent"],[3,"Api"],[8,"AdvancedWindow"],[3,"WindowSettings"],[3,"ControllerAxisArgs"],[8,"EventLoop"],[3,"EventSettings"],[3,"UnsupportedGraphicsApiError"],[3,"Events"],[3,"NoWindow"],[3,"Size"],[3,"Position"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"AfterRenderArgs"],[3,"ButtonArgs"],[3,"CloseArgs"],[3,"IdleArgs"],[3,"RenderArgs"],[3,"ResizeArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[8,"BuildFromWindowSettings"],[8,"ButtonEvent"],[8,"CloseEvent"],[8,"ControllerAxisEvent"],[8,"CursorEvent"],[8,"Window"],[8,"GenericEvent"],[8,"FocusEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"UpdateEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"RenderEvent"],[8,"ResizeEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"OpenGLWindow"],[13,"Keyboard"],[13,"Mouse"],[13,"Controller"],[13,"Hat"],[13,"Input"],[13,"Loop"],[13,"Custom"],[13,"Hover"],[13,"Drop"],[13,"Button"],[13,"Move"],[13,"Text"],[13,"Resize"],[13,"Focus"],[13,"Cursor"],[13,"FileDrag"],[13,"Close"],[13,"Render"],[13,"AfterRender"],[13,"Update"],[13,"Idle"],[13,"MouseCursor"],[13,"MouseRelative"],[13,"MouseScroll"],[13,"ControllerAxis"],[13,"Touch"],[3,"EventId"],[3,"ModifierKey"]]},\
"piston_window":{"doc":"The official Piston window wrapper for the Piston game …","t":[13,13,13,13,13,13,13,13,8,13,3,8,13,13,13,3,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,8,4,13,13,13,13,3,8,4,13,13,13,13,13,13,13,13,3,8,3,13,13,13,3,8,13,8,13,13,3,13,13,3,8,3,3,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,13,13,13,3,13,13,13,3,13,13,13,16,13,4,8,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,4,13,8,13,6,6,6,8,6,6,6,6,8,13,13,13,13,4,13,13,13,13,13,13,3,8,3,8,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,13,4,13,4,13,8,13,8,13,8,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,8,13,13,13,13,13,13,13,13,13,3,13,3,3,13,13,8,13,13,6,13,13,13,13,13,13,13,13,13,8,3,8,13,8,13,3,8,13,3,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,13,13,13,13,13,13,3,13,8,3,16,16,3,3,13,6,4,13,3,8,8,13,13,13,13,13,3,13,13,13,3,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,8,3,13,13,13,13,13,13,10,10,10,11,11,12,11,10,11,11,12,10,11,12,12,11,11,12,11,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,12,12,11,11,0,10,0,5,11,5,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,11,0,0,10,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,11,5,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,11,11,10,11,10,11,10,11,10,11,11,11,10,11,10,11,11,11,11,10,10,10,11,11,11,10,11,10,11,11,10,11,10,11,10,11,11,12,11,0,10,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,10,11,11,11,12,12,12,12,10,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,0,11,12,11,0,5,11,5,11,11,12,10,10,0,11,12,11,11,11,11,11,11,11,11,12,11,0,0,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,0,5,11,11,11,11,12,11,12,10,11,10,11,11,11,11,12,10,0,11,11,12,12,11,12,0,5,11,12,5,10,10,11,11,10,11,11,11,11,10,11,11,11,11,12,12,11,10,11,11,12,12,11,10,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,10,11,11,10,11,11,10,11,11,11,12,10,10,10,10,11,10,11,11,12,12,12,12,11,12,10,11,11,11,12,0,5,10,11,11,12,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,10,11,11,12,11,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,12,11,12,11,12,12,11,11,12,11,11,10,11,11,10,11,11,12,11,11,12,12,12,12,12,10,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,16,16,12,12,12,10,12,12,11,3,12,12,12,12,12,17,17,17,5,5,5,5,5,3,12,12,12,12,3,8,3,3,12,12,10,11,10,12,12,12,12,12,12,13,13,4,13,3,13,13,13,13,13,13,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,3,3,12,11,11,5,5,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,12,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,0,17,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,12,5,12,12,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,4,13,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,13,13,4,8,8,8,13,13,13,13,10,10,10,10,11,10,11,10,11,3,12,8,10,10,10,10,10,13,3,3,13,4,13,12,11,11,11,11,5,5,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,12,5,11,11,11,11,11,11,11,11,12,12,12,3,12,12,12,3,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"n":["A","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","AdvancedWindow","AfterRender","AfterRenderArgs","AfterRenderEvent","Again","AltErase","Ampersand","Api","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","BACK_END_MAX_VERTEX_COUNT","Backquote","Backslash","Backspace","Both","BrightnessDown","BrightnessUp","BuildFromWindowSettings","Button","Button","Button6","Button7","Button8","ButtonArgs","ButtonEvent","ButtonState","C","Calculator","Cancel","Cancel","Cancel","CapsLock","Caret","Centered","Character","CharacterCache","CircleArc","Clear","ClearAgain","Close","CloseArgs","CloseEvent","Colon","Colored","Comma","Computer","Context","Controller","ControllerAxis","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cursor","CursorEvent","Custom","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DEFAULT_MAX_FPS","DEFAULT_UPS","DEFAULT_UPS_RESET","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","Down","DrawState","Drop","E","Eject","Ellipse","End","End","Equals","Error","Escape","Event","EventLoop","EventSettings","Events","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FileDrag","FileDrag","Filter","Find","Flip","Focus","FocusEvent","G","G2d","G2dTexture","G2dTextureContext","GenericEvent","GfxDevice","GfxEncoder","GfxFactory","Glyphs","Graphics","Greater","H","Hash","Hat","HatState","Help","Home","Horizontal","Hover","I","Idle","IdleArgs","IdleEvent","Image","ImageSize","Input","Input","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","Keyboard","L","LAlt","LCtrl","LGui","LShift","Left","Left","Left","LeftBracket","LeftDown","LeftParen","LeftUp","Less","Line","Linear","Loop","Loop","M","Mail","MediaSelect","Menu","Middle","Minus","Mode","Motion","Mouse","MouseButton","MouseCursor","MouseCursorEvent","MouseRelative","MouseRelativeEvent","MouseScroll","MouseScrollEvent","Move","Move","Mute","N","Nearest","NoWindow","None","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","OpenGL","OpenGLWindow","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","PistonWindow","Plus","Polygon","Position","Power","Press","PressEvent","PrintScreen","Prior","ProcAddress","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Radians","Rectangle","Rectangled","Release","ReleaseEvent","Render","RenderArgs","RenderEvent","Resize","ResizeArgs","ResizeEvent","Return","Return2","Right","Right","Right","RightBracket","RightDown","RightParen","RightUp","S","ScrollLock","Select","Semicolon","Separator","Size","Slash","Sleep","SourceRectangled","Space","Start","Stop","Sysreq","T","Tab","Text","Text","TextEvent","Texture","Texture","Texture","TextureContext","TextureSettings","ThousandsSeparator","TimeStamp","Touch","Touch","TouchArgs","TouchEvent","Transformed","U","Underscore","Undo","Unknown","Unknown","UnsupportedGraphicsApiError","Up","Up","Update","UpdateArgs","UpdateEvent","V","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","Vertical","Viewport","VolumeDown","VolumeUp","W","Window","WindowSettings","Www","X","X1","X2","Y","Z","_180","_360","_90","abs_transform","advance_height","advance_size","advance_width","after_render","after_render","after_render_args","api","append_transform","append_transform","atlas_offset","atlas_size","automatic_close","automatic_close","axis","bench_mode","bench_mode","blend","blend","border","border","border","border","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_window_settings","build_from_window_settings","build_from_window_settings","button","button","button","button","button_args","capture_cursor","character","character","circle_arc","circle_arc","circle_arc","clear","clear_color","clear_stencil","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close_args","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","color","color","color","color","color","color","color","color","color","color","color","color","color","color","compress","context","controller","controller_axis","controller_axis","controller_axis_args","controllers","convert_gamma","create","create_texture_context","cursor","cursor","cursor_args","decorated","default","default","deg_to_rad","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","device","directx","draw","draw","draw","draw","draw","draw","draw","draw_2d","draw_3d","draw_arrow","draw_from_to","draw_from_to","draw_from_to","draw_size","draw_size","draw_size","draw_size","draw_size","draw_size","draw_state","draw_state","draw_tri","draw_tri","draw_tri","draw_tri","draw_tri","draw_tri","draw_tween_lerp","draw_tween_lerp_tri","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dt","dt","ellipse","ellipse","ellipse","ellipse_from_to","empty","encoder","encoder","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","event","event_id","event_id","event_id","events","exit_on_esc","exit_on_esc","expand","expected","ext_dt","factory","factory","filter","flip_h","flip_hv","flip_v","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_args","font_size","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after_render_args","from_after_render_args","from_api","from_button","from_button","from_button","from_button","from_button_args","from_button_args","from_close_args","from_close_args","from_controller_axis_args","from_controller_axis_args","from_cursor","from_cursor","from_dt","from_dt","from_focused","from_focused","from_idle_args","from_idle_args","from_image","from_memory_alpha","from_path","from_pos","from_pos","from_pos","from_pos","from_pos","from_pos","from_render_args","from_render_args","from_resize_args","from_resize_args","from_str","from_text","from_text","from_touch_args","from_touch_args","from_update_args","from_update_args","fullscreen","g2d","generate_mipmap","generic_event","get_automatic_close","get_automatic_close","get_automatic_close","get_automatic_close","get_border_color","get_compress","get_controllers","get_convert_gamma","get_decorated","get_event_settings","get_event_settings","get_event_settings","get_event_settings","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_filter","get_fullscreen","get_generate_mipmap","get_height","get_mag","get_major_minor","get_maybe_graphics_api","get_min","get_mipmap","get_position","get_position","get_position","get_proc_address","get_resizable","get_samples","get_size","get_size","get_size","get_srgb","get_title","get_title","get_title","get_title","get_transparent","get_view_size","get_vsync","get_width","get_wrap_u","get_wrap_v","glyph_cache","graphics_api","grid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","hide","hide","hide","hue_deg","hue_rad","hue_rad","hue_rad","hue_rad","id","id","id","id","idle","idle","idle_args","image","image","image","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_3d","is_current","is_directx","is_metal","is_opengl","is_vulkan","keyboard","lazy","lazy","left","line","line","line","line_from_to","load_font","mag","major","make_current","margin","math","max_fps","max_fps","maybe_border","maybe_border","maybe_color","maybe_graphics_api","maybe_rect","maybe_src_rect","metal","min","minor","mipmap","modular_index","mouse","mouse_cursor","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll","mouse_scroll_args","mul_rgba","mul_rgba","mul_rgba","mul_rgba","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_3d","new_abs","new_alpha","new_border","new_border","new_clip","new_color","new_color","new_increment","new_inside","new_outside","new_round","new_round","new_round_border","new_viewport","next","next","offset","opengl","orient","orient","orient_pos","output_color","output_stencil","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_event","poll_event","poll_event","polygon","polygon","polygon","polygon_tween_lerp","position","position","position","position_3d","position_3d","prepend_transform","prepend_transform","press","press","press_args","pressure","pressure_3d","pressure_3d","rad_to_deg","radians","radius","radius","radius","radius","rect","rect","rectangle","rectangle","rectangle","rectangle","rectangle_from_to","rel","release","release","release_args","render","render","render_args","reset","resizable","resize","resize","resize_args","resolution","resolution","resolution","resolution","rot_deg","rot_rad","rot_rad","round","round","sampler","samples","scale","scale","scale_pos","scancode","scissor","scissor","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_automatic_close","set_automatic_close","set_automatic_close","set_automatic_close","set_bench_mode","set_border_color","set_capture_cursor","set_capture_cursor","set_capture_cursor","set_compress","set_controllers","set_convert_gamma","set_decorated","set_event_settings","set_event_settings","set_event_settings","set_event_settings","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_filter","set_fullscreen","set_generate_mipmap","set_graphics_api","set_lazy","set_mag","set_max_fps","set_maybe_graphics_api","set_min","set_mipmap","set_position","set_position","set_position","set_resizable","set_samples","set_should_close","set_should_close","set_should_close","set_size","set_size","set_size","set_size","set_srgb","set_swap_buffers","set_title","set_title","set_title","set_title","set_transparent","set_ups","set_ups_reset","set_vsync","set_wrap_u","set_wrap_v","shade","shape","shape","shape","shape","shear","shear","shear_pos","should_close","should_close","should_close","show","show","show","size","size","size","size","source_rectangle","src_flip_h","src_flip_hv","src_flip_v","src_rect","src_rect","src_rel","srgb","start","start","state","state","stencil","store_view","surface","swap_buffers","swap_buffers","swap_buffers","swap_buffers","swap_buffers","text","text","text","text","text_args","texture","texture_packer","time_stamp","time_stamp","tint","title","title","to_glsl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","top","touch","touch","touch","touch_args","trans","trans","trans_pos","transform","transparent","tri_list","tri_list_c","tri_list_uv","tri_list_uv_c","triangulation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update","update","update","update","update_args","ups","ups","ups_reset","ups_reset","view","view","view","viewport","viewport","viewport","vsync","vulkan","wait_event","wait_event","wait_event","wait_event_timeout","wait_event_timeout","wait_event_timeout","which","width","width","width","window","window_size","window_size","window_size","with_args","with_args","wrap_u","wrap_v","x","y","zoom","0","0","0","0","0","0","0","1","1","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Character","CharacterCache","Error","Texture","advance_size","atlas_offset","atlas_size","character","offset","texture","width","CircleArc","color","end","radius","resolution","start","BLACK","TRANSPARENT","WHITE","alpha","gamma_linear_to_srgb","gamma_srgb_to_linear","grey","hex","Context","draw_state","transform","view","viewport","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","axis","button","controller_axis","controller_axis_args","from_controller_axis_args","id","id","id","position","state","which","Add","Alpha","Blend","Clip","DrawState","Increment","Inside","Invert","Lighter","Multiply","Outside","Stencil","blend","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","ne","partial_cmp","partial_cmp","scissor","stencil","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","Border","Ellipse","border","borrow","borrow_mut","centered","circle","clone","clone_into","color","color","deref","deref_mut","drop","from","init","into","radius","resolution","to_owned","try_from","try_into","type_id","0","AFTER_RENDER","BUTTON","CLOSE","CONTROLLER_AXIS","CURSOR","EventId","FILE_DRAG","FOCUS","IDLE","MOUSE_CURSOR","MOUSE_RELATIVE","MOUSE_SCROLL","RENDER","RESIZE","TEXT","TOUCH","UPDATE","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","fmt","from","hash","init","into","ne","partial_cmp","to_owned","try_from","try_into","type_id","GenericEvent","event_id","time_stamp","with_args","rusttype","ATLAS_SIZE","GlyphCache","borrow","borrow_mut","character","deref","deref_mut","drop","factory","font","from","from_bytes","from_font","init","into","new","opt_character","preload_chars","preload_printable_ascii","try_from","try_into","type_id","Grid","GridCells","borrow","borrow","borrow_mut","borrow_mut","cell_position","cells","clone","clone","clone_into","clone_into","cols","deref","deref","deref_mut","deref_mut","draw","drop","drop","fmt","fmt","from","from","init","init","into","into","into_iter","next","rows","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units","x_pos","y_pos","Image","color","draw_many","rectangle","source_rectangle","A","ALT","ALT_GUI","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CTRL","CTRL_ALT","CTRL_GUI","CTRL_SHIFT","CTRL_SHIFT_ALT","CTRL_SHIFT_ALT_GUI","CTRL_SHIFT_GUI","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","GUI","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","LeftParen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","ModifierKey","Mute","N","NO_MODIFIER","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","RightParen","S","SHIFT","SHIFT_ALT","SHIFT_ALT_GUI","SHIFT_GUI","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","default","deref","deref_mut","deserialize","difference","drop","empty","eq","event","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","init","insert","intersection","intersects","into","is_all","is_empty","ne","not","partial_cmp","remove","serialize","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Bevel","Line","Round","Shape","Square","borrow","borrow_mut","clone","clone_into","color","deref","deref_mut","drop","from","init","into","radius","shape","to_owned","try_from","try_into","type_id","Matrix2d","Scalar","Vec2d","Vec3d","abs_transform","add","area","area_centroid","cast","centroid","cross","dot","from_barycentric","get_scale","hsv","identity","inside_triangle","invert","least_separation_4","line_side","margin_rectangle","modular_offset","mul","mul_scalar","multiply","orient","overlap_rectangle","perp","relative_rectangle","relative_source_rectangle","rotate_radians","scale","separation","shear","square_len","sub","to_barycentric","transform_pos","transform_vec","translate","triangle_face","next","offset","previous","Button6","Button7","Button8","Left","Middle","MouseButton","MouseCursorEvent","MouseRelativeEvent","MouseScrollEvent","Right","Unknown","X1","X2","from_pos","from_pos","from_pos","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll_args","Polygon","color","Radians","_180","_360","_90","deg_to_rad","rad_to_deg","Bevel","Border","Rectangle","Round","Shape","Square","border","borrow","borrow","borrow_mut","borrow_mut","centered","centered_square","clone","clone","clone_into","clone_into","color","color","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","margin","radius","rectangle_by_corners","shape","square","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","1","Text","color","font_size","round","TexturePacker","atlas","borrow","borrow_mut","create","deref","deref_mut","drop","find_space","from","init","into","new","skyline","textures","try_from","try_into","type_id","update","rect_border_tri_list_xy","rect_tri_list_uv","rect_tri_list_xy","stream_polygon_tri_list","stream_quad_tri_list","tx","ty","with_arc_tri_list","with_ellipse_border_tri_list","with_ellipse_tri_list","with_lerp_polygons_tri_list","with_polygon_tri_list","with_round_border_line_tri_list","with_round_rectangle_border_tri_list","with_round_rectangle_tri_list","Area","Color","ColorComponent","FontSize","Line","Matrix2d","Polygon","Polygons","Radius","Ray","Rectangle","Resolution","Scalar","SourceRectangle","Triangle","Vec2d","Width"],"q":["piston_window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::Button","","","","piston_window::Event","","","","","","piston_window::FileDrag","","piston_window::Input","","","","","","","","piston_window::Loop","","","","piston_window::Motion","","","","","piston_window::character","","","","","","","","","","","piston_window::circle_arc","","","","","","piston_window::color","","","","","","","","piston_window::context","","","","","piston_window::controller","","","","","","","","","","","","","","","piston_window::draw_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::draw_state::Stencil","","","piston_window::ellipse","","","","","","","","","","","","","","","","","","","","","","","piston_window::event_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::generic_event","","","","piston_window::glyph_cache","piston_window::glyph_cache::rusttype","","","","","","","","","","","","","","","","","","","","","","piston_window::grid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::image","","","","","piston_window::keyboardpiston_window::line","","","","","","","","","","","","","","","","","","","","","","piston_window::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::modular_index","","","piston_window::mouse","","","","","","","","","","","","","","","","","","","","","","piston_window::polygon","","piston_window::radians","","","","","","piston_window::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","piston_window::rectangle::Shape","","","piston_window::text","","","","piston_window::texture_packer","","","","","","","","","","","","","","","","","","","piston_window::triangulation","","","","","","","","","","","","","","","piston_window::types","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Trait representing a window with the most features that …","After rendering and swapping buffers.","After render arguments.","After rendering and buffers are swapped.","","","","Stores graphics API version.","","","","","","","","","","Any triangulation method called on the back-end never …","","","","Flips image both vertically and horizontally.","","","Constructs a window from a <code>WindowSettings</code> object.","Models different kinds of buttons.","Changed button state.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Button arguments.","Changed button state.","Stores button state.","","","","The cancel of touch, for example the window loses focus.","A file was hovered, but has exited the window.","","","Centered (no direction).","Holds rendered character data.","Stores characters in a buffer and loads them by demand.","A curved line","","","Window closed.","Close arguments.","Window is closing.","","Implemented by contexts that contains color.","","","Drawing 2d context.","A controller button.","Controller axis move event.","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","","","","","Window gained or lost cursor.","When window gets or loses cursor.","Custom event.","","","","","","","","","","","","","The default maximum frames per second.","The default updates per second.","The default delayed updates reset.","","","","","","Down direction.","Graphics draw state used for blending, clipping and …","A file has been dropped into the window.","","","An ellipse with filled color","","The end of touch, for example taking a finger away from a …","","The error type associated with the character cache.","","Models all events.","Methods implemented for changing event loop settings.","Stores event loop settings.","An event loop iterator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Models dragging and dropping files.","A file is being dragged or dropped over the window.","Sampling filter","","Flip settings.","Window gained or lost focus.","When window gets or loses focus.","","2D graphics.","Texture type compatible with <code>G2d</code>.","Texture context.","Implemented by all events.","Actual device used by Gfx backend.","Actual gfx::Stream implementation carried by the window.","Actual factory used by Gfx backend.","Glyph cache.","Implemented by all graphics back-ends.","","","","A controller hat (d-Pad)","Stores controller hat state.","","","Flips image horizontally.","A file is being hovered over the window.","","Do background tasks that can be done incrementally.","Idle arguments, such as expected idle time in seconds.","When background tasks should be performed.","An image","Implemented by all images to be used with generic …","Models input events.","Input events.","","","","","","","Represent a keyboard key. Keycodes follows SDL …","A keyboard button.","","","","","","","Left mouse button.","Left direction.","","Left-down direction.","","Left-up direction.","","A colored line with a default border radius","A Weighted Linear Blend","Models loop events.","Events that commonly used by event loops.","","","","","Middle mouse button.","","","Models different kinds of motion.","A mouse button.","Represent a mouse button.","Position in window coordinates.","The position of the mouse cursor.","Position in relative coordinates.","The relative movement of mouse cursor.","Position in scroll ticks.","The scroll of the mouse wheel.","The move of touch, for example a finger moving while …","Moved mouse cursor.","","","Nearest Texel","A window without user interface, often used in server …","Does not flip.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for OpenGL specific operations on a window.","","","","","","","","","","Contains everything required for controlling window, …","","A polygon","Structure to store the window position.","","Button was pressed.","The press of a button.","","","The type of an OpenGL function address.","","","","","","","","","","Useful constants for radians.","A filled rectangle","Should be implemented by contexts that have rectangle …","Button was released.","The release of a button.","Render graphics.","Render arguments.","When the next frame should be rendered.","Window got resized.","Resize arguments.","When the window is resized.","","","","Right mouse button.","Right direction.","","Right-down direction.","","Right-up direction.","","","","","","Structure to store the window size.","","","Should be implemented by contexts that have source …","","The start of touch, for example a finger pressed down on a …","","","","","Renders text","Text (usually from keyboard).","When receiving text from user, such as typing a character.","Represents a texture.","The texture type associated with the back-end.","The texture type associated with the character cache.","Context required to create and update textures.","Texture creation parameters.","","The type of time stamp.","Stores the touch state.","Touch event.","Touch arguments","When a touch is started, moved, ended or cancelled.","Implemented by contexts that can transform.","","","","","Unknown mouse button.","An error for when a graphics API is unsupported.","","Up direction.","Update the state of the application.","Update arguments, such as delta time in seconds.","When the application state should be updated.","","","","","","","","","","","","","","Flips image vertically.","Stores viewport information.","","","","Trait representing the minimum requirements for defining a …","Settings structure for window behavior.","","","Extra mouse button number 1.","Extra mouse button number 2.","","","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Computes absolute transform for 2D graphics, which uses a …","Sets height of character, including space to the next one.","The advance size of character, including space.","Gets width of character, including space to the next one.","Calls closure if this is an after render event.","","Returns after render arguments.","A string identifying the API.","Appends transform to the current one.","","The offset of character within texture atlas.","The size of character within texture atlas.","Sets whether the window will automatically close when …","Sets whether built windows should automatically close when …","The axis that moved.","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","Sets blending.","Blend function to use. If None, blending is disabled.","Sets ellipse border.","Sets border properties.","The ellipse border","The border","Sets the border color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds window from the given settings.","Builds the window from a <code>WindowSettings</code> object.","","Errors","Calls closure if this is a button event.","","Which button was pressed.","The button that changed state.","Returns button arguments.","Sets whether to capture/grab the cursor.","A text character","Get reference to character.","Draw an arc","Draws arc","Draws circle arc.","Clears the screen.","Clears background with a color.","Clears stencil buffer with a value, usually 0.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a close event.","","Returns close arguments.","","","","","","","","","","","","","","","Returns an id of the key","Helper methods for colors","Sets color.","Sets color.","Sets the arcs color.","Sets ellipse color.","Sets color.","Sets color.","The color of the polygon","The line color","The arcs color","The ellipse color","The rectangle color","The color","The color","Sets compress.","Transformation context","Back-end agnostic controller events.","Calls closure if this is a controller axis event.","","Returns controller axis arguments.","Sets whether built windows should listen to controller …","Sets convert gamma.","","Creates context used to create and update textures.","Calls closure if this is a cursor event.","","Returns cursor arguments.","Sets whether built windows should be decorated.","","","Convert a value to radians from degrees. Equivalent to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GFX device.","A unique identifier for touch device.","Creates a new DirectX version.","Draws polygon using the default method.","Draws line using default method.","Draws circle arc using default method.","Draws ellipse using default method.","Draws the rectangle using the default method.","Draws image using default method.","Draws text with a character cache","Renders 2D graphics.","Renders 3D graphics.","Draws an arrow","Draws line using default method between points.","Draws ellipse by corners using default method.","Draws the rectangle by corners using the default method.","Gets the draw size of the window.","","","The size of frame buffer in pixels.","The width and height of rendered area in pixels.","The width of rendered area in pixels.","Graphics draw state.","Current draw state settings.","Draws polygon using triangulation.","Draws line using triangulation.","Draws circle arc using triangulation.","Draws ellipse using triangulation.","Draws the rectangle using triangulation.","Draws image using triangulation.","Draws tweened polygon with linear interpolation, using …","Draws tweened polygon with linear interpolation, using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expected idle time in seconds.","Delta time in seconds.","Draw ellipse","Draws ellipse.","Draws ellipse.","Draws ellipse by corners.","Returns empty texture.","An encoder to update textures.","GFX encoder.","Sets the end of the arc (in radians).","The end of the arc in radians","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Let window handle new event. Cleans up after rendering and …","Event identifiers.","The id of this event.","","Event loop state.","Sets whether to exit when pressing the Esc button.","Sets whether built windows should exit when the Esc key is …","Expands the current rectangle equally by all sides.","A list of supported graphics APIs.","Extrapolated time in seconds, used to do smooth animation.","A factory to create textures.","The factory that was created along with the device.","Sets the min and mag filter","Flips horizontally in local coordinates.","Flips horizontally and vertically in local coordinates.","Flips vertically in local coordinates.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a focus event.","","Returns focus arguments.","The font size","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Creates an after render event.","","Creates a new <code>OpenGL</code> version from graphics API version.","Creates a press event.","Creates a release event.","","","Creates a button event.","","Creates a close event from arguments.","","Creates a controller axis event.","","Creates a cursor event.","","Creates an update event with delta time.","Creates an update event with delta time.","Creates a focus event.","","Creates an idle event.","","Creates a texture from image.","Creates texture from memory alpha.","Creates a texture from path.","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","","","","Creates a render event.","","Creates a resize event.","","","Creates a text event.","","Creates a touch event.","","Creates an update event.","","Sets whether built windows will be fullscreen.","Gfx2d.","Sets generate mipmap.","Trait for generic events","Gets whether the window will automatically close when …","","","Gets whether built windows should automatically close when …","Gets the border color","Gets wheter compress on the GPU.","Gets whether built windows should listen to controller …","Gets whether to convert gamma, treated as sRGB color space.","Gets whether built windows should be decorated.","Returns event loop settings.","","","","Gets whether to exit when pressing esc.","","","Gets whether built windows should exit when the Esc key is …","Returns the min and mag filter","Gets whether built windows will be fullscreen.","Gets generate mipmap.","Gets the image height.","Gets magnify filter","Gets the minor version of OpenGL.","Gets the graphics API version of built windows.","Gets minify filter.","Gets minify mipmap filter","Gets the position of window.","","","Returns the address of the specified OpenGL function if it …","Gets whether built windows should be resizable.","Gets the number of samples to use for anti-aliasing.","Get the image size.","","Gets the size of built windows.","Gets whether built windows should use hardware accelerated …","Gets a copy of the title of the window.","","","Gets the title of built windows.","Gets whether built windows should be transparent.","Computes the current view size.","Gets whether built windows should use vsync.","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","Implementations of the <code>CharacterCache</code> trait.","Sets the graphics API version of built windows.","A flat grid with square cells.","","","","","","","","","","","","","","The height.","Hides the window.","","","Rotates hue by degrees.","Rotates hue by radians.","","","","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","A unique identifier for touch event.","Calls closure if this is an idle event.","","Returns idle arguments.","Draw an image","Draws image.","Draws image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the touch is in 3D.","Returns true if this window’s gl context is the current …","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Back-end agnostic keyboard keys.","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","The left offset.","Draw Line","Draws line.","Draws line.","Draws line between points.","Loads font from a path.","Sets magnify filter","Major version.","Make the window’s gl context the current gl context.","Shrinks the current rectangle equally by all sides.","Various methods for computing with vectors.","The maximum number of frames per second","The maximum number of frames per second","Sets optional ellipse border.","Sets optional border.","Sets optional color.","Sets graphics API version of built windows.","Sets optional rectangle.","Sets optional source rectangle.","Creates a new Metal version.","Sets minify filter.","Minor version.","Sets magnify mipmap filter, and sets generate_mipmap to …","Helper functions for computing modular index safely.","Back-end agnostic mouse buttons.","Calls closure if this is a mouse cursor event.","","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","","Returns mouse scroll arguments.","Multiplies with red, green, blue and alpha values.","","","","","","","","","","","","","","","","","","","","","","","","Creates a new piston window.","Create default settings.","Creates new with default settings.","Creates a new event iterator with default UPS and FPS …","Creates a new <code>NoWindow</code>.","Creates window settings with defaults.","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerAxisArgs</code> object. Intended for use …","Creates a new drawing context.","Creates new polygon","Creates a new line","Creates a new arc","Creates a new ellipse","Creates a new rectangle.","Creates a new image","Creates a new text with black color","Creates arguments for 2D touch.","Creates arguments for 3D touch.","Creates a new drawing context in absolute coordinates.","Uses alpha blending.","Creates a new ellipse border","Creates a new rectangle border.","Draws to stencil buffer with value 255. This can be used …","Creates a new colored image","Creates a new colored text","Increases stencil buffer. This can be used for nested …","Tests against stencil buffer with value 255. Draws inside …","Tests against stencil buffer with value 255. Draws outside …","Creates a new line","Creates a new rectangle with rounded corners.","Creates a new rectangle border with rounded corners.","Creates a new context with absolute transform in point …","Returns next event. Cleans up after rendering and resizes …","Returns the next event.","The offset of character.","Creates a new OpenGL version.","Orients x axis to look at point locally.","","Orients x axis to look at point locally.","Output frame buffer.","Output stencil buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","Polls an input event from the window.","","","Draw polygon","Draws polygon.","Draws a polygon.","Draws a tweened polygon using linear interpolation.","Sets the position of window.","The position of the touch in 2D.","Position of the controller. Usually [-1.0, 1.0], though …","The position of the touch in 3D.","The touch position, normalized 0..1.","Prepends transform to the current one.","","Calls closure if this is a press event.","","Returns press arguments.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","The touch pressure vector, normalized 0..1.","Convert a value to degrees from radians. Equivalent to …","Reexport radians helper trait from vecmath","Sets radius.","Sets the radius of the arc (Thickness of the arc, not the …","The line radius","The radius of the arc (Thickness of the drawing, not the …","Sets rectangle.","Viewport in pixels. <code>[x, y, width, height]</code> where <code>(x, y)</code> is …","Draw rectangle","Draws rectangle.","Draws a rectangle.","The rectangle to draw image inside","Draws rectangle.","Moves to a relative rectangle using the current rectangle …","Calls closure if this is a release event.","","Returns release arguments.","Calls closure if this is a render event.","","Returns render arguments.","Moves the current transform to the default coordinate …","Sets whether built windows should be resizable.","Calls closure if this is a resize event.","","Returns resize arguments.","Sets the resolution of the arcs smoothness.","Sets resolution of the ellipse smoothness.","The resolution for the arc.","The resolution for the shape, 360 degrees.","Rotates degrees in local coordinates.","Rotate radians in local coordinates.","","A builder method indicating that the Text’s position …","Whether or not the text’s position should be rounded (to …","Sampler for texture.","Sets the number of samples to use for anti-aliasing.","Scales in local coordinates.","","Scales in local coordinates.","An optional scancode that tells the physical layout of a …","Sets scissor <code>[x, y, w, h]</code>.","Scissor mask to use. If set, no pixel outside of this …","","","","","","","","","","","","","","","","","","","","","","Sets whether the window will automatically close when …","","","Sets whether built windows should automatically close when …","Enable or disable benchmark mode. When enabled, it will …","Sets the border color","Sets whether to capture/grab the cursor.","","","Sets compress.","Sets whether built windows should listen to controller …","Sets convert gamma.","Sets whether built windows should be decorated.","Sets event loop settings.","","","","Sets whether to exit when pressing esc.","","","Sets whether built windows should exit when the Esc key is …","Sets the min and mag filter","Sets whether built windows will be fullscreen.","Sets generate mipmap.","Sets graphics API version of built windows.","Enable or disable rendering only when receiving input. …","Sets magnify filter","The maximum number of frames per second","Sets graphics API version of built windows.","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the position of window.","","","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Tells the window to close or stay open.","","","Sets the window size.","","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Enable or disable automatic swapping of buffers.","Sets the title of the window.","","","Sets the title of built windows.","Sets whether built windows should be transparent.","The number of updates per second","The number of delayed updates before skipping them to …","Sets whether built windows should use vsync.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Mixes the current color with black.","Sets shape.","Sets shape of the corners.","The line shape","The roundness of the rectangle","Shears in local coordinates.","","Shears in local coordinates.","Returns true if the window should close.","","","Shows the window.","","","Gets the size of the window.","","","Sets the size of built windows.","The image source rectangle","Flips the source rectangle horizontally.","Flips the source rectangle horizontally and vertically.","Flips the source rectangle vertically.","Adds a source rectangle.","Sets source rectangle.","Moves to a relative source rectangle using the current …","Sets whether built windows should use hardware accelerated …","Sets the start of the arc (in radians).","The start of the arc in radians","Which button was pressed.","New state of the button.","Stencil test to use. If None, no stencil testing is done.","Stores the current transform as new view.","Pixel storage for texture.","Swaps render buffers.","Enable or disable automatic swapping of buffers.","","","Enable or disable automatic swapping of buffers.","Draw text","Draws text.","Calls closure if this is a text event.","","Returns text arguments.","The texture of the character.","Texture packing.","Gets the time stamp of this event.","","Mixes the current color with white.","Sets title on window.","Sets the title of built windows.","Gets GLSL version associated with OpenGL.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The top offset.","Calls closure if this is a touch event.","","The touch state.","Returns touch arguments.","Translate x and y in local coordinates.","","Translate position in local coordinates.","Current transformation.","Sets whether built windows should be transparent.","Renders list of 2d triangles using a solid color.","Same as <code>tri_list</code>, but with individual vertex colors.","Renders list of 2d triangles using a color and a texture.","Same as <code>tri_list_uv</code>, but with individual vertex colors.","Methods for converting shapes into triangles.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains type aliases used in this library","Calls closure if this is an update event.","","Updates the texture with an image.","","Returns update arguments.","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …","Moves the current transform to the view coordinate system.","View used by shader.","View transformation.","Returns viewport information filling entire render area.","Returns viewport information filling entire render area.","Viewport information.","Sets whether built windows should use vsync.","Creates a new Vulkan version.","Wait indefinitely for an input event to be available from …","","","Wait for an input event to be available from the window or …","","","Which hat on the controller was changed","Return the width for some given text.","Sets width.","The width.","The window.","The size of window in points.","The width and height of rendered area in points.","The width and height of rendered area in points.","Calls closure with arguments","","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","The x coordinate.","The y coordinate.","Scales in both directions in local coordinates.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Holds rendered character data.","Stores characters in a buffer and loads them by demand.","The error type associated with the character cache.","The texture type associated with the character cache.","The advance size of character, including space.","The offset of character within texture atlas.","The size of character within texture atlas.","Get reference to character.","The offset of character.","The texture of the character.","Return the width for some given text.","A curved line","The arcs color","The end of the arc in radians","The radius of the arc (Thickness of the drawing, not the …","The resolution for the arc.","The start of the arc in radians","Black color.","Transparent color.","White color.","Returns a semi-transparent white color","Converts gamma (brightness) of a color from linear color …","Converts gamma (brightness) from sRGB to linear color …","Returns a grey color","Converts from hexadecimal color format","Drawing 2d context.","Current draw state settings.","Current transformation.","View transformation.","Viewport information.","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","The axis that moved.","Which button was pressed.","Calls closure if this is a controller axis event.","Returns controller axis arguments.","Creates a controller axis event.","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","Position of the controller. Usually [-1.0, 1.0], though …","Which button was pressed.","Which hat on the controller was changed","Additive blending.","Alpha blending (allows semi-transparent pixels).","The blend setting to use when drawing.","Draw to stencil buffer.","Graphics draw state used for blending, clipping and …","Increment stencil buffer.","Draw pixels that have stencil value.","Invert colors when rendering a white shape.","Additive blending with alpha channel.","Multiply color components.","Draw pixels that does not have stencil value.","Stencil buffer settings.","Blend function to use. If None, blending is disabled.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Scissor mask to use. If set, no pixel outside of this …","Stencil test to use. If None, no stencil testing is done.","","","","","","","","","","","","Ellipse border","An ellipse with filled color","The ellipse border","","","Use x, y, half-width, half-height","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, <code>y</code>…","","","The border color","The ellipse color","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The border radius","The resolution for the shape, 360 degrees.","","","","","","Event id for after render event.","Event id for button event.","Event id for close event.","Event id for controller axis event.","Event id for cursor event.","Used to identify events arguments provided by traits.","Event id for file drag event.","Event id for focus event.","Event id for idle event.","Event id for mouse cursor event.","Event id for mouse relative event.","Event id for mouse scroll event.","Event id for render event.","Event id for resize event.","Event id for text event.","Event id for touch event.","Event id for update event.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Implemented by all events.","The id of this event.","Gets the time stamp of this event.","Calls closure with arguments","Glyph caching using the RustType library.","The minimum atlas size.","A struct used for caching rendered font.","","","","","","","The factory used to create textures.","The font.","Returns the argument unchanged.","Creates a GlyphCache for a font stored in memory.","Constructs a GlyphCache from a Font.","","Calls <code>U::from(self)</code>.","Constructor for a GlyphCache.","Return <code>ch</code> for <code>size</code> if it’s already cached. Don’t load. …","Load all characters in the <code>chars</code> iterator for <code>size</code>","Load all the printable ASCII characters for <code>size</code>. Includes …","","","","Represents a flat grid with square cells.","Iterates through the cells of a grid as (u32, u32).","","","","","Get on-screen position of a grid cell","Get a GridIterator for the grid","","","","","Number of columns.","","","","","Draws the grid.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Number of rows.","","","","","","","","","The width and height of each grid cell.","Get on-screen x position of a grid cell","Get on-screen y position of a grid cell","An image","The color","Draws many images.","The rectangle to draw image inside","The image source rectangle","","Alt.","Alt + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Ctrl.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift.","Ctrl + Shift + Alt.","Ctrl + Shift + Alt + Gui.","Ctrl + Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gui.","","","","","","","","","","","","","Represent a keyboard key. Keycodes follows SDL …","","","","","","","","","","","","","","","","","","","No modifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift.","Shift + Alt.","Shift + Alt + Gui.","Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","Change modifier key state depending on input.","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Bevel edges","A colored line with a default border radius","Round edges","The shape of the line","Square edges","","","","","The line color","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The line radius","The line shape","","","","","The type used for matrices.","The type used for scalars.","The type used for 2D vectors.","The type used for 3D vectors.","Transforms from normalized to absolute coordinates.","Adds two vectors.","Computes area of a simple polygon.","Computes the area and centroid of a simple polygon.","Converts to another vector type.","Computes centroid of a simple polygon.","Computes the cross product.","Computes the dot product.","Transforms from barycentric coordinates to cartesian.","Extract scale information from matrix.","Transform color with hue, saturation and value.","Create an identity matrix.","Returns true if point is inside triangle.","Computes the inverse of a 2x3 matrix.","Returns the least separation out of four. Each seperation …","Returns a number that tells which side it is relative to a …","Shrinks a rectangle by a factor on all sides.","Computes modular offset safely for numbers.","Multiplies two vectors component wise.","Multiplies the vector with a scalar.","Multiplies two matrices.","Orients x axis to look at point.","Computes overlap between two rectangles. The area of the …","Creates a perpendicular vector.","Computes a relative rectangle using the rectangle as a …","Computes a relative source rectangle using the source …","Creates a rotation matrix.","Create a scale matrix.","Compute the shortest vector from point to ray. A ray …","Create a shear matrix.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Transforms from cartesian coordinates to barycentric.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Creates a translation matrix.","Returns true if triangle is clockwise.","Computes next modular index safely.","Computes modular offset safely for indices.","Computes previous modular index safely.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Left mouse button.","Middle mouse button.","Represent a mouse button.","The position of the mouse cursor.","The relative movement of mouse cursor.","The scroll of the mouse wheel.","Right mouse button.","Unknown mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments.","A polygon","The color of the polygon","Useful constants for radians.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Bevel corners","The border of the rectangle","A filled rectangle","Round corners, with resolution per corner.","The shape of the rectangle corners","Square corners","The border","","","","","Use x, y, half-width, half-height","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, <code>y</code>…","","","","","The color of the border","The rectangle color","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Shrinks a rectangle by a factor on all sides.","The radius of the border. The half-width of the line by …","Create <code>types::Rectangle</code> by the two opposite corners.","The roundness of the rectangle","Create <code>types::Rectangle</code> for a square with a top-left …","","","","","","","","","","","","Renders text","The color","The font size","Whether or not the text’s position should be rounded (to …","A texture packer using a skyline heuristic.","The index to the current texture atlas.","","","Create a new texture atlas with an initial tile.","","","","Returns the index of atlas offset in skyline with room for …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns a new <code>TexturePacker</code>.","Texture atlas offsets from left to right.","Stores current texture atlas and previously created ones.","","","","Update current texture atlas.","Creates triangle list vertices from rectangle.","Creates triangle list texture coords from image.","Creates triangle list vertices from rectangle.","Streams a polygon into tri list. Uses buffers that fit …","Streams a quad into tri list.","Transformed x coordinate as f32.","Transformed y coordinate as f32.","Streams an arc between the two radian boundaries.","Streams an ellipse border specified by a resolution.","Streams an ellipse specified by a resolution.","Streams tweened polygons using linear interpolation.","Splits polygon into convex segments. Create a buffer that …","Streams a round border line.","Streams a round rectangle border.","Streams a round rectangle.","The type used for area.","[red, green, blue, alpha]","The type used for color component.","The type used for font size.","[x1, y1, x2, y2]","The type used for matrices.","[p0, p1, …]","A slice of polygons.","The type used for radius.","[x, y, dir_x, dir_y]","Rectangle dimensions: [x, y, w, h]","The type used for resolution.","The type used for scalars.","[x, y, w, h]","[x1, y1, x2, y2, x3, y3]","The type used for 2D vectors.","The type used for width."],"i":[1,1,1,1,1,1,1,1,0,2,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,3,1,1,0,0,4,5,5,5,0,0,0,1,1,1,6,7,1,1,8,0,0,0,1,1,4,0,0,1,0,1,1,0,9,10,0,0,0,0,1,1,1,1,4,0,11,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,8,0,7,1,1,0,1,6,1,12,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,4,0,1,0,4,0,1,0,0,0,0,0,0,0,0,0,1,1,1,9,0,1,1,3,7,1,2,0,0,0,0,0,11,1,1,1,1,1,1,0,9,1,1,1,1,1,1,5,8,1,8,1,8,1,0,13,0,11,1,1,1,1,5,1,1,0,9,0,10,0,10,0,10,0,6,4,1,1,13,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,14,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,14,0,2,0,0,4,0,0,1,1,1,5,8,1,8,1,8,1,1,1,1,1,0,1,1,0,1,6,1,1,1,1,0,4,0,0,15,12,0,0,1,0,0,10,0,0,0,1,1,1,1,5,0,1,8,2,0,0,1,16,16,16,16,16,16,16,16,16,16,16,16,3,0,1,1,1,0,0,1,1,5,5,1,1,17,17,17,18,19,19,19,20,11,20,21,22,23,19,19,24,25,26,27,28,29,29,30,31,30,31,32,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,25,56,35,38,57,11,41,49,57,24,0,12,0,0,15,0,15,15,18,21,32,13,16,28,36,3,37,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,21,32,13,16,28,36,3,37,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,58,11,58,21,16,41,42,1,5,48,14,49,50,6,9,8,7,1,0,43,44,45,30,31,46,43,44,45,30,31,46,47,32,0,0,59,11,59,25,32,37,35,60,11,60,25,28,29,17,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,41,42,26,1,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,35,54,21,43,44,45,30,31,46,47,35,35,44,44,30,31,61,35,38,18,52,53,0,23,43,44,45,30,31,46,43,43,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,51,55,0,0,15,0,37,33,35,45,45,18,21,16,3,37,39,40,41,42,26,1,29,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,35,0,62,11,35,24,25,63,34,52,33,35,32,22,22,22,18,21,34,34,13,16,28,3,37,38,39,40,25,41,42,26,1,29,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,64,11,64,47,34,18,33,21,34,35,32,13,16,28,36,3,37,38,39,39,39,39,39,40,40,40,25,41,42,26,1,1,29,19,23,43,44,45,30,31,46,47,5,5,48,14,49,50,51,52,53,6,54,55,9,9,9,9,10,10,10,8,7,4,4,4,4,4,4,2,2,2,2,2,11,11,11,11,11,11,11,11,20,11,16,65,66,11,11,57,11,58,11,59,11,60,11,67,68,64,11,67,11,37,37,37,69,70,71,11,11,11,72,11,73,11,16,74,11,75,11,68,11,25,35,32,0,24,35,38,25,32,32,25,32,25,27,35,28,36,24,35,38,25,32,25,32,76,32,16,25,32,32,24,35,38,77,25,25,76,37,25,25,24,35,38,25,25,23,25,76,32,32,0,25,0,3,41,42,1,5,48,14,49,50,6,9,8,7,39,24,35,38,78,78,44,30,31,41,42,26,54,67,11,67,0,0,15,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,33,21,34,35,32,13,16,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,35,54,77,21,21,21,21,0,27,28,19,0,0,15,0,35,32,21,77,63,0,27,28,30,31,46,25,46,46,21,32,21,32,0,0,69,11,69,70,11,70,71,11,71,78,44,30,31,18,21,37,39,40,41,42,26,29,49,51,52,53,54,55,9,10,7,4,2,35,32,28,36,38,25,41,42,26,23,43,44,45,30,31,46,47,54,54,23,29,30,31,29,46,47,29,29,29,44,31,31,23,35,36,19,21,22,23,22,35,35,21,16,41,42,26,1,29,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,61,35,38,0,0,15,15,24,54,26,54,54,22,23,65,11,65,54,54,54,17,0,44,45,44,45,46,18,0,0,15,46,0,63,66,11,66,72,11,72,23,25,73,11,73,45,30,45,30,22,22,23,47,47,37,25,22,23,22,49,29,29,41,42,26,1,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,24,35,38,25,27,32,24,35,38,32,25,32,25,27,35,28,36,24,35,38,25,32,25,32,25,27,32,27,25,32,32,24,35,38,25,25,61,35,38,24,35,38,25,25,27,24,35,38,25,25,27,27,25,32,32,78,44,31,44,31,22,23,22,61,35,38,24,35,38,61,35,38,25,46,79,79,79,79,46,79,25,45,45,42,49,29,23,37,61,27,35,38,28,0,0,74,11,74,19,0,62,11,78,24,25,16,18,21,32,13,16,28,36,3,37,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,34,19,75,11,54,75,22,23,22,23,25,15,15,15,15,0,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,18,33,21,34,35,32,13,16,28,36,3,37,38,39,40,25,41,42,26,1,29,19,23,43,44,45,30,31,46,47,5,48,14,49,50,51,52,53,6,54,55,9,10,8,7,4,2,11,0,68,37,37,11,68,27,28,27,28,23,37,23,52,53,23,25,21,61,35,38,61,35,38,42,12,44,39,35,18,52,53,62,11,32,32,40,40,22,80,81,82,83,84,85,86,84,86,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,0,0,12,12,19,19,19,12,19,19,12,0,45,45,45,45,45,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,26,41,59,59,59,41,42,26,26,42,42,106,106,0,107,0,107,107,106,106,106,107,0,29,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,107,106,107,29,29,106,107,106,107,106,107,106,107,108,109,110,0,0,30,111,111,0,0,111,111,111,30,111,111,111,111,111,111,111,30,111,111,111,111,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,62,62,62,0,0,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,114,115,114,115,114,114,114,115,114,115,114,114,115,114,115,114,114,115,114,115,114,115,114,115,114,115,115,115,114,114,115,114,115,114,115,114,115,114,114,114,0,46,0,46,46,1,116,116,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,116,116,116,116,116,116,116,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,116,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,116,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,116,116,116,116,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,0,117,0,117,117,117,117,117,44,117,117,117,117,117,117,44,44,117,117,117,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,5,5,5,5,69,70,71,69,69,70,70,71,71,0,43,0,17,17,17,17,17,118,0,0,118,0,118,31,118,119,118,119,0,0,118,119,118,119,119,31,118,119,118,119,118,119,118,119,118,119,118,119,0,119,0,31,0,118,119,118,119,118,119,118,119,120,121,120,0,47,47,47,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["viewport",3]]],[[["character",3]],["f64",0]],null,[[["character",3]],["f64",0]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["afterrenderargs",3]]]],null,[[]],[[["context",3]],["context",3]],null,null,[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,[[["bool",0]]],null,[[["drawstate",3],["blend",4]],["drawstate",3]],null,[[["ellipse",3],["border",3]],["ellipse",3]],[[["rectangle",3],["border",3]],["rectangle",3]],null,null,[[["texturesettings",3]],["texturesettings",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["windowsettings",3]],["result",4,[["box",3,[["error",8],["global",3]]]]]],[[["windowsettings",3]],["result",4,[["box",3,[["error",8],["global",3]]]]]],[[["windowsettings",3]],["result",4,[["pistonwindow",3],["box",3,[["error",8]]]]]],[[["windowsettings",3]],["result",4,[["nowindow",3],["box",3,[["error",8],["global",3]]]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],null,null,[[["",0]],["option",4,[["buttonargs",3]]]],[[["bool",0]]],null,[[["",0],["u32",0],["char",0]],["result",4,[["character",3]]]],null,[[["f64",0],["f64",0],["f64",0],["",0]]],[[["",0],["circlearc",3],["drawstate",3]]],[[["",0]]],[[["",0]]],[[["",0],["u8",0]]],[[["viewport",3]],["viewport",3]],[[["version",3]],["version",3]],[[["texturesettings",3]],["texturesettings",3]],[[["filter",4]],["filter",4]],[[["opengl",4]],["opengl",4]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["events",3]],[[["flip",4]],["flip",4]],[[["texture",3]],["texture",3]],[[["size",3]],["size",3]],[[["position",3]],["position",3]],[[["windowsettings",3]],["windowsettings",3]],[[["controllerbutton",3]],["controllerbutton",3]],[[["controllerhat",3]],["controllerhat",3]],[[["controlleraxisargs",3]],["controlleraxisargs",3]],[[["key",4]],["key",4]],[[["drawstate",3]],["drawstate",3]],[[["character",3]],["character",3]],[[["context",3]],["context",3]],[[["polygon",3]],["polygon",3]],[[["line",3]],["line",3]],[[["circlearc",3]],["circlearc",3]],[[["ellipse",3]],["ellipse",3]],[[["rectangle",3]],["rectangle",3]],[[["image",3]],["image",3]],[[["text",3]],["text",3]],[[["mousebutton",4]],["mousebutton",4]],[[["afterrenderargs",3]],["afterrenderargs",3]],[[["buttonstate",4]],["buttonstate",4]],[[["buttonargs",3]],["buttonargs",3]],[[["closeargs",3]],["closeargs",3]],[[["idleargs",3]],["idleargs",3]],[[["renderargs",3]],["renderargs",3]],[[["resizeargs",3]],["resizeargs",3]],[[["touch",4]],["touch",4]],[[["touchargs",3]],["touchargs",3]],[[["updateargs",3]],["updateargs",3]],[[["button",4]],["button",4]],[[["motion",4]],["motion",4]],[[["hatstate",4]],["hatstate",4]],[[["filedrag",4]],["filedrag",4]],[[["input",4]],["input",4]],[[["loop",4]],["loop",4]],[[["event",4]],["eventoption",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["closeargs",3]]]],[[["version",3],["version",3]],["ordering",4]],[[["opengl",4],["opengl",4]],["ordering",4]],[[["controllerbutton",3],["controllerbutton",3]],["ordering",4]],[[["controllerhat",3],["controllerhat",3]],["ordering",4]],[[["key",4],["key",4]],["ordering",4]],[[["mousebutton",4],["mousebutton",4]],["ordering",4]],[[["afterrenderargs",3],["afterrenderargs",3]],["ordering",4]],[[["buttonstate",4],["buttonstate",4]],["ordering",4]],[[["buttonargs",3],["buttonargs",3]],["ordering",4]],[[["closeargs",3],["closeargs",3]],["ordering",4]],[[["touch",4],["touch",4]],["ordering",4]],[[["button",4],["button",4]],["ordering",4]],[[["hatstate",4],["hatstate",4]],["ordering",4]],[[["filedrag",4],["filedrag",4]],["ordering",4]],[[["key",4]],["i32",0]],null,[[["polygon",3]],["polygon",3]],[[["line",3]],["line",3]],[[["circlearc",3]],["circlearc",3]],[[["ellipse",3]],["ellipse",3]],[[["rectangle",3]],["rectangle",3]],[[["image",3]],["image",3]],null,null,null,null,null,null,null,[[["texturesettings",3],["bool",0]],["texturesettings",3]],null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["controlleraxisargs",3]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturecontext",3],["format",4],["texturesettings",3]],["result",4,[["texture",3]]]],[[["pistonwindow",3]],["g2dtexturecontext",6]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[],["eventsettings",3]],[[],["drawstate",3]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["controllerbutton",3]]]],[[],["result",4,[["controllerhat",3]]]],[[],["result",4,[["controlleraxisargs",3]]]],[[],["result",4,[["key",4]]]],[[],["result",4,[["mousebutton",4]]]],[[],["result",4,[["afterrenderargs",3]]]],[[],["result",4,[["buttonstate",4]]]],[[],["result",4,[["buttonargs",3]]]],[[],["result",4,[["closeargs",3]]]],[[],["result",4,[["idleargs",3]]]],[[],["result",4,[["renderargs",3]]]],[[],["result",4,[["resizeargs",3]]]],[[],["result",4,[["touch",4]]]],[[],["result",4,[["touchargs",3]]]],[[],["result",4,[["updateargs",3]]]],[[],["result",4,[["button",4]]]],[[],["result",4,[["motion",4]]]],[[],["result",4,[["hatstate",4]]]],[[],["result",4,[["filedrag",4]]]],[[],["result",4,[["input",4]]]],[[],["result",4,[["loop",4]]]],null,null,[[["u32",0],["u32",0]],["version",3]],[[["polygon",3],["drawstate",3],["",0]]],[[["line",3],["drawstate",3],["",0]]],[[["circlearc",3],["drawstate",3],["",0]]],[[["ellipse",3],["drawstate",3],["",0]]],[[["rectangle",3],["drawstate",3],["",0]]],[[["image",3],["drawstate",3],["",0]]],[[["text",3],["str",0],["",0],["drawstate",3],["",0]],["result",4]],[[["pistonwindow",3],["",0]],["option",4]],[[["pistonwindow",3],["",0]],["option",4]],[[["line",3],["f64",0],["drawstate",3],["",0]]],[[["line",3],["drawstate",3],["",0]]],[[["ellipse",3],["drawstate",3],["",0]]],[[["rectangle",3],["drawstate",3],["",0]]],[[["",0]],["size",3]],[[["pistonwindow",3]],["size",3]],[[["nowindow",3]],["size",3]],null,null,null,null,null,[[["polygon",3],["drawstate",3],["",0]]],[[["line",3],["drawstate",3],["",0]]],[[["circlearc",3],["drawstate",3],["",0]]],[[["ellipse",3],["drawstate",3],["",0]]],[[["rectangle",3],["drawstate",3],["",0]]],[[["image",3],["drawstate",3],["",0]]],[[["polygon",3],["f64",0],["drawstate",3],["",0]]],[[["polygon",3],["f64",0],["drawstate",3],["",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,null,[[["",0]]],[[["",0],["ellipse",3],["drawstate",3]]],[[["",0]]],[[["texturecontext",3]],["result",4,[["texture",3],["error",4]]]],null,null,[[["circlearc",3],["f64",0]],["circlearc",3]],null,[[["viewport",3],["viewport",3]],["bool",0]],[[["version",3],["version",3]],["bool",0]],[[["opengl",4],["opengl",4]],["bool",0]],[[["flip",4],["flip",4]],["bool",0]],[[["texture",3],["texture",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["key",4],["key",4]],["bool",0]],[[["drawstate",3],["drawstate",3]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["afterrenderargs",3],["afterrenderargs",3]],["bool",0]],[[["buttonstate",4],["buttonstate",4]],["bool",0]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["closeargs",3],["closeargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touch",4],["touch",4]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["hatstate",4],["hatstate",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[["event",4],["event",4]],["bool",0]],[[["pistonwindow",3],["",0]]],null,[[["",0]],["eventid",3]],[[["event",4]],["eventid",3]],null,[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["f64",0]]],null,null,null,null,[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[]],[[]],[[]],[[["viewport",3],["formatter",3]],["result",4,[["error",3]]]],[[["version",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["filter",4],["formatter",3]],["result",4,[["error",3]]]],[[["opengl",4],["formatter",3]],["result",4,[["error",3]]]],[[["eventsettings",3],["formatter",3]],["result",4,[["error",3]]]],[[["flip",4],["formatter",3]],["result",4,[["error",3]]]],[[["texture",3],["formatter",3]],["result",4,[["error",3]]]],[[["nowindow",3],["formatter",3]],["result",4,[["error",3]]]],[[["size",3],["formatter",3]],["result",4,[["error",3]]]],[[["position",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowsettings",3],["formatter",3]],["result",4,[["error",3]]]],[[["controllerbutton",3],["formatter",3]],["result",4,[["error",3]]]],[[["controllerhat",3],["formatter",3]],["result",4,[["error",3]]]],[[["controlleraxisargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["key",4],["formatter",3]],["result",4,[["error",3]]]],[[["drawstate",3],["formatter",3]],["result",4,[["error",3]]]],[[["mousebutton",4],["formatter",3]],["result",4,[["error",3]]]],[[["afterrenderargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["buttonstate",4],["formatter",3]],["result",4,[["error",3]]]],[[["buttonargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["closeargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["idleargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["renderargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["resizeargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["touch",4],["formatter",3]],["result",4,[["error",3]]]],[[["touchargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["updateargs",3],["formatter",3]],["result",4,[["error",3]]]],[[["button",4],["formatter",3]],["result",4,[["error",3]]]],[[["motion",4],["formatter",3]],["result",4,[["error",3]]]],[[["hatstate",4],["formatter",3]],["result",4,[["error",3]]]],[[["filedrag",4],["formatter",3]],["result",4,[["error",3]]]],[[["input",4],["formatter",3]],["result",4,[["error",3]]]],[[["loop",4],["formatter",3]],["result",4,[["error",3]]]],[[["event",4],["formatter",3]],["result",4,[["error",3]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["bool",0]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["size",3]],[[],["size",3]],[[]],[[],["size",3]],[[],["size",3]],[[],["position",3]],[[],["position",3]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["key",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["mousebutton",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mousebutton",4]],["button",4]],[[["controllerbutton",3]],["button",4]],[[["key",4]],["button",4]],[[["controlleraxisargs",3]],["motion",4]],[[["touchargs",3]],["motion",4]],[[]],[[]],[[]],[[["motion",4]],["input",4]],[[["buttonargs",3]],["input",4]],[[["touchargs",3]],["input",4]],[[["closeargs",3]],["input",4]],[[]],[[["controlleraxisargs",3]],["input",4]],[[["afterrenderargs",3]],["loop",4]],[[["updateargs",3]],["loop",4]],[[["idleargs",3]],["loop",4]],[[]],[[["renderargs",3]],["loop",4]],[[["renderargs",3]],["event",4]],[[],["event",4]],[[["afterrenderargs",3]],["event",4]],[[]],[[["updateargs",3]],["event",4]],[[["loop",4]],["event",4]],[[["idleargs",3]],["event",4]],[[],["event",4]],[[["afterrenderargs",3],["",0]],["option",4]],[[["afterrenderargs",3],["event",4]],["option",4,[["event",4]]]],[[["version",3]],["option",4,[["opengl",4]]]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["button",4],["",0]],["option",4]],[[["buttonargs",3],["",0]],["option",4]],[[["buttonargs",3],["event",4]],["option",4,[["event",4]]]],[[["closeargs",3],["",0]],["option",4]],[[["closeargs",3],["event",4]],["option",4,[["event",4]]]],[[["controlleraxisargs",3],["",0]],["option",4]],[[["controlleraxisargs",3],["event",4]],["option",4,[["event",4]]]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["f64",0],["",0]],["option",4]],[[["f64",0],["",0]],["option",4]],[[["bool",0],["",0]],["option",4]],[[["bool",0],["event",4]],["option",4,[["event",4]]]],[[["idleargs",3],["",0]],["option",4]],[[["idleargs",3],["event",4]],["option",4,[["event",4]]]],[[["texturecontext",3],["imagebuffer",3],["texturesettings",3]],["result",4,[["texture",3],["error",4]]]],[[["texturecontext",3],["u32",0],["u32",0],["texturesettings",3]],["result",4,[["texture",3],["error",4]]]],[[["texturecontext",3],["flip",4],["texturesettings",3]],["result",4,[["texture",3],["string",3]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["event",4]],["option",4,[["event",4]]]],[[["renderargs",3],["",0]],["option",4]],[[["renderargs",3],["event",4]],["option",4,[["event",4]]]],[[["resizeargs",3],["",0]],["option",4]],[[["resizeargs",3],["event",4]],["option",4,[["event",4]]]],[[["str",0]],["result",4,[["opengl",4]]]],[[["str",0],["",0]],["option",4]],[[["str",0],["event",4]],["option",4,[["event",4]]]],[[["touchargs",3],["",0]],["option",4]],[[["touchargs",3],["event",4]],["option",4,[["event",4]]]],[[["updateargs",3],["",0]],["option",4]],[[["updateargs",3],["event",4]],["option",4,[["event",4]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,[[["texturesettings",3],["bool",0]],["texturesettings",3]],null,[[["",0]],["bool",0]],[[["pistonwindow",3]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["texturesettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["",0]],["eventsettings",3]],[[["pistonwindow",3]],["eventsettings",3]],[[["eventsettings",3]],["eventsettings",3]],[[["events",3]],["eventsettings",3]],[[["",0]],["bool",0]],[[["pistonwindow",3]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["texturesettings",3]]],[[["windowsettings",3]],["bool",0]],[[["texturesettings",3]],["bool",0]],[[["",0]],["u32",0]],[[["texturesettings",3]],["filter",4]],[[["opengl",4]]],[[["windowsettings",3]],["option",4,[["version",3]]]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["",0]],["option",4,[["position",3]]]],[[["pistonwindow",3]],["option",4,[["position",3]]]],[[["nowindow",3]],["option",4,[["position",3]]]],[[["",0],["str",0]]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["u8",0]],[[["",0]]],[[["texture",3]]],[[["windowsettings",3]],["size",3]],[[["windowsettings",3]],["bool",0]],[[["",0]],["string",3]],[[["pistonwindow",3]],["string",3]],[[["nowindow",3]],["string",3]],[[["windowsettings",3]],["string",3]],[[["windowsettings",3]],["bool",0]],[[["context",3]]],[[["windowsettings",3]],["bool",0]],[[["",0]],["u32",0]],[[["texturesettings",3]],["wrap",4]],[[["texturesettings",3]],["wrap",4]],null,[[["windowsettings",3]],["windowsettings",3]],null,[[["flip",4],["",0]]],[[["controllerbutton",3],["",0]]],[[["controllerhat",3],["",0]]],[[["key",4],["",0]]],[[["mousebutton",4],["",0]]],[[["afterrenderargs",3],["",0]]],[[["buttonstate",4],["",0]]],[[["buttonargs",3],["",0]]],[[["closeargs",3],["",0]]],[[["touch",4],["",0]]],[[["button",4],["",0]]],[[["hatstate",4],["",0]]],[[["filedrag",4],["",0]]],null,[[["",0]]],[[["pistonwindow",3]]],[[["nowindow",3]]],[[["f32",0]]],[[["f32",0]]],[[["line",3],["f32",0]],["line",3]],[[["ellipse",3],["f32",0]],["ellipse",3]],[[["rectangle",3],["f32",0]],["rectangle",3]],null,null,null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["idleargs",3]]]],null,[[["",0]]],[[["",0],["image",3],["drawstate",3]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["opengl",4]],["version",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],null,[[["bool",0]]],null,[[["character",3]],["f64",0]],null,[[["f64",0],["",0]]],[[["",0],["line",3],["drawstate",3]]],[[["f64",0],["",0]]],[[["pistonwindow",3],["asref",8,[["path",3]]]],["result",4,[["glyphs",6],["error",3]]]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],null,[[["",0]]],[[["f64",0]]],null,[[["u64",0]]],null,[[["ellipse",3],["option",4,[["border",3]]]],["ellipse",3]],[[["rectangle",3],["option",4,[["border",3]]]],["rectangle",3]],[[["image",3],["option",4]],["image",3]],[[["windowsettings",3],["option",4]],["windowsettings",3]],[[["image",3],["option",4]],["image",3]],[[["image",3],["option",4]],["image",3]],[[["u32",0],["u32",0]],["version",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],null,[[["texturesettings",3],["filter",4]],["texturesettings",3]],null,null,[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4]],[[["f32",0],["f32",0],["f32",0],["f32",0]]],[[["line",3],["f32",0],["f32",0],["f32",0],["f32",0]],["line",3]],[[["ellipse",3],["f32",0],["f32",0],["f32",0],["f32",0]],["ellipse",3]],[[["rectangle",3],["f32",0],["f32",0],["f32",0],["f32",0]],["rectangle",3]],[[["viewport",3],["viewport",3]],["bool",0]],[[["version",3],["version",3]],["bool",0]],[[["texture",3],["texture",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["controllerbutton",3],["controllerbutton",3]],["bool",0]],[[["controllerhat",3],["controllerhat",3]],["bool",0]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["bool",0]],[[["drawstate",3],["drawstate",3]],["bool",0]],[[["buttonargs",3],["buttonargs",3]],["bool",0]],[[["idleargs",3],["idleargs",3]],["bool",0]],[[["renderargs",3],["renderargs",3]],["bool",0]],[[["resizeargs",3],["resizeargs",3]],["bool",0]],[[["touchargs",3],["touchargs",3]],["bool",0]],[[["updateargs",3],["updateargs",3]],["bool",0]],[[["button",4],["button",4]],["bool",0]],[[["motion",4],["motion",4]],["bool",0]],[[["filedrag",4],["filedrag",4]],["bool",0]],[[["input",4],["input",4]],["bool",0]],[[["loop",4],["loop",4]],["bool",0]],[[["opengl",4],["u8",0]],["pistonwindow",3]],[[],["texturesettings",3]],[[],["eventsettings",3]],[[["eventsettings",3]],["events",3]],[[["windowsettings",3]],["nowindow",3]],[[],["windowsettings",3]],[[["u32",0],["u8",0]],["controllerbutton",3]],[[["u32",0],["u8",0],["hatstate",4]],["controllerhat",3]],[[["u32",0],["u8",0],["f64",0]],["controlleraxisargs",3]],[[],["context",3]],[[],["polygon",3]],[[["f64",0]],["line",3]],[[["f64",0],["f64",0],["f64",0]],["circlearc",3]],[[],["ellipse",3]],[[],["rectangle",3]],[[],["image",3]],[[["u32",0]],["text",3]],[[["i64",0],["i64",0],["f64",0],["touch",4]],["touchargs",3]],[[["i64",0],["i64",0],["touch",4]],["touchargs",3]],[[["f64",0],["f64",0]],["context",3]],[[],["drawstate",3]],[[["f64",0]],["ellipse",3]],[[["f64",0]],["rectangle",3]],[[],["drawstate",3]],[[],["image",3]],[[["u32",0]],["text",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[],["drawstate",3]],[[["f64",0]],["line",3]],[[["f64",0]],["rectangle",3]],[[["f64",0],["f64",0]],["rectangle",3]],[[["viewport",3]],["context",3]],[[["pistonwindow",3]],["option",4]],[[["events",3],["",0]],["option",4,[["event",4]]]],null,[[["u32",0],["u32",0]],["version",3]],[[["f64",0],["f64",0]]],[[["context",3],["f64",0],["f64",0]],["context",3]],[[]],null,null,[[["version",3],["version",3]],["option",4,[["ordering",4]]]],[[["opengl",4],["opengl",4]],["option",4,[["ordering",4]]]],[[["controllerbutton",3],["controllerbutton",3]],["option",4,[["ordering",4]]]],[[["controllerhat",3],["controllerhat",3]],["option",4,[["ordering",4]]]],[[["controlleraxisargs",3],["controlleraxisargs",3]],["option",4,[["ordering",4]]]],[[["key",4],["key",4]],["option",4,[["ordering",4]]]],[[["drawstate",3],["drawstate",3]],["option",4,[["ordering",4]]]],[[["mousebutton",4],["mousebutton",4]],["option",4,[["ordering",4]]]],[[["afterrenderargs",3],["afterrenderargs",3]],["option",4,[["ordering",4]]]],[[["buttonstate",4],["buttonstate",4]],["option",4,[["ordering",4]]]],[[["buttonargs",3],["buttonargs",3]],["option",4,[["ordering",4]]]],[[["closeargs",3],["closeargs",3]],["option",4,[["ordering",4]]]],[[["idleargs",3],["idleargs",3]],["option",4,[["ordering",4]]]],[[["renderargs",3],["renderargs",3]],["option",4,[["ordering",4]]]],[[["resizeargs",3],["resizeargs",3]],["option",4,[["ordering",4]]]],[[["touch",4],["touch",4]],["option",4,[["ordering",4]]]],[[["touchargs",3],["touchargs",3]],["option",4,[["ordering",4]]]],[[["updateargs",3],["updateargs",3]],["option",4,[["ordering",4]]]],[[["button",4],["button",4]],["option",4,[["ordering",4]]]],[[["motion",4],["motion",4]],["option",4,[["ordering",4]]]],[[["hatstate",4],["hatstate",4]],["option",4,[["ordering",4]]]],[[["filedrag",4],["filedrag",4]],["option",4,[["ordering",4]]]],[[["input",4],["input",4]],["option",4,[["ordering",4]]]],[[["loop",4],["loop",4]],["option",4,[["ordering",4]]]],[[["event",4],["event",4]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["event",4]]]],[[["pistonwindow",3]],["option",4,[["event",4]]]],[[["nowindow",3]],["option",4,[["event",4]]]],null,[[["",0]]],[[["",0],["polygon",3],["drawstate",3]]],[[["",0],["polygon",3],["f64",0],["drawstate",3]]],[[]],[[["touchargs",3]]],null,[[["touchargs",3]]],null,[[]],[[["context",3]],["context",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["touchargs",3]],["f64",0]],[[["touchargs",3]]],null,[[]],null,[[["line",3],["f64",0]],["line",3]],[[["circlearc",3],["f64",0]],["circlearc",3]],null,null,[[["image",3]],["image",3]],null,null,[[["",0]]],[[["",0],["rectangle",3],["drawstate",3]]],null,[[["",0]]],[[["f64",0],["f64",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["button",4]]]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["renderargs",3]]]],[[["context",3]],["context",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["resizeargs",3]]]],[[["circlearc",3],["u32",0]],["circlearc",3]],[[["ellipse",3],["u32",0]],["ellipse",3]],null,null,[[["f64",0]]],[[["f64",0]]],[[["context",3],["f64",0]],["context",3]],[[["text",3]],["text",3]],null,null,[[["windowsettings",3],["u8",0]],["windowsettings",3]],[[["f64",0],["f64",0]]],[[["context",3],["f64",0],["f64",0]],["context",3]],[[]],null,[[["drawstate",3]],["drawstate",3]],null,[[["controllerbutton",3]],["result",4]],[[["controllerhat",3]],["result",4]],[[["controlleraxisargs",3]],["result",4]],[[["key",4]],["result",4]],[[["mousebutton",4]],["result",4]],[[["afterrenderargs",3]],["result",4]],[[["buttonstate",4]],["result",4]],[[["buttonargs",3]],["result",4]],[[["closeargs",3]],["result",4]],[[["idleargs",3]],["result",4]],[[["renderargs",3]],["result",4]],[[["resizeargs",3]],["result",4]],[[["touch",4]],["result",4]],[[["touchargs",3]],["result",4]],[[["updateargs",3]],["result",4]],[[["button",4]],["result",4]],[[["motion",4]],["result",4]],[[["hatstate",4]],["result",4]],[[["filedrag",4]],["result",4]],[[["input",4]],["result",4]],[[["loop",4]],["result",4]],[[["",0],["bool",0]]],[[["pistonwindow",3],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["texturesettings",3]]],[[["",0],["bool",0]]],[[["pistonwindow",3],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["eventsettings",3]]],[[["pistonwindow",3],["eventsettings",3]]],[[["eventsettings",3],["eventsettings",3]]],[[["events",3],["eventsettings",3]]],[[["",0],["bool",0]]],[[["pistonwindow",3],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["windowsettings",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["windowsettings",3]]],[[["",0],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["",0],["u64",0]]],[[["windowsettings",3],["option",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["",0]]],[[["pistonwindow",3],["into",8,[["position",3]]]]],[[["nowindow",3]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["u8",0]]],[[["",0],["bool",0]]],[[["pistonwindow",3],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["",0]]],[[["pistonwindow",3],["into",8,[["size",3]]]]],[[["nowindow",3]]],[[["windowsettings",3],["size",3]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["string",3]]],[[["pistonwindow",3],["string",3]]],[[["nowindow",3],["string",3]]],[[["windowsettings",3],["string",3]]],[[["windowsettings",3],["bool",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],[[["windowsettings",3],["bool",0]]],[[["texturesettings",3],["wrap",4]]],[[["texturesettings",3],["wrap",4]]],[[["f32",0]]],[[["line",3],["shape",4]],["line",3]],[[["rectangle",3],["shape",4]],["rectangle",3]],null,null,[[["f64",0],["f64",0]]],[[["context",3],["f64",0],["f64",0]],["context",3]],[[]],[[["",0]],["bool",0]],[[["pistonwindow",3]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["",0]]],[[["pistonwindow",3]]],[[["nowindow",3]]],[[["",0]],["size",3]],[[["pistonwindow",3]],["size",3]],[[["nowindow",3]],["size",3]],[[["windowsettings",3],["size",3]],["windowsettings",3]],null,[[]],[[]],[[]],[[["f64",0],["f64",0],["f64",0],["f64",0]]],[[["image",3]],["image",3]],[[["f64",0],["f64",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["circlearc",3],["f64",0]],["circlearc",3]],null,null,null,null,[[["context",3]],["context",3]],null,[[["",0]]],[[["bool",0]]],[[["pistonwindow",3]]],[[["nowindow",3]]],null,null,[[["u32",0],["str",0],["",0],["",0]],["result",4]],[[["",0]],["option",4]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["string",3]]]],null,null,[[["",0]],["option",4,[["u32",0]]]],[[["event",4]],["option",4,[["u32",0]]]],[[["f32",0]]],[[["string",3]]],[[["windowsettings",3],["string",3]],["windowsettings",3]],[[["opengl",4]],["glslstring",3]],[[["character",3]],["f64",0]],[[["",0]],["option",4]],[[["event",4]],["option",4]],null,[[["",0]],["option",4,[["touchargs",3]]]],[[["f64",0],["f64",0]]],[[["context",3],["f64",0],["f64",0]],["context",3]],[[]],null,[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],[[["",0],["drawstate",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["option",4]],[[["texture",3],["texturecontext",3],["format",4]],["result",4]],[[["texture",3],["texturecontext",3],["imagebuffer",3]],["result",4,[["error",4]]]],[[["event",4]],["option",4]],[[["",0]],["option",4,[["updateargs",3]]]],[[["u64",0]]],null,[[["u64",0]]],null,[[["context",3]],["context",3]],null,null,[[["renderargs",3]],["viewport",3]],[[["resizeargs",3]],["viewport",3]],null,[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],[[["",0]],["event",4]],[[["pistonwindow",3]],["event",4]],[[["nowindow",3]],["event",4]],[[["",0],["duration",3]],["option",4,[["event",4]]]],[[["pistonwindow",3],["duration",3]],["option",4,[["event",4]]]],[[["nowindow",3],["duration",3]],["option",4,[["event",4]]]],null,[[["",0],["u32",0],["str",0]],["result",4,[["f64",0]]]],[[["line",3],["f64",0]],["line",3]],null,null,null,null,null,[[["",0]]],[[["event",4]]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],null,null,[[["f64",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["u32",0],["char",0]],["result",4,[["character",3]]]],null,null,[[["",0],["u32",0],["str",0]],["result",4,[["f64",0]]]],null,null,null,null,null,null,null,null,null,[[["f32",0]]],[[]],[[]],[[["f32",0]]],[[["str",0]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["",0]],["option",4,[["controlleraxisargs",3]]]],[[["controlleraxisargs",3],["",0]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["blend",4]],["blend",4]],[[["stencil",4]],["stencil",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["blend",4],["blend",4]],["bool",0]],[[["stencil",4],["stencil",4]],["bool",0]],[[["blend",4],["formatter",3]],["result",4,[["error",3]]]],[[["stencil",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["stencil",4],["stencil",4]],["bool",0]],[[["blend",4],["blend",4]],["option",4,[["ordering",4]]]],[[["stencil",4],["stencil",4]],["option",4,[["ordering",4]]]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["f64",0],["f64",0],["f64",0]]],[[["border",3]],["border",3]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["eventid",3]],["eventid",3]],[[["",0],["",0]]],[[["eventid",3],["eventid",3]],["ordering",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["eventid",3],["",0]]],[[],["usize",0]],[[]],[[["eventid",3],["eventid",3]],["bool",0]],[[["eventid",3],["eventid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["eventid",3]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["glyphcache",3],["u32",0],["char",0]],["result",4,[["character",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,null,[[]],[[["texturesettings",3]],["result",4,[["glyphcache",3]]]],[[["font",4],["texturesettings",3]],["glyphcache",3]],[[],["usize",0]],[[]],[[["texturesettings",3]],["result",4,[["glyphcache",3],["error",3]]]],[[["glyphcache",3],["u32",0],["char",0]],["option",4,[["character",3]]]],[[["glyphcache",3],["u32",0]],["result",4]],[[["glyphcache",3],["u32",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["grid",3]]],[[["grid",3]],["gridcells",3]],[[["grid",3]],["grid",3]],[[["gridcells",3]],["gridcells",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["grid",3],["line",3],["drawstate",3],["",0]]],[[["usize",0]]],[[["usize",0]]],[[["grid",3],["formatter",3]],["result",4,[["error",3]]]],[[["gridcells",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["gridcells",3]],["option",4]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["grid",3]],["f64",0]],[[["grid",3]],["f64",0]],null,null,[[["drawstate",3],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["u8",0]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["modifierkey",3]],["modifierkey",3]],[[["",0],["",0]]],[[["modifierkey",3],["modifierkey",3]],["ordering",4]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[],["modifierkey",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["modifierkey",3]]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["usize",0]]],[[],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["modifierkey",3],["",0]]],[[["modifierkey",3]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[["modifierkey",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["u8",0]],["option",4,[["modifierkey",3]]]],[[["u8",0]],["modifierkey",3]],[[["u8",0]],["modifierkey",3]],[[],["modifierkey",3]],[[["modifierkey",3],["",0]]],[[],["usize",0]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["bool",0]],[[["modifierkey",3],["modifierkey",3]],["bool",0]],[[["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]],["option",4,[["ordering",4]]]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3]],["result",4]],[[["modifierkey",3],["modifierkey",3],["bool",0]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["modifierkey",3],["modifierkey",3]]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],[[["",0]]],[[["modifierkey",3],["modifierkey",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["modifierkey",3],["modifierkey",3]],["modifierkey",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["shape",4]],["shape",4]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0],["f32",0],["f32",0]]],[[]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[["",0],["",0],["",0]]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[["usize",0],["usize",0]],["usize",0]],[[["usize",0],["usize",0],["isize",0]],["usize",0]],[[["usize",0],["usize",0]],["usize",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["f64",0],["f64",0],["f64",0]]],[[["shape",4]],["shape",4]],[[["border",3]],["border",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],null,[[["f64",0],["f64",0],["f64",0],["f64",0]]],null,[[["f64",0],["f64",0],["f64",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["texturepacker",3]],["usize",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["texturepacker",3]],["option",4,[["usize",0]]]],[[]],[[],["usize",0]],[[]],[[],["texturepacker",3]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["texturepacker",3],["usize",0]]],[[["f64",0]]],[[["",0]]],[[]],[[]],[[]],[[["f64",0],["f64",0]],["f32",0]],[[["f64",0],["f64",0]],["f32",0]],[[["f64",0],["f64",0],["u32",0],["f64",0]]],[[["u32",0],["f64",0]]],[[["u32",0]]],[[["f64",0]]],[[]],[[["u32",0],["f64",0]]],[[["u32",0],["f64",0],["f64",0]]],[[["u32",0],["f64",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Key"],[4,"Loop"],[4,"Flip"],[4,"Input"],[4,"MouseButton"],[4,"Touch"],[4,"FileDrag"],[4,"HatState"],[4,"Button"],[4,"Motion"],[4,"Event"],[8,"CharacterCache"],[4,"Filter"],[4,"ButtonState"],[8,"Graphics"],[4,"OpenGL"],[8,"Radians"],[3,"Viewport"],[3,"Character"],[8,"AfterRenderEvent"],[3,"Api"],[8,"Transformed"],[3,"Context"],[8,"AdvancedWindow"],[3,"WindowSettings"],[3,"ControllerAxisArgs"],[8,"EventLoop"],[3,"EventSettings"],[3,"DrawState"],[3,"Ellipse"],[3,"Rectangle"],[3,"TextureSettings"],[3,"TextureContext"],[3,"UnsupportedGraphicsApiError"],[3,"PistonWindow"],[3,"Events"],[3,"Texture"],[3,"NoWindow"],[3,"Size"],[3,"Position"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"Polygon"],[3,"Line"],[3,"CircleArc"],[3,"Image"],[3,"Text"],[3,"AfterRenderArgs"],[3,"ButtonArgs"],[3,"CloseArgs"],[3,"IdleArgs"],[3,"RenderArgs"],[3,"ResizeArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[8,"BuildFromWindowSettings"],[8,"ButtonEvent"],[8,"CloseEvent"],[8,"ControllerAxisEvent"],[8,"CursorEvent"],[8,"Window"],[8,"GenericEvent"],[8,"Rectangled"],[8,"FocusEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"UpdateEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"RenderEvent"],[8,"ResizeEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"ImageSize"],[8,"OpenGLWindow"],[8,"Colored"],[8,"SourceRectangled"],[13,"Keyboard"],[13,"Mouse"],[13,"Controller"],[13,"Hat"],[13,"Input"],[13,"Loop"],[13,"Custom"],[13,"Hover"],[13,"Drop"],[13,"Button"],[13,"Move"],[13,"Text"],[13,"Resize"],[13,"Focus"],[13,"Cursor"],[13,"FileDrag"],[13,"Close"],[13,"Render"],[13,"AfterRender"],[13,"Update"],[13,"Idle"],[13,"MouseCursor"],[13,"MouseRelative"],[13,"MouseScroll"],[13,"ControllerAxis"],[13,"Touch"],[4,"Blend"],[4,"Stencil"],[13,"Clip"],[13,"Inside"],[13,"Outside"],[3,"Border"],[3,"EventId"],[3,"GlyphCache"],[3,"Grid"],[3,"GridCells"],[3,"ModifierKey"],[4,"Shape"],[4,"Shape"],[3,"Border"],[13,"Round"],[13,"Bevel"],[3,"TexturePacker"]]},\
"png":{"doc":"PNG encoder and decoder","t":[3,13,13,18,13,13,4,4,13,13,4,4,13,13,4,3,4,13,4,18,18,13,3,4,13,4,13,13,13,3,13,18,13,13,13,13,18,18,18,13,13,13,13,3,13,13,13,3,13,13,13,13,13,13,13,3,13,18,18,13,13,3,13,13,13,13,3,13,18,18,18,18,18,18,18,18,18,13,13,3,3,13,3,13,4,13,13,3,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,17,17,17,17,17,17,17,17,5,5,17,5,5,17,17],"n":["AnimationControl","AnimationControl","Avg","BGR","Background","Best","BitDepth","BlendOp","ChunkBegin","ChunkComplete","ColorType","Compression","CorruptFlateStream","CrcMismatch","Decoded","Decoder","DecodingError","Default","DisposeOp","EXPAND","EXPAND_16","Eight","Encoder","EncodingError","Fast","FilterType","Format","Format","Four","FrameControl","FrameControl","GRAY_TO_RGB","Grayscale","GrayscaleAlpha","Header","Huffman","IDENTITY","INVERT_ALPHA","INVERT_MONO","ImageData","ImageDataFlushed","ImageEnd","Indexed","Info","InvalidSignature","IoError","IoError","Limits","LimitsExceeded","Meter","NoFilter","None","Nothing","One","Other","OutputInfo","Over","PACKING","PACKSWAP","Paeth","PartialChunk","PixelDimensions","PixelDimensions","Previous","RGB","RGBA","Reader","Rle","SCALE_16","SHIFT","STRIP_16","STRIP_ALPHA","STRIP_FILLER","STRIP_FILLER_AFTER","STRIP_FILLER_BEFORE","SWAP_ALPHA","SWAP_ENDIAN","Sixteen","Source","StreamWriter","StreamingDecoder","Sub","Transformations","Two","Unit","Unspecified","Up","Writer","all","animation_control","animation_control","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","blend_op","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","bytes","bytes_per_pixel","cause","cause","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_type","color_type","complement","compression","contains","default","default","default","default","delay_den","delay_num","difference","dispose_op","drop","drop","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_control","frame_control","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_u8","from_u8","from_u8","from_u8","from_u8","from_u8","hash","height","height","height","inc_seq_num","info","insert","interlaced","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_stream_writer","into_stream_writer_with_size","is_all","is_animated","is_empty","line_size","ne","ne","new","new","new","new_with_limits","next_frame","next_interlaced_row","next_row","not","num_frames","num_plays","output_buffer_size","output_color_type","output_line_size","palette","partial_cmp","pixel_dims","raw_bytes","raw_row_length","raw_row_length_from_width","read_info","remove","reset","samples","sequence_number","set","set_color","set_compression","set_depth","set_filter","set_limits","set_palette","set_seq_num","set_transformations","set_trns","size","stream_writer","stream_writer_with_size","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","trns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unit","update","width","width","width","write","write_chunk","write_header","write_image_data","x_offset","xppu","y_offset","yppu","0","0","0","0","0","0","0","1","1","1","2","3","4","0","0","0","chunk","crc_sum","crc_val","recover","0","0","ChunkType","IDAT","IEND","IHDR","PLTE","acTL","bKGD","fcTL","fdAT","is_critical","is_private","pHYs","reserved_set","safe_to_copy","tIME","tRNS"],"q":["pngpng::Decoded","","","","","","","","","","","","","png::DecodingError","","","","","","","png::EncodingError","","png::chunk","","","","","","","","","","","","","","",""],"d":["Animation control information","","","Flip RGB to BGR; RGBA to BGRA","Clear buffer with the background color.","Higher compression level","Bit depth of the png file","How pixels are written into the buffer.","","","Describes the layout of samples in a pixel","The type and strength of applied compression.","","","Result of the decoding process","PNG Decoder","","Default level  ","How to reset buffer of an animated png (APNG) at the end …","Expand paletted images to RGB; expand grayscale images of …","","","PNG Encoder","","Fast minimal compression","The byte level filter applied to scanlines to prepare them …","","","","Frame control information","","","","","","","No transformation","Change alpha from opacity to transparency","Invert monochrome images","Decoded raw image data.","The last of a consecutive chunk of IDAT was done. This is …","","","PNG info struct","","","","Limits on the resources the <code>Decoder</code> is allowed too use","","","","Leave the buffer unchanged.","Nothing decoded yet","","","Output info","The new pixels are blended into the current state based on …","Expand 1; 2 and 4-bit samples to bytes","Change order of packed pixels to LSB first","","","Pixel dimensions information","","Reset the buffer to the state before the current frame.","","","PNG reader (mostly high-level interface)","","","Normalize pixels to the sBIT depth","Strip 16-bit samples to 8 bits","Discard the alpha channel","","","","Flip RGBA to ARGB or GA to AG","Byte-swap 16-bit samples","","Pixels overwrite the value at their position.","Streaming png writer","PNG StreamingDecoder (low-level interface)","","Output transformations","","Physical unit of the pixel dimensions","","","PNG writer","Returns the set containing all flags.","Returns the frame control information of the image","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the bits per pixel","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Type of frame area rendering for this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size needed to hold a decoded frame","maximum number of bytes the decoder is allowed to …","Returns the bytes per pixel","","","Chunk types and functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Frame delay fraction denominator","Frame delay fraction numerator","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Type of frame area disposal to be done after rendering …","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame control information of the current frame","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Temporary solution until Rust provides a …","","Height of the following frame","","","","Get information on the image.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this into a stream writer for image data.","Turn this into a stream writer with custom buffer size.","Returns <code>true</code> if all flags are currently set.","Returns true if the image is an APNG image.","Returns <code>true</code> if no flags are currently stored.","","","","Creates a new StreamingDecoder","","","","Decodes the next frame into <code>buf</code>.","Returns the next processed row of the image","Returns the next processed row of the image","Returns the complement of this set of flags.","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","Returns the number of bytes required to hold a …","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","","","","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced row","Returns the number of bytes needed for one deinterlaced …","Reads all meta data until the first IDAT chunk","Removes the specified flags in-place.","Resets the StreamingDecoder","Returns the number of samples used per pixel of <code>ColorType</code>","Sequence number of the animation chunk, starting from 0","Inserts or removes the specified flags depending on the …","Set the color of the encoded image.","Set compression parameters.","Set the indicated depth of the image data.","Set the used filter type.","Limit resource usage","","","Set the allowed and performed transformations.","","Size of the image","Create an stream writer.","Create a stream writer with custom buffer size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Either <em>Meter</em> or <em>Unspecified</em>","Low level StreamingDecoder interface.","Width of the following frame","","","","","","Writes the image data.","X position at which to render the following frame","Pixels per unit, X axis","Y position at which to render the following frame","Pixels per unit, Y axis","","","","","","","","","","","","","","","","","","Calculated CRC32 sum","Stored CRC32 value","bytes to skip to try to recover from this error","","","","Image data","Image trailer","Image header","Palette","Animation control","Background colour","Frame control","Frame data","Returns true if the chunk is critical.","Returns true if the chunk is private.","Physical pixel dimensions","Checks whether the reserved bit of the chunk name is set. …","Returns true if the chunk is safe to copy if unknown.","Image last-modification time","Transparency"],"i":[0,1,2,3,4,5,0,0,1,1,0,0,6,6,0,0,0,5,0,3,3,7,0,0,5,0,6,8,7,0,1,3,9,9,1,5,3,3,3,1,1,1,9,0,6,6,8,0,6,10,2,4,1,7,6,0,11,3,3,2,1,0,1,4,9,9,0,5,3,3,3,3,3,3,3,3,3,7,11,0,0,2,0,7,0,10,2,0,3,12,12,12,13,3,3,3,3,3,12,3,3,14,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,13,23,12,6,8,0,9,7,21,10,4,11,14,22,5,12,3,23,2,9,7,21,10,4,11,14,22,5,12,3,23,2,3,12,13,3,12,3,15,14,12,23,14,14,3,14,19,20,3,9,7,10,4,11,3,13,2,3,12,20,20,9,7,21,10,4,4,11,11,14,22,5,12,3,3,3,3,3,1,6,6,13,23,8,8,2,12,12,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,5,12,3,1,6,6,6,13,23,8,8,2,3,3,3,3,9,7,10,4,11,2,3,14,12,13,14,17,3,12,3,3,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,19,19,3,12,3,13,3,13,15,16,18,16,17,17,17,3,22,22,17,17,17,12,3,12,12,12,12,16,3,15,9,14,3,18,18,18,18,16,18,14,16,18,12,19,19,3,3,3,9,7,21,10,4,11,14,22,5,12,3,23,2,4,11,6,8,3,12,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,15,16,17,18,19,20,9,7,21,10,4,11,14,22,5,12,3,1,6,13,23,8,2,3,21,15,14,12,13,20,19,18,19,14,21,14,21,24,25,26,27,28,29,30,24,25,26,24,24,24,31,32,33,34,34,34,34,35,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["transformations",3]],[[["info",3]],["option",4,[["animationcontrol",3]]]],null,null,null,[[["transformations",3],["transformations",3]],["transformations",3]],[[["transformations",3],["transformations",3]]],[[["transformations",3],["transformations",3]],["transformations",3]],[[["transformations",3],["transformations",3]]],[[["transformations",3]],["u32",0]],[[["info",3]],["usize",0]],[[["transformations",3],["transformations",3]],["transformations",3]],[[["transformations",3],["transformations",3]]],nulloutputinfo",3]],["usize",0]],null,[[["info",3]],["usize",0]],[[["decodingerror",4]],["option",4,[["error",8]]]],[[["encodingerror",4]],["option",4,[["error",8]]]],null,[[["colortype",4]],["colortype",4]],[[["bitdepth",4]],["bitdepth",4]],[[["pixeldimensions",3]],["pixeldimensions",3]],[[["unit",4]],["unit",4]],[[["disposeop",4]],["disposeop",4]],[[["blendop",4]],["blendop",4]],[[["framecontrol",3]],["framecontrol",3]],[[["animationcontrol",3]],["animationcontrol",3]],[[["compression",4]],["compression",4]],[[["info",3]],["info",3]],[[["transformations",3]],["transformations",3]],[[["limits",3]],["limits",3]],[[["filtertype",4]],["filtertype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["transformations",3],["transformations",3]],["ordering",4]],null,null,[[["transformations",3]],["transformations",3]],null,[[["transformations",3],["transformations",3]],["bool",0]],[[],["streamingdecoder",3]],[[],["framecontrol",3]],[[],["info",3]],[[],["limits",3]],null,null,[[["transformations",3],["transformations",3]],["transformations",3]],null,[[["writer",3,[["write",8]]]]],[[["streamwriter",3,[["write",8]]]]],[[],["transformations",3]],[[["colortype",4],["colortype",4]],["bool",0]],[[["bitdepth",4],["bitdepth",4]],["bool",0]],[[["unit",4],["unit",4]],["bool",0]],[[["disposeop",4],["disposeop",4]],["bool",0]],[[["blendop",4],["blendop",4]],["bool",0]],[[["transformations",3],["transformations",3]],["bool",0]],[[["outputinfo",3],["outputinfo",3]],["bool",0]],[[["filtertype",4],["filtertype",4]],["bool",0]],[[["transformations",3],["intoiterator",8]]],null,[[["streamwriter",3,[["write",8]]]],["result",4,[["encodingerror",4]]]],[[["streamwriter",3,[["write",8]]]],["result",6]],[[["colortype",4],["formatter",3]],["result",6]],[[["bitdepth",4],["formatter",3]],["result",6]],[[["pixeldimensions",3],["formatter",3]],["result",6]],[[["unit",4],["formatter",3]],["result",6]],[[["disposeop",4],["formatter",3]],["result",6]],[[["disposeop",4],["formatter",3]],["result",6]],[[["blendop",4],["formatter",3]],["result",6]],[[["blendop",4],["formatter",3]],["result",6]],[[["framecontrol",3],["formatter",3]],["result",6]],[[["animationcontrol",3],["formatter",3]],["result",6]],[[["compression",4],["formatter",3]],["result",6]],[[["info",3],["formatter",3]],["result",6]],[[["transformations",3],["formatter",3]],["result",6]],[[["transformations",3],["formatter",3]],["result",6]],[[["transformations",3],["formatter",3]],["result",6]],[[["transformations",3],["formatter",3]],["result",6]],[[["transformations",3],["formatter",3]],["result",6]],[[["decoded",4],["formatter",3]],["result",6]],[[["decodingerror",4],["formatter",3]],["result",6]],[[["decodingerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["outputinfo",3],["formatter",3]],["result",6]],[[["limits",3],["formatter",3]],["result",6]],[[["encodingerror",4],["formatter",3]],["result",6]],[[["encodingerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["filtertype",4],["formatter",3]],["result",6]],[[["info",3]],["option",4,[["framecontrol",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["compression",4]],["compression",4]],[[]],[[]],[[]],[[]],[[["error",3]],["decodingerror",4]],[[["string",3]],["decodingerror",4]],[[]],[[]],[[]],[[["error",3]],["encodingerror",4]],[[]],[[["u32",0]],["option",4,[["transformations",3]]]],[[["u32",0]],["transformations",3]],[[["u32",0]],["transformations",3]],[[["intoiterator",8]],["transformations",3]],[[["u8",0]],["option",4,[["colortype",4]]]],[[["u8",0]],["option",4,[["bitdepth",4]]]],[[["u8",0]],["option",4,[["unit",4]]]],[[["u8",0]],["option",4,[["disposeop",4]]]],[[["u8",0]],["option",4,[["blendop",4]]]],[[["u8",0]],["option",4,[["filtertype",4]]]],[[["transformations",3],["",0]]],null,null,null,[[["framecontrol",3],["u32",0]]],[[["reader",3,[["read",8]]]],["info",3]],[[["transformations",3],["transformations",3]]],null,[[["transformations",3],["transformations",3]],["transformations",3]],[[["transformations",3],["transformations",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["writer",3,[["write",8]]]],["streamwriter",3,[["write",8]]]],[[["writer",3,[["write",8]]],["usize",0]],["streamwriter",3,[["write",8]]]],[[["transformations",3]],["bool",0]],[[["info",3]],["bool",0]],[[["transformations",3]],["bool",0]],null,[[["transformations",3],["transformations",3]],["bool",0]],[[["outputinfo",3],["outputinfo",3]],["bool",0]],[[],["streamingdecoder",3]],[[["read",8]],["decoder",3,[["read",8]]]],[[["write",8],["u32",0],["u32",0]],["encoder",3,[["write",8]]]],[[["read",8],["limits",3]],["decoder",3,[["read",8]]]],[[["reader",3,[["read",8]]]],["result",4,[["decodingerror",4]]]],[[["reader",3,[["read",8]]]],["result",4,[["option",4],["decodingerror",4]]]],[[["reader",3,[["read",8]]]],["result",4,[["option",4],["decodingerror",4]]]],[[["transformations",3]],["transformations",3]],null,null,[[["reader",3,[["read",8]]]],["usize",0]],[[["reader",3,[["read",8]]]]],[[["reader",3,[["read",8]]],["u32",0]],["usize",0]],null,[[["transformations",3],["transformations",3]],["option",4,[["ordering",4]]]],null,[[["info",3]],["usize",0]],[[["info",3]],["usize",0]],[[["info",3],["u32",0]],["usize",0]],[[["decoder",3,[["read",8]]]],["result",4,[["decodingerror",4]]]],[[["transformations",3],["transformations",3]]],[[["streamingdecoder",3]]],[[["colortype",4]],["usize",0]],null,[[["transformations",3],["transformations",3],["bool",0]]],[[["encoder",3,[["write",8]]],["colortype",4]]],[[["encoder",3,[["write",8]]],["into",8,[["compression",4]]]]],[[["encoder",3,[["write",8]]],["bitdepth",4]]],[[["encoder",3,[["write",8]]],["filtertype",4]]],[[["decoder",3,[["read",8]]],["limits",3]]],[[["encoder",3,[["write",8]]],["vec",3,[["u8",0]]]]],[[["framecontrol",3],["u32",0]]],[[["decoder",3,[["read",8]]],["transformations",3]]],[[["encoder",3,[["write",8]]],["vec",3,[["u8",0]]]]],[[["info",3]]],[[["writer",3,[["write",8]]]],["streamwriter",3,[["write",8]]]],[[["writer",3,[["write",8]]],["usize",0]],["streamwriter",3,[["write",8]]]],[[["transformations",3],["transformations",3]],["transformations",3]],[[["transformations",3],["transformations",3]]],[[["transformations",3],["transformations",3]],["transformations",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["transformations",3],["transformations",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["transformations",3],["transformations",3]],["transformations",3]],null,[[["streamingdecoder",3],["vec",3]],["result",4,[["decodingerror",4]]]],null,null,null,[[["streamwriter",3,[["write",8]]]],["result",6,[["usize",0]]]],[[["writer",3,[["write",8]]]],["result",4,[["encodingerror",4]]]],[[["encoder",3,[["write",8]]]],["result",4,[["writer",3,[["write",8]]],["encodingerror",4]]]],[[["writer",3,[["write",8]]]],["result",4,[["encodingerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["chunktype",6]],["bool",0]],[[["chunktype",6]],["bool",0]],null,[[["chunktype",6]],["bool",0]],[[["chunktype",6]],["bool",0]],null,null],"p":[[4,"Decoded"],[4,"FilterType"],[3,"Transformations"],[4,"DisposeOp"],[4,"Compression"],[4,"DecodingError"],[4,"BitDepth"],[4,"EncodingError"],[4,"ColorType"],[4,"Unit"],[4,"BlendOp"],[3,"Info"],[3,"OutputInfo"],[3,"FrameControl"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"StreamWriter"],[3,"PixelDimensions"],[3,"AnimationControl"],[3,"Limits"],[13,"Header"],[13,"ChunkBegin"],[13,"ChunkComplete"],[13,"PixelDimensions"],[13,"AnimationControl"],[13,"FrameControl"],[13,"PartialChunk"],[13,"IoError"],[13,"Format"],[13,"Other"],[13,"CrcMismatch"],[13,"IoError"],[13,"Format"]]},\
"ppv_lite86":{"doc":"","t":[8,8,8,8,8,8,8,8,8,8,16,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,14,14,14,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,10,11,11,10,10,10,11,11,2,2,2,10,10,10,0,6,6,3,3,3,3,3,3,6,6,6,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,19,19,19],"n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","extract","extract","from_lanes","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","x86_64","AVX","AVX2","Avx2Machine","NoA1","NoA2","NoNI","NoS3","NoS4","SSE2","SSE41","SSSE3","SseMachine","YesA1","YesA2","YesNI","YesS3","YesS4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","instance","instance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new128","new128","split128","split128","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","vec128_storage","vec256_storage","vec512_storage"],"q":["ppv_lite86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ppv_lite86::x86_64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","Generate the full set of optimized implementations to take …","Generate only the basic implementations necessary to be …","Generate only the basic implementations necessary to be …","","","Build a multi-lane vector from individual lanes.","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","AVX but not AVX2: only 128-bit integer operations, but use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generic wrapper for unparameterized storage of any of the …","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,3,4,5,3,4,6,6,6,6,6,7,7,7,7,7,7,8,7,7,9,9,9,10,10,10,11,11,11,11,11,11,11,5,12,13,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,14,6,6,15,16,16,6,6,0,0,0,17,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,30,31,32,30,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,30,31,31,32,28,29,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,31,32,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,30,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,[[["u32",0]]],[[["u32",0]]],[[]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["store",8]],[[],["store",8]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullyess3",3]],["yess3",3]],[[["nos3",3]],["nos3",3]],[[["yess4",3]],["yess4",3]],[[["nos4",3]],["nos4",3]],[[["yesa1",3]],["yesa1",3]],[[["noa1",3]],["noa1",3]],[[["yesa2",3]],["yesa2",3]],[[["noa2",3]],["noa2",3]],[[["yesni",3]],["yesni",3]],[[["noni",3]],["noni",3]],[[["ssemachine",3,[["clone",8],["clone",8],["clone",8]]]],["ssemachine",3,[["clone",8],["clone",8],["clone",8]]]],[[["avx2machine",3,[["clone",8]]]],["avx2machine",3,[["clone",8]]]],[[["vec128_storage",19]],["vec128_storage",19]],[[["vec256_storage",19]],["vec256_storage",19]],[[["vec512_storage",19]],["vec512_storage",19]],[[],["vec128_storage",19]],[[],["vec256_storage",19]],[[],["vec512_storage",19]],[[["vec128_storage",19],["vec128_storage",19]],["bool",0]],[[["vec256_storage",19],["vec256_storage",19]],["bool",0]],[[["vec512_storage",19],["vec512_storage",19]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec128_storage",19]],[[]],[[],["vec256_storage",19]],[[]],[[],["ssemachine",3,[["copy",8],["copy",8],["copy",8]]]],[[],["avx2machine",3,[["copy",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec256_storage",19]],[[],["vec512_storage",19]],[[["vec256_storage",19]]],[[["vec512_storage",19]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["vec128_storage",19]],["vec128_storage",19]],null,null,null],"p":[[8,"AndNot"],[8,"BSwap"],[8,"Vec2"],[8,"Vec4"],[8,"MultiLane"],[8,"Machine"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"Vector"],[8,"Vec4Ext"],[8,"Store"],[8,"UnsafeFrom"],[8,"StoreBytes"],[8,"VZip"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"],[19,"vec256_storage"],[19,"vec512_storage"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[1,2,2,0,0,3,0,3,1,0,0,3,2,2,0,3,0,0,0,0,4,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,7,10,6,7,3,8,2,4,1,9,10,6,7,3,8,2,4,1,9,10,9,6,8,2,1,9,9,6,6,10,10,10,10,5,5,6,6,7,3,3,8,8,2,4,4,1,9,9,10,10,5,6,6,6,7,7,3,3,3,3,3,8,2,4,1,9,10,6,6,6,10,9,10,10,10,10,10,10,10,10,10,10,5,6,7,3,8,2,4,1,9,10,6,6,10,10,7,7,7,6,8,4,9,9,9,7,3,8,4,9,10,4,5,3,8,4,9,10,8,8,8,10,10,6,7,3,8,2,4,1,9,10,5,6,3,8,4,9,10,0,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,5,6,7,3,8,2,4,1,9,10,10,10,10,10,10,10,10,10,10,10,7,10,10,11,12,13,14,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["punct",3]],["char",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["literal",3]],[[],["span",3]],[[["char",0]],["literal",3]],[[["tokenstream",3]],["tokenstream",3]],[[["span",3]],["span",3]],[[["tokentree",4]],["tokentree",4]],[[["group",3]],["group",3]],[[["delimiter",4]],["delimiter",4]],[[["punct",3]],["punct",3]],[[["spacing",4]],["spacing",4]],[[["ident",3]],["ident",3]],[[["literal",3]],["literal",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ident",3],["ident",3]],["ordering",4]],[[],["tokenstream",3]],[[["group",3]],["delimiter",4]],[[["delimiter",4],["delimiter",4]],["bool",0]],[[["spacing",4],["spacing",4]],["bool",0]],[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["tokenstream",3],["intoiterator",8]]],[[["tokenstream",3],["intoiterator",8]]],[[["f32",0]],["literal",3]],[[["f32",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["f64",0]],["literal",3]],[[["lexerror",3],["formatter",3]],["result",6]],[[["lexerror",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["tokenstream",3],["formatter",3]],["result",6]],[[["span",3],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["tokentree",4],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["result",6]],[[["delimiter",4],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["punct",3],["formatter",3]],["result",6]],[[["spacing",4],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[["literal",3],["formatter",3]],["result",6]],[[]],[[["tokenstream",3]],["tokenstream",3]],[[["tokentree",4]],["tokenstream",3]],[[]],[[["span",3]],["span",3]],[[]],[[["group",3]],["tokentree",4]],[[["punct",3]],["tokentree",4]],[[["literal",3]],["tokentree",4]],[[["ident",3]],["tokentree",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["tokenstream",3]],[[["intoiterator",8]],["tokenstream",3]],[[["str",0]],["result",4,[["tokenstream",3],["lexerror",3]]]],[[["str",0]],["result",4,[["literal",3],["lexerror",3]]]],[[["ident",3],["",0]]],[[["i128",0]],["literal",3]],[[["i128",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i16",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i32",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i64",0]],["literal",3]],[[["i8",0]],["literal",3]],[[["i8",0]],["literal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenstream",3]],["intoiter",3]],[[["tokenstream",3]],["bool",0]],[[["isize",0]],["literal",3]],[[["isize",0]],["literal",3]],[[["span",3],["span",3]],["option",4,[["span",3]]]],[[["span",3],["span",3]],["span",3]],[[],["span",3]],[[],["tokenstream",3]],[[["delimiter",4],["tokenstream",3]],["group",3]],[[["char",0],["spacing",4]],["punct",3]],[[["str",0],["span",3]],["ident",3]],[[["str",0],["span",3]],["ident",3]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["span",3],["span",3]],["span",3]],[[["tokentree",4],["span",3]]],[[["group",3],["span",3]]],[[["punct",3],["span",3]]],[[["ident",3],["span",3]]],[[["literal",3],["span",3]]],[[["punct",3]],["spacing",4]],[[["lexerror",3]],["span",3]],[[["tokentree",4]],["span",3]],[[["group",3]],["span",3]],[[["punct",3]],["span",3]],[[["ident",3]],["span",3]],[[["literal",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["span",3]],[[["group",3]],["tokenstream",3]],[[["str",0]],["literal",3]],[[["literal",3],["rangebounds",8,[["usize",0]]]],["option",4,[["span",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u128",0]],["literal",3]],[[["u128",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u16",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u32",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u64",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["u8",0]],["literal",3]],[[["span",3]],["span",3]],[[["usize",0]],["literal",3]],[[["usize",0]],["literal",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3]],["intoiter",3]],[[["",0],["",0]]],[[["intoiter",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["intoiter",3]],["option",4,[["tokentree",4]]]],[[["intoiter",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Spacing"],[4,"Delimiter"],[4,"TokenTree"],[3,"Punct"],[3,"LexError"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Ident"],[3,"Literal"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,2,0,3,3,0,0,2,2,3,3,3],"f":[null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],null,[[],["tokenstream",3]],[[],["tokenstream",3]],null,null,[[["",0]],["option",4,[["span",3]]]],[[["",0]],["option",4,[["span",3]]]],[[["",0]],["tokenstream",3]],[[["",0]],["tokenstream",3]],[[["",0],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","t":[18,8,3,8,18,8,8,16,8,11,11,11,0,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,0,5,11,11,0,11,11,11,11,11,0,11,11,5,11,10,11,11,10,11,11,11,11,13,3,3,4,3,3,8,8,13,13,13,3,3,3,3,13,3,4,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,8,8,8,16,3,3,3,3,3,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,8,11,11,10,11,10,11,11,10,10,11,10,10,11,11,0,11,11,11,11,10,10,11,11,11,11,11,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from","from_entropy","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","inner","into","new","next_u32","next_u64","prelude","random","raw_os_error","read","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","source","take_inner","thread_rng","to_string","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","vzip","AllWeightsZero","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","DistString","Distribution","InvalidProbability","InvalidWeight","NoItem","Open01","OpenClosed01","Slice","Standard","TooMany","Uniform","WeightedError","WeightedIndex","append_string","append_string","append_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","ne","ne","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","sample_string","sample_string","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AllWeightsZero","InvalidWeight","NoItem","TooMany","WeightedError","WeightedIndex","alias_method","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","from","from","into","into","ne","new","sample","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_weights","vzip","vzip","Weight","WeightedIndex","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","vzip","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","StdRng","ThreadRng","random","thread_rng","OsRng","StdRng","ThreadRng","adapter","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_rng","from_seed","into","into","into","mock","ne","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ReadError","ReadRng","ReseedingRng","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reseed","source","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","StepRng","borrow","borrow_mut","clone","clone_into","eq","fill_bytes","fmt","from","into","ne","new","next_u32","next_u64","to_owned","try_fill_bytes","try_from","try_into","type_id","vzip","Item","IteratorRandom","SliceChooseIter","SliceRandom","borrow","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","fmt","from","index","into","into_iter","len","next","partial_shuffle","shuffle","size_hint","try_from","try_into","type_id","vzip","IndexVec","IndexVecIntoIter","IndexVecIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","index","into","into","into","into_iter","into_iter","into_iter","into_vec","is_empty","iter","len","next","next","sample","sample_weighted","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributionsrand::distributions::uniform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::weighted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::weighted::alias_method","","","","","","","","","","","","rand::prelude","","","","","","","","","","","rand::rngs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::rngs::adapter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::rngs::mock","","","","","","","","","","","","","","","","","","","","rand::seq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::seq::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","Returns the argument unchanged.","","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Generates a random value using the thread-local random …","Extract the raw OS error code (if this error came from the …","","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","","Unwrap the inner error (<code>std</code> only)","Retrieve the lazily-initialized thread-local random number …","","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","All items in the provided weight collection are zero.","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","<code>String</code> sampler","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Too many weights are provided (length greater than <code>u32::MAX</code>…","Sample values uniformly between two bounds.","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","Append <code>len</code> random chars to <code>string</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","","","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","Generate a <code>String</code> of <code>len</code> random chars","Generate a <code>String</code> of <code>len</code> random chars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","","","","","","","","","","","Weighted index sampling","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","","","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All items in the provided weight collection are zero.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","Too many weights are provided (length greater than <code>u32::MAX</code>…","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new a <code>WeightedIndex</code> <code>Distribution</code> using the values","","","","","","","","","","","Update a subset of weights, without changing the number of …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A random number generator that retrieves randomness from …","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","Wrappers / adapters forming RNGs","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mock random number generator","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ReadRng</code> error type","An RNG that reads random bytes straight from any type …","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ReadRng</code> from a <code>Read</code>.","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …","","","","","Reseed the internal PRNG.","","","","","","","","","","","","","","","","","","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","An iterator over multiple slice elements.","Extension trait on slices, providing random mutation and …","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","Returns the argument unchanged.","Low-level API for sampling indices","Calls <code>U::from(self)</code>.","","","","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place.","","","","","","A vector of indices.","Return type of <code>IndexVec::into_iter</code>.","Return type of <code>IndexVec::iter</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the value at the given <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into an iterator over the indices as a sequence of …","","","Return result as a <code>Vec&lt;usize&gt;</code>. Conversion may or may not …","Returns <code>true</code> if the length is 0.","Iterate over the indices as a sequence of <code>usize</code> values","Returns the number of indices","","","Randomly sample exactly <code>amount</code> distinct indices from …","Randomly sample exactly <code>amount</code> distinct indices from …","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,0,0,2,0,1,1,1,0,3,3,4,1,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,1,1,1,4,4,0,0,1,4,0,3,3,3,3,2,0,1,1,0,1,5,3,3,4,1,1,1,1,6,0,0,0,0,0,0,0,7,6,6,0,0,0,0,6,0,0,0,8,9,10,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,11,7,14,15,9,16,17,10,11,7,14,15,9,16,17,10,11,7,17,11,7,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,17,17,10,11,11,7,12,13,14,15,9,16,17,10,12,18,18,11,17,11,16,12,18,11,13,14,14,15,15,9,16,17,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,18,18,8,8,12,11,7,14,15,9,16,17,10,7,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,0,11,7,12,13,14,15,9,16,17,10,0,0,0,0,19,0,0,0,0,0,0,20,21,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,24,22,23,24,25,22,23,24,25,22,23,24,25,26,22,24,20,17,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,20,17,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,20,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,26,20,22,22,22,22,22,22,22,22,22,22,22,22,24,24,20,22,22,22,22,22,22,22,22,22,22,22,22,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,6,6,6,6,0,0,0,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,27,6,27,27,27,27,6,6,27,6,27,6,27,6,27,27,6,0,0,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,31,30,29,30,31,29,30,31,29,30,31,30,30,29,30,31,0,30,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,0,0,0,32,33,34,32,33,34,32,32,32,33,32,33,34,34,32,33,34,32,33,34,32,33,32,33,32,33,32,32,34,32,34,33,32,33,34,32,33,34,32,33,34,32,33,34,32,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,0,0,0,37,37,36,38,36,38,38,36,36,38,36,36,37,37,0,37,37,37,37,36,36,37,37,37,37,37,0,0,0,39,40,41,39,40,41,39,41,39,41,39,39,40,41,39,39,39,40,41,39,39,40,41,39,40,41,39,39,39,39,40,41,0,0,40,41,39,41,39,40,41,39,40,41,39,40,41,39,40,41],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["option",4,[["nonzerou32",3]]]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[["nonzerou32",3]],["error",3]],[[]],[[["error",3]],["error",3]],[[]],[[],["result",4,[["error",3]]]],[[]],[[["",0]]],[[["",0]]],[[["",0],["f64",0]],["bool",0]],[[["",0],["f64",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0],["u32",0],["u32",0]],["bool",0]],[[["",0],["u32",0],["u32",0]],["bool",0]],[[["error",3]],["error",8]],[[]],[[],["error",3]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],null,[[]],[[["error",3]],["option",4,[["i32",0]]]],[[["rngcore",8]],["result",4,[["usize",0],["error",3]]]],null,[[["",0],["distribution",8]]],[[["",0],["distribution",8]]],[[],["distiter",3]],[[],["distiter",3]],[[["u64",0]]],null,[[["error",3]],["option",4,[["error",8]]]],[[["error",3]],["box",3,[["error",8],["global",3]]]],[[],["threadrng",3]],[[["",0]],["string",3]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["",0],["string",3],["usize",0]]],[[["alphanumeric",3],["",0],["string",3],["usize",0]]],[[["standard",3],["",0],["string",3],["usize",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bernoulli",3]],["bernoulli",3]],[[["bernoullierror",4]],["bernoullierror",4]],[[["openclosed01",3]],["openclosed01",3]],[[["open01",3]],["open01",3]],[[["alphanumeric",3]],["alphanumeric",3]],[[["slice",3,[["clone",8]]]],["slice",3,[["clone",8]]]],[[["uniform",3,[["",26,[["clone",8],["sampleuniform",8]]]]]],["uniform",3,[["",26,[["clone",8],["sampleuniform",8]]]]]],[[["standard",3]],["standard",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bernoulli",3],["bernoulli",3]],["bool",0]],[[["bernoullierror",4],["bernoullierror",4]],["bool",0]],[[["uniform",3,[["",26,[["partialeq",8],["sampleuniform",8]]]]],["uniform",3]],["bool",0]],[[["bernoulli",3],["formatter",3]],["result",6]],[[["bernoullierror",4],["formatter",3]],["result",6]],[[["bernoullierror",4],["formatter",3]],["result",6]],[[["distiter",3,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["distmap",3,[["debug",8],["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["openclosed01",3],["formatter",3]],["result",6]],[[["open01",3],["formatter",3]],["result",6]],[[["alphanumeric",3],["formatter",3]],["result",6]],[[["slice",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniform",3,[["",26,[["debug",8],["sampleuniform",8]]]]],["formatter",3]],["result",6]],[[["standard",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["range",3,[["sampleuniform",8]]]],["uniform",3,[["sampleuniform",8]]]],[[["rangeinclusive",3,[["sampleuniform",8]]]],["uniform",3,[["sampleuniform",8]]]],[[]],[[]],[[["u32",0],["u32",0]],["result",4,[["bernoulli",3],["bernoullierror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["distmap",3]],[[],["distmap",3]],[[["bernoulli",3],["bernoulli",3]],["bool",0]],[[["uniform",3,[["",26,[["partialeq",8],["sampleuniform",8]]]]],["uniform",3]],["bool",0]],[[["f64",0]],["result",4,[["bernoulli",3],["bernoullierror",4]]]],[[],["result",4,[["slice",3],["emptyslice",3]]]],[[["distiter",3]],["option",4]],[[["",0],["",0]]],[[["bernoulli",3],["",0]],["bool",0]],[[["distmap",3],["",0]]],[[["openclosed01",3],["",0]],["f64",0]],[[["openclosed01",3],["",0]],["f32",0]],[[["open01",3],["",0]],["f64",0]],[[["open01",3],["",0]],["f32",0]],[[["alphanumeric",3],["",0]],["u8",0]],[[["slice",3],["",0]],["",0]],[[["uniform",3,[["sampleuniform",8]]],["",0]],["sampleuniform",8]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["u16",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["option",4]],[[["standard",3],["",0]],["wrapping",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["nonzerou32",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["u64",0]],[[["standard",3],["",0]],["u32",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i8",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["usize",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i16",0]],[[["standard",3],["",0]],["i32",0]],[[["standard",3],["",0]],["i64",0]],[[["standard",3],["",0]],["i128",0]],[[["standard",3],["",0]],["isize",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["bool",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["u8",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["u128",0]],[[["standard",3],["",0]],["char",0]],[[["standard",3],["",0]],["f64",0]],[[["standard",3],["",0]],["nonzerou8",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["nonzerousize",3]],[[["standard",3],["",0]],["nonzerou128",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["f32",0]],[[["standard",3],["",0]],["nonzerou64",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["nonzerou16",3]],[[["standard",3],["",0]]],[[],["distiter",3]],[[],["distiter",3]],[[["",0],["",0],["usize",0]],["string",3]],[[["",0],["",0],["usize",0]],["string",3]],[[["distiter",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["uniformint",3,[["clone",8]]]],["uniformint",3,[["clone",8]]]],[[["uniformchar",3]],["uniformchar",3]],[[["uniformfloat",3,[["clone",8]]]],["uniformfloat",3,[["clone",8]]]],[[["uniformduration",3]],["uniformduration",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["uniformint",3,[["partialeq",8]]],["uniformint",3]],["bool",0]],[[["uniformfloat",3,[["partialeq",8]]],["uniformfloat",3]],["bool",0]],[[["uniformint",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniformchar",3],["formatter",3]],["result",6]],[[["uniformfloat",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniformduration",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["uniformint",3,[["partialeq",8]]],["uniformint",3]],["bool",0]],[[["uniformfloat",3,[["partialeq",8]]],["uniformfloat",3]],["bool",0]],[[]],[[],["uniform",3,[["sampleuniform",8]]]],[[],["uniformint",3,[["i32",0]]]],[[],["uniformint",3,[["u8",0]]]],[[],["uniformint",3,[["usize",0]]]],[[],["uniformint",3,[["u16",0]]]],[[],["uniformint",3,[["u64",0]]]],[[],["uniformint",3,[["i128",0]]]],[[],["uniformint",3,[["isize",0]]]],[[],["uniformint",3,[["u32",0]]]],[[],["uniformint",3,[["i64",0]]]],[[],["uniformint",3,[["i8",0]]]],[[],["uniformint",3,[["i16",0]]]],[[],["uniformint",3,[["u128",0]]]],[[],["uniformchar",3]],[[],["uniformfloat",3,[["f32",0]]]],[[],["uniformfloat",3,[["f64",0]]]],[[],["uniformduration",3]],[[]],[[],["uniform",3,[["sampleuniform",8]]]],[[],["uniformint",3,[["u32",0]]]],[[],["uniformint",3,[["i64",0]]]],[[],["uniformint",3,[["i8",0]]]],[[],["uniformint",3,[["u128",0]]]],[[],["uniformint",3,[["i16",0]]]],[[],["uniformint",3,[["usize",0]]]],[[],["uniformint",3,[["u64",0]]]],[[],["uniformint",3,[["isize",0]]]],[[],["uniformint",3,[["i32",0]]]],[[],["uniformint",3,[["u16",0]]]],[[],["uniformint",3,[["u8",0]]]],[[],["uniformint",3,[["i128",0]]]],[[],["uniformchar",3]],[[],["uniformfloat",3,[["f64",0]]]],[[],["uniformfloat",3,[["f32",0]]]],[[],["uniformduration",3]],[[["",0],["",0]]],[[["uniformint",3,[["isize",0]]],["",0]]],[[["uniformint",3,[["u32",0]]],["",0]]],[[["uniformint",3,[["i32",0]]],["",0]]],[[["uniformint",3,[["i64",0]]],["",0]]],[[["uniformint",3,[["i128",0]]],["",0]]],[[["uniformint",3,[["i8",0]]],["",0]]],[[["uniformint",3,[["u128",0]]],["",0]]],[[["uniformint",3,[["i16",0]]],["",0]]],[[["uniformint",3,[["u8",0]]],["",0]]],[[["uniformint",3,[["usize",0]]],["",0]]],[[["uniformint",3,[["u64",0]]],["",0]]],[[["uniformint",3,[["u16",0]]],["",0]]],[[["uniformchar",3],["",0]]],[[["uniformfloat",3,[["f64",0]]],["",0]]],[[["uniformfloat",3,[["f32",0]]],["",0]]],[[["uniformduration",3],["",0]],["duration",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["weightedindex",3,[["",26,[["clone",8],["sampleuniform",8],["partialord",8]]]]]],["weightedindex",3,[["",26,[["clone",8],["sampleuniform",8],["partialord",8]]]]]],[[["weightederror",4]],["weightederror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["weightedindex",3,[["",26,[["partialeq",8],["sampleuniform",8],["partialord",8]]]]],["weightedindex",3]],["bool",0]],[[["weightederror",4],["weightederror",4]],["bool",0]],[[["weightedindex",3,[["",26,[["debug",8],["sampleuniform",8],["partialord",8]]]]],["formatter",3]],["result",6]],[[["weightederror",4],["formatter",3]],["result",6]],[[["weightederror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["weightedindex",3,[["",26,[["partialeq",8],["sampleuniform",8],["partialord",8]]]]],["weightedindex",3]],["bool",0]],[[],["result",4,[["weightedindex",3,[["",26,[["sampleuniform",8],["partialord",8]]]]],["weightederror",4]]]],[[["weightedindex",3],["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["weightedindex",3,[["",26,[["sampleuniform",8],["partialord",8]]]]]],["result",4,[["weightederror",4]]]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["weightedindex",3,[["",26,[["debug",8],["weight",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,[["weight",8]]]],["result",4,[["weightedindex",3,[["weight",8]]],["weightederror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["rngcore",8]],[[["",0]],["rngcore",8]],[[["",0]],["rngcore",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["osrng",3]],["osrng",3]],[[["stdrng",3]],["stdrng",3]],[[["threadrng",3]],["threadrng",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["osrng",3]],[[],["threadrng",3]],[[["stdrng",3],["stdrng",3]],["bool",0]],[[["osrng",3]]],[[["stdrng",3]]],[[["threadrng",3]]],[[["osrng",3],["formatter",3]],["result",4,[["error",3]]]],[[["stdrng",3],["formatter",3]],["result",6]],[[["threadrng",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["rngcore",8]],["result",4,[["stdrng",3],["error",3]]]],[[],["stdrng",3]],[[]],[[]],[[]],null,[[["stdrng",3],["stdrng",3]],["bool",0]],[[["osrng",3]],["u32",0]],[[["stdrng",3]],["u32",0]],[[["threadrng",3]],["u32",0]],[[["osrng",3]],["u64",0]],[[["stdrng",3]],["u64",0]],[[["threadrng",3]],["u64",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["osrng",3]],["result",4,[["error",3]]]],[[["stdrng",3]],["result",4,[["error",3]]]],[[["threadrng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,[[["",0]],["rngcore",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["reseedingrng",3]],["reseedingrng",3]],[[["",0],["",0]]],[[["readrng",3,[["read",8]]]]],[[["reseedingrng",3,[["rngcore",8]]]]],[[["readrng",3,[["debug",8]]],["formatter",3]],["result",6]],[[["readerror",3],["formatter",3]],["result",6]],[[["readerror",3],["formatter",3]],["result",6]],[[["reseedingrng",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["read",8]],["readrng",3,[["read",8]]]],[[["u64",0]],["reseedingrng",3]],[[["readrng",3,[["read",8]]]],["u32",0]],[[["reseedingrng",3,[["rngcore",8]]]],["u32",0]],[[["readrng",3,[["read",8]]]],["u64",0]],[[["reseedingrng",3,[["rngcore",8]]]],["u64",0]],[[["reseedingrng",3]],["result",4,[["error",3]]]],[[["readerror",3]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[["readrng",3,[["read",8]]]],["result",4,[["error",3]]]],[[["reseedingrng",3,[["rngcore",8]]]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["steprng",3]],["steprng",3]],[[["",0],["",0]]],[[["steprng",3],["steprng",3]],["bool",0]],[[["steprng",3]]],[[["steprng",3],["formatter",3]],["result",6]],[[]],[[]],[[["steprng",3],["steprng",3]],["bool",0]],[[["u64",0],["u64",0]],["steprng",3]],[[["steprng",3]],["u32",0]],[[["steprng",3]],["u64",0]],[[["",0]]],[[["steprng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0],["usize",0]],["slicechooseiter",3]],[[["",0],["usize",0]],["vec",3]],[[["",0]],["usize",0]],[[["",0],["",0],["usize",0]],["result",4,[["slicechooseiter",3],["weightederror",4]]]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["result",4,[["weightederror",4]]]],[[["",0],["",0]],["result",4,[["weightederror",4]]]],[[["slicechooseiter",3,[["",26,[["debug",8],["sized",8]]],["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]],["usize",0]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]],["option",4]],[[["",0],["",0],["usize",0]]],[[["",0],["",0]]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["indexvec",4]],["indexvec",4]],[[["indexvecintoiter",4]],["indexvecintoiter",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indexvec",4],["indexvec",4]],["bool",0]],[[["indexvec",4],["formatter",3]],["result",6]],[[["indexveciter",4],["formatter",3]],["result",6]],[[["indexvecintoiter",4],["formatter",3]],["result",6]],[[["vec",3,[["usize",0]]]],["indexvec",4]],[[["vec",3,[["u32",0]]]],["indexvec",4]],[[]],[[]],[[]],[[["indexvec",4],["usize",0]],["usize",0]],[[]],[[]],[[]],[[["indexvec",4]],["indexvecintoiter",4]],[[]],[[]],[[["indexvec",4]],["vec",3,[["usize",0]]]],[[["indexvec",4]],["bool",0]],[[["indexvec",4]],["indexveciter",4]],[[["indexvec",4]],["usize",0]],[[["indexveciter",4]],["option",4,[["usize",0]]]],[[["indexvecintoiter",4]],["option",4]],[[["",0],["usize",0],["usize",0]],["indexvec",4]],[[["",0],["usize",0],["usize",0]],["result",4,[["indexvec",4],["weightederror",4]]]],[[["indexveciter",4]]],[[["indexvecintoiter",4]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Error"],[8,"SeedableRng"],[8,"Rng"],[8,"RngCore"],[8,"Fill"],[4,"WeightedError"],[4,"BernoulliError"],[8,"DistString"],[3,"Alphanumeric"],[3,"Standard"],[3,"Bernoulli"],[3,"DistIter"],[3,"DistMap"],[3,"OpenClosed01"],[3,"Open01"],[3,"Slice"],[3,"Uniform"],[8,"Distribution"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[8,"SampleRange"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReseedingRng"],[3,"ReadRng"],[3,"ReadError"],[3,"StepRng"],[8,"SliceRandom"],[3,"SliceChooseIter"],[8,"IteratorRandom"],[4,"IndexVec"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","t":[3,3,3,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","ne","ne","ne","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["rand_chacha","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,4,1,5,2,6,3,4,1,5,2,6,3,4,1,5,2,6,3,4,1,5,2,6,3,4,1,5,2,6,3,1,2,3,4,1,5,2,6,3,4,1,1,5,2,2,6,3,3,4,1,5,2,6,3,4,5,6,1,2,3,1,2,3,1,2,3,4,1,5,2,6,3,4,5,6,1,2,3,1,2,3,0,1,2,3,1,2,3,4,1,5,2,6,3,1,2,3,4,1,5,2,6,3,4,1,5,2,6,3,4,1,5,2,6,3,4,1,5,2,6,3],"f":[null,null,null,null,null,null,null,null,[[["",0]],["rngcore",8]],[[["",0]],["rngcore",8]],[[["",0]],["rngcore",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["chacha20core",3]],["chacha20core",3]],[[["chacha20rng",3]],["chacha20rng",3]],[[["chacha12core",3]],["chacha12core",3]],[[["chacha12rng",3]],["chacha12rng",3]],[[["chacha8core",3]],["chacha8core",3]],[[["chacha8rng",3]],["chacha8rng",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["chacha20core",3],["chacha20core",3]],["bool",0]],[[["chacha20rng",3],["chacha20rng",3]],["bool",0]],[[["chacha12core",3],["chacha12core",3]],["bool",0]],[[["chacha12rng",3],["chacha12rng",3]],["bool",0]],[[["chacha8core",3],["chacha8core",3]],["bool",0]],[[["chacha8rng",3],["chacha8rng",3]],["bool",0]],[[["chacha20rng",3]]],[[["chacha12rng",3]]],[[["chacha8rng",3]]],[[["chacha20core",3],["formatter",3]],["result",6]],[[["chacha20rng",3],["formatter",3]],["result",6]],[[["chacha12core",3],["formatter",3]],["result",6]],[[["chacha12rng",3],["formatter",3]],["result",6]],[[["chacha8core",3],["formatter",3]],["result",6]],[[["chacha8rng",3],["formatter",3]],["result",6]],[[]],[[]],[[["chacha20core",3]],["chacha20rng",3]],[[]],[[["chacha12core",3]],["chacha12rng",3]],[[]],[[]],[[]],[[["chacha8core",3]],["chacha8rng",3]],[[],["chacha20core",3]],[[],["chacha20rng",3]],[[],["chacha12core",3]],[[],["chacha12rng",3]],[[],["chacha8core",3]],[[],["chacha8rng",3]],[[["chacha20core",3]]],[[["chacha12core",3]]],[[["chacha8core",3]]],[[["chacha20rng",3]]],[[["chacha12rng",3]]],[[["chacha8rng",3]]],[[["chacha20rng",3]],["u64",0]],[[["chacha12rng",3]],["u64",0]],[[["chacha8rng",3]],["u64",0]],[[["chacha20rng",3]],["u128",0]],[[["chacha12rng",3]],["u128",0]],[[["chacha8rng",3]],["u128",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chacha20core",3],["chacha20core",3]],["bool",0]],[[["chacha12core",3],["chacha12core",3]],["bool",0]],[[["chacha8core",3],["chacha8core",3]],["bool",0]],[[["chacha20rng",3]],["u32",0]],[[["chacha12rng",3]],["u32",0]],[[["chacha8rng",3]],["u32",0]],[[["chacha20rng",3]],["u64",0]],[[["chacha12rng",3]],["u64",0]],[[["chacha8rng",3]],["u64",0]],null,[[["chacha20rng",3],["u64",0]]],[[["chacha12rng",3],["u64",0]]],[[["chacha8rng",3],["u64",0]]],[[["chacha20rng",3],["u128",0]]],[[["chacha12rng",3],["u128",0]]],[[["chacha8rng",3],["u128",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["chacha20rng",3]],["result",4,[["error",3]]]],[[["chacha12rng",3]],["result",4,[["error",3]]]],[[["chacha8rng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha20Core"],[3,"ChaCha12Core"],[3,"ChaCha8Core"]]},\
"rand_core":{"doc":"Random number generation traits","t":[18,8,8,3,18,3,8,16,8,10,11,0,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,0,11,10,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,8,16,16,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5],"n":["CUSTOM_START","CryptoRng","CryptoRngCore","Error","INTERNAL_START","OsRng","RngCore","Seed","SeedableRng","as_rngcore","as_rngcore","block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","default","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from","from_entropy","from_rng","from_seed","impls","inner","into","into","le","new","next_u32","next_u32","next_u64","next_u64","raw_os_error","read","seed_from_u64","source","take_inner","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":["rand_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::impls","","","","","","rand_core::le",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","An extension trait that is automatically implemented for …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","A random number generator that retrieves randomness from …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Upcast to an <code>RngCore</code> trait object.","","The <code>BlockRngCore</code> trait and implementation helpers","","","","","","","Retrieve the error code, if any.","","Fill <code>dest</code> with random data.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","","Return the next random <code>u64</code>.","","Extract the raw OS error code (if this error came from the …","","Create a new PRNG using a <code>u64</code> seed.","","Unwrap the inner error (<code>std</code> only)","","","Fill <code>dest</code> entirely with random data.","","","","","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[1,0,0,0,1,0,0,2,0,3,4,0,1,4,1,4,4,4,1,4,5,4,1,1,4,1,1,1,4,2,2,2,0,1,1,4,0,1,5,4,5,4,1,5,2,1,1,4,1,5,4,1,4,1,4,1,4,0,0,0,6,6,7,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,6,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["rngcore",8]],[[["",0]],["rngcore",8]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["osrng",3]],["osrng",3]],[[["",0],["",0]]],[[["error",3]],["option",4,[["nonzerou32",3]]]],[[],["osrng",3]],[[["",0]]],[[["osrng",3]]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["osrng",3],["formatter",3]],["result",6]],[[["nonzerou32",3]],["error",3]],[[["error",3]],["error",3]],[[]],[[]],[[]],[[["rngcore",8]],["result",4,[["error",3]]]],[[]],null,[[["error",3]],["error",8]],[[]],[[]],null,[[],["error",3]],[[["",0]],["u32",0]],[[["osrng",3]],["u32",0]],[[["",0]],["u64",0]],[[["osrng",3]],["u64",0]],[[["error",3]],["option",4,[["i32",0]]]],[[["rngcore",8]],["result",4,[["usize",0],["error",3]]]],[[["u64",0]]],[[["error",3]],["option",4,[["error",8]]]],[[["error",3]],["box",3,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["result",4,[["error",3]]]],[[["osrng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["rngcore",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["blockrng",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],["blockrng",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],[[["blockrng64",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],["blockrng64",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["blockrng",3,[["blockrngcore",8]]]]],[[["blockrng64",3,[["blockrngcore",8]]]]],[[["blockrng",3,[["",26,[["blockrngcore",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["blockrng64",3,[["",26,[["blockrngcore",8],["debug",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["rngcore",8]],["result",4,[["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]],["error",3]]]],[[["rngcore",8]],["result",4,[["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]],["error",3]]]],[[],["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[],["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["",0]]],[[["blockrng",3,[["blockrngcore",8]]],["usize",0]]],[[["blockrng64",3,[["blockrngcore",8]]],["usize",0]]],[[["blockrng",3,[["blockrngcore",8]]]],["usize",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["usize",0]],[[]],[[]],[[["blockrngcore",8]],["blockrng",3,[["blockrngcore",8]]]],[[["blockrngcore",8]],["blockrng64",3,[["blockrngcore",8]]]],[[["blockrng",3,[["blockrngcore",8]]]],["u32",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["u32",0]],[[["blockrng",3,[["blockrngcore",8]]]],["u64",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["u64",0]],[[["blockrng",3,[["blockrngcore",8]]]]],[[["blockrng64",3,[["blockrngcore",8]]]]],[[["u64",0]],["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["u64",0]],["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["",0]]],[[["",0]]],[[["blockrng",3,[["blockrngcore",8]]]],["result",4,[["error",3]]]],[[["blockrng64",3,[["blockrngcore",8]]]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[]],[[]]],"p":[[3,"Error"],[8,"SeedableRng"],[8,"CryptoRngCore"],[3,"OsRng"],[8,"RngCore"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","t":[3,3,3,3,3,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,0,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,5,5,11,11,11,11,11,11,0,11,0,0,0,0,11,5,11,5,11,0,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,8,8,3,3,3,3,8,8,8,16,16,16,16,16,16,16,16,16,16,16,3,13,3,3,3,3,3,3,3,3,8,8,8,8,8,3,3,3,3,13,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,10,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,8,16,16,16,16,16,8,8,8,16,16,16,8,8,5,5,5,10,10,10,11,10,11,10,10,10,10,11,11,10,10,10,10,10,10,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,8,2,2,2,2,2,2,2,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,8,8,3,3,3,3,3,3,3,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,8,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BroadcastContext","FnContext","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","array","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","broadcast","broadcast","build","build_global","build_scoped","collections","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","install","into","into","into","into","into","into","into","into","iter","join","join","join_context","max_num_threads","migrated","name","new","new","num_threads","num_threads","option","panic_handler","prelude","range","range_inclusive","result","run","scope","scope","scope_fifo","scope_fifo","slice","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","start_handler","str","string","thread_name","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","IntoIter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","opt_len","to_owned","try_from","try_into","type_id","with_producer","binary_heap","btree_map","btree_set","hash_map","hash_set","linked_list","vec_deque","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","len","len","len","len","opt_len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","Chain","Chunks","Cloned","Copied","Either","Empty","Enumerate","Filter","FilterMap","FlatMap","FlatMapIter","Flatten","FlattenIter","Fold","FoldChunks","FoldChunksWith","FoldWith","FromParallelIterator","IndexedParallelIterator","Inspect","Interleave","InterleaveShortest","Intersperse","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Item","Item","Iter","Iter","Iter","Iter","Iter","IterBridge","Left","Map","MapInit","MapWith","MaxLen","MinLen","MultiZip","Once","PanicFuse","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","Positions","Repeat","RepeatN","Rev","Right","Skip","Split","StepBy","Take","TryFold","TryFoldWith","Update","WhileSome","Zip","ZipEq","all","all","any","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","collect","collect","collect_into_vec","copied","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","either","either_into","either_with","empty","enumerate","eq","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","filter","filter_map","find","find_any","find_first","find_last","find_map","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each","for_each_init","for_each_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_par_iter","ge","gt","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inspect","interleave","interleave_shortest","intersperse","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","is_left","is_right","last","le","left","left_and_then","left_or","left_or_default","left_or_else","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","lt","map","map","map_init","map_left","map_right","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","ne","next","next_back","nth","once","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","panic_fuse","par_bridge","par_drain","par_drain","par_extend","par_extend","par_iter","par_iter_mut","partial_cmp","partial_cmp","partition","partition","partition_map","plumbing","poll","position","position_any","position_first","position_last","positions","product","reduce","reduce_with","repeat","repeatn","rev","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","skip","split","step_by","sum","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_fold","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reduce","try_reduce_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_left","unwrap_right","unzip","unzip_into_vecs","update","while_some","with_max_len","with_min_len","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","zip","zip","zip_eq","0","0","Consumer","Folder","Folder","IntoIter","Item","Item","Output","Producer","ProducerCallback","Reducer","Reducer","Result","Result","UnindexedConsumer","UnindexedProducer","bridge","bridge_producer_consumer","bridge_unindexed","callback","complete","consume","consume_iter","fold_with","fold_with","full","full","into_folder","into_iter","max_len","min_len","reduce","split","split_at","split_at","split_off_left","to_reducer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","FromParallelIterator","IndexedParallelIterator","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","ParallelSlice","ParallelSliceMut","ParallelString","par_bridge","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","Chunks","ChunksExact","ChunksExactMut","ChunksMut","Iter","IterMut","ParallelSlice","ParallelSliceMut","RChunks","RChunksExact","RChunksExactMut","RChunksMut","Split","SplitMut","Windows","as_parallel_slice","as_parallel_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_remainder","into_remainder","len","len","len","len","len","len","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","par_chunks","par_chunks_exact","par_chunks_exact_mut","par_chunks_mut","par_rchunks","par_rchunks_exact","par_rchunks_exact_mut","par_rchunks_mut","par_sort","par_sort_by","par_sort_by_cached_key","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split","par_split_mut","par_windows","remainder","remainder","remainder","remainder","take_remainder","take_remainder","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","Bytes","CharIndices","Chars","EncodeUtf16","Lines","MatchIndices","Matches","ParallelString","Split","SplitTerminator","SplitWhitespace","as_parallel_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","par_bytes","par_char_indices","par_chars","par_encode_utf16","par_lines","par_match_indices","par_matches","par_split","par_split_terminator","par_split_whitespace","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","borrow","borrow_mut","deref","deref_mut","drive_unindexed","drop","drop","fmt","from","init","into","into_par_iter","try_from","try_into","type_id","Drain","IntoIter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_producer","with_producer"],"q":["rayonrayon::array","","","","","","","","","","","","","","","","","","","","","","rayon::collections","","","","","","","rayon::collections::binary_heap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::vec_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iterrayon::iter::Either","","rayon::iter::plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::prelude","","","","","","","","","","","","","","rayon::range","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::slicerayon::str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::string","","","","","","","","","","","","","","","","rayon::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides context to a closure called by <code>broadcast</code>.","Provides the calling context to a closure called by …","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","Parallel iterator types for arrays (<code>[T; N]</code>)","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","Parallel iterator types for standard collections","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Traits for writing parallel programs using an …","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Parallel iterator types for options","Normally, whenever Rayon catches a panic, it tries to …","The rayon prelude imports the various <code>ParallelIterator</code> …","Parallel iterator types for ranges, the type for values …","Parallel iterator types for inclusive ranges, the type for …","Parallel iterator types for results","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","Parallel iterator types for slices","","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Sets a callback to be invoked on thread start.","Parallel iterator types for strings","This module contains the parallel iterator types for owned …","Sets a closure which takes a thread index and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)","Parallel iterator that moves out of an array.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","This module contains the parallel iterator types for heaps …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","Draining parallel iterator that moves out of a binary heap,","Parallel iterator over a binary heap","Parallel iterator over an immutable reference to a binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree map","Parallel iterator over an immutable reference to a B-Tree …","Parallel iterator over a mutable reference to a B-Tree map","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree set","Parallel iterator over an immutable reference to a B-Tree …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Draining parallel iterator that moves out of a hash map, …","Parallel iterator over a hash map","Parallel iterator over an immutable reference to a hash map","Parallel iterator over a mutable reference to a hash map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves out of a hash set, …","Parallel iterator over a hash set","Parallel iterator over an immutable reference to a hash set","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a linked list","Parallel iterator over an immutable reference to a linked …","Parallel iterator over a mutable reference to a linked list","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator over a double-ended queue","Parallel iterator over an immutable reference to a …","Parallel iterator over a mutable reference to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …","<code>Chunks</code> is an iterator that groups elements of an …","<code>Cloned</code> is an iterator that clones the elements of an …","<code>Copied</code> is an iterator that copies the elements of an …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Iterator adaptor for the <code>empty()</code> function.","<code>Enumerate</code> is an iterator that returns the current count …","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …","<code>FlatMap</code> maps each element to a parallel iterator, then …","<code>FlatMapIter</code> maps each element to a serial iterator, then …","<code>Flatten</code> turns each element to a parallel iterator, then …","<code>FlattenIter</code> turns each element to a serial iterator, then …","<code>Fold</code> is an iterator that applies a function over an …","<code>FoldChunks</code> is an iterator that groups elements of an …","<code>FoldChunksWith</code> is an iterator that groups elements of an …","<code>FoldWith</code> is an iterator that applies a function over an …","<code>FromParallelIterator</code> implements the creation of a …","An iterator that supports “random access” to its data, …","<code>Inspect</code> is an iterator that calls a function with a …","<code>Interleave</code> is an iterator that interleaves elements of …","<code>InterleaveShortest</code> is an iterator that works similarly to …","<code>Intersperse</code> is an iterator that inserts a particular item …","<code>IntoParallelIterator</code> implements the conversion to a …","<code>IntoParallelRefIterator</code> implements the conversion to a …","<code>IntoParallelRefMutIterator</code> implements the conversion to a …","The type of item that the parallel iterator will produce.","The type of item that the parallel iterator will produce. …","The type of item that will be produced; this is typically …","The type of item that this parallel iterator produces. For …","The type of item that the parallel iterator will produce. …","The type of item that the parallel iterator will produce. …","The parallel iterator type that will be created.","The type of the parallel iterator that will be returned.","The type of iterator that will be created.","The draining parallel iterator type that will be created.","The draining parallel iterator type that will be created.","<code>IterBridge</code> is a parallel iterator that wraps a sequential …","A value of type <code>L</code>.","<code>Map</code> is an iterator that transforms the elements of an …","<code>MapInit</code> is an iterator that transforms the elements of an …","<code>MapWith</code> is an iterator that transforms the elements of an …","<code>MaxLen</code> is an iterator that imposes a maximum length on …","<code>MinLen</code> is an iterator that imposes a minimum length on …","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …","Iterator adaptor for the <code>once()</code> function.","<code>PanicFuse</code> is an adaptor that wraps an iterator with a fuse …","Conversion trait to convert an <code>Iterator</code> to a …","<code>ParallelDrainFull</code> creates a parallel iterator that moves …","<code>ParallelDrainRange</code> creates a parallel iterator that moves …","<code>ParallelExtend</code> extends an existing collection with items …","Parallel version of the standard iterator trait.","<code>Positions</code> takes a predicate <code>predicate</code> and filters out …","Iterator adaptor for the <code>repeat()</code> function.","Iterator adaptor for the <code>repeatn()</code> function.","<code>Rev</code> is an iterator that produces elements in reverse …","A value of type <code>R</code>.","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …","<code>Split</code> is a parallel iterator using arbitrary data and a …","<code>StepBy</code> is an iterator that skips <code>n</code> elements between each …","<code>Take</code> is an iterator that iterates over the first <code>n</code> …","<code>TryFold</code> is an iterator that applies a function over an …","<code>TryFoldWith</code> is an iterator that applies a function over an …","<code>Update</code> is an iterator that mutates the elements of an …","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …","An <code>IndexedParallelIterator</code> that iterates over two parallel …","","Tests that every item in the parallel iterator matches the …","","Searches for <strong>some</strong> item in the parallel iterator that …","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes two iterators and creates a new iterator over both.","Splits an iterator up into fixed-size chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an iterator which clones all of its elements.  …","","Lexicographically compares the elements of this …","","Creates a fresh collection containing all the elements …","Collects the results of the iterator into the specified …","Creates an iterator which copies all of its elements.  …","","Counts the number of items in this parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","Creates a parallel iterator that produces nothing.","Yields an index along with each item.","","Determines if the elements of this <code>ParallelIterator</code> are …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Applies <code>filter_op</code> to each item of this iterator, producing …","Applies <code>filter_op</code> to each item of this iterator to get an …","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies <code>map_op</code> to each item of this iterator to get nested …","Applies <code>map_op</code> to each item of this iterator to get nested …","An adaptor that flattens parallel-iterable <code>Item</code>s into one …","An adaptor that flattens serial-iterable <code>Item</code>s into one …","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel fold is similar to sequential fold except that the","Splits an iterator into fixed-size chunks, performing a …","Splits an iterator into fixed-size chunks, performing a …","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …","","Executes <code>OP</code> on each item produced by the iterator, in …","Executes <code>OP</code> on a value returned by <code>init</code> with each item …","Executes <code>OP</code> on the given <code>init</code> value with each item …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an instance of the collection from the parallel …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies <code>inspect_op</code> to a reference to each item of this …","Interleaves elements of this iterator and the other given …","Interleaves elements of this iterator and the other given …","Intersperses clones of an element between items of this …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Converts <code>self</code> into a parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Determines if the elements of this <code>ParallelIterator</code> are …","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Produces an exact count of how many items this iterator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines if the elements of this <code>ParallelIterator</code> are …","Map <code>f</code> over the contained value and return the result in the","Applies <code>map_op</code> to each item of this iterator, producing a …","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Applies <code>map_op</code> to the given <code>init</code> value with each item of …","Computes the maximum of all the items in the iterator. If …","Computes the maximum of all the items in the iterator with …","Computes the item that yields the maximum value for the …","Computes the minimum of all the items in the iterator. If …","Computes the minimum of all the items in the iterator with …","Computes the item that yields the minimum value for the …","","Determines if the elements of this <code>ParallelIterator</code> are …","","","","Creates a parallel iterator that produces an element …","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps an iterator with a fuse in case of panics, to halt …","Creates a bridge from this type to a <code>ParallelIterator</code>.","Returns a draining parallel iterator over an entire …","Returns a draining parallel iterator over a range of the …","Extends an instance of the collection with the elements …","","Converts <code>self</code> into a parallel iterator.","Creates the parallel iterator from <code>self</code>.","","Lexicographically compares the elements of this …","","Partitions the items of a parallel iterator into a pair of …","Partitions and maps the items of a parallel iterator into …","Traits and functions used to implement parallel iteration. …","","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Searches for items in the parallel iterator that match the …","Multiplies all the items in the iterator.","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using <code>op</code>. …","Creates a parallel iterator that endlessly repeats <code>elt</code> (by …","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code> …","Produces a new iterator with the elements of this iterator …","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","Creates an iterator that skips the first <code>n</code> elements.","The <code>split</code> function takes arbitrary data and a closure that …","Creates an iterator that steps by the given amount","Sums up the items in the iterator.","Creates an iterator that yields the first <code>n</code> elements.","Takes only <code>n</code> repeats of the element, similar to the general","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a fallible parallel fold.","Performs a fallible parallel fold with a cloneable <code>init</code> …","Executes a fallible <code>OP</code> on each item produced by the …","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reduces the items in the iterator into one item using a …","Reduces the items in the iterator into one item using a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the left value","Returns the right value","Unzips the items of a parallel iterator into a pair of …","Unzips the results of the iterator into the specified …","Mutates each item of this iterator before yielding it.","Creates an iterator over the <code>Some</code> items of this iterator, …","Sets the maximum length of iterators desired to process in …","Sets the minimum length of iterators desired to process in …","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from …","Iterates tuples, repeating the element with items from …","The same as <code>Zip</code>, but requires that both iterators have the …","","","A consumer is effectively a generalized “fold” …","The <code>Folder</code> trait encapsulates the standard fold operation. …","The type of folder that this consumer can be converted …","The type of iterator we will become.","The type of item that will be produced by this producer …","The type of item returned by this producer.","The type of value returned by this callback. Analogous to …","A <code>Producer</code> is effectively a “splittable <code>IntoIterator</code>”. …","The <code>ProducerCallback</code> trait is a kind of generic closure, …","The reducer is the final step of a <code>Consumer</code> – after a …","The type of reducer that is produced if this consumer is …","The type of result that this consumer will ultimately …","The type of result that will ultimately be produced by the …","A stateless consumer can be freely copied. These consumers …","A variant on <code>Producer</code> which does not know its exact length …","This helper function is used to “connect” a parallel …","This helper function is used to “connect” a producer …","A variant of <code>bridge_producer_consumer</code> where the producer …","Invokes the callback with the given producer as argument. …","Finish consuming items, produce final result.","Consume next item and return new sequential state.","Consume items from the iterator until full, and return new …","Iterate the producer, feeding each element to <code>folder</code>, and …","Iterate the producer, feeding each element to <code>folder</code>, and …","Hint whether this <code>Consumer</code> would like to stop processing …","Hint whether this <code>Folder</code> would like to stop processing …","Convert the consumer into a folder that can consume items …","Convert <code>self</code> into an iterator; at this point, no more …","The maximum number of items that we will process …","The minimum number of items that we will process …","Reduce two final results into one; this is executed after a","Split midway into a new producer if possible, otherwise …","Split into two producers; one produces items <code>0..index</code>, the …","Divide the consumer into two consumers, one processing …","Splits off a “left” consumer and returns it. The <code>self</code> …","Creates a reducer that can be used to combine the results …","A parallel iterator over the value in <code>Some</code> variant of an …","A parallel iterator over a reference to the <code>Some</code> variant …","A parallel iterator over a mutable reference to the <code>Some</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion trait to convert an <code>Iterator</code> to a …","","","","","","","","Creates a bridge from this type to a <code>ParallelIterator</code>.","Parallel iterator over a range, implemented for all …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over an inclusive range, implemented for …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over a result","Parallel iterator over an immutable reference to a result","Parallel iterator over a mutable reference to a result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over immutable items in a slice","Parallel iterator over mutable items in a slice","Parallel extensions for slices.","Parallel extensions for mutable slices.","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over slices separated by a predicate","Parallel iterator over mutable slices separated by a …","Parallel iterator over immutable overlapping windows of a …","Returns a plain slice, which is used to implement the rest …","Returns a plain mutable slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Sorts the slice in parallel.","Sorts the slice in parallel with a comparator function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel, but might not preserve the …","Sorts the slice in parallel with a comparator function, …","Sorts the slice in parallel with a key extraction …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over all contiguous windows of …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over the bytes of a string","Parallel iterator over the characters of a string, with …","Parallel iterator over the characters of a string","Parallel iterator over a string encoded as UTF-16","Parallel iterator over lines in a string","Parallel iterator over substrings that match a pattern, …","Parallel iterator over substrings that match a pattern","Parallel extensions for strings.","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by a …","Parallel iterator over substrings separated by whitespace","Returns a plain string slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns a parallel iterator over the bytes of a string.","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over a string encoded as …","Returns a parallel iterator over the lines of a string, …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings separated by a …","Returns a parallel iterator over substrings terminated by a","Returns a parallel iterator over the sub-slices of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range of …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator that moves out of a vector.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,6,0,5,6,6,6,0,0,5,5,0,5,6,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,7,1,2,3,4,5,5,6,7,8,6,1,2,3,4,5,6,7,7,8,1,2,3,4,5,6,7,8,0,5,0,5,1,2,1,2,3,4,5,6,7,8,5,1,2,3,4,5,6,7,8,0,0,5,0,0,8,2,5,6,1,6,0,6,0,0,0,0,2,0,5,0,5,0,7,0,3,5,0,3,4,5,0,4,5,6,2,6,6,0,0,6,7,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,10,11,12,10,11,12,10,11,10,11,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,12,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,10,11,10,11,12,10,11,12,10,11,12,10,11,12,0,0,0,13,14,15,13,14,15,14,14,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,13,14,15,14,13,14,15,13,14,15,13,14,15,0,0,16,17,16,17,17,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,17,16,17,16,17,16,17,0,0,0,0,18,19,20,21,18,19,20,21,19,19,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,19,18,19,20,21,18,19,20,21,18,19,20,21,0,0,0,22,23,24,22,23,24,23,23,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,23,22,23,24,22,23,24,22,23,24,0,0,0,25,26,27,25,26,27,25,26,25,26,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,25,26,27,25,26,27,25,26,27,0,0,0,0,28,29,30,31,28,29,30,31,28,29,28,29,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,28,29,28,29,30,31,28,29,30,31,28,29,30,31,28,29,30,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,34,35,36,37,32,33,34,36,37,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,38,35,38,35,38,38,38,38,38,38,38,38,38,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,35,82,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,35,38,82,38,35,82,35,38,35,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,38,39,40,41,42,43,44,53,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,64,64,64,64,64,65,66,70,71,72,74,75,78,80,81,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,64,64,64,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,38,0,82,38,82,38,38,38,38,38,38,38,38,35,35,38,35,35,35,38,35,35,35,35,35,35,35,38,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,35,82,82,35,38,35,35,35,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,82,82,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,35,82,82,35,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,38,38,32,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,38,82,38,38,38,38,38,82,38,38,39,40,41,42,43,44,53,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,64,64,64,64,64,65,66,70,71,72,74,75,78,80,81,82,38,35,35,38,38,35,35,35,35,35,35,35,38,82,38,38,38,0,38,39,35,40,41,42,43,44,53,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,64,64,64,64,64,65,66,70,71,72,74,75,78,80,81,35,84,36,37,85,38,33,34,38,82,38,35,35,0,38,38,82,82,82,82,35,35,35,0,0,82,38,38,38,38,38,38,38,38,82,0,82,35,82,69,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,35,35,35,35,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,35,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,38,38,35,82,35,35,82,82,82,38,39,40,41,42,43,44,53,54,55,56,57,58,59,60,61,62,63,64,64,64,64,64,64,64,64,64,64,64,64,65,66,70,71,72,74,75,78,80,81,82,69,82,86,87,0,0,88,89,89,90,91,0,0,0,88,88,92,0,0,0,0,0,91,92,92,92,90,89,88,92,88,89,89,89,93,90,89,88,94,94,0,0,0,95,96,97,95,96,97,95,96,95,96,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,95,96,97,95,96,97,95,96,97,95,96,97,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,0,100,101,102,100,101,102,100,101,100,101,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,100,101,102,100,101,102,100,101,102,100,101,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,107,108,111,112,115,116,105,107,108,111,112,115,116,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,110,114,107,108,109,110,111,112,113,114,115,116,117,107,108,109,110,111,112,113,114,115,116,117,103,103,104,104,103,103,104,104,104,104,104,104,104,104,104,103,104,103,108,110,112,114,110,114,105,107,108,111,112,115,116,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,105,106,107,108,109,110,111,112,113,114,115,116,117,107,108,109,110,111,112,113,114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,118,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,118,118,118,118,118,118,118,118,118,118,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,119,120,121,122,123,124,125,126,127,128,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,130,131,130,131,130,130,130,131,130,131,130,131,130,131,130,131,131,130,131,130,131,130,131,130,131,130,131,130,131,130,131,130,130,131,130,131,130,131,130,131],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[],["vec",3,[["global",3]]]],[[["threadpool",3]],["vec",3,[["global",3]]]],[[["threadpoolbuilder",3]],["result",4,[["threadpool",3],["threadpoolbuilderror",3]]]],[[["threadpoolbuilder",3]],["result",4,[["threadpoolbuilderror",3]]]],[[["threadpoolbuilder",3,[["defaultspawn",3]]]],["result",4,[["threadpoolbuilderror",3]]]],null,[[],["usize",0]],[[["threadpool",3]],["usize",0]],[[["threadpool",3]],["option",4,[["bool",0]]]],[[],["option",4,[["usize",0]]]],[[["threadpool",3]],["option",4,[["usize",0]]]],[[],["threadpoolbuilder",3,[["defaultspawn",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["threadpoolbuilderror",3]],["str",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["threadpool",3]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["broadcastcontext",3],["formatter",3]],["result",4,[["error",3]]]],[[["threadbuilder",3],["formatter",3]],["result",4,[["error",3]]]],[[["scope",3],["formatter",3]],["result",4,[["error",3]]]],[[["scopefifo",3],["formatter",3]],["result",4,[["error",3]]]],[[["threadpool",3],["formatter",3]],["result",4,[["error",3]]]],[[["threadpoolbuilder",3],["formatter",3]],["result",4,[["error",3]]]],[[["threadpoolbuilderror",3],["formatter",3]],["result",4,[["error",3]]]],[[["threadpoolbuilderror",3],["formatter",3]],["result",4,[["error",3]]]],[[["fncontext",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadpool",3]]],[[]],[[["threadpool",3]]],[[["broadcastcontext",3]],["usize",0]],[[["threadbuilder",3]],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["threadpool",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["threadpool",3]]],[[]],[[],["usize",0]],[[["fncontext",3]],["bool",0]],[[["threadbuilder",3]],["option",4,[["str",0]]]],[[["configuration",3]],["result",4,[["threadpool",3],["box",3,[["error",8],["global",3]]]]]],[[],["threadpoolbuilder",3,[["defaultspawn",3]]]],[[["broadcastcontext",3]],["usize",0]],[[["threadpoolbuilder",3],["usize",0]],["threadpoolbuilder",3]],null,[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],null,null,null,null,[[["threadbuilder",3]]],[[]],[[["threadpool",3]]],[[]],[[["threadpool",3]]],null,[[["threadpoolbuilderror",3]],["option",4,[["error",8]]]],[[]],[[["scope",3]]],[[["threadpool",3]]],[[]],[[["scope",3]]],[[["scopefifo",3]]],[[["threadpool",3]]],[[]],[[["scopefifo",3]]],[[["threadpool",3]]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3,[["customspawn",3]]]],[[["threadbuilder",3]],["option",4,[["usize",0]]]],[[["threadpoolbuilder",3],["usize",0]],["threadpoolbuilder",3]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],null,null,[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["intoiter",3,[["send",8]]]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["usize",0]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["intoiter",3,[["send",8]]]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["ord",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["ord",8],["send",8]]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]],["iter",3,[["",26,[["ord",8],["sync",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]]],[[["intoiter",3,[["",26,[["debug",8],["ord",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["ord",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["drain",3,[["",26,[["debug",8],["ord",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]],["usize",0]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]],["usize",0]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]],["usize",0]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]],["option",4,[["usize",0]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]],["option",4,[["usize",0]]]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]]],[[["drain",3,[["",26,[["ord",8],["send",8]]]]]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["",26,[["ord",8],["sync",8]]],["sync",8]]]],["iter",3,[["",26,[["ord",8],["sync",8]]],["sync",8]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]],["send",8]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]],["sync",8]]]]],[[["itermut",3,[["",26,[["ord",8],["sync",8]]],["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["ord",8],["send",8]]],["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["ord",8],["sync",8]]],["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["ord",8],["sync",8]]],["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]],["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]],["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["",26,[["ord",8],["sync",8]]],["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]],["iter",3,[["",26,[["ord",8],["sync",8]]]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["ord",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["ord",8],["sync",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["",26,[["ord",8],["send",8]]]]]],["option",4,[["usize",0]]]],[[["iter",3,[["",26,[["ord",8],["sync",8]]]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["sync",8]]]],["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["sync",8]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["",26,[["hash",8],["eq",8],["send",8]]],["send",8]]]]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["sync",8]]]]],[[["itermut",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["send",8]]]]],[[["drain",3,[["",26,[["hash",8],["eq",8],["send",8]]],["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["hash",8],["eq",8],["send",8]]],["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["hash",8],["eq",8],["sync",8]]],["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["hash",8],["eq",8],["sync",8]]],["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["drain",3,[["",26,[["debug",8],["hash",8],["eq",8],["send",8]]],["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["",26,[["hash",8],["eq",8],["send",8]]],["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["",26,[["hash",8],["eq",8],["sync",8]]],["send",8]]]],["option",4,[["usize",0]]]],[[["drain",3,[["",26,[["hash",8],["eq",8],["send",8]]],["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]]]]],["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["",26,[["hash",8],["eq",8],["send",8]]]]]]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]]]]]],[[["drain",3,[["",26,[["hash",8],["eq",8],["send",8]]]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["hash",8],["eq",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["hash",8],["eq",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["drain",3,[["",26,[["debug",8],["hash",8],["eq",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["",26,[["hash",8],["eq",8],["send",8]]]]]],["option",4,[["usize",0]]]],[[["iter",3,[["",26,[["hash",8],["eq",8],["sync",8]]]]]],["option",4,[["usize",0]]]],[[["drain",3,[["",26,[["hash",8],["eq",8],["send",8]]]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["iter",3,[["sync",8]]]],["iter",3,[["sync",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["iter",3,[["sync",8]]]],["iter",3,[["sync",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["drain",3,[["send",8]]]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["drain",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["usize",0]],[[["iter",3,[["sync",8]]]],["usize",0]],[[["itermut",3,[["send",8]]]],["usize",0]],[[["drain",3,[["send",8]]]],["usize",0]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["drain",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["either",4]],["bool",0]],[[],["bool",0]],[[["either",4]],["bool",0]],[[],["bool",0]],[[["either",4]],["str",0]],[[["either",4]]],[[["either",4]],["",0]],[[["either",4]],["either",4]],[[["pin",3,[["either",4]]]],["either",4,[["pin",3],["pin",3]]]],[[["pin",3,[["either",4]]]],["either",4,[["pin",3],["pin",3]]]],[[["either",4]],["",0]],[[["either",4]]],[[["either",4]],["str",0]],[[["either",4]],["eitherchain",3]],[[["usize",0]],["chunks",3]],[[["either",4]],["either",4]],[[["empty",3,[["send",8]]]],["empty",3,[["send",8]]]],[[["chain",3,[["clone",8],["clone",8]]]],["chain",3,[["clone",8],["clone",8]]]],[[["chunks",3,[["clone",8]]]],["chunks",3,[["clone",8]]]],[[["cloned",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["cloned",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["copied",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["copied",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["enumerate",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["enumerate",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["filter",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["filter",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["filtermap",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["filtermap",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["flatmap",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["flatmap",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["flatmapiter",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["flatmapiter",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["flatten",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["flatten",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["flatteniter",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["flatteniter",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["fold",3,[["clone",8],["clone",8],["clone",8]]]],["fold",3,[["clone",8],["clone",8],["clone",8]]]],[[["foldwith",3,[["clone",8],["clone",8],["clone",8]]]],["foldwith",3,[["clone",8],["clone",8],["clone",8]]]],[[["foldchunks",3,[["clone",8],["clone",8],["clone",8]]]],["foldchunks",3,[["clone",8],["clone",8],["clone",8]]]],[[["foldchunkswith",3,[["clone",8],["clone",8],["clone",8]]]],["foldchunkswith",3,[["clone",8],["clone",8],["clone",8]]]],[[["inspect",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["inspect",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["interleave",3,[["clone",8],["clone",8]]]],["interleave",3,[["clone",8],["clone",8]]]],[[["interleaveshortest",3,[["clone",8],["clone",8]]]],["interleaveshortest",3,[["clone",8],["clone",8]]]],[[["intersperse",3,[["clone",8]]]],["intersperse",3,[["clone",8]]]],[[["minlen",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["minlen",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["maxlen",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["maxlen",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["map",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["map",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["mapwith",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8],["clone",8]]]],["mapwith",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8],["clone",8]]]],[[["mapinit",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8],["clone",8]]]],["mapinit",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8],["clone",8]]]],[[["multizip",3,[["clone",8]]]],["multizip",3,[["clone",8]]]],[[["once",3,[["",26,[["clone",8],["send",8]]]]]],["once",3,[["",26,[["clone",8],["send",8]]]]]],[[["panicfuse",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["panicfuse",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["iterbridge",3,[["clone",8]]]],["iterbridge",3,[["clone",8]]]],[[["positions",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["clone",8]]]],["positions",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["clone",8]]]],[[["repeat",3,[["",26,[["clone",8],["clone",8],["send",8]]]]]],["repeat",3,[["",26,[["clone",8],["clone",8],["send",8]]]]]],[[["repeatn",3,[["",26,[["clone",8],["clone",8],["send",8]]]]]],["repeatn",3,[["",26,[["clone",8],["clone",8],["send",8]]]]]],[[["rev",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["rev",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["skip",3,[["clone",8]]]],["skip",3,[["clone",8]]]],[[["split",3,[["clone",8],["clone",8]]]],["split",3,[["clone",8],["clone",8]]]],[[["stepby",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["stepby",3,[["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["take",3,[["clone",8]]]],["take",3,[["clone",8]]]],[[["tryfold",3,[["clone",8],["clone",8],["clone",8],["clone",8]]]],["tryfold",3,[["clone",8],["clone",8],["clone",8],["clone",8]]]],[[["tryfoldwith",3,[["clone",8],["",26,[["clone",8],["try",8]]],["clone",8]]]],["tryfoldwith",3,[["clone",8],["",26,[["clone",8],["try",8]]],["clone",8]]]],[[["update",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],["update",3,[["",26,[["clone",8],["paralleliterator",8]]],["clone",8]]]],[[["whilesome",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],["whilesome",3,[["",26,[["clone",8],["paralleliterator",8]]]]]],[[["zip",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["zip",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["zipeq",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["",26,[["clone",8],["indexedparalleliterator",8]]]]]],["zipeq",3,[["",26,[["clone",8],["indexedparalleliterator",8]]],["",26,[["clone",8],["indexedparalleliterator",8]]]]]],[[["either",4],["eithercloned",3]],[[["either",4],["either",4]],["ordering",4]],[[],["ordering",4]],[[["either",4]]],[[]],[[["vec",3]]],[[],["copied",3]],[[["either",4]],["usize",0]],[[],["usize",0]],[[["usize",0]],["",0]],[[["either",4]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["either",4]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["consumer",8]]],[[["either",4]]],[[["empty",3,[["send",8]]]]],[[["chain",3]]],[[["chunks",3]]],[[["cloned",3]]],[[["copied",3]]],[[["enumerate",3],["consumer",8]]],[[["foldchunks",3]]],[[["foldchunkswith",3]]],[[["inspect",3]]],[[["interleave",3]]],[[["interleaveshortest",3]]],[[["intersperse",3]]],[[["minlen",3],["consumer",8]]],[[["maxlen",3],["consumer",8]]],[[["map",3]]],[[["mapwith",3]]],[[["mapinit",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["once",3,[["send",8]]]]],[[["panicfuse",3]]],[[["repeatn",3]]],[[["rev",3],["consumer",8]]],[[["skip",3],["consumer",8]]],[[["stepby",3],["consumer",8]]],[[["take",3],["consumer",8]]],[[["update",3]]],[[["zip",3]]],[[["zipeq",3]]],[[]],[[["either",4]]],[[["empty",3,[["send",8]]]]],[[["chain",3]]],[[["chunks",3]]],[[["cloned",3]]],[[["copied",3]]],[[["enumerate",3]]],[[["filter",3]]],[[["filtermap",3]]],[[["flatmap",3]]],[[["flatmapiter",3]]],[[["flatten",3]]],[[["flatteniter",3]]],[[["fold",3]]],[[["foldwith",3]]],[[["foldchunks",3]]],[[["foldchunkswith",3]]],[[["inspect",3]]],[[["interleave",3]]],[[["interleaveshortest",3]]],[[["intersperse",3]]],[[["minlen",3]]],[[["maxlen",3]]],[[["map",3]]],[[["mapwith",3]]],[[["mapinit",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["once",3,[["send",8]]]]],[[["panicfuse",3]]],[[["iterbridge",3,[["",26,[["iterator",8],["send",8]]]]]]],[[["positions",3]]],[[["repeat",3]]],[[["repeatn",3]]],[[["rev",3]]],[[["skip",3]]],[[["split",3]]],[[["stepby",3]]],[[["take",3]]],[[["tryfold",3]]],[[["tryfoldwith",3]]],[[["update",3]]],[[["whilesome",3]]],[[["zip",3]]],[[["zipeq",3]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[],["empty",3,[["send",8]]]],[[],["enumerate",3]],[[["either",4],["either",4]],["bool",0]],[[],["bool",0]],[[["either",4],["str",0]]],[[["either",4],["str",0]]],[[["either",4]]],[[["either",4,[["result",4],["result",4]]]],["result",4,[["either",4]]]],[[["either",4]]],[[["either",4,[["option",4],["option",4]]]],["option",4,[["either",4]]]],[[["either",4,[["result",4],["result",4]]]],["result",4,[["either",4]]]],[[["either",4]]],[[],["filter",3]],[[],["filtermap",3]],[[["either",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["either",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["flatmap",3]],[[],["flatmapiter",3]],[[],["flatten",3]],[[],["flatteniter",3]],[[["either",4]],["either",4]],[[["either",4],["formatter",3]],["result",4,[["error",3]]]],[[["either",4],["formatter",3]],["result",4,[["error",3]]]],[[["empty",3,[["send",8]]],["formatter",3]],["result",6]],[[["chain",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["chunks",3,[["debug",8]]],["formatter",3]],["result",6]],[[["cloned",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["copied",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["enumerate",3,[["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["filter",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["filtermap",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["flatmap",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["flatmapiter",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["flatten",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["flatteniter",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["fold",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["foldwith",3,[["",26,[["paralleliterator",8],["debug",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["foldchunks",3,[["",26,[["indexedparalleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["foldchunkswith",3,[["",26,[["indexedparalleliterator",8],["debug",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["inspect",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["interleave",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["interleaveshortest",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["intersperse",3,[["debug",8]]],["formatter",3]],["result",6]],[[["minlen",3,[["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["maxlen",3,[["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["map",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["mapwith",3,[["",26,[["paralleliterator",8],["debug",8]]],["debug",8]]],["formatter",3]],["result",6]],[[["mapinit",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["multizip",3,[["debug",8]]],["formatter",3]],["result",6]],[[["once",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["panicfuse",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["iterbridge",3,[["debug",8]]],["formatter",3]],["result",6]],[[["positions",3,[["",26,[["indexedparalleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["repeat",3,[["",26,[["debug",8],["clone",8],["send",8]]]]],["formatter",3]],["result",6]],[[["repeatn",3,[["",26,[["debug",8],["clone",8],["send",8]]]]],["formatter",3]],["result",6]],[[["rev",3,[["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["skip",3,[["debug",8]]],["formatter",3]],["result",6]],[[["split",3,[["debug",8]]],["formatter",3]],["result",6]],[[["stepby",3,[["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["take",3,[["debug",8]]],["formatter",3]],["result",6]],[[["tryfold",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["tryfoldwith",3,[["",26,[["paralleliterator",8],["debug",8]]],["try",8]]],["formatter",3]],["result",6]],[[["update",3,[["",26,[["paralleliterator",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["whilesome",3,[["",26,[["debug",8],["paralleliterator",8]]]]],["formatter",3]],["result",6]],[[["zip",3,[["",26,[["debug",8],["indexedparalleliterator",8]]],["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["zipeq",3,[["",26,[["debug",8],["indexedparalleliterator",8]]],["",26,[["debug",8],["indexedparalleliterator",8]]]]],["formatter",3]],["result",6]],[[["either",4]]],[[],["fold",3]],[[["usize",0]],["foldchunks",3]],[[["usize",0]],["foldchunkswith",3]],[[],["foldwith",3]],[[["either",4]]],[[]],[[]],[[]],[[["result",4]],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[["either",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["inspect",3]],[[],["interleave",3]],[[],["interleaveshortest",3]],[[],["intersperse",3]],[[]],[[["either",4]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["either",4]]],[[]],[[["either",4]],["either",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["either",4]],["bool",0]],[[["either",4]],["bool",0]],[[["either",4]],["option",4]],[[],["bool",0]],[[["either",4]],["option",4]],[[["either",4]],["either",4]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["",0]],["usize",0]],[[["either",4]],["usize",0]],[[["either",4]],["usize",0]],[[["empty",3,[["send",8]]]],["usize",0]],[[["chain",3]],["usize",0]],[[["chunks",3]],["usize",0]],[[["cloned",3]],["usize",0]],[[["copied",3]],["usize",0]],[[["enumerate",3]],["usize",0]],[[["foldchunks",3]],["usize",0]],[[["foldchunkswith",3]],["usize",0]],[[["inspect",3]],["usize",0]],[[["interleave",3]],["usize",0]],[[["interleaveshortest",3]],["usize",0]],[[["intersperse",3]],["usize",0]],[[["minlen",3]],["usize",0]],[[["maxlen",3]],["usize",0]],[[["map",3]],["usize",0]],[[["mapwith",3]],["usize",0]],[[["mapinit",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["multizip",3]],["usize",0]],[[["once",3,[["send",8]]]],["usize",0]],[[["panicfuse",3]],["usize",0]],[[["repeatn",3]],["usize",0]],[[["rev",3]],["usize",0]],[[["skip",3]],["usize",0]],[[["stepby",3]],["usize",0]],[[["take",3]],["usize",0]],[[["update",3]],["usize",0]],[[["zip",3]],["usize",0]],[[["zipeq",3]],["usize",0]],[[],["bool",0]],[[["either",4]],["either",4]],[[],["map",3]],[[],["mapinit",3]],[[["either",4]],["either",4]],[[["either",4]],["either",4]],[[],["mapwith",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["either",4],["either",4]],["bool",0]],[[],["bool",0]],[[["either",4]],["option",4]],[[["either",4]],["option",4]],[[["either",4],["usize",0]],["option",4]],[[["send",8]],["once",3,[["send",8]]]],[[["either",4]],["option",4,[["usize",0]]]],[[["empty",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[["chain",3]],["option",4,[["usize",0]]]],[[["chunks",3]],["option",4,[["usize",0]]]],[[["cloned",3]],["option",4,[["usize",0]]]],[[["copied",3]],["option",4,[["usize",0]]]],[[["enumerate",3]],["option",4,[["usize",0]]]],[[["foldchunks",3]],["option",4,[["usize",0]]]],[[["foldchunkswith",3]],["option",4,[["usize",0]]]],[[["inspect",3]],["option",4,[["usize",0]]]],[[["interleave",3]],["option",4,[["usize",0]]]],[[["interleaveshortest",3]],["option",4,[["usize",0]]]],[[["intersperse",3]],["option",4,[["usize",0]]]],[[["minlen",3]],["option",4,[["usize",0]]]],[[["maxlen",3]],["option",4,[["usize",0]]]],[[["map",3]],["option",4,[["usize",0]]]],[[["mapwith",3]],["option",4,[["usize",0]]]],[[["mapinit",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["multizip",3]],["option",4,[["usize",0]]]],[[["once",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["panicfuse",3]],["option",4,[["usize",0]]]],[[["repeatn",3]],["option",4,[["usize",0]]]],[[["rev",3]],["option",4,[["usize",0]]]],[[["skip",3]],["option",4,[["usize",0]]]],[[["stepby",3]],["option",4,[["usize",0]]]],[[["take",3]],["option",4,[["usize",0]]]],[[["update",3]],["option",4,[["usize",0]]]],[[["zip",3]],["option",4,[["usize",0]]]],[[["zipeq",3]],["option",4,[["usize",0]]]],[[],["panicfuse",3]],[[],["iterbridge",3]],[[]],[[["rangebounds",8]]],[[["",0]]],[[["either",4]]],[[["",0]]],[[["",0]]],[[["either",4],["either",4]],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[["either",4]]],[[]],[[]],null,[[["pin",3,[["either",4]]],["context",3]],["poll",4]],[[["either",4]],["option",4,[["usize",0]]]],[[],["option",4,[["usize",0]]]],[[],["option",4,[["usize",0]]]],[[],["option",4,[["usize",0]]]],[[],["positions",3]],[[]],[[]],[[],["option",4]],[[["",26,[["clone",8],["send",8]]]],["repeat",3,[["",26,[["clone",8],["send",8]]]]]],[[["",26,[["clone",8],["send",8]]],["usize",0]],["repeatn",3,[["",26,[["clone",8],["send",8]]]]]],[[],["rev",3]],[[["either",4]],["option",4]],[[["either",4]]],[[["either",4]],["option",4]],[[["either",4]],["either",4]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["either",4]]],[[["usize",0]],["skip",3]],[[],["split",3]],[[["usize",0]],["stepby",3]],[[]],[[["usize",0]],["take",3]],[[["repeat",3],["usize",0]],["repeatnstring",3]],[[],["tryfold",3]],[[],["tryfoldwith",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["option",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["either",4]]],[[["either",4]]],[[]],[[["vec",3],["vec",3]]],[[],["update",3]],[[],["whilesome",3]],[[["usize",0]],["maxlen",3]],[[["usize",0]],["minlen",3]],[[["producercallback",8]]],[[["either",4]]],[[["empty",3,[["send",8]]]]],[[["chain",3]]],[[["chunks",3]]],[[["cloned",3]]],[[["copied",3]]],[[["enumerate",3]]],[[["foldchunks",3]]],[[["foldchunkswith",3]]],[[["inspect",3]]],[[["interleave",3]]],[[["interleaveshortest",3]]],[[["intersperse",3]]],[[["minlen",3]]],[[["maxlen",3]]],[[["map",3]]],[[["mapwith",3]]],[[["mapinit",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["multizip",3]]],[[["once",3,[["send",8]]]]],[[["panicfuse",3]]],[[["repeatn",3]]],[[["rev",3]]],[[["skip",3]]],[[["stepby",3]]],[[["take",3]]],[[["update",3]]],[[["zip",3]]],[[["zipeq",3]]],[[],["zip",3]],[[["repeat",3]],["zip",3,[["repeatn",3]]]],[[],["zipeq",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[]],[[]],[[["usize",0]]],[[["usize",0]]],[[["",0]]],[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["iter",3,[["sync",8]]]],["iter",3,[["sync",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["usize",0]],[[["iter",3,[["sync",8]]]],["usize",0]],[[["itermut",3,[["send",8]]]],["usize",0]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["iterbridge",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["clone",8]]]],["iter",3,[["clone",8]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["iter",3,[["char",0]]]]],[[["iter",3,[["indexedrangeinteger",8]]]]],[[["iter",3,[["char",0]]]]],[[["iter",3,[["rangeinteger",8]]]]],[[["usize",0]]],[[["iter",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[["iter",3,[["char",0]]]],["usize",0]],[[["iter",3,[["indexedrangeinteger",8]]]],["usize",0]],[[["iter",3,[["char",0]]]],["option",4,[["usize",0]]]],[[["iter",3,[["rangeinteger",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["iter",3,[["char",0]]]]],[[["iter",3,[["indexedrangeinteger",8]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["iter",3,[["clone",8]]]],["iter",3,[["clone",8]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["iter",3,[["indexedrangeinteger",8]]]]],[[["iter",3,[["char",0]]]]],[[["iter",3,[["rangeinteger",8]]]]],[[["iter",3,[["char",0]]]]],[[["usize",0]]],[[["iter",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[["iter",3,[["indexedrangeinteger",8]]]],["usize",0]],[[["iter",3,[["char",0]]]],["usize",0]],[[["iter",3,[["rangeinteger",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["char",0]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["iter",3,[["indexedrangeinteger",8]]]]],[[["iter",3,[["char",0]]]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["iter",3,[["sync",8]]]],["iter",3,[["sync",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["usize",0]],[[["iter",3,[["sync",8]]]],["usize",0]],[[["itermut",3,[["send",8]]]],["usize",0]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["intoiter",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["split",3,[["clone",8]]]],["split",3,[["clone",8]]]],[[["chunks",3,[["sync",8]]]],["chunks",3,[["sync",8]]]],[[["chunksexact",3,[["sync",8]]]],["chunksexact",3,[["sync",8]]]],[[["rchunks",3,[["sync",8]]]],["rchunks",3,[["sync",8]]]],[[["rchunksexact",3,[["sync",8]]]],["rchunksexact",3,[["sync",8]]]],[[["iter",3,[["sync",8]]]],["iter",3,[["sync",8]]]],[[["windows",3,[["sync",8]]]],["windows",3,[["sync",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["chunks",3,[["sync",8]]]]],[[["chunksexact",3,[["sync",8]]]]],[[["chunksmut",3,[["send",8]]]]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunks",3,[["sync",8]]]]],[[["rchunksexact",3,[["sync",8]]]]],[[["rchunksmut",3,[["send",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["windows",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["split",3]]],[[["splitmut",3]]],[[["chunks",3,[["sync",8]]]]],[[["chunksexact",3,[["sync",8]]]]],[[["chunksmut",3,[["send",8]]]]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunks",3,[["sync",8]]]]],[[["rchunksexact",3,[["sync",8]]]]],[[["rchunksmut",3,[["send",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["windows",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["split",3,[["debug",8]]],["formatter",3]],["result",6]],[[["splitmut",3,[["debug",8]]],["formatter",3]],["result",6]],[[["chunks",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["chunksexact",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["chunksmut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["chunksexactmut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["rchunks",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["rchunksexact",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["rchunksmut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["rchunksexactmut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["iter",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["windows",3,[["",26,[["debug",8],["sync",8]]]]],["formatter",3]],["result",6]],[[["itermut",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["chunks",3,[["sync",8]]]],["usize",0]],[[["chunksexact",3,[["sync",8]]]],["usize",0]],[[["chunksmut",3,[["send",8]]]],["usize",0]],[[["chunksexactmut",3,[["send",8]]]],["usize",0]],[[["rchunks",3,[["sync",8]]]],["usize",0]],[[["rchunksexact",3,[["sync",8]]]],["usize",0]],[[["rchunksmut",3,[["send",8]]]],["usize",0]],[[["rchunksexactmut",3,[["send",8]]]],["usize",0]],[[["iter",3,[["sync",8]]]],["usize",0]],[[["windows",3,[["sync",8]]]],["usize",0]],[[["itermut",3,[["send",8]]]],["usize",0]],[[["chunks",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["chunksexact",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["chunksmut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["chunksexactmut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["rchunks",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["rchunksexact",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["rchunksmut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["rchunksexactmut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["iter",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["windows",3,[["sync",8]]]],["option",4,[["usize",0]]]],[[["itermut",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0],["usize",0]],["chunks",3]],[[["",0],["usize",0]],["chunksexact",3]],[[["",0],["usize",0]],["chunksexactmut",3]],[[["",0],["usize",0]],["chunksmut",3]],[[["",0],["usize",0]],["rchunks",3]],[[["",0],["usize",0]],["rchunksexact",3]],[[["",0],["usize",0]],["rchunksexactmut",3]],[[["",0],["usize",0]],["rchunksmut",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["split",3]],[[["",0]],["splitmut",3]],[[["",0],["usize",0]],["windows",3]],[[["chunksexact",3,[["sync",8]]]]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunksexact",3,[["sync",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["chunks",3,[["sync",8]]]]],[[["chunksexact",3,[["sync",8]]]]],[[["chunksmut",3,[["send",8]]]]],[[["chunksexactmut",3,[["send",8]]]]],[[["rchunks",3,[["sync",8]]]]],[[["rchunksexact",3,[["sync",8]]]]],[[["rchunksmut",3,[["send",8]]]]],[[["rchunksexactmut",3,[["send",8]]]]],[[["iter",3,[["sync",8]]]]],[[["windows",3,[["sync",8]]]]],[[["itermut",3,[["send",8]]]]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["chars",3]],["chars",3]],[[["charindices",3]],["charindices",3]],[[["bytes",3]],["bytes",3]],[[["encodeutf16",3]],["encodeutf16",3]],[[["split",3,[["",26,[["clone",8],["pattern",8]]]]]],["split",3,[["",26,[["clone",8],["pattern",8]]]]]],[[["splitterminator",3,[["",26,[["clone",8],["pattern",8]]]]]],["splitterminator",3,[["",26,[["clone",8],["pattern",8]]]]]],[[["lines",3]],["lines",3]],[[["splitwhitespace",3]],["splitwhitespace",3]],[[["matches",3,[["",26,[["clone",8],["pattern",8]]]]]],["matches",3,[["",26,[["clone",8],["pattern",8]]]]]],[[["matchindices",3,[["",26,[["clone",8],["pattern",8]]]]]],["matchindices",3,[["",26,[["clone",8],["pattern",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["chars",3]]],[[["charindices",3]]],[[["bytes",3]]],[[["encodeutf16",3]]],[[["split",3,[["pattern",8]]]]],[[["splitterminator",3,[["pattern",8]]]]],[[["lines",3]]],[[["splitwhitespace",3]]],[[["matches",3,[["pattern",8]]]]],[[["matchindices",3,[["pattern",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["chars",3],["formatter",3]],["result",6]],[[["charindices",3],["formatter",3]],["result",6]],[[["bytes",3],["formatter",3]],["result",6]],[[["encodeutf16",3],["formatter",3]],["result",6]],[[["split",3,[["",26,[["debug",8],["pattern",8]]]]],["formatter",3]],["result",6]],[[["splitterminator",3,[["",26,[["debug",8],["pattern",8]]]]],["formatter",3]],["result",6]],[[["lines",3],["formatter",3]],["result",6]],[[["splitwhitespace",3],["formatter",3]],["result",6]],[[["matches",3,[["",26,[["debug",8],["pattern",8]]]]],["formatter",3]],["result",6]],[[["matchindices",3,[["",26,[["debug",8],["pattern",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bytes",3]],[[["",0]],["charindices",3]],[[["",0]],["chars",3]],[[["",0]],["encodeutf16",3]],[[["",0]],["lines",3]],[[["",0],["pattern",8]],["matchindices",3,[["pattern",8]]]],[[["",0],["pattern",8]],["matches",3,[["pattern",8]]]],[[["",0],["pattern",8]],["split",3,[["pattern",8]]]],[[["",0],["pattern",8]],["splitterminator",3,[["pattern",8]]]],[[["",0]],["splitwhitespace",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["drain",3]]],[[["drain",3]]],[[["usize",0]]],[[["drain",3],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],["intoiter",3,[["",26,[["clone",8],["send",8]]]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["intoiter",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]],[[["intoiter",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["drain",3,[["send",8]]]]],[[["intoiter",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[["drain",3,[["",26,[["debug",8],["send",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["intoiter",3,[["send",8]]]],["usize",0]],[[["drain",3,[["send",8]]]],["usize",0]],[[["intoiter",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["drain",3,[["send",8]]]],["option",4,[["usize",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["intoiter",3,[["send",8]]]]],[[["drain",3,[["send",8]]]]]],"p":[[3,"BroadcastContext"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"FnContext"],[3,"IntoIter"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[4,"Either"],[3,"Empty"],[3,"Chain"],[3,"Chunks"],[3,"Cloned"],[3,"Copied"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"FoldChunks"],[3,"FoldChunksWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MinLen"],[3,"MaxLen"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"Repeat"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"Split"],[3,"StepBy"],[3,"Take"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelBridge"],[8,"ParallelExtend"],[13,"Left"],[13,"Right"],[8,"Consumer"],[8,"Producer"],[8,"UnindexedProducer"],[8,"ProducerCallback"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"Split"],[3,"SplitMut"],[3,"Chunks"],[3,"ChunksExact"],[3,"ChunksMut"],[3,"ChunksExactMut"],[3,"RChunks"],[3,"RChunksExact"],[3,"RChunksMut"],[3,"RChunksExactMut"],[3,"Iter"],[3,"Windows"],[3,"IterMut"],[8,"ParallelString"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"]]},\
"rayon_core":{"doc":"Rayon-core houses the core stable APIs of Rayon.","tn":["BroadcastContext","Configuration","FnContext","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","breadth_first","broadcast","broadcast","build","build","build_global","build_scoped","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","exit_handler","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","join","join","join_context","max_num_threads","migrated","name","new","new","new","num_threads","num_threads","num_threads","panic_handler","panic_handler","run","scope","scope","scope_fifo","scope_fifo","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","stack_size","start_handler","start_handler","thread_name","thread_name","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["rayon_cored":["Provides context to a closure called by <code>broadcast</code>.","Contains the rayon thread pool configuration. Use …","Provides the calling context to a closure called by …","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","","","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread, indicates whether …","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","Creates and return a valid rayon thread pool …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.","Normally, whenever Rayon catches a panic, it tries to …","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.","Sets a callback to be invoked on thread start.","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.","Sets a closure which takes a thread index and returns the …","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,6,8,0,5,6,8,6,6,0,5,0,5,0,5,6,8,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,7,1,2,3,4,5,5,6,7,8,9,6,8,1,2,3,4,5,6,7,7,8,9,1,2,3,4,5,6,7,8,9,0,5,0,5,1,2,1,2,3,4,5,6,7,8,9,0,5,1,2,3,4,5,6,7,8,9,0,5,0,0,9,2,5,6,8,1,6,8,6,8,2,0,5,0,5,7,0,3,5,0,3,4,5,0,4,5,6,2,6,8,6,8,6,8,7,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["configuration",3]],["configuration",3]],[[],["vec",3]],[[["threadpool",3]],["vec",3]],[[["threadpoolbuilder",3]],["result",4,[["threadpool",3],["threadpoolbuilderror",3]]]],[[["configuration",3]],["result",4,[["threadpool",3],["box",3,[["error",8]]]]]],[[["threadpoolbuilder",3]],["result",4,[["threadpoolbuilderror",3]]]],[[["threadpoolbuilder",3]],["result",4,[["threadpoolbuilderror",3]]]],[[],["usize",0]],[[["threadpool",3]],["usize",0]],[[],["option",4,[["bool",0]]]],[[["threadpool",3]],["option",4,[["bool",0]]]],[[],["option",4,[["usize",0]]]],[[["threadpool",3]],["option",4,[["usize",0]]]],[[],["threadpoolbuilder",3]],[[],["configuration",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["threadpoolbuilderror",3]],["str",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["threadpool",3]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["configuration",3]],["configuration",3]],[[["broadcastcontext",3],["formatter",3]],["result",6]],[[["threadbuilder",3],["formatter",3]],["result",6]],[[["scope",3],["formatter",3]],["result",6]],[[["scopefifo",3],["formatter",3]],["result",6]],[[["threadpool",3],["formatter",3]],["result",6]],[[["threadpoolbuilder",3],["formatter",3]],["result",6]],[[["threadpoolbuilderror",3],["formatter",3]],["result",6]],[[["threadpoolbuilderror",3],["formatter",3]],["result",6]],[[["configuration",3],["formatter",3]],["result",6]],[[["fncontext",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadpool",3]]],[[]],[[["threadpool",3]]],[[["broadcastcontext",3]],["usize",0]],[[["threadbuilder",3]],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["configuration",3]],["result",4,[["box",3,[["error",8]]]]]],[[["threadpool",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["threadpool",3]]],[[]],[[],["usize",0]],[[["fncontext",3]],["bool",0]],[[["threadbuilder",3]],["option",4,[["str",0]]]],[[["configuration",3]],["result",4,[["threadpool",3],["box",3,[["error",8]]]]]],[[],["threadpoolbuilder",3]],[[],["configuration",3]],[[["broadcastcontext",3]],["usize",0]],[[["threadpoolbuilder",3],["usize",0]],["threadpoolbuilder",3]],[[["configuration",3],["usize",0]],["configuration",3]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["configuration",3]],["configuration",3]],[[["threadbuilder",3]]],[[]],[[["threadpool",3]]],[[]],[[["threadpool",3]]],[[["threadpoolbuilderror",3]],["option",4,[["error",8]]]],[[]],[[["scope",3]]],[[["threadpool",3]]],[[]],[[["scope",3]]],[[["scopefifo",3]]],[[["threadpool",3]]],[[]],[[["scopefifo",3]]],[[["threadpool",3]]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3,[["customspawn",3]]]],[[["threadbuilder",3]],["option",4,[["usize",0]]]],[[["threadpoolbuilder",3],["usize",0]],["threadpoolbuilder",3]],[[["configuration",3],["usize",0]],["configuration",3]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["configuration",3]],["configuration",3]],[[["threadpoolbuilder",3]],["threadpoolbuilder",3]],[[["configuration",3]],["configuration",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"BroadcastContext"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"Configuration"],[3,"FnContext"]]},\
"read_color":{"doc":"A simple library for reading hex colors.","t":[5,5,5,5,5,5],"n":["char_to_hex","hex","hex_pair","rgb","rgb_maybe_a","rgba"],"q":["read_color","","","","",""],"d":["Converts a character into a u8 value.","Reads a hex value from an iterator of characters.","Reads a pair of hex values, joining them in value range …","Reads RGB colors from iterator of characters.","Reads RGB with optional alpha from iterator of characters.","Reads RGBA colors from iterator of characters."],"i":[0,0,0,0,0,0],"f":[[[["char",0]],["option",4,[["u8",0]]]],[[["chars",3]],["option",4,[["u8",0]]]],[[["chars",3]],["option",4,[["u8",0]]]],[[["chars",3]],["option",4]],[[["chars",3]],["option",4]],[[["chars",3]],["option",4]]],"p":[]},\
"rusttype":{"doc":"RustType is a pure Rust alternative to libraries like …","t":[12,4,3,3,3,3,8,3,8,13,3,3,3,13,3,3,3,3,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,10,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,12,12,12,12,12],"n":["0","Font","Glyph","GlyphId","GlyphIter","HMetrics","IntoGlyphId","LayoutIter","OutlineBuilder","Owned","Point","PositionedGlyph","Rect","Ref","Scale","ScaledGlyph","VMetrics","Vector","add","add","add","advance_width","ascent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_outline","build_outline","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","curve_to","default","default","default","descent","div","div","draw","eq","eq","eq","eq","eq","eq","eq","exact_bounding_box","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyph","glyph_count","glyphs_for","h_metrics","hash","hash","hash","hash","height","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_glyph_id","into_glyph_id","into_iter","into_iter","into_unpositioned","into_unscaled","layout","left_side_bearing","line_gap","line_to","max","min","move_to","mul","mul","mul","ne","ne","ne","ne","ne","ne","ne","next","next","pair_kerning","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pixel_bounding_box","point","position","positioned","quad_to","scale","scale","scale_for_pixel_height","scaled","set_position","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes_and_index","try_from_vec","try_from_vec_and_index","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","units_per_em","unpositioned","unscaled","v_metrics","v_metrics_unscaled","vector","width","x","x","x","y","y","y","0","0"],"q":["rusttyperusttype::Font",""],"d":["","A single font. This may or may not own the font data.","A single glyph of a font.","","","The “horizontal metrics” of a glyph. This is useful …","A trait for types that can be converted into a <code>GlyphId</code>, in …","","A trait for glyph outline construction.","","A point in 2-dimensional space, with each dimension of …","A glyph augmented with positioning and scaling …","A rectangle, with top-left corner at <code>min</code>, and bottom-right …","","Defines the size of a rendered face of a font, in pixels, …","A glyph augmented with scaling information. You can query …","The “vertical metrics” of a font at a particular …","A vector in 2-dimensional space, with each dimension of …","","","","The horizontal offset that the origin of the next glyph …","The highest point that any glyph in the font extends to …","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the outline of the glyph with the builder …","Builds the outline of the glyph with the builder …","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","","","","","Appends a CurveTo segment.","","","","The lowest point that any glyph in the font extends to …","","","Rasterises this glyph. For each pixel in the rect given by …","","","","","","","","The bounding box of the shape of this glyph, not to be …","","","","","","","","","","","","The font to which this glyph belongs.","The font to which this glyph belongs.","The font to which this glyph belongs.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the corresponding glyph for a Unicode code point …","The number of glyphs present in this font. Glyph …","A convenience function.","Retrieves the “horizontal metrics” of this glyph. See …","","","","","","The glyph identifier for this glyph.","The glyph identifier for this glyph.","The glyph identifier for this glyph.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into a <code>GlyphId</code>, consulting the index map of …","","","","Removes the positioning from this glyph","A reference to this glyph without the scaling","A convenience function for laying out glyphs for a string …","The horizontal offset between the origin of this glyph and …","The gap to leave between the descent of one line and the …","Appends a LineTo segment.","","","Appends a MoveTo segment.","","","","","","","","","","","","","Returns additional kerning to apply as well as that given …","","","","","","","","The conservative pixel-boundary bounding box for this …","A convenience function for generating <code>Point</code>s.","","Augments this glyph with positioning information, making …","Appends a QuadTo segment.","","","Computes a scale factor to produce a font whose “height…","Augments this glyph with scaling information, making …","Resets positioning information and recalculates the pixel …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a Font from byte-slice data.","Creates a Font from byte-slice data &amp; a font collection …","Creates a Font from owned font data.","Creates a Font from owned font data &amp; a font collection …","","","","","","","","","","","","","","","","","","","","","","","","","","","Uniform scaling, equivalent to <code>Scale { x: s, y: s }</code>.","Returns the units per EM square of this font","A reference to this glyph without positioning","Removes the scaling from this glyph","The “vertical metrics” for this font at a given scale. …","Get the unscaled VMetrics for this font, shared by all …","A convenience function for generating <code>Vector</code>s.","","","","Horizontal scale, in pixels.","","","Vertical scale, in pixels.","",""],"i":[1,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,3,4,4,5,6,2,3,4,7,1,8,5,6,9,10,11,12,13,2,3,4,7,1,8,5,6,9,10,11,12,13,9,10,2,3,4,7,1,8,5,6,9,10,11,12,13,2,3,4,7,1,8,5,6,9,10,11,12,13,14,3,4,7,1,14,3,4,7,6,4,4,10,3,4,7,1,5,6,11,9,2,3,4,7,1,8,5,6,9,10,11,8,9,10,2,3,4,7,1,1,8,5,6,9,10,11,12,13,2,2,2,9,3,4,7,1,7,8,9,10,2,3,4,7,1,8,5,6,9,10,11,12,13,15,1,12,13,10,9,2,5,6,14,7,7,14,4,4,6,3,4,7,1,5,6,11,12,13,2,3,4,7,1,5,6,11,10,0,10,9,14,9,10,2,8,10,3,3,4,2,3,4,7,1,8,5,6,9,10,11,12,13,2,3,4,7,1,8,5,6,9,10,11,12,13,2,2,2,2,2,3,4,7,1,8,5,6,9,10,11,12,13,2,3,4,7,1,8,5,6,9,10,11,12,13,11,2,10,9,2,2,0,7,3,4,11,3,4,11,16,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["point",3,[["add",8]]],["vector",3,[["add",8]]]],["point",3,[["add",8]]]],[[["vector",3,[["add",8]]],["vector",3,[["add",8]]]],["vector",3,[["add",8]]]],[[["vector",3,[["add",8]]],["point",3,[["add",8]]]],["point",3,[["add",8]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scaledglyph",3]],["bool",0]],[[["positionedglyph",3]],["bool",0]],[[["font",4]],["font",4]],[[["point",3,[["clone",8]]]],["point",3,[["clone",8]]]],[[["vector",3,[["clone",8]]]],["vector",3,[["clone",8]]]],[[["rect",3,[["clone",8]]]],["rect",3,[["clone",8]]]],[[["glyphid",3]],["glyphid",3]],[[["glyph",3]],["glyph",3]],[[["hmetrics",3]],["hmetrics",3]],[[["vmetrics",3]],["vmetrics",3]],[[["scaledglyph",3]],["scaledglyph",3]],[[["positionedglyph",3]],["positionedglyph",3]],[[["scale",3]],["scale",3]],[[["glyphiter",3,[["",26,[["clone",8],["iterator",8]]]]]],["glyphiter",3,[["",26,[["clone",8],["iterator",8]]]]]],[[["layoutiter",3]],["layoutiter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["point",3,[["ord",8]]],["point",3]],["ordering",4]],[[["vector",3,[["ord",8]]],["vector",3]],["ordering",4]],[[["rect",3,[["ord",8]]],["rect",3]],["ordering",4]],[[["glyphid",3],["glyphid",3]],["ordering",4]],[[["",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]]],[[],["point",3,[["default",8]]]],[[],["vector",3,[["default",8]]]],[[],["rect",3,[["default",8]]]],null,[[["vector",3,[["f32",0]]],["f32",0]],["vector",3,[["f32",0]]]],[[["vector",3,[["f64",0]]],["f64",0]],["vector",3,[["f64",0]]]],[[["positionedglyph",3],["fnmut",8]]],[[["point",3,[["partialeq",8]]],["point",3]],["bool",0]],[[["vector",3,[["partialeq",8]]],["vector",3]],["bool",0]],[[["rect",3,[["partialeq",8]]],["rect",3]],["bool",0]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["hmetrics",3],["hmetrics",3]],["bool",0]],[[["vmetrics",3],["vmetrics",3]],["bool",0]],[[["scale",3],["scale",3]],["bool",0]],[[["scaledglyph",3]],["option",4,[["rect",3,[["f32",0]]]]]],[[["font",4],["formatter",3]],["result",6]],[[["point",3,[["debug",8]]],["formatter",3]],["result",6]],[[["vector",3,[["debug",8]]],["formatter",3]],["result",6]],[[["rect",3,[["debug",8]]],["formatter",3]],["result",6]],[[["glyphid",3],["formatter",3]],["result",6]],[[["glyph",3],["formatter",3]],["result",6]],[[["hmetrics",3],["formatter",3]],["result",6]],[[["vmetrics",3],["formatter",3]],["result",6]],[[["scaledglyph",3],["formatter",3]],["result",6]],[[["positionedglyph",3],["formatter",3]],["result",6]],[[["scale",3],["formatter",3]],["result",6]],[[["glyph",3]],["font",4]],[[["scaledglyph",3]],["font",4]],[[["positionedglyph",3]],["font",4]],[[]],[[]],[[]],[[]],[[["glyphid",3]],["glyphid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["font",4],["intoglyphid",8]],["glyph",3]],[[["font",4]],["usize",0]],[[["font",4],["iterator",8]],["glyphiter",3,[["iterator",8]]]],[[["scaledglyph",3]],["hmetrics",3]],[[["point",3,[["hash",8]]],["",0]]],[[["vector",3,[["hash",8]]],["",0]]],[[["rect",3,[["hash",8]]],["",0]]],[[["glyphid",3],["",0]]],[[["rect",3,[["",26,[["sub",8],["copy",8]]]]]],["",26,[["sub",8],["copy",8]]]],[[["glyph",3]],["glyphid",3]],[[["scaledglyph",3]],["glyphid",3]],[[["positionedglyph",3]],["glyphid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["font",4]],["glyphid",3]],[[["font",4]],["glyphid",3]],[[]],[[]],[[["positionedglyph",3]],["scaledglyph",3]],[[["scaledglyph",3]],["glyph",3]],[[["font",4],["str",0],["scale",3],["point",3,[["f32",0]]]],["layoutiter",3]],null,null,[[["",0],["f32",0],["f32",0]]],null,null,[[["",0],["f32",0],["f32",0]]],[[["vector",3,[["f32",0]]],["f32",0]],["vector",3,[["f32",0]]]],[[["vector",3,[["f64",0]]],["f64",0]],["vector",3,[["f64",0]]]],[[["vmetrics",3],["f32",0]],["vmetrics",3]],[[["point",3,[["partialeq",8]]],["point",3]],["bool",0]],[[["vector",3,[["partialeq",8]]],["vector",3]],["bool",0]],[[["rect",3,[["partialeq",8]]],["rect",3]],["bool",0]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["hmetrics",3],["hmetrics",3]],["bool",0]],[[["vmetrics",3],["vmetrics",3]],["bool",0]],[[["scale",3],["scale",3]],["bool",0]],[[["glyphiter",3]],["option",4,[["glyph",3]]]],[[["layoutiter",3]],["option",4,[["positionedglyph",3]]]],[[["font",4],["scale",3]],["f32",0]],[[["point",3,[["partialord",8]]],["point",3]],["option",4,[["ordering",4]]]],[[["vector",3,[["partialord",8]]],["vector",3]],["option",4,[["ordering",4]]]],[[["rect",3,[["partialord",8]]],["rect",3]],["option",4,[["ordering",4]]]],[[["glyphid",3],["glyphid",3]],["option",4,[["ordering",4]]]],[[["hmetrics",3],["hmetrics",3]],["option",4,[["ordering",4]]]],[[["vmetrics",3],["vmetrics",3]],["option",4,[["ordering",4]]]],[[["scale",3],["scale",3]],["option",4,[["ordering",4]]]],[[["positionedglyph",3]],["option",4,[["rect",3,[["i32",0]]]]]],[[],["point",3]],[[["positionedglyph",3]],["point",3,[["f32",0]]]],[[["scaledglyph",3],["point",3,[["f32",0]]]],["positionedglyph",3]],[[["",0],["f32",0],["f32",0],["f32",0],["f32",0]]],[[["scaledglyph",3]],["scale",3]],[[["positionedglyph",3]],["scale",3]],[[["font",4],["f32",0]],["f32",0]],[[["glyph",3],["scale",3]],["scaledglyph",3]],[[["positionedglyph",3],["point",3,[["f32",0]]]]],[[["point",3,[["sub",8]]],["point",3,[["sub",8]]]],["vector",3,[["sub",8]]]],[[["point",3,[["sub",8]]],["vector",3,[["sub",8]]]],["point",3,[["sub",8]]]],[[["vector",3,[["sub",8]]],["vector",3,[["sub",8]]]],["vector",3,[["sub",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["font",4]]]],[[["u32",0]],["option",4,[["font",4]]]],[[["vec",3,[["u8",0]]]],["option",4,[["font",4]]]],[[["vec",3,[["u8",0]]],["u32",0]],["option",4,[["font",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["f32",0]],["scale",3]],[[["font",4]],["u16",0]],[[["positionedglyph",3]],["scaledglyph",3]],[[["scaledglyph",3]],["glyph",3]],[[["font",4],["scale",3]],["vmetrics",3]],[[["font",4]],["vmetrics",3]],[[],["vector",3]],[[["rect",3,[["",26,[["sub",8],["copy",8]]]]]],["",26,[["sub",8],["copy",8]]]],null,null,null,null,null,null,null,null],"p":[[3,"GlyphId"],[4,"Font"],[3,"Point"],[3,"Vector"],[3,"HMetrics"],[3,"VMetrics"],[3,"Rect"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"Scale"],[3,"GlyphIter"],[3,"LayoutIter"],[8,"OutlineBuilder"],[8,"IntoGlyphId"],[13,"Ref"],[13,"Owned"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Pool","Scope","borrow","borrow","borrow_mut","borrow_mut","drop","drop","execute","from","from","into","into","join_all","new","scoped","thread_count","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["scoped_threadpool","","","","","","","","","","","","","","","","","","","","","",""],"d":["A threadpool that acts as a handle to a number of threads …","Handle to the scope during which the threadpool is …","","","","","","","Execute a job on the threadpool.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Blocks until all currently queued jobs have run to …","Construct a threadpool with the given number of threads. …","Borrows the pool and allows executing jobs on other …","Returns the number of threads inside this pool.","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,1,2,1,2,2,1,1,1,1,2,1,2,1,2],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pool",3]]],[[["scope",3]]],[[["scope",3]]],[[]],[[]],[[]],[[]],[[["scope",3]]],[[["u32",0]],["pool",3]],[[["pool",3]]],[[["pool",3]],["u32",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["scopeguard",3]],["",0]],[[["scopeguard",3]],["",0]],[[["scopeguard",3]]],[[["scopeguard",3],["formatter",3]],["result",6]],[[["always",4],["formatter",3]],["result",6]],[[]],[[]],[[],["scopeguard",3,[["always",4]]]],[[]],[[]],[[["scopeguard",3]]],[[],["bool",0]],[[],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"serde":{"doc":"Serde","t":[8,8,16,16,16,8,16,16,16,16,16,16,16,8,11,11,11,0,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,14,11,11,0,14,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,13,13,13,8,8,8,8,16,13,8,8,16,16,16,16,16,8,13,3,8,13,8,13,13,13,13,13,8,13,2,13,13,13,4,13,13,13,16,16,16,8,8,11,11,11,11,11,11,11,11,10,11,10,10,11,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,16,16,16,16,16,16,3,16,16,16,16,16,16,16,16,8,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,2,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,10,10,10,10,10,10,11,11,11,11,11,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11],"n":["Deserialize","Deserializer","Error","Error","Ok","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","ne","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","0","0","0","0","0","0","0","0","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":["serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::deserde::de::Unexpected","","","","","","","","serde::de::valueserde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","","","","","","","","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,1,2,2,0,2,2,2,2,2,2,2,0,2,2,2,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,0,0,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,0,0,0,0,6,5,0,0,1,7,8,9,10,0,5,0,0,5,0,5,5,5,5,5,0,5,0,5,5,5,0,5,5,5,11,12,9,0,0,13,5,13,5,13,5,13,5,14,13,3,11,13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,5,12,13,15,15,13,13,5,5,13,5,13,5,6,14,14,14,1,14,5,10,10,7,7,8,8,8,8,8,8,7,8,10,13,5,5,13,5,13,5,10,13,5,10,14,14,0,9,9,12,13,12,12,12,12,13,12,12,13,12,12,13,12,13,12,12,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,12,13,12,12,12,13,12,12,13,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,33,33,33,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,32,49,33,24,25,26,27,28,29,30,31,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,33,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,32,49,32,32,32,32,32,49,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,33,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,25,26,27,28,29,51,0,2,53,54,55,56,57,58,59,0,2,53,54,55,56,57,58,59,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,60,60,2,2,2,61,53,54,55,56,57,58,59,60,60,60,60,60,60,60,60,60,2,4,2,2,2,53,54,60,60,57,2,2,55,56,58,59,60,60,60,60,2,2,2,2,2,57,60,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,57,60,58,59,60,60,60],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["usize",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]],["result",4]],[[["bool",0]],["result",4]],[[],["result",4]],[[["char",0]],["result",4]],[[["f32",0]],["result",4]],[[["f64",0]],["result",4]],[[["i128",0]],["result",4]],[[["i16",0]],["result",4]],[[["i32",0]],["result",4]],[[["i64",0]],["result",4]],[[["i8",0]],["result",4]],[[["option",4,[["usize",0]]]],["result",4]],[[["str",0],["",0]],["result",4]],[[["str",0],["u32",0],["str",0],["",0]],["result",4]],[[],["result",4]],[[["option",4,[["usize",0]]]],["result",4]],[[["",0]],["result",4]],[[["str",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[["str",0],["u32",0],["str",0],["usize",0]],["result",4]],[[["usize",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[["str",0],["u32",0],["str",0],["usize",0]],["result",4]],[[["u128",0]],["result",4]],[[["u16",0]],["result",4]],[[["u32",0]],["result",4]],[[["u64",0]],["result",4]],[[["u8",0]],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["str",0],["u32",0],["str",0]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ignoredany",3]],["ignoredany",3]],[[["unexpected",4]],["unexpected",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[],["ignoredany",3]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["ignoredany",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["usize",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["str",0]]],[[["unexpected",4],["unexpected",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["ignoredany",3],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["expected",8],["formatter",3]],["result",6]],[[["ignoredany",3],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["unexpected",4],["formatter",3]],["result",6]],[[["unexpected",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["usize",0],["expected",8]]],[[["unexpected",4],["expected",8]]],[[["unexpected",4],["expected",8]]],[[["",0]],["bool",0]],[[["str",0]]],[[["unexpected",4],["unexpected",4]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4,[["option",4]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["usize",0]]]],[[],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4]],[[["str",0]]],[[["str",0]]],null,[[],["result",4]],[[],["result",4]],[[["bool",0]],["result",4]],[[["ignoredany",3],["bool",0]],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["vec",3,[["u8",0]]]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[["char",0]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[["f32",0]],["result",4]],[[["f64",0]],["result",4]],[[["ignoredany",3],["f64",0]],["result",4]],[[["i128",0]],["result",4]],[[["ignoredany",3],["i128",0]],["result",4]],[[["i16",0]],["result",4]],[[["i32",0]],["result",4]],[[["i64",0]],["result",4]],[[["ignoredany",3],["i64",0]],["result",4]],[[["i8",0]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],[[["str",0]],["result",4]],[[["ignoredany",3],["str",0]],["result",4]],[[["string",3]],["result",4]],[[["u128",0]],["result",4]],[[["ignoredany",3],["u128",0]],["result",4]],[[["u16",0]],["result",4]],[[["u32",0]],["result",4]],[[["u64",0]],["result",4]],[[["ignoredany",3],["u64",0]],["result",4]],[[["u8",0]],["result",4]],[[],["result",4]],[[["ignoredany",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullunitdeserializer",3]],["unitdeserializer",3]],[[["u32deserializer",3]],["u32deserializer",3]],[[["strdeserializer",3]],["strdeserializer",3]],[[["borrowedstrdeserializer",3]],["borrowedstrdeserializer",3]],[[["stringdeserializer",3]],["stringdeserializer",3]],[[["cowstrdeserializer",3]],["cowstrdeserializer",3]],[[["bytesdeserializer",3]],["bytesdeserializer",3]],[[["borrowedbytesdeserializer",3]],["borrowedbytesdeserializer",3]],[[["mapdeserializer",3]],["mapdeserializer",3]],[[["error",3]],["error",3]],[[["booldeserializer",3]],["booldeserializer",3]],[[["i8deserializer",3]],["i8deserializer",3]],[[["i16deserializer",3]],["i16deserializer",3]],[[["i32deserializer",3]],["i32deserializer",3]],[[["i64deserializer",3]],["i64deserializer",3]],[[["isizedeserializer",3]],["isizedeserializer",3]],[[["u8deserializer",3]],["u8deserializer",3]],[[["u16deserializer",3]],["u16deserializer",3]],[[["u64deserializer",3]],["u64deserializer",3]],[[["usizedeserializer",3]],["usizedeserializer",3]],[[["f32deserializer",3]],["f32deserializer",3]],[[["f64deserializer",3]],["f64deserializer",3]],[[["chardeserializer",3]],["chardeserializer",3]],[[["i128deserializer",3]],["i128deserializer",3]],[[["u128deserializer",3]],["u128deserializer",3]],[[["seqdeserializer",3,[["clone",8],["clone",8]]]],["seqdeserializer",3,[["clone",8],["clone",8]]]],[[["seqaccessdeserializer",3,[["clone",8]]]],["seqaccessdeserializer",3,[["clone",8]]]],[[["mapaccessdeserializer",3,[["clone",8]]]],["mapaccessdeserializer",3,[["clone",8]]]],[[["enumaccessdeserializer",3,[["clone",8]]]],["enumaccessdeserializer",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["error",3]],[[],["error",3]],[[["error",3]],["str",0]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3],["str",0]],["result",4]],[[["u32deserializer",3],["str",0]],["result",4]],[[["strdeserializer",3],["str",0]],["result",4]],[[["borrowedstrdeserializer",3],["str",0]],["result",4]],[[["stringdeserializer",3],["str",0]],["result",4]],[[["cowstrdeserializer",3],["str",0]],["result",4]],[[["bytesdeserializer",3],["str",0]],["result",4]],[[["borrowedbytesdeserializer",3],["str",0]],["result",4]],[[["mapdeserializer",3],["str",0]],["result",4]],[[["booldeserializer",3],["str",0]],["result",4]],[[["i8deserializer",3],["str",0]],["result",4]],[[["i16deserializer",3],["str",0]],["result",4]],[[["i32deserializer",3],["str",0]],["result",4]],[[["i64deserializer",3],["str",0]],["result",4]],[[["isizedeserializer",3],["str",0]],["result",4]],[[["u8deserializer",3],["str",0]],["result",4]],[[["u16deserializer",3],["str",0]],["result",4]],[[["u64deserializer",3],["str",0]],["result",4]],[[["usizedeserializer",3],["str",0]],["result",4]],[[["f32deserializer",3],["str",0]],["result",4]],[[["f64deserializer",3],["str",0]],["result",4]],[[["chardeserializer",3],["str",0]],["result",4]],[[["i128deserializer",3],["str",0]],["result",4]],[[["u128deserializer",3],["str",0]],["result",4]],[[["seqdeserializer",3],["str",0]],["result",4]],[[["seqaccessdeserializer",3],["str",0]],["result",4]],[[["mapaccessdeserializer",3],["str",0]],["result",4]],[[["enumaccessdeserializer",3],["str",0]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3],["str",0]],["result",4]],[[["u32deserializer",3],["str",0]],["result",4]],[[["strdeserializer",3],["str",0]],["result",4]],[[["borrowedstrdeserializer",3],["str",0]],["result",4]],[[["stringdeserializer",3],["str",0]],["result",4]],[[["cowstrdeserializer",3],["str",0]],["result",4]],[[["bytesdeserializer",3],["str",0]],["result",4]],[[["borrowedbytesdeserializer",3],["str",0]],["result",4]],[[["mapdeserializer",3],["str",0]],["result",4]],[[["booldeserializer",3],["str",0]],["result",4]],[[["i8deserializer",3],["str",0]],["result",4]],[[["i16deserializer",3],["str",0]],["result",4]],[[["i32deserializer",3],["str",0]],["result",4]],[[["i64deserializer",3],["str",0]],["result",4]],[[["isizedeserializer",3],["str",0]],["result",4]],[[["u8deserializer",3],["str",0]],["result",4]],[[["u16deserializer",3],["str",0]],["result",4]],[[["u64deserializer",3],["str",0]],["result",4]],[[["usizedeserializer",3],["str",0]],["result",4]],[[["f32deserializer",3],["str",0]],["result",4]],[[["f64deserializer",3],["str",0]],["result",4]],[[["chardeserializer",3],["str",0]],["result",4]],[[["i128deserializer",3],["str",0]],["result",4]],[[["u128deserializer",3],["str",0]],["result",4]],[[["seqdeserializer",3],["str",0]],["result",4]],[[["seqaccessdeserializer",3],["str",0]],["result",4]],[[["mapaccessdeserializer",3],["str",0]],["result",4]],[[["enumaccessdeserializer",3],["str",0]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3],["str",0]],["result",4]],[[["u32deserializer",3],["str",0]],["result",4]],[[["strdeserializer",3],["str",0]],["result",4]],[[["borrowedstrdeserializer",3],["str",0]],["result",4]],[[["stringdeserializer",3],["str",0]],["result",4]],[[["cowstrdeserializer",3],["str",0]],["result",4]],[[["bytesdeserializer",3],["str",0]],["result",4]],[[["borrowedbytesdeserializer",3],["str",0]],["result",4]],[[["mapdeserializer",3],["str",0]],["result",4]],[[["booldeserializer",3],["str",0]],["result",4]],[[["i8deserializer",3],["str",0]],["result",4]],[[["i16deserializer",3],["str",0]],["result",4]],[[["i32deserializer",3],["str",0]],["result",4]],[[["i64deserializer",3],["str",0]],["result",4]],[[["isizedeserializer",3],["str",0]],["result",4]],[[["u8deserializer",3],["str",0]],["result",4]],[[["u16deserializer",3],["str",0]],["result",4]],[[["u64deserializer",3],["str",0]],["result",4]],[[["usizedeserializer",3],["str",0]],["result",4]],[[["f32deserializer",3],["str",0]],["result",4]],[[["f64deserializer",3],["str",0]],["result",4]],[[["chardeserializer",3],["str",0]],["result",4]],[[["i128deserializer",3],["str",0]],["result",4]],[[["u128deserializer",3],["str",0]],["result",4]],[[["seqdeserializer",3],["str",0]],["result",4]],[[["seqaccessdeserializer",3],["str",0]],["result",4]],[[["mapaccessdeserializer",3],["str",0]],["result",4]],[[["enumaccessdeserializer",3],["str",0]],["result",4]],[[["unitdeserializer",3],["usize",0]],["result",4]],[[["u32deserializer",3],["usize",0]],["result",4]],[[["strdeserializer",3],["usize",0]],["result",4]],[[["borrowedstrdeserializer",3],["usize",0]],["result",4]],[[["stringdeserializer",3],["usize",0]],["result",4]],[[["cowstrdeserializer",3],["usize",0]],["result",4]],[[["bytesdeserializer",3],["usize",0]],["result",4]],[[["borrowedbytesdeserializer",3],["usize",0]],["result",4]],[[["mapdeserializer",3],["usize",0]],["result",4]],[[["booldeserializer",3],["usize",0]],["result",4]],[[["i8deserializer",3],["usize",0]],["result",4]],[[["i16deserializer",3],["usize",0]],["result",4]],[[["i32deserializer",3],["usize",0]],["result",4]],[[["i64deserializer",3],["usize",0]],["result",4]],[[["isizedeserializer",3],["usize",0]],["result",4]],[[["u8deserializer",3],["usize",0]],["result",4]],[[["u16deserializer",3],["usize",0]],["result",4]],[[["u64deserializer",3],["usize",0]],["result",4]],[[["usizedeserializer",3],["usize",0]],["result",4]],[[["f32deserializer",3],["usize",0]],["result",4]],[[["f64deserializer",3],["usize",0]],["result",4]],[[["chardeserializer",3],["usize",0]],["result",4]],[[["i128deserializer",3],["usize",0]],["result",4]],[[["u128deserializer",3],["usize",0]],["result",4]],[[["seqdeserializer",3],["usize",0]],["result",4]],[[["seqaccessdeserializer",3],["usize",0]],["result",4]],[[["mapaccessdeserializer",3],["usize",0]],["result",4]],[[["enumaccessdeserializer",3],["usize",0]],["result",4]],[[["unitdeserializer",3],["str",0],["usize",0]],["result",4]],[[["u32deserializer",3],["str",0],["usize",0]],["result",4]],[[["strdeserializer",3],["str",0],["usize",0]],["result",4]],[[["borrowedstrdeserializer",3],["str",0],["usize",0]],["result",4]],[[["stringdeserializer",3],["str",0],["usize",0]],["result",4]],[[["cowstrdeserializer",3],["str",0],["usize",0]],["result",4]],[[["bytesdeserializer",3],["str",0],["usize",0]],["result",4]],[[["borrowedbytesdeserializer",3],["str",0],["usize",0]],["result",4]],[[["mapdeserializer",3],["str",0],["usize",0]],["result",4]],[[["booldeserializer",3],["str",0],["usize",0]],["result",4]],[[["i8deserializer",3],["str",0],["usize",0]],["result",4]],[[["i16deserializer",3],["str",0],["usize",0]],["result",4]],[[["i32deserializer",3],["str",0],["usize",0]],["result",4]],[[["i64deserializer",3],["str",0],["usize",0]],["result",4]],[[["isizedeserializer",3],["str",0],["usize",0]],["result",4]],[[["u8deserializer",3],["str",0],["usize",0]],["result",4]],[[["u16deserializer",3],["str",0],["usize",0]],["result",4]],[[["u64deserializer",3],["str",0],["usize",0]],["result",4]],[[["usizedeserializer",3],["str",0],["usize",0]],["result",4]],[[["f32deserializer",3],["str",0],["usize",0]],["result",4]],[[["f64deserializer",3],["str",0],["usize",0]],["result",4]],[[["chardeserializer",3],["str",0],["usize",0]],["result",4]],[[["i128deserializer",3],["str",0],["usize",0]],["result",4]],[[["u128deserializer",3],["str",0],["usize",0]],["result",4]],[[["seqdeserializer",3],["str",0],["usize",0]],["result",4]],[[["seqaccessdeserializer",3],["str",0],["usize",0]],["result",4]],[[["mapaccessdeserializer",3],["str",0],["usize",0]],["result",4]],[[["enumaccessdeserializer",3],["str",0],["usize",0]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3]],["result",4]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["bytesdeserializer",3]],["result",4]],[[["borrowedbytesdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["booldeserializer",3]],["result",4]],[[["i8deserializer",3]],["result",4]],[[["i16deserializer",3]],["result",4]],[[["i32deserializer",3]],["result",4]],[[["i64deserializer",3]],["result",4]],[[["isizedeserializer",3]],["result",4]],[[["u8deserializer",3]],["result",4]],[[["u16deserializer",3]],["result",4]],[[["u64deserializer",3]],["result",4]],[[["usizedeserializer",3]],["result",4]],[[["f32deserializer",3]],["result",4]],[[["f64deserializer",3]],["result",4]],[[["chardeserializer",3]],["result",4]],[[["i128deserializer",3]],["result",4]],[[["u128deserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["seqaccessdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],[[["enumaccessdeserializer",3]],["result",4]],[[["unitdeserializer",3],["str",0]],["result",4]],[[["u32deserializer",3],["str",0]],["result",4]],[[["strdeserializer",3],["str",0]],["result",4]],[[["borrowedstrdeserializer",3],["str",0]],["result",4]],[[["stringdeserializer",3],["str",0]],["result",4]],[[["cowstrdeserializer",3],["str",0]],["result",4]],[[["bytesdeserializer",3],["str",0]],["result",4]],[[["borrowedbytesdeserializer",3],["str",0]],["result",4]],[[["mapdeserializer",3],["str",0]],["result",4]],[[["booldeserializer",3],["str",0]],["result",4]],[[["i8deserializer",3],["str",0]],["result",4]],[[["i16deserializer",3],["str",0]],["result",4]],[[["i32deserializer",3],["str",0]],["result",4]],[[["i64deserializer",3],["str",0]],["result",4]],[[["isizedeserializer",3],["str",0]],["result",4]],[[["u8deserializer",3],["str",0]],["result",4]],[[["u16deserializer",3],["str",0]],["result",4]],[[["u64deserializer",3],["str",0]],["result",4]],[[["usizedeserializer",3],["str",0]],["result",4]],[[["f32deserializer",3],["str",0]],["result",4]],[[["f64deserializer",3],["str",0]],["result",4]],[[["chardeserializer",3],["str",0]],["result",4]],[[["i128deserializer",3],["str",0]],["result",4]],[[["u128deserializer",3],["str",0]],["result",4]],[[["seqdeserializer",3],["str",0]],["result",4]],[[["seqaccessdeserializer",3],["str",0]],["result",4]],[[["mapaccessdeserializer",3],["str",0]],["result",4]],[[["enumaccessdeserializer",3],["str",0]],["result",4]],[[["mapdeserializer",3]],["result",4]],[[["seqdeserializer",3]],["result",4]],[[["error",3],["error",3]],["bool",0]],[[["unitdeserializer",3],["formatter",3]],["result",6]],[[["u32deserializer",3],["formatter",3]],["result",6]],[[["strdeserializer",3],["formatter",3]],["result",6]],[[["borrowedstrdeserializer",3],["formatter",3]],["result",6]],[[["stringdeserializer",3],["formatter",3]],["result",6]],[[["cowstrdeserializer",3],["formatter",3]],["result",6]],[[["bytesdeserializer",3],["formatter",3]],["result",6]],[[["borrowedbytesdeserializer",3],["formatter",3]],["result",6]],[[["mapdeserializer",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["booldeserializer",3],["formatter",3]],["result",6]],[[["i8deserializer",3],["formatter",3]],["result",6]],[[["i16deserializer",3],["formatter",3]],["result",6]],[[["i32deserializer",3],["formatter",3]],["result",6]],[[["i64deserializer",3],["formatter",3]],["result",6]],[[["isizedeserializer",3],["formatter",3]],["result",6]],[[["u8deserializer",3],["formatter",3]],["result",6]],[[["u16deserializer",3],["formatter",3]],["result",6]],[[["u64deserializer",3],["formatter",3]],["result",6]],[[["usizedeserializer",3],["formatter",3]],["result",6]],[[["f32deserializer",3],["formatter",3]],["result",6]],[[["f64deserializer",3],["formatter",3]],["result",6]],[[["chardeserializer",3],["formatter",3]],["result",6]],[[["i128deserializer",3],["formatter",3]],["result",6]],[[["u128deserializer",3],["formatter",3]],["result",6]],[[["seqdeserializer",3],["formatter",3]],["result",6]],[[["seqaccessdeserializer",3,[["debug",8]]],["formatter",3]],["result",6]],[[["mapaccessdeserializer",3,[["debug",8]]],["formatter",3]],["result",6]],[[["enumaccessdeserializer",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3],["error",3]],["bool",0]],[[],["unitdeserializer",3]],[[["u32",0]],["u32deserializer",3]],[[["str",0]],["strdeserializer",3]],[[["str",0]],["borrowedstrdeserializer",3]],[[["string",3]],["stringdeserializer",3]],[[["cow",4,[["str",0]]]],["cowstrdeserializer",3]],[[],["bytesdeserializer",3]],[[],["borrowedbytesdeserializer",3]],[[],["mapdeserializer",3]],[[["bool",0]],["booldeserializer",3]],[[["i8",0]],["i8deserializer",3]],[[["i16",0]],["i16deserializer",3]],[[["i32",0]],["i32deserializer",3]],[[["i64",0]],["i64deserializer",3]],[[["isize",0]],["isizedeserializer",3]],[[["u8",0]],["u8deserializer",3]],[[["u16",0]],["u16deserializer",3]],[[["u64",0]],["u64deserializer",3]],[[["usize",0]],["usizedeserializer",3]],[[["f32",0]],["f32deserializer",3]],[[["f64",0]],["f64deserializer",3]],[[["char",0]],["chardeserializer",3]],[[["i128",0]],["i128deserializer",3]],[[["u128",0]],["u128deserializer",3]],[[],["seqdeserializer",3]],[[],["seqaccessdeserializer",3]],[[],["mapaccessdeserializer",3]],[[],["enumaccessdeserializer",3]],[[["mapdeserializer",3]],["result",4,[["option",4]]]],[[["seqdeserializer",3]],["result",4,[["option",4]]]],[[["mapdeserializer",3]],["result",4,[["option",4]]]],[[["mapdeserializer",3]],["result",4,[["option",4]]]],[[["mapdeserializer",3]],["result",4]],[[["mapdeserializer",3]],["option",4,[["usize",0]]]],[[["mapdeserializer",3]],["option",4,[["usize",0]]]],[[["seqdeserializer",3]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["u32deserializer",3]],["result",4]],[[["strdeserializer",3]],["result",4]],[[["borrowedstrdeserializer",3]],["result",4]],[[["stringdeserializer",3]],["result",4]],[[["cowstrdeserializer",3]],["result",4]],[[["mapaccessdeserializer",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[["impossible",3]],["result",4]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["result",4]],[[["bool",0]],["result",4]],[[],["result",4]],[[["char",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["",0],["",0],["",0]],["result",4]],[[["f32",0]],["result",4]],[[["f64",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["",0],["str",0],["",0]],["result",4]],[[["",0],["str",0],["",0]],["result",4]],[[["impossible",3],["str",0],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["impossible",3],["str",0],["",0]],["result",4]],[[["i128",0]],["result",4]],[[["i16",0]],["result",4]],[[["i32",0]],["result",4]],[[["i64",0]],["result",4]],[[["i8",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["option",4,[["usize",0]]]],["result",4]],[[["str",0],["",0]],["result",4]],[[["str",0],["u32",0],["str",0],["",0]],["result",4]],[[],["result",4]],[[["option",4,[["usize",0]]]],["result",4]],[[["",0]],["result",4]],[[["str",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[["str",0],["u32",0],["str",0],["usize",0]],["result",4]],[[["usize",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[["str",0],["u32",0],["str",0],["usize",0]],["result",4]],[[["u128",0]],["result",4]],[[["u16",0]],["result",4]],[[["u32",0]],["result",4]],[[["u64",0]],["result",4]],[[["u8",0]],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["str",0],["u32",0],["str",0]],["result",4]],[[["",0],["",0]],["result",4]],[[["impossible",3],["",0]],["result",4]],[[["",0],["str",0]],["result",4]],[[["",0],["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"Deserializer"],[8,"Serializer"],[8,"Deserialize"],[8,"Serialize"],[4,"Unexpected"],[8,"IntoDeserializer"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"DeserializeSeed"],[8,"Visitor"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[13,"Bool"],[13,"Unsigned"],[13,"Signed"],[13,"Float"],[13,"Char"],[13,"Str"],[13,"Bytes"],[13,"Other"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Impossible"],[8,"Error"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Deserialize","Serialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[null,null],"p":[]},\
"shader_version":{"doc":"A helper library for detecting and picking compatible …","t":[2,2,8,3,11,11,11,11,0,11,11,0,10,11,11,11,11,4,3,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["OpenGL","ParseOpenGLError","PickShader","Shaders","borrow","borrow_mut","from","get","glsl","into","new","opengl","pick_shader","set","try_from","try_into","type_id","GLSL","ParseGLSLError","V1_10","V1_20","V1_30","V1_40","V1_50","V3_30","V4_00","V4_10","V4_20","V4_30","V4_40","V4_50","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","description","eq","fmt","fmt","fmt","from","from","from_str","into","into","partial_cmp","pick_shader","to_opengl","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","OpenGL","ParseOpenGLError","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","description","eq","fmt","fmt","fmt","from","from","from_api","from_str","get_major_minor","into","into","into","partial_cmp","to_glsl","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["shader_version","","","","","","","","","","","","","","","","","shader_version::glsl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","shader_version::opengl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Implemented by shader version enums.","Shader picker.","","","Returns the argument unchanged.","Get the closest shader to a shader version.","Models versions of OpenGL Shader Language (GLSL)","Calls <code>U::from(self)</code>.","Creates a new shader picker.","Models versions of OpenGL","Pick shader.","Sets source for a shader version.","","","","For OpenGL version 3.3 and above, the GLSL version is the …","Represents an error while trying to get <code>GLSL</code> from <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Gets OpenGL version associated with GLSL.","","","","","","","","","","Represents an error while trying to get <code>OpenGL</code> from <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>OpenGL</code> version from graphics API version.","","Gets the minor version of OpenGL.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Gets GLSL version associated with OpenGL.","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,0,1,1,0,2,1,1,1,1,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,4,3,3,3,4,3,3,4,4,3,4,3,3,4,3,3,3,3,4,3,4,3,4,3,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,6,5,5,5,6,5,5,6,6,5,6,5,5,5,5,5,6,5,5,5,6,5,6,5,6,5,6],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["shaders",3,[["sized",8]]]],["option",4]],null,[[]],[[],["shaders",3,[["sized",8]]]],null,[[["shaders",3]],["option",4]],[[["shaders",3,[["sized",8]]],["",0]],["shaders",3,[["sized",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["glsl",4]],["glsl",4]],[[["",0],["",0]]],[[["glsl",4],["glsl",4]],["ordering",4]],[[["parseglslerror",3]],["str",0]],[[["glsl",4],["glsl",4]],["bool",0]],[[["glsl",4],["formatter",3]],["result",6]],[[["parseglslerror",3],["formatter",3]],["result",6]],[[["parseglslerror",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["result",4,[["glsl",4]]]],[[]],[[]],[[["glsl",4],["glsl",4]],["option",4,[["ordering",4]]]],[[["glsl",4],["shaders",3]],["option",4]],[[["glsl",4]],["opengl",4]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["opengl",4]],["opengl",4]],[[["",0],["",0]]],[[["opengl",4],["opengl",4]],["ordering",4]],[[["parseopenglerror",3]],["str",0]],[[["opengl",4],["opengl",4]],["bool",0]],[[["opengl",4],["formatter",3]],["result",6]],[[["parseopenglerror",3],["formatter",3]],["result",6]],[[["parseopenglerror",3],["formatter",3]],["result",6]],[[]],[[]],[[["version",3]],["option",4,[["opengl",4]]]],[[["str",0]],["result",4,[["opengl",4]]]],[[["opengl",4]]],[[["opengl",4]],["version",3]],[[]],[[]],[[["opengl",4],["opengl",4]],["option",4,[["ordering",4]]]],[[["opengl",4]],["glsl",4]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Shaders"],[8,"PickShader"],[4,"GLSL"],[3,"ParseGLSLError"],[4,"OpenGL"],[3,"ParseOpenGLError"]]},\
"shaders_graphics2d":{"doc":"Shaders for 2D graphics backends.","t":[0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["colored","textured","textured_color","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL"],"q":["shaders_graphics2d","","","shaders_graphics2d::colored","","","","","","","","shaders_graphics2d::textured","","","","","","","","shaders_graphics2d::textured_color","","","","","","",""],"d":["Shaders for colored rendering.","Shaders for textured rendering.","Shaders for textured rendering with individual vertex …","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20 WebGL","Fragmentshader for GLSL 1.50","Fragmentshader for GLSL 1.50 WebGL","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20 WebGL","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50 WebGL","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50","Fragment shader for GLSL 1.50","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50","Fragment shader for GLSL 1.50","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"snake":{"doc":"","t":[17,0,0,5,0,17,5,5,5,5,17,17,17,3,17,17,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,12,12,3,4,13,13,13,17,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["BACK_COLOR","draw","game","main","snake","BLOCK_SIZE","draw_block","draw_rectangle","to_coord","to_coord_u32","BORDER_COLOR","FOOD_COLOR","GAMEOVER_COLOR","Game","MOVING_PERIOD","RESTART_TIME","add_food","borrow","borrow_mut","check_eating","check_if_snake_alive","deref","deref_mut","draw","drop","food_exists","food_x","food_y","from","game_over","height","init","into","key_pressed","new","restart","snake","try_from","try_into","type_id","update","update_snake","vzip","waiting_time","width","Block","Direction","Down","Left","Right","SNAKE_COLOR","Snake","Up","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","direction","draw","drop","drop","drop","eq","fmt","from","from","from","head_direction","head_position","init","init","init","into","into","into","move_forward","new","next_head","opposite","overlap_tail","restore_tail","tail","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","x","y"],"q":["snake","","","","","snake::draw","","","","","snake::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snake::snake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,0,0,2,3,3,2,4,3,2,4,2,4,2,4,3,2,4,3,2,4,3,3,3,2,4,2,4,3,2,4,3,3,3,2,4,3,2,4,3,3,3,2,3,3,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,4,4],"f":[null,null,null,[[]],null,null,[[["color",6],["i32",0],["i32",0],["context",3],["g2d",6]]],[[["color",6],["i32",0],["i32",0],["i32",0],["i32",0],["context",3],["g2d",6]]],[[["i32",0]],["f64",0]],[[["i32",0]],["u32",0]],null,null,null,null,null,null,[[["game",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["game",3]]],[[["game",3],["option",4,[["direction",4]]]],["bool",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["game",3],["context",3],["g2d",6]]],[[["usize",0]]],null,null,null,[[]],null,null,[[],["usize",0]],[[]],[[["game",3],["key",4]]],[[["i32",0],["i32",0]],["game",3]],[[["game",3]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["game",3],["f64",0]]],[[["game",3],["option",4,[["direction",4]]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["direction",4]],["direction",4]],[[["block",3]],["block",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,[[["snake",3],["context",3],["g2d",6]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["direction",4],["direction",4]],["bool",0]],[[["block",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["snake",3]],["direction",4]],[[["snake",3]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["snake",3],["option",4,[["direction",4]]]]],[[["i32",0],["i32",0]],["snake",3]],[[["snake",3],["option",4,[["direction",4]]]]],[[["direction",4]],["direction",4]],[[["snake",3],["i32",0],["i32",0]],["bool",0]],[[["snake",3]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null],"p":[[3,"Game"],[4,"Direction"],[3,"Snake"],[3,"Block"]]},\
"syn":{"doc":"github crates-io docs-rs","tn":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","visit","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_tokenursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","eq","error","error","error","extend","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","hash","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","eq","extend","extend","first","first_mut","fmt","from","from","from","from","from","from","from","from","from_iter","from_iter","hash","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Visit","visit_abi","visit_abi","visit_abi","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_arm","visit_arm","visit_arm","visit_attr_style","visit_attr_style","visit_attr_style","visit_attribute","visit_attribute","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg","visit_bare_fn_arg","visit_bin_op","visit_bin_op","visit_bin_op","visit_binding","visit_binding","visit_binding","visit_block","visit_block","visit_block","visit_bound_lifetimes","visit_bound_lifetimes","visit_bound_lifetimes","visit_const_param","visit_const_param","visit_const_param","visit_constraint","visit_constraint","visit_constraint","visit_data","visit_data","visit_data","visit_data_enum","visit_data_enum","visit_data_enum","visit_data_struct","visit_data_struct","visit_data_struct","visit_data_union","visit_data_union","visit_data_union","visit_derive_input","visit_derive_input","visit_derive_input","visit_expr","visit_expr","visit_expr","visit_expr_array","visit_expr_array","visit_expr_array","visit_expr_assign","visit_expr_assign","visit_expr_assign","visit_expr_assign_op","visit_expr_assign_op","visit_expr_assign_op","visit_expr_async","visit_expr_async","visit_expr_async","visit_expr_await","visit_expr_await","visit_expr_await","visit_expr_binary","visit_expr_binary","visit_expr_binary","visit_expr_block","visit_expr_block","visit_expr_block","visit_expr_box","visit_expr_box","visit_expr_box","visit_expr_break","visit_expr_break","visit_expr_break","visit_expr_call","visit_expr_call","visit_expr_call","visit_expr_cast","visit_expr_cast","visit_expr_cast","visit_expr_closure","visit_expr_closure","visit_expr_closure","visit_expr_continue","visit_expr_continue","visit_expr_continue","visit_expr_field","visit_expr_field","visit_expr_field","visit_expr_for_loop","visit_expr_for_loop","visit_expr_for_loop","visit_expr_group","visit_expr_group","visit_expr_group","visit_expr_if","visit_expr_if","visit_expr_if","visit_expr_index","visit_expr_index","visit_expr_index","visit_expr_let","visit_expr_let","visit_expr_let","visit_expr_lit","visit_expr_lit","visit_expr_lit","visit_expr_loop","visit_expr_loop","visit_expr_loop","visit_expr_macro","visit_expr_macro","visit_expr_macro","visit_expr_match","visit_expr_match","visit_expr_match","visit_expr_method_call","visit_expr_method_call","visit_expr_method_call","visit_expr_paren","visit_expr_paren","visit_expr_paren","visit_expr_path","visit_expr_path","visit_expr_path","visit_expr_range","visit_expr_range","visit_expr_range","visit_expr_reference","visit_expr_reference","visit_expr_reference","visit_expr_repeat","visit_expr_repeat","visit_expr_repeat","visit_expr_return","visit_expr_return","visit_expr_return","visit_expr_struct","visit_expr_struct","visit_expr_struct","visit_expr_try","visit_expr_try","visit_expr_try","visit_expr_try_block","visit_expr_try_block","visit_expr_try_block","visit_expr_tuple","visit_expr_tuple","visit_expr_tuple","visit_expr_type","visit_expr_type","visit_expr_type","visit_expr_unary","visit_expr_unary","visit_expr_unary","visit_expr_unsafe","visit_expr_unsafe","visit_expr_unsafe","visit_expr_while","visit_expr_while","visit_expr_while","visit_expr_yield","visit_expr_yield","visit_expr_yield","visit_field","visit_field","visit_field","visit_field_pat","visit_field_pat","visit_field_pat","visit_field_value","visit_field_value","visit_field_value","visit_fields","visit_fields","visit_fields","visit_fields_named","visit_fields_named","visit_fields_named","visit_fields_unnamed","visit_fields_unnamed","visit_fields_unnamed","visit_file","visit_file","visit_file","visit_fn_arg","visit_fn_arg","visit_fn_arg","visit_foreign_item","visit_foreign_item","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_type","visit_foreign_item_type","visit_foreign_item_type","visit_generic_argument","visit_generic_argument","visit_generic_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_param","visit_generic_param","visit_generic_param","visit_generics","visit_generics","visit_generics","visit_ident","visit_ident","visit_ident","visit_impl_item","visit_impl_item","visit_impl_item","visit_impl_item_const","visit_impl_item_const","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_method","visit_impl_item_method","visit_impl_item_type","visit_impl_item_type","visit_impl_item_type","visit_index","visit_index","visit_index","visit_item","visit_item","visit_item","visit_item_const","visit_item_const","visit_item_const","visit_item_enum","visit_item_enum","visit_item_enum","visit_item_extern_crate","visit_item_extern_crate","visit_item_extern_crate","visit_item_fn","visit_item_fn","visit_item_fn","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_impl","visit_item_impl","visit_item_impl","visit_item_macro","visit_item_macro","visit_item_macro","visit_item_macro2","visit_item_macro2","visit_item_macro2","visit_item_mod","visit_item_mod","visit_item_mod","visit_item_static","visit_item_static","visit_item_static","visit_item_struct","visit_item_struct","visit_item_struct","visit_item_trait","visit_item_trait","visit_item_trait","visit_item_trait_alias","visit_item_trait_alias","visit_item_trait_alias","visit_item_type","visit_item_type","visit_item_type","visit_item_union","visit_item_union","visit_item_union","visit_item_use","visit_item_use","visit_item_use","visit_label","visit_label","visit_label","visit_lifetime","visit_lifetime","visit_lifetime","visit_lifetime_def","visit_lifetime_def","visit_lifetime_def","visit_lit","visit_lit","visit_lit","visit_lit_bool","visit_lit_bool","visit_lit_bool","visit_lit_byte","visit_lit_byte","visit_lit_byte","visit_lit_byte_str","visit_lit_byte_str","visit_lit_byte_str","visit_lit_char","visit_lit_char","visit_lit_char","visit_lit_float","visit_lit_float","visit_lit_float","visit_lit_int","visit_lit_int","visit_lit_int","visit_lit_str","visit_lit_str","visit_lit_str","visit_local","visit_local","visit_local","visit_macro","visit_macro","visit_macro","visit_macro_delimiter","visit_macro_delimiter","visit_macro_delimiter","visit_member","visit_member","visit_member","visit_meta","visit_meta","visit_meta","visit_meta_list","visit_meta_list","visit_meta_list","visit_meta_name_value","visit_meta_name_value","visit_meta_name_value","visit_method_turbofish","visit_method_turbofish","visit_method_turbofish","visit_nested_meta","visit_nested_meta","visit_nested_meta","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_pat","visit_pat","visit_pat","visit_pat_box","visit_pat_box","visit_pat_box","visit_pat_ident","visit_pat_ident","visit_pat_ident","visit_pat_lit","visit_pat_lit","visit_pat_lit","visit_pat_macro","visit_pat_macro","visit_pat_macro","visit_pat_or","visit_pat_or","visit_pat_or","visit_pat_path","visit_pat_path","visit_pat_path","visit_pat_range","visit_pat_range","visit_pat_range","visit_pat_reference","visit_pat_reference","visit_pat_reference","visit_pat_rest","visit_pat_rest","visit_pat_rest","visit_pat_slice","visit_pat_slice","visit_pat_slice","visit_pat_struct","visit_pat_struct","visit_pat_struct","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_type","visit_pat_type","visit_pat_type","visit_pat_wild","visit_pat_wild","visit_pat_wild","visit_path","visit_path","visit_path","visit_path_arguments","visit_path_arguments","visit_path_arguments","visit_path_segment","visit_path_segment","visit_path_segment","visit_predicate_eq","visit_predicate_eq","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_type","visit_predicate_type","visit_predicate_type","visit_qself","visit_qself","visit_qself","visit_range_limits","visit_range_limits","visit_range_limits","visit_receiver","visit_receiver","visit_receiver","visit_return_type","visit_return_type","visit_return_type","visit_signature","visit_signature","visit_signature","visit_span","visit_span","visit_span","visit_stmt","visit_stmt","visit_stmt","visit_trait_bound","visit_trait_bound","visit_trait_bound","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_item","visit_trait_item","visit_trait_item","visit_trait_item_const","visit_trait_item_const","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_method","visit_trait_item_method","visit_trait_item_type","visit_trait_item_type","visit_trait_item_type","visit_type","visit_type","visit_type","visit_type_array","visit_type_array","visit_type_array","visit_type_bare_fn","visit_type_bare_fn","visit_type_bare_fn","visit_type_group","visit_type_group","visit_type_group","visit_type_impl_trait","visit_type_impl_trait","visit_type_impl_trait","visit_type_infer","visit_type_infer","visit_type_infer","visit_type_macro","visit_type_macro","visit_type_macro","visit_type_never","visit_type_never","visit_type_never","visit_type_param","visit_type_param","visit_type_param","visit_type_param_bound","visit_type_param_bound","visit_type_param_bound","visit_type_paren","visit_type_paren","visit_type_paren","visit_type_path","visit_type_path","visit_type_path","visit_type_ptr","visit_type_ptr","visit_type_ptr","visit_type_reference","visit_type_reference","visit_type_reference","visit_type_slice","visit_type_slice","visit_type_slice","visit_type_trait_object","visit_type_trait_object","visit_type_trait_object","visit_type_tuple","visit_type_tuple","visit_type_tuple","visit_un_op","visit_un_op","visit_un_op","visit_use_glob","visit_use_glob","visit_use_glob","visit_use_group","visit_use_group","visit_use_group","visit_use_name","visit_use_name","visit_use_name","visit_use_path","visit_use_path","visit_use_path","visit_use_rename","visit_use_rename","visit_use_rename","visit_use_tree","visit_use_tree","visit_use_tree","visit_variadic","visit_variadic","visit_variadic","visit_variant","visit_variant","visit_variant","visit_vis_crate","visit_vis_crate","visit_vis_crate","visit_vis_public","visit_vis_public","visit_vis_public","visit_vis_restricted","visit_vis_restricted","visit_vis_restricted","visit_visibility","visit_visibility","visit_visibility","visit_where_clause","visit_where_clause","visit_where_clause","visit_where_predicate","visit_where_predicate","visit_where_predicate"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::FnArg","","syn::ForeignItem","","","","","syn::GenericArgument","","","","","syn::GenericMethodArgument","","syn::GenericParam","","","syn::ImplItem","","","","","syn::Item","","","","","","","","","","","","","","","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::Pat","","","","","","","","","","","","","","","","syn::PathArguments","","syn::RangeLimits","","syn::ReturnType","","syn::Stmt","","","","","syn::StrStyle","syn::TraitBoundModifier","syn::TraitItem","","","","","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::UseTree","","","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::visit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> …","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken …","The <code>self</code> argument of an associated method, whether taken …","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</codealue of the field.","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the varianteturns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Generics required to complete the definition.","If this path consists of a single ident, returns the identame of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the identifier that begins this structured meta …","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implementsype of the fieldeturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","Syntax tree traversal to walk a shared borrow of a syntax …","","","","In some positions, types may not contain the <code>+</code> character, …cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","","","","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeyntax tree traversal to walk a shared borrow of a syntax …i":[0,1,1,1,2,0,0,3,4,3,3,3,0,0,0,3,4,0,0,3,0,5,1,1,1,1,1,1,0,3,6,0,3,7,8,8,3,6,6,3,3,6,9,3,10,11,12,13,14,5,0,0,5,3,15,16,0,0,0,0,17,18,0,1,1,12,19,20,1,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,3,0,0,0,0,0,0,6,12,22,0,3,0,0,0,0,0,12,1,0,0,0,0,23,3,23,4,1,9,0,7,3,12,0,0,0,0,0,0,4,0,3,4,16,24,6,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,11,25,20,5,0,26,0,27,3,7,0,0,0,0,0,0,0,0,21,3,1,0,3,12,22,13,14,4,7,12,0,3,28,0,0,27,0,0,13,14,3,0,12,1,1,23,26,29,30,1,18,0,4,28,2,18,1,7,24,3,8,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,3,23,4,7,0,0,0,0,0,4,16,0,3,7,0,15,0,31,3,4,7,1,1,23,3,7,16,0,3,0,21,1,1,1,1,0,4,7,12,22,0,6,0,3,12,19,7,1,1,0,25,12,12,0,0,0,0,0,0,0,4,3,3,3,4,7,7,0,0,3,10,11,20,12,22,13,14,17,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,3,12,19,29,29,30,3,12,0,0,0,0,0,0,0,0,3,12,22,13,14,6,4,7,0,0,0,0,0,0,3,7,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,33,51,52,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,100,56,138,139,56,62,140,141,140,141,49,58,78,82,93,114,50,63,69,83,86,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,159,87,88,159,160,101,111,177,184,189,59,123,148,44,76,91,32,94,100,165,172,174,132,0,145,53,66,74,175,183,131,0,60,0,124,49,50,127,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,41,162,42,52,80,85,154,87,88,89,159,160,90,98,100,106,109,111,113,135,137,189,86,65,83,155,155,89,90,109,113,182,33,97,61,151,92,0,0,119,155,156,2,87,89,109,110,111,94,113,114,115,138,51,76,130,132,56,62,40,122,184,175,176,180,182,36,183,53,79,185,131,133,65,91,172,142,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,147,54,67,87,89,161,90,98,101,102,113,115,188,59,60,45,63,64,66,67,44,71,35,74,75,77,80,81,84,85,90,98,113,125,0,92,186,86,51,76,99,103,171,173,132,142,142,142,143,48,144,38,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,153,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,140,141,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,33,34,63,156,142,142,142,142,142,142,142,143,48,144,38,145,24,26,26,26,26,146,147,27,27,27,51,29,29,29,148,149,52,16,16,16,16,150,151,152,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,30,30,153,153,41,10,85,154,86,9,155,11,11,11,11,87,87,88,89,156,25,25,25,157,28,158,20,20,20,20,159,160,161,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,23,23,23,23,23,162,163,46,164,165,22,22,22,22,22,105,106,107,108,13,13,13,13,13,109,110,111,112,14,14,14,14,14,113,114,115,116,33,31,31,31,117,118,6,6,6,6,6,6,6,6,166,167,168,169,140,140,141,141,170,15,138,8,119,119,119,119,19,19,19,19,171,172,173,1,18,174,21,120,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,187,43,43,2,5,42,188,189,190,47,73,39,91,94,99,100,101,102,103,111,115,33,119,187,64,176,41,155,156,42,47,86,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,129,38,51,52,87,89,90,91,92,95,96,97,98,99,100,101,102,103,162,163,46,106,107,109,111,113,115,33,119,124,43,188,189,65,94,177,152,63,66,153,120,50,33,34,190,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,29,29,29,29,2,187,2,32,94,100,165,118,29,29,58,60,61,63,69,83,104,187,127,54,55,57,29,74,175,67,120,161,117,88,160,36,155,156,157,159,34,155,73,129,147,68,129,69,41,155,156,42,47,70,95,108,112,116,179,126,96,155,44,62,85,137,40,97,157,50,35,98,106,117,182,36,124,37,154,186,121,148,146,142,38,88,6,166,167,168,169,140,141,170,142,55,57,81,50,50,50,33,34,190,155,146,149,152,39,40,71,79,157,33,34,180,185,133,190,0,0,0,142,38,26,146,147,27,51,148,149,16,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,166,167,168,169,140,141,170,138,119,1,18,174,21,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,17,7,187,43,5,42,188,189,190,0,142,145,145,138,138,0,145,0,145,187,52,145,0,0,0,52,166,174,3,142,38,63,67,86,120,123,37,134,135,137,26,145,146,147,152,72,76,157,138,181,128,132,134,47,145,158,150,152,0,72,181,128,77,35,33,40,117,92,46,76,75,161,54,55,57,96,187,117,94,97,74,90,92,95,98,99,101,102,104,105,106,107,108,109,110,111,112,113,115,116,171,120,175,142,38,6,166,167,168,169,140,141,170,118,93,105,110,114,142,142,142,143,48,144,38,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,30,153,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,6,166,166,167,167,168,168,169,169,140,140,141,141,170,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,153,170,0,155,164,182,98,106,174,99,171,145,124,6,166,167,168,169,140,141,100,65,73,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,38,140,141,142,143,48,144,38,145,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,138,119,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,0,166,167,168,169,140,141,170,145,138,94,100,101,104,162,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,78,40,52,45,80,89,90,98,102,106,109,113,115,121,135,188,47,142,143,48,144,38,145,24,26,146,147,27,51,29,148,149,52,16,150,151,152,3,53,54,55,49,56,57,58,59,60,39,45,50,61,62,63,64,65,66,67,68,69,70,44,40,71,72,73,35,74,75,76,77,78,79,80,81,82,83,84,30,153,41,10,85,154,86,9,155,11,87,88,89,156,25,157,28,158,20,159,160,161,12,90,91,92,93,32,94,95,96,97,98,99,100,101,102,103,104,23,162,163,46,164,165,22,105,106,107,108,13,109,110,111,112,14,113,114,115,116,33,31,117,118,6,166,167,168,169,140,141,170,15,138,8,119,19,171,172,173,1,18,174,21,120,4,175,34,176,177,178,179,139,180,181,182,36,183,184,185,186,121,122,17,7,123,124,125,126,127,128,129,37,130,131,132,133,134,135,136,137,187,43,2,5,42,188,189,190,47,155,155,102,107,111,115,178,136,103,173,149,142,82,94,100,33,34,104,166,167,168,169,170,170,33,34,91,172,52,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,119,0,155,158,83,4,177,184,17,84,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,342,343,344,345,346,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,0,0,385,385,386,385,386,386,386,386,386,386,385,386,386,386,385,386,386,386,385,385,386,386,386,386,386,386,385,386,385,386,385,386,0,387,387,387,0,0,0,388,0,0,0,0,0,0,0,389,390,389,391,392,393,390,389,391,392,393,389,391,393,391,393,393,389,391,0,389,392,390,389,391,393,389,389,392,393,393,389,390,389,391,392,393,393,392,390,389,391,392,393,393,393,393,389,389,393,393,394,389,388,392,388,388,389,390,389,389,389,389,393,389,393,391,393,389,393,390,389,391,392,393,390,389,391,392,393,390,389,391,392,393,0,395,396,0,0,0,0,0,0,0,0,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,397,398,400,401,402,396,397,398,400,401,402,396,397,397,397,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,397,397,397,397,398,399,400,401,402,403,396,397,397,397,398,399,400,401,402,403,397,396,396,397,397,397,397,397,397,398,399,400,401,402,403,397,396,398,399,400,401,402,403,398,399,400,401,402,403,397,397,397,397,397,397,397,396,396,397,397,397,398,399,400,401,402,403,397,396,397,398,400,401,402,396,397,396,397,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,397,398,399,400,401,402,403,396,396,396,404,405,404,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,460,462,465,466,467,469,471,472,474,475,479,482,484,487,490,491,494,497,502,503,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,506,507,508,509,407,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,0,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510,0,510,510],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["typegenerics",3]],["turbofish",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],[[["litint",3]],["result",6]],[[["litfloat",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],[[["implgenerics",3]],["implgenerics",3]],[[["typegenerics",3]],["typegenerics",3]],[[["turbofish",3]],["turbofish",3]],[[["lifetime",3]],["lifetime",3]],[[["attribute",3]],["attribute",3]],[[["attrstyle",4]],["attrstyle",4]],[[["meta",4]],["meta",4]],[[["metalist",3]],["metalist",3]],[[["metanamevalue",3]],["metanamevalue",3]],[[["nestedmeta",4]],["nestedmeta",4]],[[["variant",3]],["variant",3]],[[["fields",4]],["fields",4]],[[["fieldsnamed",3]],["fieldsnamed",3]],[[["fieldsunnamed",3]],["fieldsunnamed",3]],[[["field",3]],["field",3]],[[["visibility",4]],["visibility",4]],[[["vispublic",3]],["vispublic",3]],[[["viscrate",3]],["viscrate",3]],[[["visrestricted",3]],["visrestricted",3]],[[["expr",4]],["expr",4]],[[["exprarray",3]],["exprarray",3]],[[["exprassign",3]],["exprassign",3]],[[["exprassignop",3]],["exprassignop",3]],[[["exprasync",3]],["exprasync",3]],[[["exprawait",3]],["exprawait",3]],[[["exprbinary",3]],["exprbinary",3]],[[["exprblock",3]],["exprblock",3]],[[["exprbox",3]],["exprbox",3]],[[["exprbreak",3]],["exprbreak",3]],[[["exprcall",3]],["exprcall",3]],[[["exprcast",3]],["exprcast",3]],[[["exprclosure",3]],["exprclosure",3]],[[["exprcontinue",3]],["exprcontinue",3]],[[["exprfield",3]],["exprfield",3]],[[["exprforloop",3]],["exprforloop",3]],[[["exprgroup",3]],["exprgroup",3]],[[["exprif",3]],["exprif",3]],[[["exprindex",3]],["exprindex",3]],[[["exprlet",3]],["exprlet",3]],[[["exprlit",3]],["exprlit",3]],[[["exprloop",3]],["exprloop",3]],[[["exprmacro",3]],["exprmacro",3]],[[["exprmatch",3]],["exprmatch",3]],[[["exprmethodcall",3]],["exprmethodcall",3]],[[["exprparen",3]],["exprparen",3]],[[["exprpath",3]],["exprpath",3]],[[["exprrange",3]],["exprrange",3]],[[["exprreference",3]],["exprreference",3]],[[["exprrepeat",3]],["exprrepeat",3]],[[["exprreturn",3]],["exprreturn",3]],[[["exprstruct",3]],["exprstruct",3]],[[["exprtry",3]],["exprtry",3]],[[["exprtryblock",3]],["exprtryblock",3]],[[["exprtuple",3]],["exprtuple",3]],[[["exprtype",3]],["exprtype",3]],[[["exprunary",3]],["exprunary",3]],[[["exprunsafe",3]],["exprunsafe",3]],[[["exprwhile",3]],["exprwhile",3]],[[["expryield",3]],["expryield",3]],[[["member",4]],["member",4]],[[["index",3]],["index",3]],[[["methodturbofish",3]],["methodturbofish",3]],[[["genericmethodargument",4]],["genericmethodargument",4]],[[["fieldvalue",3]],["fieldvalue",3]],[[["label",3]],["label",3]],[[["arm",3]],["arm",3]],[[["rangelimits",4]],["rangelimits",4]],[[["generics",3]],["generics",3]],[[["genericparam",4]],["genericparam",4]],[[["typeparam",3]],["typeparam",3]],[[["lifetimedef",3]],["lifetimedef",3]],[[["constparam",3]],["constparam",3]],[[["boundlifetimes",3]],["boundlifetimes",3]],[[["typeparambound",4]],["typeparambound",4]],[[["traitbound",3]],["traitbound",3]],[[["traitboundmodifier",4]],["traitboundmodifier",4]],[[["whereclause",3]],["whereclause",3]],[[["wherepredicate",4]],["wherepredicate",4]],[[["predicatetype",3]],["predicatetype",3]],[[["predicatelifetime",3]],["predicatelifetime",3]],[[["predicateeq",3]],["predicateeq",3]],[[["item",4]],["item",4]],[[["itemconst",3]],["itemconst",3]],[[["itemenum",3]],["itemenum",3]],[[["itemexterncrate",3]],["itemexterncrate",3]],[[["itemfn",3]],["itemfn",3]],[[["itemforeignmod",3]],["itemforeignmod",3]],[[["itemimpl",3]],["itemimpl",3]],[[["itemmacro",3]],["itemmacro",3]],[[["itemmacro2",3]],["itemmacro2",3]],[[["itemmod",3]],["itemmod",3]],[[["itemstatic",3]],["itemstatic",3]],[[["itemstruct",3]],["itemstruct",3]],[[["itemtrait",3]],["itemtrait",3]],[[["itemtraitalias",3]],["itemtraitalias",3]],[[["itemtype",3]],["itemtype",3]],[[["itemunion",3]],["itemunion",3]],[[["itemuse",3]],["itemuse",3]],[[["usetree",4]],["usetree",4]],[[["usepath",3]],["usepath",3]],[[["usename",3]],["usename",3]],[[["userename",3]],["userename",3]],[[["useglob",3]],["useglob",3]],[[["usegroup",3]],["usegroup",3]],[[["foreignitem",4]],["foreignitem",4]],[[["foreignitemfn",3]],["foreignitemfn",3]],[[["foreignitemstatic",3]],["foreignitemstatic",3]],[[["foreignitemtype",3]],["foreignitemtype",3]],[[["foreignitemmacro",3]],["foreignitemmacro",3]],[[["traititem",4]],["traititem",4]],[[["traititemconst",3]],["traititemconst",3]],[[["traititemmethod",3]],["traititemmethod",3]],[[["traititemtype",3]],["traititemtype",3]],[[["traititemmacro",3]],["traititemmacro",3]],[[["implitem",4]],["implitem",4]],[[["implitemconst",3]],["implitemconst",3]],[[["implitemmethod",3]],["implitemmethod",3]],[[["implitemtype",3]],["implitemtype",3]],[[["implitemmacro",3]],["implitemmacro",3]],[[["signature",3]],["signature",3]],[[["fnarg",4]],["fnarg",4]],[[["receiver",3]],["receiver",3]],[[["file",3]],["file",3]],[[["lit",4]],["lit",4]],[[["litstr",3]],["litstr",3]],[[["litbytestr",3]],["litbytestr",3]],[[["litbyte",3]],["litbyte",3]],[[["litchar",3]],["litchar",3]],[[["litint",3]],["litint",3]],[[["litfloat",3]],["litfloat",3]],[[["litbool",3]],["litbool",3]],[[["macro",3]],["macro",3]],[[["macrodelimiter",4]],["macrodelimiter",4]],[[["deriveinput",3]],["deriveinput",3]],[[["data",4]],["data",4]],[[["datastruct",3]],["datastruct",3]],[[["dataenum",3]],["dataenum",3]],[[["dataunion",3]],["dataunion",3]],[[["binop",4]],["binop",4]],[[["unop",4]],["unop",4]],[[["block",3]],["block",3]],[[["stmt",4]],["stmt",4]],[[["local",3]],["local",3]],[[["type",4]],["type",4]],[[["typearray",3]],["typearray",3]],[[["typebarefn",3]],["typebarefn",3]],[[["typegroup",3]],["typegroup",3]],[[["typeimpltrait",3]],["typeimpltrait",3]],[[["typeinfer",3]],["typeinfer",3]],[[["typemacro",3]],["typemacro",3]],[[["typenever",3]],["typenever",3]],[[["typeparen",3]],["typeparen",3]],[[["typepath",3]],["typepath",3]],[[["typeptr",3]],["typeptr",3]],[[["typereference",3]],["typereference",3]],[[["typeslice",3]],["typeslice",3]],[[["typetraitobject",3]],["typetraitobject",3]],[[["typetuple",3]],["typetuple",3]],[[["abi",3]],["abi",3]],[[["barefnarg",3]],["barefnarg",3]],[[["variadic",3]],["variadic",3]],[[["returntype",4]],["returntype",4]],[[["pat",4]],["pat",4]],[[["patbox",3]],["patbox",3]],[[["patident",3]],["patident",3]],[[["patlit",3]],["patlit",3]],[[["patmacro",3]],["patmacro",3]],[[["pator",3]],["pator",3]],[[["patpath",3]],["patpath",3]],[[["patrange",3]],["patrange",3]],[[["patreference",3]],["patreference",3]],[[["patrest",3]],["patrest",3]],[[["patslice",3]],["patslice",3]],[[["patstruct",3]],["patstruct",3]],[[["pattuple",3]],["pattuple",3]],[[["pattuplestruct",3]],["pattuplestruct",3]],[[["pattype",3]],["pattype",3]],[[["patwild",3]],["patwild",3]],[[["fieldpat",3]],["fieldpat",3]],[[["path",3]],["path",3]],[[["pathsegment",3]],["pathsegment",3]],[[["patharguments",4]],["patharguments",4]],[[["genericargument",4]],["genericargument",4]],[[["anglebracketedgenericarguments",3]],["anglebracketedgenericarguments",3]],[[["binding",3]],["binding",3]],[[["constraint",3]],["constraint",3]],[[["parenthesizedgenericarguments",3]],["parenthesizedgenericarguments",3]],[[["qself",3]],["qselfident",3],["ident",3]],["ordering",4]],[[["lifetime",3],["lifetime",3]],["ordering",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["constparams",3]],[[["generics",3]],["constparamsmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["generics",3]],[[],["boundlifetimes",3]],[[],["patharguments",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["",0]],["bool",0]],[[["ident",3],["ident",3]],["bool",0]],[[["implgenerics",3],["implgenerics",3]],["bool",0]],[[["typegenerics",3],["typegenerics",3]],["bool",0]],[[["turbofish",3],["turbofish",3]],["bool",0]],[[["lifetime",3],["lifetime",3]],["bool",0]],[[["attribute",3],["attribute",3]],["bool",0]],[[["attrstyle",4],["attrstyle",4]],["bool",0]],[[["meta",4],["meta",4]],["bool",0]],[[["metalist",3],["metalist",3]],["bool",0]],[[["metanamevalue",3],["metanamevalue",3]],["bool",0]],[[["nestedmeta",4],["nestedmeta",4]],["bool",0]],[[["variant",3],["variant",3]],["bool",0]],[[["fields",4],["fields",4]],["bool",0]],[[["fieldsnamed",3],["fieldsnamed",3]],["bool",0]],[[["fieldsunnamed",3],["fieldsunnamed",3]],["bool",0]],[[["field",3],["field",3]],["bool",0]],[[["visibility",4],["visibility",4]],["bool",0]],[[["vispublic",3],["vispublic",3]],["bool",0]],[[["viscrate",3],["viscrate",3]],["bool",0]],[[["visrestricted",3],["visrestricted",3]],["bool",0]],[[["expr",4],["expr",4]],["bool",0]],[[["exprarray",3],["exprarray",3]],["bool",0]],[[["exprassign",3],["exprassign",3]],["bool",0]],[[["exprassignop",3],["exprassignop",3]],["bool",0]],[[["exprasync",3],["exprasync",3]],["bool",0]],[[["exprawait",3],["exprawait",3]],["bool",0]],[[["exprbinary",3],["exprbinary",3]],["bool",0]],[[["exprblock",3],["exprblock",3]],["bool",0]],[[["exprbox",3],["exprbox",3]],["bool",0]],[[["exprbreak",3],["exprbreak",3]],["bool",0]],[[["exprcall",3],["exprcall",3]],["bool",0]],[[["exprcast",3],["exprcast",3]],["bool",0]],[[["exprclosure",3],["exprclosure",3]],["bool",0]],[[["exprcontinue",3],["exprcontinue",3]],["bool",0]],[[["exprfield",3],["exprfield",3]],["bool",0]],[[["exprforloop",3],["exprforloop",3]],["bool",0]],[[["exprgroup",3],["exprgroup",3]],["bool",0]],[[["exprif",3],["exprif",3]],["bool",0]],[[["exprindex",3],["exprindex",3]],["bool",0]],[[["exprlet",3],["exprlet",3]],["bool",0]],[[["exprlit",3],["exprlit",3]],["bool",0]],[[["exprloop",3],["exprloop",3]],["bool",0]],[[["exprmacro",3],["exprmacro",3]],["bool",0]],[[["exprmatch",3],["exprmatch",3]],["bool",0]],[[["exprmethodcall",3],["exprmethodcall",3]],["bool",0]],[[["exprparen",3],["exprparen",3]],["bool",0]],[[["exprpath",3],["exprpath",3]],["bool",0]],[[["exprrange",3],["exprrange",3]],["bool",0]],[[["exprreference",3],["exprreference",3]],["bool",0]],[[["exprrepeat",3],["exprrepeat",3]],["bool",0]],[[["exprreturn",3],["exprreturn",3]],["bool",0]],[[["exprstruct",3],["exprstruct",3]],["bool",0]],[[["exprtry",3],["exprtry",3]],["bool",0]],[[["exprtryblock",3],["exprtryblock",3]],["bool",0]],[[["exprtuple",3],["exprtuple",3]],["bool",0]],[[["exprtype",3],["exprtype",3]],["bool",0]],[[["exprunary",3],["exprunary",3]],["bool",0]],[[["exprunsafe",3],["exprunsafe",3]],["bool",0]],[[["exprwhile",3],["exprwhile",3]],["bool",0]],[[["expryield",3],["expryield",3]],["bool",0]],[[["member",4],["member",4]],["bool",0]],[[["index",3],["index",3]],["bool",0]],[[["methodturbofish",3],["methodturbofish",3]],["bool",0]],[[["genericmethodargument",4],["genericmethodargument",4]],["bool",0]],[[["fieldvalue",3],["fieldvalue",3]],["bool",0]],[[["label",3],["label",3]],["bool",0]],[[["arm",3],["arm",3]],["bool",0]],[[["rangelimits",4],["rangelimits",4]],["bool",0]],[[["generics",3],["generics",3]],["bool",0]],[[["genericparam",4],["genericparam",4]],["bool",0]],[[["typeparam",3],["typeparam",3]],["bool",0]],[[["lifetimedef",3],["lifetimedef",3]],["bool",0]],[[["constparam",3],["constparam",3]],["bool",0]],[[["boundlifetimes",3],["boundlifetimes",3]],["bool",0]],[[["typeparambound",4],["typeparambound",4]],["bool",0]],[[["traitbound",3],["traitbound",3]],["bool",0]],[[["traitboundmodifier",4],["traitboundmodifier",4]],["bool",0]],[[["whereclause",3],["whereclause",3]],["bool",0]],[[["wherepredicate",4],["wherepredicate",4]],["bool",0]],[[["predicatetype",3],["predicatetype",3]],["bool",0]],[[["predicatelifetime",3],["predicatelifetime",3]],["bool",0]],[[["predicateeq",3],["predicateeq",3]],["bool",0]],[[["item",4],["item",4]],["bool",0]],[[["itemconst",3],["itemconst",3]],["bool",0]],[[["itemenum",3],["itemenum",3]],["bool",0]],[[["itemexterncrate",3],["itemexterncrate",3]],["bool",0]],[[["itemfn",3],["itemfn",3]],["bool",0]],[[["itemforeignmod",3],["itemforeignmod",3]],["bool",0]],[[["itemimpl",3],["itemimpl",3]],["bool",0]],[[["itemmacro",3],["itemmacro",3]],["bool",0]],[[["itemmacro2",3],["itemmacro2",3]],["bool",0]],[[["itemmod",3],["itemmod",3]],["bool",0]],[[["itemstatic",3],["itemstatic",3]],["bool",0]],[[["itemstruct",3],["itemstruct",3]],["bool",0]],[[["itemtrait",3],["itemtrait",3]],["bool",0]],[[["itemtraitalias",3],["itemtraitalias",3]],["bool",0]],[[["itemtype",3],["itemtype",3]],["bool",0]],[[["itemunion",3],["itemunion",3]],["bool",0]],[[["itemuse",3],["itemuse",3]],["bool",0]],[[["usetree",4],["usetree",4]],["bool",0]],[[["usepath",3],["usepath",3]],["bool",0]],[[["usename",3],["usename",3]],["bool",0]],[[["userename",3],["userename",3]],["bool",0]],[[["useglob",3],["useglob",3]],["bool",0]],[[["usegroup",3],["usegroup",3]],["bool",0]],[[["foreignitem",4],["foreignitem",4]],["bool",0]],[[["foreignitemfn",3],["foreignitemfn",3]],["bool",0]],[[["foreignitemstatic",3],["foreignitemstatic",3]],["bool",0]],[[["foreignitemtype",3],["foreignitemtype",3]],["bool",0]],[[["foreignitemmacro",3],["foreignitemmacro",3]],["bool",0]],[[["traititem",4],["traititem",4]],["bool",0]],[[["traititemconst",3],["traititemconst",3]],["bool",0]],[[["traititemmethod",3],["traititemmethod",3]],["bool",0]],[[["traititemtype",3],["traititemtype",3]],["bool",0]],[[["traititemmacro",3],["traititemmacro",3]],["bool",0]],[[["implitem",4],["implitem",4]],["bool",0]],[[["implitemconst",3],["implitemconst",3]],["bool",0]],[[["implitemmethod",3],["implitemmethod",3]],["bool",0]],[[["implitemtype",3],["implitemtype",3]],["bool",0]],[[["implitemmacro",3],["implitemmacro",3]],["bool",0]],[[["signature",3],["signature",3]],["bool",0]],[[["fnarg",4],["fnarg",4]],["bool",0]],[[["receiver",3],["receiver",3]],["bool",0]],[[["file",3],["file",3]],["bool",0]],[[["lit",4],["lit",4]],["bool",0]],[[["litstr",3],["litstr",3]],["bool",0]],[[["litbytestr",3],["litbytestr",3]],["bool",0]],[[["litbyte",3],["litbyte",3]],["bool",0]],[[["litchar",3],["litchar",3]],["bool",0]],[[["litint",3],["litint",3]],["bool",0]],[[["litfloat",3],["litfloat",3]],["bool",0]],[[["litbool",3],["litbool",3]],["bool",0]],[[["macro",3],["macro",3]],["bool",0]],[[["macrodelimiter",4],["macrodelimiter",4]],["bool",0]],[[["deriveinput",3],["deriveinput",3]],["bool",0]],[[["data",4],["data",4]],["bool",0]],[[["datastruct",3],["datastruct",3]],["bool",0]],[[["dataenum",3],["dataenum",3]],["bool",0]],[[["dataunion",3],["dataunion",3]],["bool",0]],[[["binop",4],["binop",4]],["bool",0]],[[["unop",4],["unop",4]],["bool",0]],[[["block",3],["block",3]],["bool",0]],[[["stmt",4],["stmt",4]],["bool",0]],[[["local",3],["local",3]],["bool",0]],[[["type",4],["type",4]],["bool",0]],[[["typearray",3],["typearray",3]],["bool",0]],[[["typebarefn",3],["typebarefn",3]],["bool",0]],[[["typegroup",3],["typegroup",3]],["bool",0]],[[["typeimpltrait",3],["typeimpltrait",3]],["bool",0]],[[["typeinfer",3],["typeinfer",3]],["bool",0]],[[["typemacro",3],["typemacro",3]],["bool",0]],[[["typenever",3],["typenever",3]],["bool",0]],[[["typeparen",3],["typeparen",3]],["bool",0]],[[["typepath",3],["typepath",3]],["bool",0]],[[["typeptr",3],["typeptr",3]],["bool",0]],[[["typereference",3],["typereference",3]],["bool",0]],[[["typeslice",3],["typeslice",3]],["bool",0]],[[["typetraitobject",3],["typetraitobject",3]],["bool",0]],[[["typetuple",3],["typetuple",3]],["bool",0]],[[["abi",3],["abi",3]],["bool",0]],[[["barefnarg",3],["barefnarg",3]],["bool",0]],[[["variadic",3],["variadic",3]],["bool",0]],[[["returntype",4],["returntype",4]],["bool",0]],[[["pat",4],["pat",4]],["bool",0]],[[["patbox",3],["patbox",3]],["bool",0]],[[["patident",3],["patident",3]],["bool",0]],[[["patlit",3],["patlit",3]],["bool",0]],[[["patmacro",3],["patmacro",3]],["bool",0]],[[["pator",3],["pator",3]],["bool",0]],[[["patpath",3],["patpath",3]],["bool",0]],[[["patrange",3],["patrange",3]],["bool",0]],[[["patreference",3],["patreference",3]],["bool",0]],[[["patrest",3],["patrest",3]],["bool",0]],[[["patslice",3],["patslice",3]],["bool",0]],[[["patstruct",3],["patstruct",3]],["bool",0]],[[["pattuple",3],["pattuple",3]],["bool",0]],[[["pattuplestruct",3],["pattuplestruct",3]],["bool",0]],[[["pattype",3],["pattype",3]],["bool",0]],[[["patwild",3],["patwild",3]],["bool",0]],[[["fieldpat",3],["fieldpat",3]],["bool",0]],[[["path",3],["path",3]],["bool",0]],[[["pathsegment",3],["pathsegment",3]],["bool",0]],[[["patharguments",4],["patharguments",4]],["bool",0]],[[["genericargument",4],["genericargument",4]],["bool",0]],[[["anglebracketedgenericarguments",3],["anglebracketedgenericarguments",3]],["bool",0]],[[["binding",3],["binding",3]],["bool",0]],[[["constraint",3],["constraint",3]],["bool",0]],[[["parenthesizedgenericarguments",3],["parenthesizedgenericarguments",3]],["bool",0]],[[["qself",3],["qself",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["ident",3],["formatter",3]],["result",4,[["error",3]]]],[[["implgenerics",3],["formatter",3]],["result",6]],[[["typegenerics",3],["formatter",3]],["result",6]],[[["turbofish",3],["formatter",3]],["result",6]],[[["lifetime",3],["formatter",3]],["result",6]],[[["lifetime",3],["formatter",3]],["result",6]],[[["attribute",3],["formatter",3]],["result",6]],[[["attrstyle",4],["formatter",3]],["result",6]],[[["meta",4],["formatter",3]],["result",6]],[[["metalist",3],["formatter",3]],["result",6]],[[["metanamevalue",3],["formatter",3]],["result",6]],[[["nestedmeta",4],["formatter",3]],["result",6]],[[["variant",3],["formatter",3]],["result",6]],[[["fields",4],["formatter",3]],["result",6]],[[["fieldsnamed",3],["formatter",3]],["result",6]],[[["fieldsunnamed",3],["formatter",3]],["result",6]],[[["field",3],["formatter",3]],["result",6]],[[["visibility",4],["formatter",3]],["result",6]],[[["vispublic",3],["formatter",3]],["result",6]],[[["viscrate",3],["formatter",3]],["result",6]],[[["visrestricted",3],["formatter",3]],["result",6]],[[["expr",4],["formatter",3]],["result",6]],[[["exprarray",3],["formatter",3]],["result",6]],[[["exprassign",3],["formatter",3]],["result",6]],[[["exprassignop",3],["formatter",3]],["result",6]],[[["exprasync",3],["formatter",3]],["result",6]],[[["exprawait",3],["formatter",3]],["result",6]],[[["exprbinary",3],["formatter",3]],["result",6]],[[["exprblock",3],["formatter",3]],["result",6]],[[["exprbox",3],["formatter",3]],["result",6]],[[["exprbreak",3],["formatter",3]],["result",6]],[[["exprcall",3],["formatter",3]],["result",6]],[[["exprcast",3],["formatter",3]],["result",6]],[[["exprclosure",3],["formatter",3]],["result",6]],[[["exprcontinue",3],["formatter",3]],["result",6]],[[["exprfield",3],["formatter",3]],["result",6]],[[["exprforloop",3],["formatter",3]],["result",6]],[[["exprgroup",3],["formatter",3]],["result",6]],[[["exprif",3],["formatter",3]],["result",6]],[[["exprindex",3],["formatter",3]],["result",6]],[[["exprlet",3],["formatter",3]],["result",6]],[[["exprlit",3],["formatter",3]],["result",6]],[[["exprloop",3],["formatter",3]],["result",6]],[[["exprmacro",3],["formatter",3]],["result",6]],[[["exprmatch",3],["formatter",3]],["result",6]],[[["exprmethodcall",3],["formatter",3]],["result",6]],[[["exprparen",3],["formatter",3]],["result",6]],[[["exprpath",3],["formatter",3]],["result",6]],[[["exprrange",3],["formatter",3]],["result",6]],[[["exprreference",3],["formatter",3]],["result",6]],[[["exprrepeat",3],["formatter",3]],["result",6]],[[["exprreturn",3],["formatter",3]],["result",6]],[[["exprstruct",3],["formatter",3]],["result",6]],[[["exprtry",3],["formatter",3]],["result",6]],[[["exprtryblock",3],["formatter",3]],["result",6]],[[["exprtuple",3],["formatter",3]],["result",6]],[[["exprtype",3],["formatter",3]],["result",6]],[[["exprunary",3],["formatter",3]],["result",6]],[[["exprunsafe",3],["formatter",3]],["result",6]],[[["exprwhile",3],["formatter",3]],["result",6]],[[["expryield",3],["formatter",3]],["result",6]],[[["member",4],["formatter",3]],["result",6]],[[["member",4],["formatter",3]],["result",6]],[[["index",3],["formatter",3]],["result",6]],[[["index",3],["formatter",3]],["result",6]],[[["methodturbofish",3],["formatter",3]],["result",6]],[[["genericmethodargument",4],["formatter",3]],["result",6]],[[["fieldvalue",3],["formatter",3]],["result",6]],[[["label",3],["formatter",3]],["result",6]],[[["arm",3],["formatter",3]],["result",6]],[[["rangelimits",4],["formatter",3]],["result",6]],[[["generics",3],["formatter",3]],["result",6]],[[["genericparam",4],["formatter",3]],["result",6]],[[["typeparam",3],["formatter",3]],["result",6]],[[["lifetimedef",3],["formatter",3]],["result",6]],[[["constparam",3],["formatter",3]],["result",6]],[[["boundlifetimes",3],["formatter",3]],["result",6]],[[["typeparambound",4],["formatter",3]],["result",6]],[[["traitbound",3],["formatter",3]],["result",6]],[[["traitboundmodifier",4],["formatter",3]],["result",6]],[[["whereclause",3],["formatter",3]],["result",6]],[[["wherepredicate",4],["formatter",3]],["result",6]],[[["predicatetype",3],["formatter",3]],["result",6]],[[["predicatelifetime",3],["formatter",3]],["result",6]],[[["predicateeq",3],["formatter",3]],["result",6]],[[["item",4],["formatter",3]],["result",6]],[[["itemconst",3],["formatter",3]],["result",6]],[[["itemenum",3],["formatter",3]],["result",6]],[[["itemexterncrate",3],["formatter",3]],["result",6]],[[["itemfn",3],["formatter",3]],["result",6]],[[["itemforeignmod",3],["formatter",3]],["result",6]],[[["itemimpl",3],["formatter",3]],["result",6]],[[["itemmacro",3],["formatter",3]],["result",6]],[[["itemmacro2",3],["formatter",3]],["result",6]],[[["itemmod",3],["formatter",3]],["result",6]],[[["itemstatic",3],["formatter",3]],["result",6]],[[["itemstruct",3],["formatter",3]],["result",6]],[[["itemtrait",3],["formatter",3]],["result",6]],[[["itemtraitalias",3],["formatter",3]],["result",6]],[[["itemtype",3],["formatter",3]],["result",6]],[[["itemunion",3],["formatter",3]],["result",6]],[[["itemuse",3],["formatter",3]],["result",6]],[[["usetree",4],["formatter",3]],["result",6]],[[["usepath",3],["formatter",3]],["result",6]],[[["usename",3],["formatter",3]],["result",6]],[[["userename",3],["formatter",3]],["result",6]],[[["useglob",3],["formatter",3]],["result",6]],[[["usegroup",3],["formatter",3]],["result",6]],[[["foreignitem",4],["formatter",3]],["result",6]],[[["foreignitemfn",3],["formatter",3]],["result",6]],[[["foreignitemstatic",3],["formatter",3]],["result",6]],[[["foreignitemtype",3],["formatter",3]],["result",6]],[[["foreignitemmacro",3],["formatter",3]],["result",6]],[[["traititem",4],["formatter",3]],["result",6]],[[["traititemconst",3],["formatter",3]],["result",6]],[[["traititemmethod",3],["formatter",3]],["result",6]],[[["traititemtype",3],["formatter",3]],["result",6]],[[["traititemmacro",3],["formatter",3]],["result",6]],[[["implitem",4],["formatter",3]],["result",6]],[[["implitemconst",3],["formatter",3]],["result",6]],[[["implitemmethod",3],["formatter",3]],["result",6]],[[["implitemtype",3],["formatter",3]],["result",6]],[[["implitemmacro",3],["formatter",3]],["result",6]],[[["signature",3],["formatter",3]],["result",6]],[[["fnarg",4],["formatter",3]],["result",6]],[[["receiver",3],["formatter",3]],["result",6]],[[["file",3],["formatter",3]],["result",6]],[[["lit",4],["formatter",3]],["result",6]],[[["litstr",3],["formatter",3]],["result",6]],[[["litbytestr",3],["formatter",3]],["result",6]],[[["litbyte",3],["formatter",3]],["result",6]],[[["litchar",3],["formatter",3]],["result",6]],[[["litint",3],["formatter",3]],["result",6]],[[["litint",3],["formatter",3]],["result",6]],[[["litfloat",3],["formatter",3]],["result",6]],[[["litfloat",3],["formatter",3]],["result",6]],[[["litbool",3],["formatter",3]],["result",6]],[[["macro",3],["formatter",3]],["result",6]],[[["macrodelimiter",4],["formatter",3]],["result",6]],[[["deriveinput",3],["formatter",3]],["result",6]],[[["data",4],["formatter",3]],["result",6]],[[["datastruct",3],["formatter",3]],["result",6]],[[["dataenum",3],["formatter",3]],["result",6]],[[["dataunion",3],["formatter",3]],["result",6]],[[["binop",4],["formatter",3]],["result",6]],[[["unop",4],["formatter",3]],["result",6]],[[["block",3],["formatter",3]],["result",6]],[[["stmt",4],["formatter",3]],["result",6]],[[["local",3],["formatter",3]],["result",6]],[[["type",4],["formatter",3]],["result",6]],[[["typearray",3],["formatter",3]],["result",6]],[[["typebarefn",3],["formatter",3]],["result",6]],[[["typegroup",3],["formatter",3]],["result",6]],[[["typeimpltrait",3],["formatter",3]],["result",6]],[[["typeinfer",3],["formatter",3]],["result",6]],[[["typemacro",3],["formatter",3]],["result",6]],[[["typenever",3],["formatter",3]],["result",6]],[[["typeparen",3],["formatter",3]],["result",6]],[[["typepath",3],["formatter",3]],["result",6]],[[["typeptr",3],["formatter",3]],["result",6]],[[["typereference",3],["formatter",3]],["result",6]],[[["typeslice",3],["formatter",3]],["result",6]],[[["typetraitobject",3],["formatter",3]],["result",6]],[[["typetuple",3],["formatter",3]],["result",6]],[[["abi",3],["formatter",3]],["result",6]],[[["barefnarg",3],["formatter",3]],["result",6]],[[["variadic",3],["formatter",3]],["result",6]],[[["returntype",4],["formatter",3]],["result",6]],[[["pat",4],["formatter",3]],["result",6]],[[["patbox",3],["formatter",3]],["result",6]],[[["patident",3],["formatter",3]],["result",6]],[[["patlit",3],["formatter",3]],["result",6]],[[["patmacro",3],["formatter",3]],["result",6]],[[["pator",3],["formatter",3]],["result",6]],[[["patpath",3],["formatter",3]],["result",6]],[[["patrange",3],["formatter",3]],["result",6]],[[["patreference",3],["formatter",3]],["result",6]],[[["patrest",3],["formatter",3]],["result",6]],[[["patslice",3],["formatter",3]],["result",6]],[[["patstruct",3],["formatter",3]],["result",6]],[[["pattuple",3],["formatter",3]],["result",6]],[[["pattuplestruct",3],["formatter",3]],["result",6]],[[["pattype",3],["formatter",3]],["result",6]],[[["patwild",3],["formatter",3]],["result",6]],[[["fieldpat",3],["formatter",3]],["result",6]],[[["path",3],["formatter",3]],["result",6]],[[["pathsegment",3],["formatter",3]],["result",6]],[[["patharguments",4],["formatter",3]],["result",6]],[[["genericargument",4],["formatter",3]],["result",6]],[[["anglebracketedgenericarguments",3],["formatter",3]],["result",6]],[[["binding",3],["formatter",3]],["result",6]],[[["constraint",3],["formatter",3]],["result",6]],[[["parenthesizedgenericarguments",3],["formatter",3]],["result",6]],[[["qself",3],["formatter",3]],["result",6]],null,null,null,null,[[]],[[["extern",3]],["ident",3]],[[["underscore",3]],["ident",3]],[[["selfvalue",3]],["ident",3]],[[["selftype",3]],["ident",3]],[[["super",3]],["ident",3]],[[["crate",3]],["ident",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["meta",4]],[[]],[[["metanamevalue",3]],["meta",4]],[[["metalist",3]],["meta",4]],[[]],[[]],[[]],[[["lit",4]],["nestedmeta",4]],[[["meta",4]],["nestedmeta",4]],[[]],[[]],[[["fieldsunnamed",3]],["fields",4]],[[["fieldsnamed",3]],["fields",4]],[[]],[[]],[[]],[[]],[[["visrestricted",3]],["visibility",4]],[[["viscrate",3]],["visibility",4]],[[["vispublic",3]],["visibility",4]],[[]],[[]],[[]],[[["exprlit",3]],["expr",4]],[[["exprreference",3]],["expr",4]],[[["exprclosure",3]],["expr",4]],[[["exprcontinue",3]],["expr",4]],[[["exprunsafe",3]],["expr",4]],[[["exprfield",3]],["expr",4]],[[["exprwhile",3]],["expr",4]],[[["expryield",3]],["expr",4]],[[["exprbox",3]],["expr",4]],[[["exprforloop",3]],["expr",4]],[[["exprbinary",3]],["expr",4]],[[["exprgroup",3]],["expr",4]],[[["exprblock",3]],["expr",4]],[[["exprif",3]],["expr",4]],[[["exprawait",3]],["expr",4]],[[["exprindex",3]],["expr",4]],[[["exprlet",3]],["expr",4]],[[["exprunary",3]],["expr",4]],[[["exprloop",3]],["expr",4]],[[["exprmacro",3]],["expr",4]],[[["exprmatch",3]],["expr",4]],[[["exprasync",3]],["expr",4]],[[["exprmethodcall",3]],["expr",4]],[[["exprparen",3]],["expr",4]],[[["exprpath",3]],["expr",4]],[[]],[[["exprrange",3]],["expr",4]],[[["exprcast",3]],["expr",4]],[[["exprrepeat",3]],["expr",4]],[[["exprreturn",3]],["expr",4]],[[["exprstruct",3]],["expr",4]],[[["exprtry",3]],["expr",4]],[[["exprtryblock",3]],["expr",4]],[[["exprtuple",3]],["expr",4]],[[["exprtype",3]],["expr",4]],[[["exprcall",3]],["expr",4]],[[["exprbreak",3]],["expr",4]],[[["exprassignop",3]],["expr",4]],[[["exprassign",3]],["expr",4]],[[["exprarray",3]],["expr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]],["member",4]],[[["ident",3]],["member",4]],[[]],[[["index",3]],["member",4]],[[["usize",0]],["index",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["constparam",3]],["genericparam",4]],[[["lifetimedef",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[]],[[["ident",3]],["typeparam",3]],[[]],[[]],[[]],[[]],[[["lifetime",3]],["typeparambound",4]],[[["traitbound",3]],["typeparambound",4]],[[]],[[]],[[]],[[]],[[["predicatetype",3]],["wherepredicate",4]],[[]],[[["predicatelifetime",3]],["wherepredicate",4]],[[["predicateeq",3]],["wherepredicate",4]],[[]],[[]],[[]],[[["itemtrait",3]],["item",4]],[[["itemmacro2",3]],["item",4]],[[["itemconst",3]],["item",4]],[[]],[[["itemenum",3]],["item",4]],[[["itemexterncrate",3]],["item",4]],[[["itemfn",3]],["item",4]],[[["deriveinput",3]],["item",4]],[[["itemuse",3]],["item",4]],[[["itemmacro",3]],["item",4]],[[["itemunion",3]],["item",4]],[[["itemtype",3]],["item",4]],[[["itemtraitalias",3]],["item",4]],[[["itemimpl",3]],["item",4]],[[["itemstruct",3]],["item",4]],[[["itemforeignmod",3]],["item",4]],[[["itemstatic",3]],["item",4]],[[["itemmod",3]],["item",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usegroup",3]],["usetree",4]],[[["useglob",3]],["usetree",4]],[[["userename",3]],["usetree",4]],[[["usename",3]],["usetree",4]],[[]],[[["usepath",3]],["usetree",4]],[[]],[[]],[[]],[[]],[[]],[[["foreignitemmacro",3]],["foreignitem",4]],[[]],[[["foreignitemtype",3]],["foreignitem",4]],[[["foreignitemstatic",3]],["foreignitem",4]],[[["foreignitemfn",3]],["foreignitem",4]],[[]],[[]],[[]],[[]],[[["traititemconst",3]],["traititem",4]],[[["traititemmethod",3]],["traititem",4]],[[["traititemtype",3]],["traititem",4]],[[["traititemmacro",3]],["traititem",4]],[[]],[[]],[[]],[[]],[[]],[[["implitemtype",3]],["implitem",4]],[[["implitemmethod",3]],["implitem",4]],[[["implitemmacro",3]],["implitem",4]],[[["implitemconst",3]],["implitem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["receiver",3]],["fnarg",4]],[[["pattype",3]],["fnarg",4]],[[]],[[]],[[["litint",3]],["lit",4]],[[]],[[["litchar",3]],["lit",4]],[[["litfloat",3]],["lit",4]],[[["litbyte",3]],["lit",4]],[[["litbool",3]],["lit",4]],[[["litbytestr",3]],["lit",4]],[[["litstr",3]],["lit",4]],[[]],[[]],[[]],[[]],[[["literal",3]],["litint",3]],[[]],[[["literal",3]],["litfloat",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["itemstruct",3]],["deriveinput",3]],[[["itemenum",3]],["deriveinput",3]],[[["itemunion",3]],["deriveinput",3]],[[]],[[["dataunion",3]],["data",4]],[[["dataenum",3]],["data",4]],[[["datastruct",3]],["data",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typebarefn",3]],["type",4]],[[["typeinfer",3]],["type",4]],[[["typeparen",3]],["type",4]],[[]],[[["typepath",3]],["type",4]],[[["typetraitobject",3]],["type",4]],[[["typeptr",3]],["type",4]],[[["typereference",3]],["type",4]],[[["typeslice",3]],["type",4]],[[["typearray",3]],["type",4]],[[["typetuple",3]],["type",4]],[[["typegroup",3]],["type",4]],[[["typenever",3]],["type",4]],[[["typemacro",3]],["type",4]],[[["typeimpltrait",3]],["type",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["patmacro",3]],["pat",4]],[[["pator",3]],["pat",4]],[[["patpath",3]],["pat",4]],[[["patstruct",3]],["pat",4]],[[["patslice",3]],["pat",4]],[[["patbox",3]],["pat",4]],[[["patrest",3]],["pat",4]],[[["patreference",3]],["pat",4]],[[["patlit",3]],["pat",4]],[[["patrange",3]],["pat",4]],[[["patident",3]],["pat",4]],[[["pattuple",3]],["pat",4]],[[["pattuplestruct",3]],["pat",4]],[[["pattype",3]],["pat",4]],[[]],[[["patwild",3]],["pat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[]],[[],["pathsegment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["path",3]],["option",4,[["ident",3]]]],null,null,null,null,null,null,null,null,[[["ident",3],["",0]]],[[["implgenerics",3],["",0]]],[[["typegenerics",3],["",0]]],[[["turbofish",3],["",0]]],[[["lifetime",3],["",0]]],[[["attribute",3],["",0]]],[[["attrstyle",4],["",0]]],[[["meta",4],["",0]]],[[["metalist",3],["",0]]],[[["metanamevalue",3],["",0]]],[[["nestedmeta",4],["",0]]],[[["variant",3],["",0]]],[[["fields",4],["",0]]],[[["fieldsnamed",3],["",0]]],[[["fieldsunnamed",3],["",0]]],[[["field",3],["",0]]],[[["visibility",4],["",0]]],[[["vispublic",3],["",0]]],[[["viscrate",3],["",0]]],[[["visrestricted",3],["",0]]],[[["expr",4],["",0]]],[[["exprarray",3],["",0]]],[[["exprassign",3],["",0]]],[[["exprassignop",3],["",0]]],[[["exprasync",3],["",0]]],[[["exprawait",3],["",0]]],[[["exprbinary",3],["",0]]],[[["exprblock",3],["",0]]],[[["exprbox",3],["",0]]],[[["exprbreak",3],["",0]]],[[["exprcall",3],["",0]]],[[["exprcast",3],["",0]]],[[["exprclosure",3],["",0]]],[[["exprcontinue",3],["",0]]],[[["exprfield",3],["",0]]],[[["exprforloop",3],["",0]]],[[["exprgroup",3],["",0]]],[[["exprif",3],["",0]]],[[["exprindex",3],["",0]]],[[["exprlet",3],["",0]]],[[["exprlit",3],["",0]]],[[["exprloop",3],["",0]]],[[["exprmacro",3],["",0]]],[[["exprmatch",3],["",0]]],[[["exprmethodcall",3],["",0]]],[[["exprparen",3],["",0]]],[[["exprpath",3],["",0]]],[[["exprrange",3],["",0]]],[[["exprreference",3],["",0]]],[[["exprrepeat",3],["",0]]],[[["exprreturn",3],["",0]]],[[["exprstruct",3],["",0]]],[[["exprtry",3],["",0]]],[[["exprtryblock",3],["",0]]],[[["exprtuple",3],["",0]]],[[["exprtype",3],["",0]]],[[["exprunary",3],["",0]]],[[["exprunsafe",3],["",0]]],[[["exprwhile",3],["",0]]],[[["expryield",3],["",0]]],[[["member",4],["",0]]],[[["index",3],["",0]]],[[["methodturbofish",3],["",0]]],[[["genericmethodargument",4],["",0]]],[[["fieldvalue",3],["",0]]],[[["label",3],["",0]]],[[["arm",3],["",0]]],[[["rangelimits",4],["",0]]],[[["generics",3],["",0]]],[[["genericparam",4],["",0]]],[[["typeparam",3],["",0]]],[[["lifetimedef",3],["",0]]],[[["constparam",3],["",0]]],[[["boundlifetimes",3],["",0]]],[[["typeparambound",4],["",0]]],[[["traitbound",3],["",0]]],[[["traitboundmodifier",4],["",0]]],[[["whereclause",3],["",0]]],[[["wherepredicate",4],["",0]]],[[["predicatetype",3],["",0]]],[[["predicatelifetime",3],["",0]]],[[["predicateeq",3],["",0]]],[[["item",4],["",0]]],[[["itemconst",3],["",0]]],[[["itemenum",3],["",0]]],[[["itemexterncrate",3],["",0]]],[[["itemfn",3],["",0]]],[[["itemforeignmod",3],["",0]]],[[["itemimpl",3],["",0]]],[[["itemmacro",3],["",0]]],[[["itemmacro2",3],["",0]]],[[["itemmod",3],["",0]]],[[["itemstatic",3],["",0]]],[[["itemstruct",3],["",0]]],[[["itemtrait",3],["",0]]],[[["itemtraitalias",3],["",0]]],[[["itemtype",3],["",0]]],[[["itemunion",3],["",0]]],[[["itemuse",3],["",0]]],[[["usetree",4],["",0]]],[[["usepath",3],["",0]]],[[["usename",3],["",0]]],[[["userename",3],["",0]]],[[["useglob",3],["",0]]],[[["usegroup",3],["",0]]],[[["foreignitem",4],["",0]]],[[["foreignitemfn",3],["",0]]],[[["foreignitemstatic",3],["",0]]],[[["foreignitemtype",3],["",0]]],[[["foreignitemmacro",3],["",0]]],[[["traititem",4],["",0]]],[[["traititemconst",3],["",0]]],[[["traititemmethod",3],["",0]]],[[["traititemtype",3],["",0]]],[[["traititemmacro",3],["",0]]],[[["implitem",4],["",0]]],[[["implitemconst",3],["",0]]],[[["implitemmethod",3],["",0]]],[[["implitemtype",3],["",0]]],[[["implitemmacro",3],["",0]]],[[["signature",3],["",0]]],[[["fnarg",4],["",0]]],[[["receiver",3],["",0]]],[[["file",3],["",0]]],[[["lit",4],["",0]]],[[["litstr",3],["",0]]],[[["litbytestr",3],["",0]]],[[["litbyte",3],["",0]]],[[["litchar",3],["",0]]],[[["litint",3],["",0]]],[[["litfloat",3],["",0]]],[[["litbool",3],["",0]]],[[["macro",3],["",0]]],[[["macrodelimiter",4],["",0]]],[[["deriveinput",3],["",0]]],[[["data",4],["",0]]],[[["datastruct",3],["",0]]],[[["dataenum",3],["",0]]],[[["dataunion",3],["",0]]],[[["binop",4],["",0]]],[[["unop",4],["",0]]],[[["block",3],["",0]]],[[["stmt",4],["",0]]],[[["local",3],["",0]]],[[["type",4],["",0]]],[[["typearray",3],["",0]]],[[["typebarefn",3],["",0]]],[[["typegroup",3],["",0]]],[[["typeimpltrait",3],["",0]]],[[["typeinfer",3],["",0]]],[[["typemacro",3],["",0]]],[[["typenever",3],["",0]]],[[["typeparen",3],["",0]]],[[["typepath",3],["",0]]],[[["typeptr",3],["",0]]],[[["typereference",3],["",0]]],[[["typeslice",3],["",0]]],[[["typetraitobject",3],["",0]]],[[["typetuple",3],["",0]]],[[["abi",3],["",0]]],[[["barefnarg",3],["",0]]],[[["variadic",3],["",0]]],[[["returntype",4],["",0]]],[[["pat",4],["",0]]],[[["patbox",3],["",0]]],[[["patident",3],["",0]]],[[["patlit",3],["",0]]],[[["patmacro",3],["",0]]],[[["pator",3],["",0]]],[[["patpath",3],["",0]]],[[["patrange",3],["",0]]],[[["patreference",3],["",0]]],[[["patrest",3],["",0]]],[[["patslice",3],["",0]]],[[["patstruct",3],["",0]]],[[["pattuple",3],["",0]]],[[["pattuplestruct",3],["",0]]],[[["pattype",3],["",0]]],[[["patwild",3],["",0]]],[[["fieldpat",3],["",0]]],[[["path",3],["",0]]],[[["pathsegment",3],["",0]]],[[["patharguments",4],["",0]]],[[["genericargument",4],["",0]]],[[["anglebracketedgenericarguments",3],["",0]]],[[["binding",3],["",0]]],[[["constraint",3],["",0]]],[[["parenthesizedgenericarguments",3],["",0]]],[[["qself",3],["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]]],[[["fields",4]],["bool",0]],[[["patharguments",4]],["bool",0]],[[["path",3],["",0]],["bool",0]],[[["patharguments",4]],["bool",0]],null,null,null,null,null,[[["fields",4]],["iter",3,[["field",3]]]],[[["fields",4]],["itermut",3,[["field",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["fields",4]],["usize",0]],null,null,null,null,null,[[["receiver",3]],["option",4,[["lifetime",3]]]],null,null,null,[[["generics",3]],["lifetimes",3]],null,null,null,null,[[["generics",3]],["lifetimesmut",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["generics",3]],["whereclause",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0],["span",3]],["ident",3]],[[["str",0],["span",3]],["lifetime",3]],[[["lifetime",3]],["lifetimedef",3]],[[["literal",3]],["lit",4]],[[["str",0],["span",3]],["litstr",3]],[[["span",3]],["litbytestr",3]],[[["u8",0],["span",3]],["litbyte",3]],[[["char",0],["span",3]],["litchar",3]],[[["str",0],["span",3]],["litint",3]],[[["str",0],["span",3]],["litfloat",3]],[[["bool",0],["span",3]],["litbool",3]],[[["str",0],["span",3]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["parsestream",6]],["result",6,[["lifetime",3]]]],[[["parsestream",6]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["metalist",3]]]],[[["parsestream",6]],["result",6,[["metanamevalue",3]]]],[[["parsestream",6]],["result",6,[["nestedmeta",4]]]],[[["parsestream",6]],["result",6,[["variant",3]]]],[[["parsestream",6]],["result",6,[["fieldsnamed",3]]]],[[["parsestream",6]],["result",6,[["fieldsunnamed",3]]]],[[["parsestream",6]],["result",6,[["visibility",4]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["parsestream",6]],["result",6,[["exprarray",3]]]],[[["parsestream",6]],["result",6,[["exprassign",3]]]],[[["parsestream",6]],["result",6,[["exprassignop",3]]]],[[["parsestream",6]],["result",6,[["exprasync",3]]]],[[["parsestream",6]],["result",6,[["exprawait",3]]]],[[["parsestream",6]],["result",6,[["exprbinary",3]]]],[[["parsestream",6]],["result",6,[["exprblock",3]]]],[[["parsestream",6]],["result",6,[["exprbox",3]]]],[[["parsestream",6]],["result",6,[["exprbreak",3]]]],[[["parsestream",6]],["result",6,[["exprcall",3]]]],[[["parsestream",6]],["result",6,[["exprcast",3]]]],[[["parsestream",6]],["result",6,[["exprclosure",3]]]],[[["parsestream",6]],["result",6,[["exprcontinue",3]]]],[[["parsestream",6]],["result",6,[["exprfield",3]]]],[[["parsestream",6]],["result",6,[["exprforloop",3]]]],[[["parsestream",6]],["result",6,[["exprif",3]]]],[[["parsestream",6]],["result",6,[["exprindex",3]]]],[[["parsestream",6]],["result",6,[["exprlet",3]]]],[[["parsestream",6]],["result",6,[["exprlit",3]]]],[[["parsestream",6]],["result",6,[["exprloop",3]]]],[[["parsestream",6]],["result",6,[["exprmacro",3]]]],[[["parsestream",6]],["result",6,[["exprmatch",3]]]],[[["parsestream",6]],["result",6,[["exprmethodcall",3]]]],[[["parsestream",6]],["result",6,[["exprparen",3]]]],[[["parsestream",6]],["result",6,[["exprpath",3]]]],[[["parsestream",6]],["result",6,[["exprrange",3]]]],[[["parsestream",6]],["result",6,[["exprreference",3]]]],[[["parsestream",6]],["result",6,[["exprrepeat",3]]]],[[["parsestream",6]],["result",6,[["exprreturn",3]]]],[[["parsestream",6]],["result",6,[["exprstruct",3]]]],[[["parsestream",6]],["result",6,[["exprtry",3]]]],[[["parsestream",6]],["result",6,[["exprtryblock",3]]]],[[["parsestream",6]],["result",6,[["exprtuple",3]]]],[[["parsestream",6]],["result",6,[["exprtype",3]]]],[[["parsestream",6]],["result",6,[["exprunary",3]]]],[[["parsestream",6]],["result",6,[["exprunsafe",3]]]],[[["parsestream",6]],["result",6,[["exprwhile",3]]]],[[["parsestream",6]],["result",6,[["expryield",3]]]],[[["parsestream",6]],["result",6,[["member",4]]]],[[["parsestream",6]],["result",6,[["index",3]]]],[[["parsestream",6]],["result",6,[["methodturbofish",3]]]],[[["parsestream",6]],["result",6,[["genericmethodargument",4]]]],[[["parsestream",6]],["result",6,[["fieldvalue",3]]]],[[["parsestream",6]],["result",6,[["label",3]]]],[[["parsestream",6]],["result",6,[["arm",3]]]],[[["parsestream",6]],["result",6,[["rangelimits",4]]]],[[["parsestream",6]],["result",6,[["generics",3]]]],[[["parsestream",6]],["result",6,[["genericparam",4]]]],[[["parsestream",6]],["result",6,[["typeparam",3]]]],[[["parsestream",6]],["result",6,[["lifetimedef",3]]]],[[["parsestream",6]],["result",6,[["constparam",3]]]],[[["parsestream",6]],["result",6,[["boundlifetimes",3]]]],[[["parsestream",6]],["result",6,[["typeparambound",4]]]],[[["parsestream",6]],["result",6,[["traitbound",3]]]],[[["parsestream",6]],["result",6,[["traitboundmodifier",4]]]],[[["parsestream",6]],["result",6,[["whereclause",3]]]],[[["parsestream",6]],["result",6,[["wherepredicate",4]]]],[[["parsestream",6]],["result",6,[["item",4]]]],[[["parsestream",6]],["result",6,[["itemconst",3]]]],[[["parsestream",6]],["result",6,[["itemenum",3]]]],[[["parsestream",6]],["result",6,[["itemexterncrate",3]]]],[[["parsestream",6]],["result",6,[["itemfn",3]]]],[[["parsestream",6]],["result",6,[["itemforeignmod",3]]]],[[["parsestream",6]],["result",6,[["itemimpl",3]]]],[[["parsestream",6]],["result",6,[["itemmacro",3]]]],[[["parsestream",6]],["result",6,[["itemmacro2",3]]]],[[["parsestream",6]],["result",6,[["itemmod",3]]]],[[["parsestream",6]],["result",6,[["itemstatic",3]]]],[[["parsestream",6]],["result",6,[["itemstruct",3]]]],[[["parsestream",6]],["result",6,[["itemtrait",3]]]],[[["parsestream",6]],["result",6,[["itemtraitalias",3]]]],[[["parsestream",6]],["result",6,[["itemtype",3]]]],[[["parsestream",6]],["result",6,[["itemunion",3]]]],[[["parsestream",6]],["result",6,[["itemuse",3]]]],[[["parsestream",6]],["result",6,[["usetree",4]]]],[[["parsestream",6]],["result",6,[["foreignitem",4]]]],[[["parsestream",6]],["result",6,[["foreignitemfn",3]]]],[[["parsestream",6]],["result",6,[["foreignitemstatic",3]]]],[[["parsestream",6]],["result",6,[["foreignitemtype",3]]]],[[["parsestream",6]],["result",6,[["foreignitemmacro",3]]]],[[["parsestream",6]],["result",6,[["traititem",4]]]],[[["parsestream",6]],["result",6,[["traititemconst",3]]]],[[["parsestream",6]],["result",6,[["traititemmethod",3]]]],[[["parsestream",6]],["result",6,[["traititemtype",3]]]],[[["parsestream",6]],["result",6,[["traititemmacro",3]]]],[[["parsestream",6]],["result",6,[["implitem",4]]]],[[["parsestream",6]],["result",6,[["implitemconst",3]]]],[[["parsestream",6]],["result",6,[["implitemmethod",3]]]],[[["parsestream",6]],["result",6,[["implitemtype",3]]]],[[["parsestream",6]],["result",6,[["implitemmacro",3]]]],[[["parsestream",6]],["result",6,[["signature",3]]]],[[["parsestream",6]],["result",6,[["fnarg",4]]]],[[["parsestream",6]],["result",6,[["receiver",3]]]],[[["parsestream",6]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["lit",4]]]],[[["parsestream",6]],["result",6,[["litstr",3]]]],[[["litstr",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["litbytestr",3]]]],[[["parsestream",6]],["result",6,[["litbyte",3]]]],[[["parsestream",6]],["result",6,[["litchar",3]]]],[[["parsestream",6]],["result",6,[["litint",3]]]],[[["parsestream",6]],["result",6,[["litfloat",3]]]],[[["parsestream",6]],["result",6,[["litbool",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["deriveinput",3]]]],[[["parsestream",6]],["result",6,[["binop",4]]]],[[["parsestream",6]],["result",6,[["unop",4]]]],[[["parsestream",6]],["result",6,[["block",3]]]],[[["parsestream",6]],["result",6,[["stmt",4]]]],[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typearray",3]]]],[[["parsestream",6]],["result",6,[["typebarefn",3]]]],[[["parsestream",6]],["result",6,[["typegroup",3]]]],[[["parsestream",6]],["result",6,[["typeimpltrait",3]]]],[[["parsestream",6]],["result",6,[["typeinfer",3]]]],[[["parsestream",6]],["result",6,[["typemacro",3]]]],[[["parsestream",6]],["result",6,[["typenever",3]]]],[[["parsestream",6]],["result",6,[["typeparen",3]]]],[[["parsestream",6]],["result",6,[["typepath",3]]]],[[["parsestream",6]],["result",6,[["typeptr",3]]]],[[["parsestream",6]],["result",6,[["typereference",3]]]],[[["parsestream",6]],["result",6,[["typeslice",3]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["typetuple",3]]]],[[["parsestream",6]],["result",6,[["abi",3]]]],[[["parsestream",6]],["result",6,[["barefnarg",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],[[["parsestream",6]],["result",6,[["pat",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["pathsegment",3]]]],[[["parsestream",6]],["result",6,[["genericargument",4]]]],[[["parsestream",6]],["result",6,[["anglebracketedgenericarguments",3]]]],[[["parsestream",6]],["result",6,[["binding",3]]]],[[["parsestream",6]],["result",6,[["constraint",3]]]],[[["parsestream",6]],["result",6,[["parenthesizedgenericarguments",3]]]],[[["tokenstream",3]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["ident",3]]]],[[["attribute",3]],["result",6,[["parse",8]]]],[[["attribute",3],["parser",8]],["result",6]],[[["macro",3]],["result",6,[["parse",8]]]],[[["macro",3],["parser",8]],["result",6]],[[["str",0]],["result",6,[["file",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,[[["attribute",3]],["result",6,[["meta",4]]]],[[["parsestream",6]],["result",6,[["path",3]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["parsestream",6]],["result",6,[["vec",3,[["attribute",3]]]]]],null,null,[[["str",0]],["result",6,[["parse",8]]]],[[["parsestream",6]],["result",6,[["field",3]]]],[[["litstr",3],["parser",8]],["result",6]],[[["parsestream",6]],["result",6,[["vec",3,[["stmt",4]]]]]],[[["parsestream",6]],["result",6,[["expr",4]]]],[[["ident",3],["ident",3]],["option",4,[["ordering",4]]]],[[["lifetime",3],["lifetime",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,[[["meta",4]],["path",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["signature",3]],["option",4,[["fnarg",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ident",3],["span",3]]],[[["lifetime",3],["span",3]]],[[["lit",4],["span",3]]],[[["litstr",3],["span",3]]],[[["litbytestr",3],["span",3]]],[[["litbyte",3],["span",3]]],[[["litchar",3],["span",3]]],[[["litint",3],["span",3]]],[[["litfloat",3],["span",3]]],[[["litbool",3],["span",3]]],null,null,null,null,null,[[["",0]],["span",3]],[[["ident",3]],["option",4,[["span",3]]]],[[["ident",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lifetime",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["member",4]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["index",3]],["option",4,[["span",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["lit",4]],["span",3]],[[["",0]],["span",3]],[[["litstr",3]],["span",3]],[[["",0]],["span",3]],[[["litbytestr",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["litbyte",3]],["span",3]],[[["litchar",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["litint",3]],["span",3]],[[["",0]],["span",3]],[[["litfloat",3]],["span",3]],[[["",0]],["span",3]],[[["litbool",3]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,[[["generics",3]]],null,null,null,null,null,null,null,null,null,[[["lit",4]],["str",0]],[[["litstr",3]],["str",0]],[[["litbytestr",3]],["str",0]],[[["litbyte",3]],["str",0]],[[["litchar",3]],["str",0]],[[["litint",3]],["str",0]],[[["litfloat",3]],["str",0]],null,null,nullstring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["ident",3],["tokenstream",3]]],[[["implgenerics",3],["tokenstream",3]]],[[["typegenerics",3],["tokenstream",3]]],[[["turbofish",3],["tokenstream",3]]],[[["lifetime",3],["tokenstream",3]]],[[["attribute",3],["tokenstream",3]]],[[["meta",4],["tokenstream",3]]],[[["metalist",3],["tokenstream",3]]],[[["metanamevalue",3],["tokenstream",3]]],[[["nestedmeta",4],["tokenstream",3]]],[[["variant",3],["tokenstream",3]]],[[["fields",4],["tokenstream",3]]],[[["fieldsnamed",3],["tokenstream",3]]],[[["fieldsunnamed",3],["tokenstream",3]]],[[["field",3],["tokenstream",3]]],[[["visibility",4],["tokenstream",3]]],[[["vispublic",3],["tokenstream",3]]],[[["viscrate",3],["tokenstream",3]]],[[["visrestricted",3],["tokenstream",3]]],[[["expr",4],["tokenstream",3]]],[[["exprarray",3],["tokenstream",3]]],[[["exprassign",3],["tokenstream",3]]],[[["exprassignop",3],["tokenstream",3]]],[[["exprasync",3],["tokenstream",3]]],[[["exprawait",3],["tokenstream",3]]],[[["exprbinary",3],["tokenstream",3]]],[[["exprblock",3],["tokenstream",3]]],[[["exprbox",3],["tokenstream",3]]],[[["exprbreak",3],["tokenstream",3]]],[[["exprcall",3],["tokenstream",3]]],[[["exprcast",3],["tokenstream",3]]],[[["exprclosure",3],["tokenstream",3]]],[[["exprcontinue",3],["tokenstream",3]]],[[["exprfield",3],["tokenstream",3]]],[[["exprforloop",3],["tokenstream",3]]],[[["exprgroup",3],["tokenstream",3]]],[[["exprif",3],["tokenstream",3]]],[[["exprindex",3],["tokenstream",3]]],[[["exprlet",3],["tokenstream",3]]],[[["exprlit",3],["tokenstream",3]]],[[["exprloop",3],["tokenstream",3]]],[[["exprmacro",3],["tokenstream",3]]],[[["exprmatch",3],["tokenstream",3]]],[[["exprmethodcall",3],["tokenstream",3]]],[[["exprparen",3],["tokenstream",3]]],[[["exprpath",3],["tokenstream",3]]],[[["exprrange",3],["tokenstream",3]]],[[["exprreference",3],["tokenstream",3]]],[[["exprrepeat",3],["tokenstream",3]]],[[["exprreturn",3],["tokenstream",3]]],[[["exprstruct",3],["tokenstream",3]]],[[["exprtry",3],["tokenstream",3]]],[[["exprtryblock",3],["tokenstream",3]]],[[["exprtuple",3],["tokenstream",3]]],[[["exprtype",3],["tokenstream",3]]],[[["exprunary",3],["tokenstream",3]]],[[["exprunsafe",3],["tokenstream",3]]],[[["exprwhile",3],["tokenstream",3]]],[[["expryield",3],["tokenstream",3]]],[[["member",4],["tokenstream",3]]],[[["index",3],["tokenstream",3]]],[[["methodturbofish",3],["tokenstream",3]]],[[["genericmethodargument",4],["tokenstream",3]]],[[["fieldvalue",3],["tokenstream",3]]],[[["label",3],["tokenstream",3]]],[[["arm",3],["tokenstream",3]]],[[["rangelimits",4],["tokenstream",3]]],[[["generics",3],["tokenstream",3]]],[[["genericparam",4],["tokenstream",3]]],[[["typeparam",3],["tokenstream",3]]],[[["lifetimedef",3],["tokenstream",3]]],[[["constparam",3],["tokenstream",3]]],[[["boundlifetimes",3],["tokenstream",3]]],[[["typeparambound",4],["tokenstream",3]]],[[["traitbound",3],["tokenstream",3]]],[[["traitboundmodifier",4],["tokenstream",3]]],[[["whereclause",3],["tokenstream",3]]],[[["wherepredicate",4],["tokenstream",3]]],[[["predicatetype",3],["tokenstream",3]]],[[["predicatelifetime",3],["tokenstream",3]]],[[["predicateeq",3],["tokenstream",3]]],[[["item",4],["tokenstream",3]]],[[["itemconst",3],["tokenstream",3]]],[[["itemenum",3],["tokenstream",3]]],[[["itemexterncrate",3],["tokenstream",3]]],[[["itemfn",3],["tokenstream",3]]],[[["itemforeignmod",3],["tokenstream",3]]],[[["itemimpl",3],["tokenstream",3]]],[[["itemmacro",3],["tokenstream",3]]],[[["itemmacro2",3],["tokenstream",3]]],[[["itemmod",3],["tokenstream",3]]],[[["itemstatic",3],["tokenstream",3]]],[[["itemstruct",3],["tokenstream",3]]],[[["itemtrait",3],["tokenstream",3]]],[[["itemtraitalias",3],["tokenstream",3]]],[[["itemtype",3],["tokenstream",3]]],[[["itemunion",3],["tokenstream",3]]],[[["itemuse",3],["tokenstream",3]]],[[["usetree",4],["tokenstream",3]]],[[["usepath",3],["tokenstream",3]]],[[["usename",3],["tokenstream",3]]],[[["userename",3],["tokenstream",3]]],[[["useglob",3],["tokenstream",3]]],[[["usegroup",3],["tokenstream",3]]],[[["foreignitem",4],["tokenstream",3]]],[[["foreignitemfn",3],["tokenstream",3]]],[[["foreignitemstatic",3],["tokenstream",3]]],[[["foreignitemtype",3],["tokenstream",3]]],[[["foreignitemmacro",3],["tokenstream",3]]],[[["traititem",4],["tokenstream",3]]],[[["traititemconst",3],["tokenstream",3]]],[[["traititemmethod",3],["tokenstream",3]]],[[["traititemtype",3],["tokenstream",3]]],[[["traititemmacro",3],["tokenstream",3]]],[[["implitem",4],["tokenstream",3]]],[[["implitemconst",3],["tokenstream",3]]],[[["implitemmethod",3],["tokenstream",3]]],[[["implitemtype",3],["tokenstream",3]]],[[["implitemmacro",3],["tokenstream",3]]],[[["signature",3],["tokenstream",3]]],[[["fnarg",4],["tokenstream",3]]],[[["receiver",3],["tokenstream",3]]],[[["file",3],["tokenstream",3]]],[[["lit",4],["tokenstream",3]]],[[["litstr",3],["tokenstream",3]]],[[["litbytestr",3],["tokenstream",3]]],[[["litbyte",3],["tokenstream",3]]],[[["litchar",3],["tokenstream",3]]],[[["litint",3],["tokenstream",3]]],[[["litfloat",3],["tokenstream",3]]],[[["litbool",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["deriveinput",3],["tokenstream",3]]],[[["binop",4],["tokenstream",3]]],[[["unop",4],["tokenstream",3]]],[[["block",3],["tokenstream",3]]],[[["stmt",4],["tokenstream",3]]],[[["local",3],["tokenstream",3]]],[[["type",4],["tokenstream",3]]],[[["typearray",3],["tokenstream",3]]],[[["typebarefn",3],["tokenstream",3]]],[[["typegroup",3],["tokenstream",3]]],[[["typeimpltrait",3],["tokenstream",3]]],[[["typeinfer",3],["tokenstream",3]]],[[["typemacro",3],["tokenstream",3]]],[[["typenever",3],["tokenstream",3]]],[[["typeparen",3],["tokenstream",3]]],[[["typepath",3],["tokenstream",3]]],[[["typeptr",3],["tokenstream",3]]],[[["typereference",3],["tokenstream",3]]],[[["typeslice",3],["tokenstream",3]]],[[["typetraitobject",3],["tokenstream",3]]],[[["typetuple",3],["tokenstream",3]]],[[["abi",3],["tokenstream",3]]],[[["barefnarg",3],["tokenstream",3]]],[[["variadic",3],["tokenstream",3]]],[[["returntype",4],["tokenstream",3]]],[[["pat",4],["tokenstream",3]]],[[["patbox",3],["tokenstream",3]]],[[["patident",3],["tokenstream",3]]],[[["patlit",3],["tokenstream",3]]],[[["patmacro",3],["tokenstream",3]]],[[["pator",3],["tokenstream",3]]],[[["patpath",3],["tokenstream",3]]],[[["patrange",3],["tokenstream",3]]],[[["patreference",3],["tokenstream",3]]],[[["patrest",3],["tokenstream",3]]],[[["patslice",3],["tokenstream",3]]],[[["patstruct",3],["tokenstream",3]]],[[["pattuple",3],["tokenstream",3]]],[[["pattuplestruct",3],["tokenstream",3]]],[[["pattype",3],["tokenstream",3]]],[[["patwild",3],["tokenstream",3]]],[[["fieldpat",3],["tokenstream",3]]],[[["path",3],["tokenstream",3]]],[[["pathsegment",3],["tokenstream",3]]],[[["patharguments",4],["tokenstream",3]]],[[["genericargument",4],["tokenstream",3]]],[[["anglebracketedgenericarguments",3],["tokenstream",3]]],[[["binding",3],["tokenstream",3]]],[[["constraint",3],["tokenstream",3]]],[[["parenthesizedgenericarguments",3],["tokenstream",3]]],null,[[["litstr",3]],["literal",3]],[[["litbytestr",3]],["literal",3]],[[["litbyte",3]],["literal",3]],[[["litchar",3]],["literal",3]],[[["litint",3]],["literal",3]],[[["litfloat",3]],["literal",3]],[[["litbool",3]],["ident",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["generics",3]],["typeparams",3]],[[["generics",3]],["typeparamsmut",3]],null,null,null,null,null,null,null,null,null,[[["ident",3]],["ident",3]],null,null,null,null,null,null,[[["litstr",3]],["string",3]],[[["litbytestr",3]],["vec",3,[["u8",0]]]],[[["litbyte",3]],["u8",0]],[[["litchar",3]],["char",0]],[[["litbool",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["parsestream",6]],["result",6,[["type",4]]]],[[["parsestream",6]],["result",6,[["typeimpltrait",3]]]],[[["parsestream",6]],["result",6,[["typetraitobject",3]]]],[[["parsestream",6]],["result",6,[["returntype",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenbuffer",3]],["cursor",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cursor",3]],["cursor",3]],[[["",0],["",0]]],[[],["cursor",3]],[[["cursor",3]],["bool",0]],[[["cursor",3],["cursor",3]],["bool",0]],[[]],[[]],[[["cursor",3],["delimiter",4]],["option",4]],[[["cursor",3]],["option",4]],[[]],[[]],[[["cursor",3]],["option",4]],[[["cursor",3]],["option",4]],[[["tokenstream",3]],["tokenbuffer",3]],[[["tokenstream",3]],["tokenbuffer",3]],[[["cursor",3],["cursor",3]],["option",4,[["ordering",4]]]],[[["cursor",3]],["option",4]],[[["cursor",3]],["span",3]],[[["",0]]],[[["cursor",3]],["tokenstream",3]],[[["cursor",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["parsestream",6]],["result",6]],null,[[["",0]],["ident",3]],null,null,null,null,null,null,null,null,null,null,null,[[["parsebuffer",3],["parsebuffer",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parsebuffer",3]],["result",6]],[[["stepcursor",3]],["stepcursor",3]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["error",3],["error",3]]],[[["parsebuffer",3]],["cursor",3]],[[["stepcursor",3]]],null,[[["parsebuffer",3]]],[[["nothing",3],["nothing",3]],["bool",0]],[[["lookahead1",3]],["error",3]],[[["parsebuffer",3],["display",8]],["error",3]],[[["stepcursor",3],["display",8]],["error",3]],[[["error",3],["intoiterator",8]]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["parsebuffer",3],["formatter",3]],["result",6]],[[["nothing",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["parsebuffer",3]],["parsebuffer",3]],[[]],[[]],[[]],[[]],[[["lexerror",3]],["error",3]],[[]],[[["nothing",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["tokenstream",3]],[[["error",3]]],[[["error",3]]],[[["parsebuffer",3]],["bool",0]],[[["parsebuffer",3]],["lookahead1",3]],[[["span",3],["display",8]],["error",3]],[[["totokens",8],["display",8]],["error",3]],[[["parsestream",6]],["result",6]],[[["parsebuffer",3]],["result",6,[["parse",8]]]],[[["tokenstream",3]],["result",6]],[[["parsestream",6]],["result",6,[["nothing",3]]]],[[["tokenstream",3]],["result",6]],[[["str",0]],["result",6]],[[["parsebuffer",3]],["result",6,[["punctuated",3,[["parse",8]]]]]],[[["lookahead1",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3],["peek",8]],["bool",0]],[[["parsebuffer",3]],["span",3]],[[["error",3]],["span",3]],[[["parsebuffer",3]],["result",6]],[[["error",3]],["tokenstream",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["punctuated",3]]],[[["punctuated",3]],["punctuated",3]],[[["pairs",3]],["pairs",3]],[[["intopairs",3]],["intopairs",3]],[[["intoiter",3]],["intoiter",3]],[[["iter",3]],["iter",3]],[[["pair",4]],["pair",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["punctuated",3]],[[["punctuated",3]],["bool",0]],[[["punctuated",3],["punctuated",3]],["bool",0]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3],["intoiterator",8]]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[["punctuated",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["punctuated",3]],[[["intoiterator",8]],["punctuated",3]],[[["punctuated",3],["",0]]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[["punctuated",3],["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["punctuated",3]],["intopairs",3]],[[["pair",4]]],[[["pair",4]]],[[["punctuated",3]],["bool",0]],[[["punctuated",3]],["iter",3]],[[["punctuated",3]],["itermut",3]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["option",4]],[[["punctuated",3]],["usize",0]],[[["pairs",3]],["usize",0]],[[["pairsmut",3]],["usize",0]],[[["intopairs",3]],["usize",0]],[[["intoiter",3]],["usize",0]],[[["iter",3]],["usize",0]],[[["itermut",3]],["usize",0]],[[],["punctuated",3]],[[["option",4]],["pair",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["pairs",3]],["option",4]],[[["pairsmut",3]],["option",4]],[[["intopairs",3]],["option",4]],[[["intoiter",3]],["option",4]],[[["iter",3]],["option",4]],[[["itermut",3]],["option",4]],[[["punctuated",3]],["pairs",3]],[[["punctuated",3]],["pairsmut",3]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["parsestream",6]],["result",6,[["punctuated",3]]]],[[["punctuated",3]],["option",4,[["pair",4]]]],[[["pair",4]],["option",4]],[[["pair",4]],["option",4]],[[["punctuated",3]]],[[["punctuated",3]]],[[["punctuated",3]]],[[["pairs",3]]],[[["pairsmut",3]]],[[["intopairs",3]]],[[["intoiter",3]]],[[["iter",3]]],[[["itermut",3]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["punctuated",3],["tokenstream",3]]],[[["pair",4],["tokenstream",3]]],[[["punctuated",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["pair",4]],["",0]],[[["pair",4]],["",0]],null,null,null,null,[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullunderscore",3]],["underscore",3]],[[["abstract",3]],["abstract",3]],[[["as",3]],["as",3]],[[["async",3]],["async",3]],[[["auto",3]],["auto",3]],[[["await",3]],["await",3]],[[["become",3]],["become",3]],[[["box",3]],["box",3]],[[["break",3]],["break",3]],[[["const",3]],["const",3]],[[["continue",3]],["continue",3]],[[["crate",3]],["crate",3]],[[["default",3]],["default",3]],[[["do",3]],["do",3]],[[["dyn",3]],["dyn",3]],[[["else",3]],["else",3]],[[["enum",3]],["enum",3]],[[["extern",3]],["extern",3]],[[["final",3]],["final",3]],[[["fn",3]],["fn",3]],[[["for",3]],["for",3]],[[["if",3]],["if",3]],[[["impl",3]],["impl",3]],[[["in",3]],["in",3]],[[["let",3]],["let",3]],[[["loop",3]],["loop",3]],[[["macro",3]],["macro",3]],[[["match",3]],["match",3]],[[["mod",3]],["mod",3]],[[["move",3]],["move",3]],[[["mut",3]],["mut",3]],[[["override",3]],["override",3]],[[["priv",3]],["priv",3]],[[["pub",3]],["pub",3]],[[["ref",3]],["ref",3]],[[["return",3]],["return",3]],[[["selftype",3]],["selftype",3]],[[["selfvalue",3]],["selfvalue",3]],[[["static",3]],["static",3]],[[["struct",3]],["struct",3]],[[["super",3]],["super",3]],[[["trait",3]],["trait",3]],[[["try",3]],["try",3]],[[["type",3]],["type",3]],[[["typeof",3]],["typeof",3]],[[["union",3]],["union",3]],[[["unsafe",3]],["unsafe",3]],[[["unsized",3]],["unsized",3]],[[["use",3]],["use",3]],[[["virtual",3]],["virtual",3]],[[["where",3]],["where",3]],[[["while",3]],["while",3]],[[["yield",3]],["yield",3]],[[["add",3]],["add",3]],[[["addeq",3]],["addeq",3]],[[["and",3]],["and",3]],[[["andand",3]],["andand",3]],[[["andeq",3]],["andeq",3]],[[["at",3]],["at",3]],[[["bang",3]],["bang",3]],[[["caret",3]],["caret",3]],[[["careteq",3]],["careteq",3]],[[["colon",3]],["colon",3]],[[["colon2",3]],["colon2",3]],[[["comma",3]],["comma",3]],[[["div",3]],["div",3]],[[["diveq",3]],["diveq",3]],[[["dollar",3]],["dollar",3]],[[["dot",3]],["dot",3]],[[["dot2",3]],["dot2",3]],[[["dot3",3]],["dot3",3]],[[["dotdoteq",3]],["dotdoteq",3]],[[["eq",3]],["eq",3]],[[["eqeq",3]],["eqeq",3]],[[["ge",3]],["ge",3]],[[["gt",3]],["gt",3]],[[["le",3]],["le",3]],[[["lt",3]],["lt",3]],[[["muleq",3]],["muleq",3]],[[["ne",3]],["ne",3]],[[["or",3]],["or",3]],[[["oreq",3]],["oreq",3]],[[["oror",3]],["oror",3]],[[["pound",3]],["pound",3]],[[["question",3]],["question",3]],[[["rarrow",3]],["rarrow",3]],[[["larrow",3]],["larrow",3]],[[["rem",3]],["rem",3]],[[["remeq",3]],["remeq",3]],[[["fatarrow",3]],["fatarrow",3]],[[["semi",3]],["semi",3]],[[["shl",3]],["shl",3]],[[["shleq",3]],["shleq",3]],[[["shr",3]],["shr",3]],[[["shreq",3]],["shreq",3]],[[["star",3]],["star",3]],[[["sub",3]],["sub",3]],[[["subeq",3]],["subeq",3]],[[["tilde",3]],["tilde",3]],[[["brace",3]],["brace",3]],[[["bracket",3]],["bracket",3]],[[["paren",3]],["paren",3]],[[["group",3]],["groupunderscore",3]],[[],["abstract",3]],[[],["as",3]],[[],["async",3]],[[],["auto",3]],[[],["await",3]],[[],["become",3]],[[],["box",3]],[[],["break",3]],[[],["const",3]],[[],["continue",3]],[[],["crate",3]],[[],["default",3]],[[],["do",3]],[[],["dyn",3]],[[],["else",3]],[[],["enum",3]],[[],["extern",3]],[[],["final",3]],[[],["fn",3]],[[],["for",3]],[[],["if",3]],[[],["impl",3]],[[],["in",3]],[[],["let",3]],[[],["loop",3]],[[],["macro",3]],[[],["match",3]],[[],["mod",3]],[[],["move",3]],[[],["mut",3]],[[],["override",3]],[[],["priv",3]],[[],["pub",3]],[[],["ref",3]],[[],["return",3]],[[],["selftype",3]],[[],["selfvalue",3]],[[],["static",3]],[[],["struct",3]],[[],["super",3]],[[],["trait",3]],[[],["try",3]],[[],["type",3]],[[],["typeof",3]],[[],["union",3]],[[],["unsafe",3]],[[],["unsized",3]],[[],["use",3]],[[],["virtual",3]],[[],["where",3]],[[],["while",3]],[[],["yield",3]],[[],["add",3]],[[],["addeq",3]],[[],["and",3]],[[],["andand",3]],[[],["andeq",3]],[[],["at",3]],[[],["bang",3]],[[],["caret",3]],[[],["careteq",3]],[[],["colon",3]],[[],["colon2",3]],[[],["comma",3]],[[],["div",3]],[[],["diveq",3]],[[],["dollar",3]],[[],["dot",3]],[[],["dot2",3]],[[],["dot3",3]],[[],["dotdoteq",3]],[[],["eq",3]],[[],["eqeq",3]],[[],["ge",3]],[[],["gt",3]],[[],["le",3]],[[],["lt",3]],[[],["muleq",3]],[[],["ne",3]],[[],["or",3]],[[],["oreq",3]],[[],["oror",3]],[[],["pound",3]],[[],["question",3]],[[],["rarrow",3]],[[],["larrow",3]],[[],["rem",3]],[[],["remeq",3]],[[],["fatarrow",3]],[[],["semi",3]],[[],["shl",3]],[[],["shleq",3]],[[],["shr",3]],[[],["shreq",3]],[[],["star",3]],[[],["sub",3]],[[],["subeq",3]],[[],["tilde",3]],[[],["brace",3]],[[],["bracket",3]],[[],["paren",3]],[[],["group",3]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[["underscore",3]]],[[["add",3]]],[[["and",3]]],[[["at",3]]],[[["bang",3]]],[[["caret",3]]],[[["colon",3]]],[[["comma",3]]],[[["div",3]]],[[["dollar",3]]],[[["dot",3]]],[[["eq",3]]],[[["gt",3]]],[[["lt",3]]],[[["or",3]]],[[["pound",3]]],[[["question",3]]],[[["rem",3]]],[[["semi",3]]],[[["star",3]]],[[["sub",3]]],[[["tilde",3]]],[[["underscore",3],["underscore",3]],["bool",0]],[[["abstract",3],["abstract",3]],["bool",0]],[[["as",3],["as",3]],["bool",0]],[[["async",3],["async",3]],["bool",0]],[[["auto",3],["auto",3]],["bool",0]],[[["await",3],["await",3]],["bool",0]],[[["become",3],["become",3]],["bool",0]],[[["box",3],["box",3]],["bool",0]],[[["break",3],["break",3]],["bool",0]],[[["const",3],["const",3]],["bool",0]],[[["continue",3],["continue",3]],["bool",0]],[[["crate",3],["crate",3]],["bool",0]],[[["default",3],["default",3]],["bool",0]],[[["do",3],["do",3]],["bool",0]],[[["dyn",3],["dyn",3]],["bool",0]],[[["else",3],["else",3]],["bool",0]],[[["enum",3],["enum",3]],["bool",0]],[[["extern",3],["extern",3]],["bool",0]],[[["final",3],["final",3]],["bool",0]],[[["fn",3],["fn",3]],["bool",0]],[[["for",3],["for",3]],["bool",0]],[[["if",3],["if",3]],["bool",0]],[[["impl",3],["impl",3]],["bool",0]],[[["in",3],["in",3]],["bool",0]],[[["let",3],["let",3]],["bool",0]],[[["loop",3],["loop",3]],["bool",0]],[[["macro",3],["macro",3]],["bool",0]],[[["match",3],["match",3]],["bool",0]],[[["mod",3],["mod",3]],["bool",0]],[[["move",3],["move",3]],["bool",0]],[[["mut",3],["mut",3]],["bool",0]],[[["override",3],["override",3]],["bool",0]],[[["priv",3],["priv",3]],["bool",0]],[[["pub",3],["pub",3]],["bool",0]],[[["ref",3],["ref",3]],["bool",0]],[[["return",3],["return",3]],["bool",0]],[[["selftype",3],["selftype",3]],["bool",0]],[[["selfvalue",3],["selfvalue",3]],["bool",0]],[[["static",3],["static",3]],["bool",0]],[[["struct",3],["struct",3]],["bool",0]],[[["super",3],["super",3]],["bool",0]],[[["trait",3],["trait",3]],["bool",0]],[[["try",3],["try",3]],["bool",0]],[[["type",3],["type",3]],["bool",0]],[[["typeof",3],["typeof",3]],["bool",0]],[[["union",3],["union",3]],["bool",0]],[[["unsafe",3],["unsafe",3]],["bool",0]],[[["unsized",3],["unsized",3]],["bool",0]],[[["use",3],["use",3]],["bool",0]],[[["virtual",3],["virtual",3]],["bool",0]],[[["where",3],["where",3]],["bool",0]],[[["while",3],["while",3]],["bool",0]],[[["yield",3],["yield",3]],["bool",0]],[[["add",3],["add",3]],["bool",0]],[[["addeq",3],["addeq",3]],["bool",0]],[[["and",3],["and",3]],["bool",0]],[[["andand",3],["andand",3]],["bool",0]],[[["andeq",3],["andeq",3]],["bool",0]],[[["at",3],["at",3]],["bool",0]],[[["bang",3],["bang",3]],["bool",0]],[[["caret",3],["caret",3]],["bool",0]],[[["careteq",3],["careteq",3]],["bool",0]],[[["colon",3],["colon",3]],["bool",0]],[[["colon2",3],["colon2",3]],["bool",0]],[[["comma",3],["comma",3]],["bool",0]],[[["div",3],["div",3]],["bool",0]],[[["diveq",3],["diveq",3]],["bool",0]],[[["dollar",3],["dollar",3]],["bool",0]],[[["dot",3],["dot",3]],["bool",0]],[[["dot2",3],["dot2",3]],["bool",0]],[[["dot3",3],["dot3",3]],["bool",0]],[[["dotdoteq",3],["dotdoteq",3]],["bool",0]],[[["eq",3],["eq",3]],["bool",0]],[[["eqeq",3],["eqeq",3]],["bool",0]],[[["ge",3],["ge",3]],["bool",0]],[[["gt",3],["gt",3]],["bool",0]],[[["le",3],["le",3]],["bool",0]],[[["lt",3],["lt",3]],["bool",0]],[[["muleq",3],["muleq",3]],["bool",0]],[[["ne",3],["ne",3]],["bool",0]],[[["or",3],["or",3]],["bool",0]],[[["oreq",3],["oreq",3]],["bool",0]],[[["oror",3],["oror",3]],["bool",0]],[[["pound",3],["pound",3]],["bool",0]],[[["question",3],["question",3]],["bool",0]],[[["rarrow",3],["rarrow",3]],["bool",0]],[[["larrow",3],["larrow",3]],["bool",0]],[[["rem",3],["rem",3]],["bool",0]],[[["remeq",3],["remeq",3]],["bool",0]],[[["fatarrow",3],["fatarrow",3]],["bool",0]],[[["semi",3],["semi",3]],["bool",0]],[[["shl",3],["shl",3]],["bool",0]],[[["shleq",3],["shleq",3]],["bool",0]],[[["shr",3],["shr",3]],["bool",0]],[[["shreq",3],["shreq",3]],["bool",0]],[[["star",3],["star",3]],["bool",0]],[[["sub",3],["sub",3]],["bool",0]],[[["subeq",3],["subeq",3]],["bool",0]],[[["tilde",3],["tilde",3]],["bool",0]],[[["brace",3],["brace",3]],["bool",0]],[[["bracket",3],["bracket",3]],["bool",0]],[[["paren",3],["paren",3]],["bool",0]],[[["group",3],["group",3]],["bool",0]],[[["underscore",3],["formatter",3]],["result",6]],[[["abstract",3],["formatter",3]],["result",6]],[[["as",3],["formatter",3]],["result",6]],[[["async",3],["formatter",3]],["result",6]],[[["auto",3],["formatter",3]],["result",6]],[[["await",3],["formatter",3]],["result",6]],[[["become",3],["formatter",3]],["result",6]],[[["box",3],["formatter",3]],["result",6]],[[["break",3],["formatter",3]],["result",6]],[[["const",3],["formatter",3]],["result",6]],[[["continue",3],["formatter",3]],["result",6]],[[["crate",3],["formatter",3]],["result",6]],[[["default",3],["formatter",3]],["result",6]],[[["do",3],["formatter",3]],["result",6]],[[["dyn",3],["formatter",3]],["result",6]],[[["else",3],["formatter",3]],["result",6]],[[["enum",3],["formatter",3]],["result",6]],[[["extern",3],["formatter",3]],["result",6]],[[["final",3],["formatter",3]],["result",6]],[[["fn",3],["formatter",3]],["result",6]],[[["for",3],["formatter",3]],["result",6]],[[["if",3],["formatter",3]],["result",6]],[[["impl",3],["formatter",3]],["result",6]],[[["in",3],["formatter",3]],["result",6]],[[["let",3],["formatter",3]],["result",6]],[[["loop",3],["formatter",3]],["result",6]],[[["macro",3],["formatter",3]],["result",6]],[[["match",3],["formatter",3]],["result",6]],[[["mod",3],["formatter",3]],["result",6]],[[["move",3],["formatter",3]],["result",6]],[[["mut",3],["formatter",3]],["result",6]],[[["override",3],["formatter",3]],["result",6]],[[["priv",3],["formatter",3]],["result",6]],[[["pub",3],["formatter",3]],["result",6]],[[["ref",3],["formatter",3]],["result",6]],[[["return",3],["formatter",3]],["result",6]],[[["selftype",3],["formatter",3]],["result",6]],[[["selfvalue",3],["formatter",3]],["result",6]],[[["static",3],["formatter",3]],["result",6]],[[["struct",3],["formatter",3]],["result",6]],[[["super",3],["formatter",3]],["result",6]],[[["trait",3],["formatter",3]],["result",6]],[[["try",3],["formatter",3]],["result",6]],[[["type",3],["formatter",3]],["result",6]],[[["typeof",3],["formatter",3]],["result",6]],[[["union",3],["formatter",3]],["result",6]],[[["unsafe",3],["formatter",3]],["result",6]],[[["unsized",3],["formatter",3]],["result",6]],[[["use",3],["formatter",3]],["result",6]],[[["virtual",3],["formatter",3]],["result",6]],[[["where",3],["formatter",3]],["result",6]],[[["while",3],["formatter",3]],["result",6]],[[["yield",3],["formatter",3]],["result",6]],[[["add",3],["formatter",3]],["result",6]],[[["addeq",3],["formatter",3]],["result",6]],[[["and",3],["formatter",3]],["result",6]],[[["andand",3],["formatter",3]],["result",6]],[[["andeq",3],["formatter",3]],["result",6]],[[["at",3],["formatter",3]],["result",6]],[[["bang",3],["formatter",3]],["result",6]],[[["caret",3],["formatter",3]],["result",6]],[[["careteq",3],["formatter",3]],["result",6]],[[["colon",3],["formatter",3]],["result",6]],[[["colon2",3],["formatter",3]],["result",6]],[[["comma",3],["formatter",3]],["result",6]],[[["div",3],["formatter",3]],["result",6]],[[["diveq",3],["formatter",3]],["result",6]],[[["dollar",3],["formatter",3]],["result",6]],[[["dot",3],["formatter",3]],["result",6]],[[["dot2",3],["formatter",3]],["result",6]],[[["dot3",3],["formatter",3]],["result",6]],[[["dotdoteq",3],["formatter",3]],["result",6]],[[["eq",3],["formatter",3]],["result",6]],[[["eqeq",3],["formatter",3]],["result",6]],[[["ge",3],["formatter",3]],["result",6]],[[["gt",3],["formatter",3]],["result",6]],[[["le",3],["formatter",3]],["result",6]],[[["lt",3],["formatter",3]],["result",6]],[[["muleq",3],["formatter",3]],["result",6]],[[["ne",3],["formatter",3]],["result",6]],[[["or",3],["formatter",3]],["result",6]],[[["oreq",3],["formatter",3]],["result",6]],[[["oror",3],["formatter",3]],["result",6]],[[["pound",3],["formatter",3]],["result",6]],[[["question",3],["formatter",3]],["result",6]],[[["rarrow",3],["formatter",3]],["result",6]],[[["larrow",3],["formatter",3]],["result",6]],[[["rem",3],["formatter",3]],["result",6]],[[["remeq",3],["formatter",3]],["result",6]],[[["fatarrow",3],["formatter",3]],["result",6]],[[["semi",3],["formatter",3]],["result",6]],[[["shl",3],["formatter",3]],["result",6]],[[["shleq",3],["formatter",3]],["result",6]],[[["shr",3],["formatter",3]],["result",6]],[[["shreq",3],["formatter",3]],["result",6]],[[["star",3],["formatter",3]],["result",6]],[[["sub",3],["formatter",3]],["result",6]],[[["subeq",3],["formatter",3]],["result",6]],[[["tilde",3],["formatter",3]],["result",6]],[[["brace",3],["formatter",3]],["result",6]],[[["bracket",3],["formatter",3]],["result",6]],[[["paren",3],["formatter",3]],["result",6]],[[["group",3],["formatter",3]],["resultunderscore",3],["",0]]],[[["abstract",3],["",0]]],[[["as",3],["",0]]],[[["async",3],["",0]]],[[["auto",3],["",0]]],[[["await",3],["",0]]],[[["become",3],["",0]]],[[["box",3],["",0]]],[[["break",3],["",0]]],[[["const",3],["",0]]],[[["continue",3],["",0]]],[[["crate",3],["",0]]],[[["default",3],["",0]]],[[["do",3],["",0]]],[[["dyn",3],["",0]]],[[["else",3],["",0]]],[[["enum",3],["",0]]],[[["extern",3],["",0]]],[[["final",3],["",0]]],[[["fn",3],["",0]]],[[["for",3],["",0]]],[[["if",3],["",0]]],[[["impl",3],["",0]]],[[["in",3],["",0]]],[[["let",3],["",0]]],[[["loop",3],["",0]]],[[["macro",3],["",0]]],[[["match",3],["",0]]],[[["mod",3],["",0]]],[[["move",3],["",0]]],[[["mut",3],["",0]]],[[["override",3],["",0]]],[[["priv",3],["",0]]],[[["pub",3],["",0]]],[[["ref",3],["",0]]],[[["return",3],["",0]]],[[["selftype",3],["",0]]],[[["selfvalue",3],["",0]]],[[["static",3],["",0]]],[[["struct",3],["",0]]],[[["super",3],["",0]]],[[["trait",3],["",0]]],[[["try",3],["",0]]],[[["type",3],["",0]]],[[["typeof",3],["",0]]],[[["union",3],["",0]]],[[["unsafe",3],["",0]]],[[["unsized",3],["",0]]],[[["use",3],["",0]]],[[["virtual",3],["",0]]],[[["where",3],["",0]]],[[["while",3],["",0]]],[[["yield",3],["",0]]],[[["add",3],["",0]]],[[["addeq",3],["",0]]],[[["and",3],["",0]]],[[["andand",3],["",0]]],[[["andeq",3],["",0]]],[[["at",3],["",0]]],[[["bang",3],["",0]]],[[["caret",3],["",0]]],[[["careteq",3],["",0]]],[[["colon",3],["",0]]],[[["colon2",3],["",0]]],[[["comma",3],["",0]]],[[["div",3],["",0]]],[[["diveq",3],["",0]]],[[["dollar",3],["",0]]],[[["dot",3],["",0]]],[[["dot2",3],["",0]]],[[["dot3",3],["",0]]],[[["dotdoteq",3],["",0]]],[[["eq",3],["",0]]],[[["eqeq",3],["",0]]],[[["ge",3],["",0]]],[[["gt",3],["",0]]],[[["le",3],["",0]]],[[["lt",3],["",0]]],[[["muleq",3],["",0]]],[[["ne",3],["",0]]],[[["or",3],["",0]]],[[["oreq",3],["",0]]],[[["oror",3],["",0]]],[[["pound",3],["",0]]],[[["question",3],["",0]]],[[["rarrow",3],["",0]]],[[["larrow",3],["",0]]],[[["rem",3],["",0]]],[[["remeq",3],["",0]]],[[["fatarrow",3],["",0]]],[[["semi",3],["",0]]],[[["shl",3],["",0]]],[[["shleq",3],["",0]]],[[["shr",3],["",0]]],[[["shreq",3],["",0]]],[[["star",3],["",0]]],[[["sub",3],["",0]]],[[["subeq",3],["",0]]],[[["tilde",3],["",0]]],[[["brace",3],["",0]]],[[["bracket",3],["",0]]],[[["paren",3],["",0]]],[[["groupparsestream",6]],["result",6,[["underscore",3]]]],[[["parsestream",6]],["result",6,[["abstract",3]]]],[[["parsestream",6]],["result",6,[["as",3]]]],[[["parsestream",6]],["result",6,[["async",3]]]],[[["parsestream",6]],["result",6,[["auto",3]]]],[[["parsestream",6]],["result",6,[["await",3]]]],[[["parsestream",6]],["result",6,[["become",3]]]],[[["parsestream",6]],["result",6,[["box",3]]]],[[["parsestream",6]],["result",6,[["break",3]]]],[[["parsestream",6]],["result",6,[["const",3]]]],[[["parsestream",6]],["result",6,[["continue",3]]]],[[["parsestream",6]],["result",6,[["crate",3]]]],[[["parsestream",6]],["result",6,[["default",3]]]],[[["parsestream",6]],["result",6,[["do",3]]]],[[["parsestream",6]],["result",6,[["dyn",3]]]],[[["parsestream",6]],["result",6,[["else",3]]]],[[["parsestream",6]],["result",6,[["enum",3]]]],[[["parsestream",6]],["result",6,[["extern",3]]]],[[["parsestream",6]],["result",6,[["final",3]]]],[[["parsestream",6]],["result",6,[["fn",3]]]],[[["parsestream",6]],["result",6,[["for",3]]]],[[["parsestream",6]],["result",6,[["if",3]]]],[[["parsestream",6]],["result",6,[["impl",3]]]],[[["parsestream",6]],["result",6,[["in",3]]]],[[["parsestream",6]],["result",6,[["let",3]]]],[[["parsestream",6]],["result",6,[["loop",3]]]],[[["parsestream",6]],["result",6,[["macro",3]]]],[[["parsestream",6]],["result",6,[["match",3]]]],[[["parsestream",6]],["result",6,[["mod",3]]]],[[["parsestream",6]],["result",6,[["move",3]]]],[[["parsestream",6]],["result",6,[["mut",3]]]],[[["parsestream",6]],["result",6,[["override",3]]]],[[["parsestream",6]],["result",6,[["priv",3]]]],[[["parsestream",6]],["result",6,[["pub",3]]]],[[["parsestream",6]],["result",6,[["ref",3]]]],[[["parsestream",6]],["result",6,[["return",3]]]],[[["parsestream",6]],["result",6,[["selftype",3]]]],[[["parsestream",6]],["result",6,[["selfvalue",3]]]],[[["parsestream",6]],["result",6,[["static",3]]]],[[["parsestream",6]],["result",6,[["struct",3]]]],[[["parsestream",6]],["result",6,[["super",3]]]],[[["parsestream",6]],["result",6,[["trait",3]]]],[[["parsestream",6]],["result",6,[["try",3]]]],[[["parsestream",6]],["result",6,[["type",3]]]],[[["parsestream",6]],["result",6,[["typeof",3]]]],[[["parsestream",6]],["result",6,[["union",3]]]],[[["parsestream",6]],["result",6,[["unsafe",3]]]],[[["parsestream",6]],["result",6,[["unsized",3]]]],[[["parsestream",6]],["result",6,[["use",3]]]],[[["parsestream",6]],["result",6,[["virtual",3]]]],[[["parsestream",6]],["result",6,[["where",3]]]],[[["parsestream",6]],["result",6,[["while",3]]]],[[["parsestream",6]],["result",6,[["yield",3]]]],[[["parsestream",6]],["result",6,[["add",3]]]],[[["parsestream",6]],["result",6,[["addeq",3]]]],[[["parsestream",6]],["result",6,[["and",3]]]],[[["parsestream",6]],["result",6,[["andand",3]]]],[[["parsestream",6]],["result",6,[["andeq",3]]]],[[["parsestream",6]],["result",6,[["at",3]]]],[[["parsestream",6]],["result",6,[["bang",3]]]],[[["parsestream",6]],["result",6,[["caret",3]]]],[[["parsestream",6]],["result",6,[["careteq",3]]]],[[["parsestream",6]],["result",6,[["colon",3]]]],[[["parsestream",6]],["result",6,[["colon2",3]]]],[[["parsestream",6]],["result",6,[["comma",3]]]],[[["parsestream",6]],["result",6,[["div",3]]]],[[["parsestream",6]],["result",6,[["diveq",3]]]],[[["parsestream",6]],["result",6,[["dollar",3]]]],[[["parsestream",6]],["result",6,[["dot",3]]]],[[["parsestream",6]],["result",6,[["dot2",3]]]],[[["parsestream",6]],["result",6,[["dot3",3]]]],[[["parsestream",6]],["result",6,[["dotdoteq",3]]]],[[["parsestream",6]],["result",6,[["eq",3]]]],[[["parsestream",6]],["result",6,[["eqeq",3]]]],[[["parsestream",6]],["result",6,[["ge",3]]]],[[["parsestream",6]],["result",6,[["gt",3]]]],[[["parsestream",6]],["result",6,[["le",3]]]],[[["parsestream",6]],["result",6,[["lt",3]]]],[[["parsestream",6]],["result",6,[["muleq",3]]]],[[["parsestream",6]],["result",6,[["ne",3]]]],[[["parsestream",6]],["result",6,[["or",3]]]],[[["parsestream",6]],["result",6,[["oreq",3]]]],[[["parsestream",6]],["result",6,[["oror",3]]]],[[["parsestream",6]],["result",6,[["pound",3]]]],[[["parsestream",6]],["result",6,[["question",3]]]],[[["parsestream",6]],["result",6,[["rarrow",3]]]],[[["parsestream",6]],["result",6,[["larrow",3]]]],[[["parsestream",6]],["result",6,[["rem",3]]]],[[["parsestream",6]],["result",6,[["remeq",3]]]],[[["parsestream",6]],["result",6,[["fatarrow",3]]]],[[["parsestream",6]],["result",6,[["semi",3]]]],[[["parsestream",6]],["result",6,[["shl",3]]]],[[["parsestream",6]],["result",6,[["shleq",3]]]],[[["parsestream",6]],["result",6,[["shr",3]]]],[[["parsestream",6]],["result",6,[["shreq",3]]]],[[["parsestream",6]],["result",6,[["star",3]]]],[[["parsestream",6]],["result",6,[["sub",3]]]],[[["parsestream",6]],["result",6,[["subeq",3]]]],[[["parsestream",6]],["result",6,[["tilde",3]]]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],[[["",0]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["brace",3],["tokenstream",3]]],[[["bracket",3],["tokenstream",3]]],[[["paren",3],["tokenstream",3]]],[[["group",3],["tokenstreamunderscore",3],["tokenstream",3]]],[[["abstract",3],["tokenstream",3]]],[[["as",3],["tokenstream",3]]],[[["async",3],["tokenstream",3]]],[[["auto",3],["tokenstream",3]]],[[["await",3],["tokenstream",3]]],[[["become",3],["tokenstream",3]]],[[["box",3],["tokenstream",3]]],[[["break",3],["tokenstream",3]]],[[["const",3],["tokenstream",3]]],[[["continue",3],["tokenstream",3]]],[[["crate",3],["tokenstream",3]]],[[["default",3],["tokenstream",3]]],[[["do",3],["tokenstream",3]]],[[["dyn",3],["tokenstream",3]]],[[["else",3],["tokenstream",3]]],[[["enum",3],["tokenstream",3]]],[[["extern",3],["tokenstream",3]]],[[["final",3],["tokenstream",3]]],[[["fn",3],["tokenstream",3]]],[[["for",3],["tokenstream",3]]],[[["if",3],["tokenstream",3]]],[[["impl",3],["tokenstream",3]]],[[["in",3],["tokenstream",3]]],[[["let",3],["tokenstream",3]]],[[["loop",3],["tokenstream",3]]],[[["macro",3],["tokenstream",3]]],[[["match",3],["tokenstream",3]]],[[["mod",3],["tokenstream",3]]],[[["move",3],["tokenstream",3]]],[[["mut",3],["tokenstream",3]]],[[["override",3],["tokenstream",3]]],[[["priv",3],["tokenstream",3]]],[[["pub",3],["tokenstream",3]]],[[["ref",3],["tokenstream",3]]],[[["return",3],["tokenstream",3]]],[[["selftype",3],["tokenstream",3]]],[[["selfvalue",3],["tokenstream",3]]],[[["static",3],["tokenstream",3]]],[[["struct",3],["tokenstream",3]]],[[["super",3],["tokenstream",3]]],[[["trait",3],["tokenstream",3]]],[[["try",3],["tokenstream",3]]],[[["type",3],["tokenstream",3]]],[[["typeof",3],["tokenstream",3]]],[[["union",3],["tokenstream",3]]],[[["unsafe",3],["tokenstream",3]]],[[["unsized",3],["tokenstream",3]]],[[["use",3],["tokenstream",3]]],[[["virtual",3],["tokenstream",3]]],[[["where",3],["tokenstream",3]]],[[["while",3],["tokenstream",3]]],[[["yield",3],["tokenstream",3]]],[[["add",3],["tokenstream",3]]],[[["addeq",3],["tokenstream",3]]],[[["and",3],["tokenstream",3]]],[[["andand",3],["tokenstream",3]]],[[["andeq",3],["tokenstream",3]]],[[["at",3],["tokenstream",3]]],[[["bang",3],["tokenstream",3]]],[[["caret",3],["tokenstream",3]]],[[["careteq",3],["tokenstream",3]]],[[["colon",3],["tokenstream",3]]],[[["colon2",3],["tokenstream",3]]],[[["comma",3],["tokenstream",3]]],[[["div",3],["tokenstream",3]]],[[["diveq",3],["tokenstream",3]]],[[["dollar",3],["tokenstream",3]]],[[["dot",3],["tokenstream",3]]],[[["dot2",3],["tokenstream",3]]],[[["dot3",3],["tokenstream",3]]],[[["dotdoteq",3],["tokenstream",3]]],[[["eq",3],["tokenstream",3]]],[[["eqeq",3],["tokenstream",3]]],[[["ge",3],["tokenstream",3]]],[[["gt",3],["tokenstream",3]]],[[["le",3],["tokenstream",3]]],[[["lt",3],["tokenstream",3]]],[[["muleq",3],["tokenstream",3]]],[[["ne",3],["tokenstream",3]]],[[["or",3],["tokenstream",3]]],[[["oreq",3],["tokenstream",3]]],[[["oror",3],["tokenstream",3]]],[[["pound",3],["tokenstream",3]]],[[["question",3],["tokenstream",3]]],[[["rarrow",3],["tokenstream",3]]],[[["larrow",3],["tokenstream",3]]],[[["rem",3],["tokenstream",3]]],[[["remeq",3],["tokenstream",3]]],[[["fatarrow",3],["tokenstream",3]]],[[["semi",3],["tokenstream",3]]],[[["shl",3],["tokenstream",3]]],[[["shleq",3],["tokenstream",3]]],[[["shr",3],["tokenstream",3]]],[[["shreq",3],["tokenstream",3]]],[[["star",3],["tokenstream",3]]],[[["sub",3],["tokenstream",3]]],[[["subeq",3],["tokenstream",3]]],[[["tilde",3],["tokenstream",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["abi",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["anglebracketedgenericarguments",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["arm",3]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attrstyle",4]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["attribute",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["barefnarg",3]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binop",4]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["binding",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["block",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["boundlifetimes",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constparam",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["constraint",3]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["data",4]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["dataenum",3]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["datastruct",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["dataunion",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["deriveinput",3]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["expr",4]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprarray",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassign",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprassignop",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprasync",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprawait",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprbinary",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprblock",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbox",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprbreak",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcall",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprcast",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprclosure",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprcontinue",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprfield",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprforloop",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprgroup",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprif",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprindex",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlet",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprlit",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprloop",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmacro",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmatch",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprmethodcall",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprparen",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprpath",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprrange",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprreference",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprrepeat",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprreturn",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprstruct",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtry",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtryblock",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtuple",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprtype",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunary",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprunsafe",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["exprwhile",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["expryield",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["field",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldpat",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fieldvalue",3]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fields",4]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["fieldsunnamed",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["file",3]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["fnarg",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitem",4]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemfn",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemmacro",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemstatic",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["foreignitemtype",3]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericmethodargument",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["genericparam",4]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["generics",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["ident",3]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitem",4]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemconst",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmacro",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemmethod",3]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["implitemtype",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["index",3]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["item",4]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemconst",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemenum",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemexterncrate",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemfn",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemforeignmod",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemimpl",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmacro2",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemmod",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstatic",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemstruct",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtrait",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtraitalias",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemtype",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemunion",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["itemuse",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["label",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetime",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lifetimedef",3]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["lit",4]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbool",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbyte",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litbytestr",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litchar",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litfloat",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["litint",3]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["litstr",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["local",3]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["macro",3]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["macrodelimiter",4]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["member",4]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["meta",4]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["metalist",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["metanamevalue",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["methodturbofish",3]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["nestedmeta",4]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["parenthesizedgenericarguments",3]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["pat",4]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patbox",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patident",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patlit",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["patmacro",3]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["pator",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patpath",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patrange",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patreference",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patrest",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patslice",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["patstruct",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuple",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattuplestruct",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["pattype",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["patwild",3]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["path",3]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["patharguments",4]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["pathsegment",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicateeq",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatelifetime",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["predicatetype",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["qself",3]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["rangelimits",4]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["receiver",3]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["returntype",4]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["signature",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["span",3]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["stmt",4]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traitbound",3]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traitboundmodifier",4]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititem",4]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemconst",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmacro",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemmethod",3]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["traititemtype",3]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typearray",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typebarefn",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typegroup",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeimpltrait",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typeinfer",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["typemacro",3]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typenever",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparam",3]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparambound",4]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typeparen",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typepath",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typeptr",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typereference",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typeslice",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetraitobject",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["typetuple",3]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["unop",4]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["useglob",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usegroup",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usename",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["usepath",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["userename",3]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["usetree",4]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variadic",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["variant",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["viscrate",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["vispublic",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visrestricted",3]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["visibility",4]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["whereclause",3]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]],[[["",0],["wherepredicate",4]]]],"p":[[4,"BinOp"],[4,"PathArguments"],[4,"Expr"],[4,"Type"],[4,"GenericArgument"],[4,"Lit"],[4,"Pat"],[4,"MacroDelimiter"],[4,"RangeLimits"],[4,"GenericMethodArgument"],[4,"GenericParam"],[4,"Item"],[4,"TraitItem"],[4,"ImplItem"],[4,"StrStyle"],[4,"Visibility"],[4,"ReturnType"],[4,"UnOp"],[4,"Data"],[4,"WherePredicate"],[4,"Stmt"],[4,"ForeignItem"],[4,"UseTree"],[4,"AttrStyle"],[4,"TypeParamBound"],[4,"Meta"],[4,"NestedMeta"],[4,"TraitBoundModifier"],[4,"Fields"],[4,"Member"],[4,"FnArg"],[3,"ItemForeignMod"],[3,"Signature"],[3,"TypeBareFn"],[3,"ExprReference"],[3,"TypeReference"],[3,"PatReference"],[3,"Lifetime"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"MethodTurbofish"],[3,"AngleBracketedGenericArguments"],[3,"PathSegment"],[3,"ExprMatch"],[3,"ExprCast"],[3,"UseRename"],[3,"QSelf"],[3,"TypeGenerics"],[3,"ExprAsync"],[3,"ExprClosure"],[3,"Variant"],[3,"Field"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"FieldValue"],[3,"Arm"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Receiver"],[3,"File"],[3,"DeriveInput"],[3,"Local"],[3,"BareFnArg"],[3,"Variadic"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Macro"],[3,"TypeNever"],[3,"LitInt"],[3,"LitFloat"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[3,"Index"],[3,"Label"],[3,"Generics"],[3,"BoundLifetimes"],[3,"TraitBound"],[3,"WhereClause"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[3,"UsePath"],[3,"UseName"],[3,"UseGlob"],[3,"UseGroup"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[3,"Block"],[3,"TypeArray"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"Path"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Receiver"],[13,"Typed"],[13,"Fn"],[13,"Static"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Lifetime"],[13,"Type"],[13,"Const"],[13,"Binding"],[13,"Constraint"],[13,"Type"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Const"],[13,"Enum"],[13,"ExternCrate"],[13,"Fn"],[13,"ForeignMod"],[13,"Impl"],[13,"Macro"],[13,"Macro2"],[13,"Mod"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TraitAlias"],[13,"Type"],[13,"Union"],[13,"Use"],[13,"Verbatim"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"Box"],[13,"Ident"],[13,"Lit"],[13,"Macro"],[13,"Or"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Rest"],[13,"Slice"],[13,"Struct"],[13,"Tuple"],[13,"TupleStruct"],[13,"Type"],[13,"Verbatim"],[13,"Wild"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"HalfOpen"],[13,"Closed"],[13,"Type"],[13,"Local"],[13,"Item"],[13,"Expr"],[13,"Semi"],[13,"Raw"],[13,"Maybe"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Path"],[13,"Name"],[13,"Rename"],[13,"Glob"],[13,"Group"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[8,"Parser"],[3,"ParseBuffer"],[3,"Lookahead1"],[3,"StepCursor"],[3,"Nothing"],[3,"Error"],[8,"Parse"],[8,"Speculative"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[13,"Punctuated"],[13,"End"],[8,"Spanned"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[8,"Visit"]]},\
"texture":{"doc":"A generic library for textures.","t":[13,13,8,16,4,4,8,13,13,13,13,13,8,3,8,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,5,5],"n":["ClampToBorder","ClampToEdge","CreateTexture","Error","Filter","Format","ImageSize","Linear","MirroredRepeat","Nearest","Repeat","Rgba8","TextureOp","TextureSettings","UpdateTexture","Wrap","border_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compress","convert_gamma","create","eq","filter","fmt","fmt","fmt","from","from","from","from","generate_mipmap","get_border_color","get_compress","get_convert_gamma","get_filter","get_generate_mipmap","get_height","get_mag","get_min","get_mipmap","get_size","get_width","get_wrap_u","get_wrap_v","into","into","into","into","mag","min","mipmap","new","ops","set_border_color","set_compress","set_convert_gamma","set_filter","set_generate_mipmap","set_mag","set_min","set_mipmap","set_wrap_u","set_wrap_v","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","wrap_u","wrap_v","alpha_to_rgba8","flip_vertical"],"q":["texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","texture::ops",""],"d":["Coordinates outside the range [0.0, 1.0] will be given a …","The coordinate will be clamped between 0 and 1.","Implemented by textures for creation.","The error when performing an operation.","Sampling filter","Texture format.","Implemented by all images to be used with generic …","A Weighted Linear Blend","Repeats the texture and mirrors it, when the integer part …","Nearest Texel","Repeats the texture by ignoring the integer part of the …","<code>(red, green, blue, alpha)</code> with values 0-255.","Implemented by texture operations.","Texture creation parameters.","Implemented by textures for updating.","Wrap mode","Sets the border color","","","","","","","","","","","","","","","","","Sets compress.","Sets convert gamma.","Create texture from memory.","","Sets the min and mag filter","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sets generate mipmap.","Gets the border color","Gets wheter compress on the GPU.","Gets whether to convert gamma, treated as sRGB color space.","Returns the min and mag filter","Gets generate mipmap.","Gets the image height.","Gets magnify filter","Gets minify filter.","Gets minify mipmap filter","Get the image size.","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Create default settings.","Image operations for textures.","Sets the border color","Sets compress.","Sets convert gamma.","Sets the min and mag filter","Sets generate mipmap.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","","","","","","","","","","","","","","","","","Update the texture.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Converts from alpha to rgba8.","Flips the image vertically."],"i":[1,1,0,2,0,0,0,3,1,3,1,4,0,0,0,0,5,5,4,3,1,5,4,3,1,5,4,3,1,5,4,3,1,5,5,6,1,5,4,3,1,5,4,3,1,5,5,5,5,5,5,7,5,5,5,7,7,5,5,5,4,3,1,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,4,3,1,5,4,3,1,5,4,3,1,5,4,3,1,8,5,5,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["texturesettings",3]],["texturesettings",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["texturesettings",3]],["texturesettings",3]],[[["format",4]],["format",4]],[[["filter",4]],["filter",4]],[[["wrap",4]],["wrap",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["",0],["format",4],["into",8],["texturesettings",3]],["result",4]],[[["wrap",4],["wrap",4]],["bool",0]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["format",4],["formatter",3]],["result",6]],[[["filter",4],["formatter",3]],["result",6]],[[["wrap",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["texturesettings",3],["bool",0]],["texturesettings",3]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]],["bool",0]],[[["texturesettings",3]]],[[["texturesettings",3]],["bool",0]],[[["",0]],["u32",0]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["texturesettings",3]],["filter",4]],[[["",0]]],[[["",0]],["u32",0]],[[["texturesettings",3]],["wrap",4]],[[["texturesettings",3]],["wrap",4]],[[]],[[]],[[]],[[]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[["texturesettings",3],["filter",4]],["texturesettings",3]],[[],["texturesettings",3]],null,[[["texturesettings",3]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["bool",0]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["filter",4]]],[[["texturesettings",3],["wrap",4]]],[[["texturesettings",3],["wrap",4]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0],["format",4]],["result",4]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],[[["texturesettings",3],["wrap",4]],["texturesettings",3]],[[],["vec",3,[["u8",0]]]],[[["u8",0]],["vec",3,[["u8",0]]]]],"p":[[4,"Wrap"],[8,"TextureOp"],[4,"Filter"],[4,"Format"],[3,"TextureSettings"],[8,"CreateTexture"],[8,"ImageSize"],[8,"UpdateTexture"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","t":[13,13,4,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,6,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,4,4,13,13,13,13,3,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,6,13,3,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,3,18,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,18,3,3,3,3,3,3,8,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,3,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,4,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["ByteExpected","CMYK","ColorType","Format","FormatError","Gray","GrayA","HorizontalPredictor","ImageFileDirectoryNotFound","InconsistentSizesEncountered","InconsistentStripSamples","InflateError","InflateError","IntSizeError","InterpretationWithBits","InvalidTag","InvalidTagValueType","IoError","LimitsExceeded","Palette","RGB","RGBA","RequiredTagEmpty","RequiredTagNotFound","SignedIntegerExpected","TiffError","TiffFormatError","TiffResult","TiffSignatureInvalid","TiffSignatureNotFound","TiffUnsupportedError","UnexpectedCompressedData","UnknownCompressionMethod","UnknownInterpretation","UnknownPredictor","UnsignedIntegerExpected","UnsupportedBitsPerChannel","UnsupportedColorType","UnsupportedCompressionMethod","UnsupportedDataType","UnsupportedError","UnsupportedPlanarConfig","UnsupportedSampleDepth","UnsupportedSampleFormat","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decoder","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","encoder","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","ne","ne","ne","ne","tags","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","actual_bytes","actual_samples","required_bytes","required_samples","0","0","0","0","0","0","0","0","1","Decoder","DecodingBuffer","DecodingResult","F32","F32","F64","F64","Limits","U16","U16","U32","U32","U64","U64","U8","U8","as_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_order","clone","clone_into","colortype","decoding_buffer_size","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","find_tag","find_tag_unsigned","find_tag_unsigned_vec","fmt","fmt","fmt","from","from","from","from","get_tag","get_tag_ascii_string","get_tag_f32","get_tag_f32_vec","get_tag_f64","get_tag_f64_vec","get_tag_u16_vec","get_tag_u32","get_tag_u32_vec","get_tag_u64","get_tag_u64_vec","get_tag_u8_vec","get_tag_unsigned","goto_offset","goto_offset_u64","ifd","ifd_value_size","init","init","init","init","init","intermediate_buffer_size","into","into","into","into","more_images","new","next_image","read_byte","read_double","read_float","read_ifd_offset","read_image","read_jpeg","read_long","read_long8","read_offset","read_offset_u64","read_short","read_slong","read_sshort","read_string","read_strip","read_strip_to_buffer","strip_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlimited","with_limits","0","0","0","0","0","0","0","0","0","0","0","0","Ascii","Byte","Directory","Double","Entry","Float","List","Rational","RationalBig","SRational","SRationalBig","Short","Signed","SignedBig","Unsigned","UnsignedBig","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","init","init","into","into","into_f32","into_f32_vec","into_f64","into_f64_vec","into_i32","into_i32_vec","into_i64","into_i64_vec","into_string","into_u16","into_u16_vec","into_u32","into_u32_vec","into_u64","into_u64_vec","into_u8","into_u8_vec","ne","new","new_u64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","val","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","BYTE_LEN","DirectoryEncoder","FIELD_TYPE","ImageEncoder","Rational","SRational","TiffEncoder","TiffValue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone_into","colortype","count","count","count","d","d","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encoder","finish","finish","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","n","n","new","new_directory","new_image","next_strip_sample_count","resolution","resolution_unit","rows_per_strip","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write","write","write_data","write_data","write_image","write_strip","write_tag","x_resolution","y_resolution","BITS_PER_SAMPLE","CMYK16","CMYK32","CMYK32Float","CMYK64","CMYK64Float","CMYK8","ColorType","Gray16","Gray32","Gray32Float","Gray64","Gray64Float","Gray8","Inner","RGB16","RGB32","RGB32Float","RGB64","RGB64Float","RGB8","RGBA16","RGBA32","RGBA32Float","RGBA64","RGBA64Float","RGBA8","SAMPLE_FORMAT","TIFF_VALUE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ASCII","Artist","BYTE","BitsPerSample","BlackIsZero","CIELab","CMYK","CellLength","CellWidth","Centimeter","Chunky","ColorMap","Compression","CompressionMethod","Copyright","DOUBLE","DateTime","Deflate","ExtraSamples","FLOAT","Fax3","Fax4","FillOrder","FreeByteCounts","FreeOffsets","GdalNodata","GeoAsciiParamsTag","GeoDoubleParamsTag","GeoKeyDirectoryTag","GrayResponseCurve","GrayResponseUnit","Horizontal","HostComputer","Huffman","IEEEFP","ImageDescription","ImageLength","ImageWidth","Inch","Int","JPEG","JPEGTables","LONG","LONG8","LZW","Make","MaxSampleValue","MinSampleValue","Model","ModelPixelScaleTag","ModelTiepointTag","ModelTransformationTag","ModernJPEG","NewSubfileType","None","None","None","OldDeflate","Orientation","PackBits","PhotometricInterpretation","PhotometricInterpretation","Planar","PlanarConfiguration","PlanarConfiguration","Predictor","Predictor","RATIONAL","RGB","RGBPalette","ResolutionUnit","ResolutionUnit","RowsPerStrip","SBYTE","SHORT","SLONG","SRATIONAL","SSHORT","SampleFormat","SampleFormat","SamplesPerPixel","Software","StripByteCounts","StripOffsets","SubfileType","Tag","Threshholding","TileByteCounts","TileLength","TileOffsets","TileWidth","TransparencyMask","Type","UNDEFINED","Uint","Unknown","Unknown","Void","WhiteIsZero","XResolution","YCbCr","YResolution","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16_exhaustive","from_u16_exhaustive","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","ne","ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0"],"q":["tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::ColorType","","","","","","tiff::TiffError","","","tiff::TiffFormatError","","","","","","","","","","","","","tiff::TiffUnsupportedError","","","","","","","","","tiff::decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder::DecodingBuffer","","","","","","tiff::decoder::DecodingResult","","","","","","tiff::decoder::ifd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder::ifd::Value","","","","","","","","","","","","","","","","","","tiff::encoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::encoder::colortypetiff::tagstiff::tags::SampleFormat","tiff::tags::Tag"],"d":["","Pixel is CMYK","An enumeration over supported color types and their bit …","","The Image is not formatted properly.","Pixel is grayscale","Pixel is grayscale with an alpha channel","","","","","Decompression failed due to faulty compressed data.","","An integer conversion to or from a platform size failed, …","","","","An I/O Error occurred while decoding the image.","The Limits of the Decoder is exceeded.","Pixel is an index into a color palette","Pixel contains R, G and B channels","Pixel is RGB with an alpha channel","","","","Tiff error kinds.","The image is not formatted properly.","Result of an image decoding/encoding process","","","The Decoder does not support features required by the …","","","","","","","","","","The Decoder does not support features required by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The representation of a TIFF decoder","","Result of a decoding process","A slice of 32 bit IEEE floats","A vector of 32 bit IEEE floats","A slice of 64 bit IEEE floats","A vector of 64 bit IEEE floats","Decoding limits","A slice of unsigned words","A vector of unsigned words","A slice of 32 bit unsigned ints","A vector of 32 bit unsigned ints","A slice of 64 bit unsigned ints","A vector of 64 bit unsigned ints","A slice of unsigned bytes","A vector of unsigned bytes","","","","","","","","","","Returns the byte_order","","","","The maximum size of any <code>DecodingResult</code> in bytes, the …","","","","","","","","","","","","","","","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is not …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a vector of all a tag’s values and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Tries to retrieve a tag. Returns an error if the tag is …","Tries to retrieve a tag and convert it to a ascii vector.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","","Tries to retrieve a tag and convert it to a 8bit vector.","Tries to retrieve a tag and convert it to the desired …","Moves the cursor to the specified offset","","Function for reading TIFF tags","The maximum size of any ifd value in bytes, the default is …","","","","Initializes the decoder.","","Maximum size for intermediate buffer which may be used to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if there is at least one more image available.","Create a new decoder that decodes from the stream <code>r</code>","Reads in the next image. If there is no further image in …","Reads a TIFF byte value","Reads a TIFF double value","Reads a TIFF float value","","Decodes the entire image and return it as a Vector","","Reads a TIFF long value","","Reads a TIFF IFA offset/value field","Reads a TIFF IFA offset/value field","Reads a TIFF short value","Reads a TIFF slong value","Reads a TIFF sshort value","Reads a string","Read a single strip from the image and return it as a …","","Number of strips in image","","","","","","","","","","","","","","A configuration that does not impose any limits.","","","","","","","","","","","","","","","","Type representing an Image File Directory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low level interface to encode ifd directories.","","Type to encode images strip by strip.","Type to represent tiff values of type <code>RATIONAL</code>","Type to represent tiff values of type <code>SRATIONAL</code>","Tiff encoder.","Trait for types that can be encoded in a tiff file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference of the underlying <code>DirectoryEncoder</code>","Write out the ifd directory.","Write out image and ifd directory.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a <code>DirectoryEncoder</code> to encode an ifd directory.","Create an ‘ImageEncoder’ to encode an image one slice …","Number of samples the next strip should have.","Set image resolution","Set image resolution unit","Set image number of lines per strip","","","","","","","","","","","","","","","","","","","","Write some data to the tiff file, the offset of the data …","Write strips from data","Convenience function to write an entire image from memory.","Write a single strip.","Write a single ifd tag.","Set image x-resolution","Set image y-resolution","The value of the tiff tag <code>BitsPerSample</code>","","","","","","","Trait for different colortypes that can be encoded.","","","","","","","The type of each sample of this colortype","","","","","","","","","","","","","The value of the tiff tag <code>SampleFormat</code>","The value of the tiff tag <code>PhotometricInterpretation</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See TIFF compression tags for reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","BigTIFF 64-bit unsigned integer","","","","","","","","","","","","","","","","","","","","","","","","","","","Type to represent resolution units","","","","","","","","","","","","","","","TIFF tags","","","","","","","The type of an IFD entry (a 2 byte field).","","","A private or extension tag","An unknown extension sample format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,1,3,2,2,4,1,1,1,0,1,3,4,1,1,3,3,2,2,2,1,1,1,0,0,0,1,1,0,1,4,4,1,1,4,4,4,4,3,4,4,4,3,1,5,4,2,3,1,5,4,2,3,1,5,4,2,1,5,4,2,0,3,1,5,4,2,3,1,5,4,2,3,3,1,5,4,2,0,1,5,4,2,3,3,1,1,5,4,4,2,3,3,3,3,3,3,1,5,4,2,5,4,2,3,1,5,4,2,3,1,5,4,2,1,5,4,2,0,1,5,4,2,3,1,4,3,1,5,4,2,3,1,5,4,2,3,1,5,4,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,24,25,26,27,28,29,30,31,32,33,27,0,0,0,34,35,34,35,0,34,35,34,35,34,35,34,35,35,34,35,36,37,34,35,36,37,37,36,36,37,36,36,34,35,36,37,34,35,36,37,37,34,35,36,37,37,37,37,35,36,37,34,35,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,36,34,35,36,37,37,36,34,35,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,36,34,35,36,37,34,35,36,37,34,35,36,37,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,0,50,0,50,50,50,50,50,50,50,50,50,50,50,0,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,50,51,50,51,50,51,50,51,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,50,51,50,51,50,51,50,51,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,61,62,63,64,66,0,66,0,0,0,0,0,67,68,69,70,71,67,68,69,70,71,66,71,71,0,66,67,71,67,71,67,68,69,70,71,67,68,69,70,71,67,68,69,69,70,70,71,70,69,70,67,68,69,70,71,67,68,69,70,71,67,68,69,70,71,67,71,68,68,68,70,70,70,70,71,67,68,69,70,71,67,68,69,70,71,67,68,69,70,71,66,67,71,69,70,68,70,69,70,70,72,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,97,98,99,99,99,98,98,100,101,98,98,0,98,97,98,102,98,97,102,102,98,98,98,98,98,98,98,98,98,103,98,102,104,98,98,98,100,104,102,98,97,97,102,98,98,98,98,98,98,98,102,98,102,103,100,102,98,102,0,98,101,0,98,0,98,97,99,99,0,98,98,97,97,97,97,97,0,98,98,98,98,98,98,0,98,98,98,98,98,99,0,97,104,98,104,104,99,98,99,98,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,98,97,102,99,101,103,100,104,105,106],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tifferror",4]],["option",4,[["error",8]]]],[[["tiffformaterror",4]],["tiffformaterror",4]],[[["inflateerror",3]],["inflateerror",3]],[[["tiffunsupportederror",4]],["tiffunsupportederror",4]],[[["colortype",4]],["colortype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["tifferror",4]],["str",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["tiffformaterror",4],["tiffformaterror",4]],["bool",0]],[[["inflateerror",3],["inflateerror",3]],["bool",0]],[[["tiffunsupportederror",4],["tiffunsupportederror",4]],["bool",0]],[[["colortype",4],["colortype",4]],["bool",0]],[[["tifferror",4],["formatter",3]],["result",6]],[[["tifferror",4],["formatter",3]],["result",4,[["error",3]]]],[[["tiffformaterror",4],["formatter",3]],["result",6]],[[["tiffformaterror",4],["formatter",3]],["result",4,[["error",3]]]],[[["inflateerror",3],["formatter",3]],["result",6]],[[["tiffunsupportederror",4],["formatter",3]],["result",6]],[[["tiffunsupportederror",4],["formatter",3]],["result",4,[["error",3]]]],[[["colortype",4],["formatter",3]],["result",6]],[[["tiffformaterror",4]],["tifferror",4]],[[["error",3]],["tifferror",4]],[[["fromutf8error",3]],["tifferror",4]],[[["tryfrominterror",3]],["tifferror",4]],[[["tiffunsupportederror",4]],["tifferror",4]],[[]],[[]],[[]],[[]],[[]],[[["inflateerror",3],["",0]]],[[["tiffunsupportederror",4],["",0]]],[[["colortype",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[["tiffformaterror",4],["tiffformaterror",4]],["bool",0]],[[["inflateerror",3],["inflateerror",3]],["bool",0]],[[["tiffunsupportederror",4],["tiffunsupportederror",4]],["bool",0]],[[["colortype",4],["colortype",4]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["decodingresult",4],["usize",0]],["decodingbuffer",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["byteorder",4]],[[["limits",3]],["limits",3]],[[["",0],["",0]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["colortype",4]]]],null,[[],["limits",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["option",4,[["value",4]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["option",4,[["tryfrom",8,[["u64",0]]]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["option",4,[["vec",3,[["tryfrom",8,[["u64",0]]]]]]]]]],[[["decodingresult",4],["formatter",3]],["result",6]],[[["limits",3],["formatter",3]],["result",6]],[[["decoder",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["value",4]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["string",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["f32",0]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["f32",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["f64",0]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["f64",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["u16",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["u32",0]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["u32",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["u64",0]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["u64",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["vec",3,[["u8",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["tag",4]],["tiffresult",6,[["tryfrom",8,[["u64",0]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["u32",0]],["result",6]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["u64",0]],["result",6]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["decoder",3,[["",26,[["read",8],["seek",8]]]]]]]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["bool",0]],[[["",26,[["read",8],["seek",8]]]],["tiffresult",6,[["decoder",3,[["",26,[["read",8],["seek",8]]]]]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["u8",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["f64",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["f32",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["u64",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["decodingresult",4]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["decodingresult",4]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["u32",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["u64",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["u16",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["i32",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["result",4,[["i16",0],["error",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["usize",0]],["tiffresult",6,[["string",3]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["decodingresult",4]]]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["decodingbuffer",4]],["tiffresult",6]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]]],["tiffresult",6,[["u32",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["limits",3]],[[["decoder",3,[["",26,[["read",8],["seek",8]]]]],["limits",3]],["decoder",3,[["",26,[["read",8],["seek",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["value",4]],["value",4]],[[["entry",3]],["entry",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["value",4],["value",4]],["bool",0]],[[["value",4],["formatter",3]],["result",6]],[[["entry",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["value",4]],["tiffresult",6,[["f32",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["f32",0]]]]]],[[["value",4]],["tiffresult",6,[["f64",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["f64",0]]]]]],[[["value",4]],["tiffresult",6,[["i32",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["i32",0]]]]]],[[["value",4]],["tiffresult",6,[["i64",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["i64",0]]]]]],[[["value",4]],["tiffresult",6,[["string",3]]]],[[["value",4]],["tiffresult",6,[["u16",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["u16",0]]]]]],[[["value",4]],["tiffresult",6,[["u32",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["u32",0]]]]]],[[["value",4]],["tiffresult",6,[["u64",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["u64",0]]]]]],[[["value",4]],["tiffresult",6,[["u8",0]]]],[[["value",4]],["tiffresult",6,[["vec",3,[["u8",0]]]]]],[[["value",4],["value",4]],["bool",0]],[[["type",4],["u32",0]],["entry",3]],[[["type",4],["u64",0]],["entry",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["entry",3],["limits",3],["decoder",3]],["tiffresult",6,[["value",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["u32",0]],[[["rational",3]],["rational",3]],[[["",0],["",0]]],null,[[["",0]],["u32",0]],[[["srational",3]],["u32",0]],[[["rational",3]],["u32",0]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["directoryencoder",3,[["",26,[["write",8],["seek",8]]]]]]],[[["usize",0]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]]],[[["usize",0]]],[[["usize",0]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]],["directoryencoder",3]],[[["directoryencoder",3,[["",26,[["write",8],["seek",8]]]]]],["tiffresult",6]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]],["tiffresult",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",26,[["write",8],["seek",8]]]],["tiffresult",6,[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]]]]],[[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]]],["tiffresult",6,[["directoryencoder",3,[["",26,[["write",8],["seek",8]]]]]]]],[[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]],["u32",0],["u32",0]],["tiffresult",6,[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]],["u64",0]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]],["resolutionunit",4],["rational",3]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]],["resolutionunit",4]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]],["u32",0]],["tiffresult",6]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["tiffwriter",3]],["tiffresult",6]],[[["srational",3],["tiffwriter",3]],["tiffresult",6]],[[["rational",3],["tiffwriter",3]],["tiffresult",6]],[[["directoryencoder",3,[["",26,[["write",8],["seek",8]]]]],["tiffvalue",8]],["tiffresult",6,[["u64",0]]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]],["tiffresult",6]],[[["tiffencoder",3,[["",26,[["write",8],["seek",8]]]]],["u32",0],["u32",0]],["tiffresult",6]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]]],["tiffresult",6]],[[["directoryencoder",3,[["",26,[["write",8],["seek",8]]]]],["tag",4],["tiffvalue",8]],["tiffresult",6]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]],["rational",3]]],[[["imageencoder",3,[["",26,[["write",8],["seek",8]]],["colortype",8]]],["rational",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullusize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tag",4]],["tag",4]],[[["type",4]],["type",4]],[[["compressionmethod",4]],["compressionmethod",4]],[[["photometricinterpretation",4]],["photometricinterpretation",4]],[[["planarconfiguration",4]],["planarconfiguration",4]],[[["predictor",4]],["predictor",4]],[[["resolutionunit",4]],["resolutionunit",4]],[[["sampleformat",4]],["sampleformat",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["tag",4],["tag",4]],["bool",0]],[[["type",4],["type",4]],["bool",0]],[[["compressionmethod",4],["compressionmethod",4]],["bool",0]],[[["photometricinterpretation",4],["photometricinterpretation",4]],["bool",0]],[[["planarconfiguration",4],["planarconfiguration",4]],["bool",0]],[[["predictor",4],["predictor",4]],["bool",0]],[[["resolutionunit",4],["resolutionunit",4]],["bool",0]],[[["sampleformat",4],["sampleformat",4]],["bool",0]],[[["tag",4],["formatter",3]],["result",6]],[[["type",4],["formatter",3]],["result",6]],[[["compressionmethod",4],["formatter",3]],["result",6]],[[["photometricinterpretation",4],["formatter",3]],["result",6]],[[["planarconfiguration",4],["formatter",3]],["result",6]],[[["predictor",4],["formatter",3]],["result",6]],[[["resolutionunit",4],["formatter",3]],["result",6]],[[["sampleformat",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",0]],["option",4,[["tag",4]]]],[[["u16",0]],["option",4,[["type",4]]]],[[["u16",0]],["option",4,[["compressionmethod",4]]]],[[["u16",0]],["option",4,[["photometricinterpretation",4]]]],[[["u16",0]],["option",4,[["planarconfiguration",4]]]],[[["u16",0]],["option",4,[["predictor",4]]]],[[["u16",0]],["option",4,[["resolutionunit",4]]]],[[["u16",0]],["option",4,[["sampleformat",4]]]],[[["u16",0]],["tag",4]],[[["u16",0]],["sampleformat",4]],[[["tag",4],["",0]]],[[["type",4],["",0]]],[[["compressionmethod",4],["",0]]],[[["photometricinterpretation",4],["",0]]],[[["planarconfiguration",4],["",0]]],[[["predictor",4],["",0]]],[[["resolutionunit",4],["",0]]],[[["sampleformat",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tag",4],["tag",4]],["bool",0]],[[["sampleformat",4],["sampleformat",4]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["tag",4]],["u16",0]],[[["type",4]],["u16",0]],[[["compressionmethod",4]],["u16",0]],[[["photometricinterpretation",4]],["u16",0]],[[["planarconfiguration",4]],["u16",0]],[[["predictor",4]],["u16",0]],[[["resolutionunit",4]],["u16",0]],[[["sampleformat",4]],["u16",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[4,"TiffFormatError"],[4,"ColorType"],[4,"TiffError"],[4,"TiffUnsupportedError"],[3,"InflateError"],[13,"Gray"],[13,"RGB"],[13,"Palette"],[13,"GrayA"],[13,"RGBA"],[13,"CMYK"],[13,"FormatError"],[13,"UnsupportedError"],[13,"IoError"],[13,"InvalidTagValueType"],[13,"RequiredTagNotFound"],[13,"UnknownPredictor"],[13,"ByteExpected"],[13,"UnsignedIntegerExpected"],[13,"SignedIntegerExpected"],[13,"InflateError"],[13,"Format"],[13,"RequiredTagEmpty"],[13,"UnexpectedCompressedData"],[13,"InconsistentStripSamples"],[13,"HorizontalPredictor"],[13,"InterpretationWithBits"],[13,"UnsupportedCompressionMethod"],[13,"UnsupportedSampleDepth"],[13,"UnsupportedSampleFormat"],[13,"UnsupportedColorType"],[13,"UnsupportedBitsPerChannel"],[13,"UnsupportedPlanarConfig"],[4,"DecodingBuffer"],[4,"DecodingResult"],[3,"Limits"],[3,"Decoder"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"F32"],[13,"F64"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"F32"],[13,"F64"],[4,"Value"],[3,"Entry"],[13,"Byte"],[13,"Short"],[13,"Signed"],[13,"SignedBig"],[13,"Unsigned"],[13,"UnsignedBig"],[13,"Float"],[13,"Double"],[13,"List"],[13,"Rational"],[13,"RationalBig"],[13,"SRational"],[13,"SRationalBig"],[13,"Ascii"],[8,"TiffValue"],[3,"SRational"],[3,"TiffEncoder"],[3,"DirectoryEncoder"],[3,"ImageEncoder"],[3,"Rational"],[8,"ColorType"],[3,"Gray8"],[3,"Gray16"],[3,"Gray32"],[3,"Gray32Float"],[3,"Gray64"],[3,"Gray64Float"],[3,"RGB8"],[3,"RGB16"],[3,"RGB32"],[3,"RGB32Float"],[3,"RGB64"],[3,"RGB64Float"],[3,"RGBA8"],[3,"RGBA16"],[3,"RGBA32"],[3,"RGBA32Float"],[3,"RGBA64"],[3,"RGBA64Float"],[3,"CMYK8"],[3,"CMYK16"],[3,"CMYK32"],[3,"CMYK32Float"],[3,"CMYK64"],[3,"CMYK64Float"],[4,"Type"],[4,"Tag"],[4,"PhotometricInterpretation"],[4,"ResolutionUnit"],[4,"PlanarConfiguration"],[4,"CompressionMethod"],[4,"Predictor"],[4,"SampleFormat"],[13,"Unknown"],[13,"Unknown"]]},\
"ttf_parser":{"doc":"A high-level, safe, zero-allocation TrueType font parser.","t":[12,12,12,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,4,3,3,8,3,13,13,13,13,13,13,13,13,3,3,3,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,13,4,3,4,3,3,13,3,18,3,13,13,13,4,3,13,13,13,13,13,13,3,3,4,4,13,13,0,12,12,0,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,0,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,12,12,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,0,12,12,11,11,11,0,12,12,11,11,12,0,12,12,12,0,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,12,12,11,11,11,11,10,0,12,12,0,12,12,12,0,12,12,10,0,12,12,0,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,11,10,11,11,11,11,11,12,12,0,12,12,10,11,0,12,12,11,11,11,11,11,11,0,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,12,12,12,12,0,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,6,3,3,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,3,13,13,3,3,4,13,13,13,13,13,3,3,3,13,3,13,3,13,3,13,4,3,3,4,13,4,3,3,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,6,3,13,13,13,13,3,13,6,6,3,13,3,13,3,3,6,13,4,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,3,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,3,13,3,3,3,3,13,3,3,13,3,13,13,3,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,3,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,12,4,3,6,6,6,4,4,4,3,6,6,3,13,13,13,13,13,13,13,13,13,13,6,3,6,3,3,3,6,6,8,3,3,3,3,8,3,3,6,6,3,3,6,6,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,11,12,11,11,10,10,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,4,3,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12],"n":["0","0","0","ArgumentsStackLimitReached","BboxOverflow","Black","BlendRegionsLimitReached","Bold","CFFError","Condensed","Custom","DataAfterEndChar","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Face","FaceIndexOutOfBounds","FaceParsingError","FaceTables","Fixed","FromData","GlyphId","InvalidArgumentsStackLength","InvalidItemVariationDataIndex","InvalidNumberOfBlendOperands","InvalidOperator","InvalidSeacCode","InvalidSubroutineIndex","Iso","Italic","LazyArray16","LazyArray32","LazyArrayIter16","LazyArrayIter32","Light","LineMetrics","Macintosh","MalformedFont","Medium","MissingEndChar","MissingMoveTo","NestingLimitReached","NoGlyph","NoHeadTable","NoHheaTable","NoLocalSubroutines","NoMaxpTable","Normal","Normal","Normal","NormalizedCoordinate","Oblique","Other","OutlineBuilder","PNG","PlatformId","RasterGlyphImage","RasterImageFormat","RawFace","RawFaceTables","ReadOutOfBounds","Rect","SIZE","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Tag","Thin","UltraCondensed","UltraExpanded","Unicode","UnknownMagic","UnsupportedOperator","Variation","VariationAxis","Weight","Width","Windows","ZeroBBox","ankr","ankr","ankr","apple_layout","as_u32","ascender","avar","avar","avar","axis","binary_search","binary_search","binary_search_by","binary_search_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","cbdt","cbdt","cbdt","cblc","cblc","cff","cff","cff","cff2","cff2","cff2","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmap","cmap","cmap","cmp","cmp","count","count","curve_to","data","def_value","default","default","default","default","default","default","descender","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","feat","feat","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts_in_collection","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_lossy","from_raw_tables","from_slice","from_slice","fvar","fvar","fvar","gdef","gdef","gdef","get","get","get","global_bounding_box","glyf","glyf","glyf","glyph_bounding_box","glyph_hor_advance","glyph_hor_side_bearing","glyph_index","glyph_name","glyph_raster_image","glyph_svg_image","glyph_variation_index","glyph_ver_advance","glyph_ver_side_bearing","glyph_y_origin","gpos","gpos","gpos","gsub","gsub","gsub","gvar","gvar","gvar","has_non_default_variation_coordinates","hash","hash","head","head","head","height","height","height","hhea","hhea","hhea","hidden","hmtx","hmtx","hmtx","hvar","hvar","hvar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_bold","is_empty","is_italic","is_monospaced","is_null","is_oblique","is_regular","is_variable","italic_angle","kern","kern","kern","kerx","kerx","kerx","last","len","len","line_gap","line_to","loca","loca","max_value","maxp","maxp","maxp","min_value","morx","morx","morx","move_to","mvar","mvar","mvar","name","name","name","name_id","name_id","names","ne","ne","ne","ne","ne","ne","ne","new","new","next","next","number_of_glyphs","opentype_layout","os2","os2","os2","outline_glyph","parse","parse","parse","parse","partial_cmp","partial_cmp","pixels_per_em","position","post","post","post","quad_to","range","sbix","sbix","sbix","set_variation","slice","strikeout_metrics","style","subscript_metrics","superscript_metrics","svg","svg","svg","table","table_data","tables","tag","thickness","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trak","trak","trak","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","underline_metrics","units_per_em","value","variation_axes","variation_coordinates","vertical_ascender","vertical_descender","vertical_height","vertical_line_gap","vhea","vhea","vhea","vmtx","vmtx","vorg","vorg","vorg","vvar","vvar","weight","width","width","width","x","x_height","x_max","x_min","x_offset","x_size","y","y_max","y_min","y_offset","y_size","0","Point","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","fmt","fmt","from","from","into","into","ne","parse","parse","points","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","ExtendedStateTable","GenericStateEntry","Lookup","StateEntry","StateTable","ValueOffset","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","entry","entry","extra","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_advance","has_mark","has_offset","has_push","has_reset","into","into","into","into","into","kerning","new_state","new_state","next","parse","parse","parse","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value_offset","DELETED_GLYPH","END_OF_TEXT","OUT_OF_BOUNDS","START_OF_TEXT","AxisValueMap","SegmentMaps","SegmentMapsIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from_coordinate","into","into","into","into","into_iter","into_iter","len","map_coordinates","next","parse","parse","segment_maps","to_coordinate","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_name","into","outline","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","ByteEncodingTable","Format","Found","GlyphVariationResult","HighByteMappingThroughTable","ManyToOneRangeMappings","MixedCoverage","SegmentMappingToDeltaValues","SegmentedCoverage","Subtable","Subtable0","Subtable10","Subtable12","Subtable13","Subtable14","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","TrimmedArray","TrimmedTableMapping","UnicodeVariationSequences","UseDefault","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","default","encoding_id","eq","first_code_point","first_code_point","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","glyph_ids","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_variation_index","glyphs","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_unicode","len","ne","next","parse","parse","parse","parse","parse","parse","parse","parse","parse","platform_id","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","FeatureName","FeatureNames","FeatureNamesIter","SettingName","Table","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_setting_index","exclusive","feature","find","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","len","name_index","name_index","names","next","parse","parse","setting","setting_names","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Table","VariationAxis","axes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_value","eq","fmt","fmt","from","from","hidden","into","into","max_value","min_value","name_id","ne","parse","parse","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Base","Component","GlyphClass","Ligature","Mark","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","eq","fmt","from","from","glyph_class","glyph_mark_attachment_class","glyph_variation_delta","has_glyph_classes","hash","into","into","is_mark_glyph","parse","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","Anchor","AnchorMatrix","ChainContext","ClassMatrix","Context","Cursive","CursiveAdjustment","CursiveAnchorSet","Device","Format1","Format1","Format2","Format2","Hinting","HintingDevice","LigatureArray","MarkArray","MarkToBase","MarkToBaseAdjustment","MarkToLigature","MarkToLigatureAdjustment","MarkToMark","MarkToMarkAdjustment","Pair","PairAdjustment","PairSet","PairSets","PositioningSubtable","Single","SingleAdjustment","ValueRecord","ValueRecordsArray","Variation","VariationDevice","anchors","base_coverage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cols","coverage","coverage","coverage","coverage","default","entry","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","inner_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","len","len","len","ligature_array","ligature_coverage","mark1_coverage","mark2_coverage","mark2_matrix","mark_coverage","mark_coverage","marks","marks","marks","outer_index","parse","rows","sets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x_advance","x_advance_device","x_delta","x_device","x_placement","x_placement_device","y","y_advance","y_advance_device","y_delta","y_device","y_placement","y_placement_device","0","0","classes","coverage","coverage","matrix","sets","0","0","0","0","0","0","0","0","coverage","coverage","value","values","Alternate","AlternateSet","AlternateSets","AlternateSubstitution","ChainContext","Context","Format1","Format2","Ligature","Ligature","LigatureSet","LigatureSets","LigatureSubstitution","Multiple","MultipleSubstitution","ReverseChainSingle","ReverseChainSingleSubstitution","Sequence","SequenceList","Single","SingleSubstitution","SubstitutionSubtable","alternate_sets","alternates","backtrack_coverages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","coverage","coverage","coverage","coverage","coverage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","glyph","into","into","into","into","into","into","into","into","into","is_reverse","ligature_sets","lookahead_coverages","parse","sequences","substitutes","substitutes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","coverage","coverage","delta","substitutes","0","0","0","0","0","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","IndexToLocationFormat","Long","Short","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","global_bbox","index_to_location_format","into","into","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units_per_em","Table","ascender","borrow","borrow_mut","clone","clone_into","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Metrics","Table","advance","advance","bearings","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","metrics","number_of_metrics","parse","parse","side_bearing","side_bearing","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","advance_offset","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","side_bearing_offset","to_owned","try_from","try_into","type_id","Format","Format0","Format1","Format2","Format3","KerningPair","Subtable","Subtable0","Subtable2","Subtable3","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into_iter","into_iter","left","len","next","pair","pairs","parse","parse","parse","parse","parse","right","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable","0","0","0","0","AnchorPoints","EntryData","Format","Format0","Format1","Format2","Format4","Format6","Subtable","Subtable0","Subtable1","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","action_index","anchor_points","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","get","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","next","pairs","parse","parse","state_table","state_table","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","0","0","0","0","0","Long","Short","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_range","into","len","parse","to_owned","try_from","try_into","type_id","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","number_of_glyphs","parse","to_owned","try_from","try_into","type_id","Chain","Chains","ChainsIter","Contextual","ContextualEntryData","ContextualSubtable","Coverage","Feature","Insertion","InsertionEntryData","InsertionSubtable","Ligature","LigatureSubtable","NonContextual","Rearrangement","Subtable","SubtableKind","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","current_index","current_insert_index","default_flags","disable_flags","enable_flags","feature_flags","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all_directions","is_backwards","is_logical","is_vertical","kind","kind","ligature_actions","ligatures","lookup","mark_index","marked_insert_index","next","next","parse","parse","parse","parse","setting","state","state","state","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","metric_offset","parse","to_owned","try_from","try_into","type_id","Custom","Iso","Macintosh","Name","Names","NamesIter","PlatformId","Table","Unicode","Windows","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","encoding_id","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_unicode","language_id","len","name","name_id","name_id","names","next","parse","parse","platform_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","0","ChainedContextLookup","ChainedSequenceRule","ChainedSequenceRuleSet","ChainedSequenceRuleSets","Class","ClassDefinition","ContextLookup","Coverage","Feature","FeatureIndex","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LanguageIndex","LanguageSystem","LanguageSystemList","LayoutTable","Lookup","LookupFlags","LookupIndex","LookupList","LookupSubtable","LookupSubtables","LookupSubtablesIter","RangeRecord","RecordList","RecordListItem","RecordListIter","Script","ScriptIndex","ScriptList","SequenceLookupRecord","SequenceRule","SequenceRuleSet","SequenceRuleSets","VariationIndex","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","coverage","coverage","default_language","end","feature_indices","features","find","find_index","find_substitute","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","ignore_base_glyphs","ignore_flags","ignore_ligatures","ignore_marks","index","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","languages","len","len","lookahead","lookup_indices","lookup_list_index","lookups","lookups","lookups","mark_attachment_type","mark_filtering_set","next","next","parse","parse","parse","parse","parse","parse","parse","parse","required_feature","right_to_left","scripts","sequence_index","start","subtables","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_mark_filtering_set","value","variations","backtrack_classes","backtrack_coverages","coverage","coverage","coverage","input_classes","input_coverages","lookahead_classes","lookahead_coverages","lookups","sets","sets","classes","records","start","classes","coverage","coverage","coverage","coverages","lookups","sets","sets","glyphs","records","Black","Bold","Condensed","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Italic","Light","Medium","Normal","Normal","Normal","Oblique","Other","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Table","Thin","UltraCondensed","UltraExpanded","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","is_bold","ne","ne","parse","partial_cmp","strikeout_metrics","style","subscript_metrics","superscript_metrics","to_number","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","use_typographic_metrics","version","weight","width","windows_ascender","windows_descender","x_height","x_offset","x_size","y_offset","y_size","0","Names","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get","into","into","is_monospaced","italic_angle","len","names","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline_metrics","Strike","Strikes","StrikesIter","Table","best_strike","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_iter","into_iter","len","len","next","parse","pixels_per_em","ppi","strikes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SvgDocumentsList","SvgDocumentsListIter","Table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","documents","find","fmt","fmt","from","from","from","get","into","into","into","into_iter","into_iter","len","next","parse","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Table","Track","TrackData","Tracks","TracksIter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get","horizontal","into","into","into","into","into","into_iter","into_iter","len","name_index","next","parse","sizes","to_owned","to_owned","to_owned","to_owned","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","values","vertical","Table","ascender","borrow","borrow_mut","clone","clone_into","default","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Table","VerticalOriginMetrics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_y","fmt","fmt","from","from","glyph_id","glyph_y_origin","into","into","metrics","parse","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y"],"q":["ttf_parserttf_parser::Weight","ttf_parser::ankr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::apple_layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::apple_layout::class","","","ttf_parser::apple_layout::state","ttf_parser::avar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::cbdt","","","","","","","","","","","","","","ttf_parser::cblc","","","","","","","","","","","","","ttf_parser::cff","","","","","","","","","","","","","","","ttf_parser::cff2","","","","","","","","","","","","","","","ttf_parser::cmapttf_parser::cmap::Format","","","","","","","","ttf_parser::cmap::GlyphVariationResult","ttf_parser::feat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::fvar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::gdef","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::glyf","","","","","","","","","","","","","","ttf_parser::gposttf_parser::gpos::Device","","ttf_parser::gpos::PairAdjustment","","","","","ttf_parser::gpos::PositioningSubtable","","","","","","","","ttf_parser::gpos::SingleAdjustment","","","","ttf_parser::gsub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::gsub::SingleSubstitution","","","","ttf_parser::gsub::SubstitutionSubtable","","","","","","","ttf_parser::gvar","","","","","","","","","","","","","","ttf_parser::head","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::hhea","","","","","","","","","","","","","","","","","ttf_parser::hmtx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::hvar","","","","","","","","","","","","","","","ttf_parser::kern","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::kern::Format","","","","ttf_parser::kerxttf_parser::kerx::Format","","","","","ttf_parser::loca","","","","","","","","","","","","","","","","","ttf_parser::loca::Table","","ttf_parser::maxp","","","","","","","","","","","","","","ttf_parser::morxttf_parser::morx::SubtableKind","","","","","ttf_parser::mvar","","","","","","","","","","","","","","ttf_parser::name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::name::name_id","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::name_id","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::opentype_layoutttf_parser::opentype_layout::ChainedContextLookup","","","","","","","","","","","","ttf_parser::opentype_layout::ClassDefinition","","","ttf_parser::opentype_layout::ContextLookup","","","","","","","","ttf_parser::opentype_layout::Coverage","","ttf_parser::os2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::os2::Weight","ttf_parser::post","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::sbix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::svg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::trak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ttf_parser::vhea","","","","","","","","","","","","","","","","","","ttf_parser::vorg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","A list of errors that can occur during a CFF glyph …","","","","","","","","","A font face.","The face index is larger than the number of faces in the …","A list of font face parsing errors.","Parsed face tables.","A 32-bit signed fixed-point number (16.16).","A trait for parsing raw binary data of fixed size.","A type-safe wrapper for glyph ID.","","","","","","","","A form that is generally cursive in nature.","A slice-like container that converts internal binary data …","A slice-like container that converts internal binary data …","An iterator over <code>LazyArray16</code>.","An iterator over <code>LazyArray32</code>.","","A line metrics.","","An attempt to read out of bounds detected.","","","","","","The <code>head</code> table is missing or malformed.","The <code>hhea</code> table is missing or malformed.","","The <code>maxp</code> table is missing or malformed.","","","A face that is neither italic not obliqued.","A variation coordinate in a normalized coordinate system.","A typically-sloped version of the regular face.","","A trait for glyph outline construction.","","A platform ID.","A glyph’s raster image.","A glyph raster image format.","A raw font face.","A list of all supported tables as raw data.","","A rectangle.","Object’s raw data size.","A script metrics used by subscript and superscript.","","","","A face style.","A 4-byte tag.","","","","","Face data must start with <code>0x00010000</code>, <code>0x74727565</code>, …","","A font variation value.","A variation axis.","A face weight.","A face width.","","","An Anchor Point Table implementation.","","","This module contains Apple Advanced Typography Layout …","Returns tag value as <code>u32</code> number.","Returns a horizontal face ascender.","An Axis Variations Table implementation.","","","An axis tag name.","Performs a binary search by specified <code>key</code>.","Performs a binary search by specified <code>key</code>.","Performs a binary search using specified closure.","Performs a binary search using specified closure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns face’s capital height.","A Color Bitmap Data Table implementation.","","","A Color Bitmap Location Table implementation.","","A Compact Font Format Table implementation.","","","A Compact Font Format 2 Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","A Character to Glyph Index Mapping Table implementation.","","","","","","","Appends a CurveTo segment.","A raw image data. It’s up to the caller to decode it.","","","","","","","","Returns a horizontal face descender.","","","","","","","","","","","A Feature Name Table implementation.","","","","","","","","","","","","","","","","","","","","Returns the number of fonts stored in a TrueType font …","An image format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new coordinate.","Creates a new coordinate.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from provided <code>RawFaceTables</code>.","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","A Font Variations Table implementation.","","","A Glyph Definition Table implementation.","","","Returns a value at <code>index</code>.","Returns a value at <code>index</code>.","Returns the coordinate value as f2.14.","Returns a bounding box that large enough to enclose any …","A Glyph Data Table implementation.","","","Returns a tight glyph bounding box.","Returns glyph’s horizontal advance.","Returns glyph’s horizontal side bearing.","Resolves a Glyph ID for a code point.","Returns glyph’s name.","Returns a reference to a glyph’s raster image.","Returns a reference to a glyph’s SVG image.","Resolves a variation of a Glyph ID from two code points.","Returns glyph’s vertical advance.","Returns glyph’s vertical side bearing.","Returns glyph’s vertical origin according to Vertical …","A Glyph Positioning Table implementation.","","","A Glyph Substitution Table implementation.","","","A Glyph Variations Table implementation.","","","Checks that face has non-default variation coordinates.","","","A Font Header Table implementation.","","","Returns rect’s height.","Returns face’s height.","Image height.","A Horizontal Header Table implementation.","","","","A Horizontal/Vertical Metrics Table implementation.","","","A Horizontal/Vertical Metrics Variations Table …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Checks that face is marked as <em>Bold</em>.","Checks if array is empty.","Checks that face is marked as <em>Italic</em>.","Checks that face is marked as <em>Monospaced</em>.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","Checks that face is marked as <em>Oblique</em>.","Checks that face is marked as <em>Regular</em>.","Checks that face is variable.","Returns face’s italic angle.","A Kerning Table implementation.","","","An Extended Kerning Table implementation.","","","Returns the last value.","Returns array’s length.","Returns array’s length.","Returns a horizontal face line gap.","Appends a LineTo segment.","An Index to Location Table implementation.","","","A Maximum Profile Table implementation.","","","","An Extended Glyph Metamorphosis Table implementation.","","","Appends a MoveTo segment.","A Metrics Variations Table implementation.","","","A Naming Table implementation.","","","A list of name ID’s.","An axis name in the <code>name</code> table.","Returns a list of names.","","","","","","","","Creates a new <code>LazyArray</code>.","Creates a new <code>LazyArray</code>.","","","Returns a total number of glyphs in the face.","This module contains OpenType Layout supplementary tables …","A OS/2 and Windows Metrics Table implementation.","","","Outlines a glyph and returns its tight bounding box.","Parses an object from a raw data.","","","","","","A pixels per em of the selected strike.","Line position.","A PostScript Table implementation.","","","Appends a QuadTo segment.","Returns a <code>RangeRecord</code> for a glyph.","A Standard Bitmap Graphics Table implementation.","","","Sets a variation axis coordinate.","Returns sub-array.","Returns face’s strikeout metrics.","Returns face style.","Returns face’s subscript metrics.","Returns face’s superscript metrics.","An SVG Table implementation.","","","Returns the raw data of a selected table.","Returns the raw data of a selected table.","Returns low-level face tables.","","Line thickness.","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","","","","","","","","","","A Tracking Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a horizontal typographic face ascender.","Returns a horizontal typographic face descender.","Returns a horizontal typographic face line gap.","Returns face’s underline metrics.","Returns face’s units per EM.","An axis value.","Returns an iterator over variation axes.","Returns the current normalized variation coordinates.","Returns a vertical face ascender.","Returns a vertical face descender.","Returns a vertical face height.","Returns a vertical face line gap.","A Vertical Header Table implementation.","","","","","A Vertical Origin Table implementation.","","","","","Returns face’s weight.","Returns rect’s width.","Returns face’s width.","Image width.","Horizontal offset.","Returns face’s x height.","","","X offset.","Horizontal face size.","Vertical offset.","","","Y offset.","Vertical face size.","","An anchor point.","An Anchor Point Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Parses a table from raw data.","Returns a list of anchor points for the specified glyph.","","","","","","","","","","","An Extended State Table.","A State Table entry.","A lookup table.","A legacy state entry used by StateTable.","A State Table.","A type-safe wrapper for a kerning value offset.","","","","","","","","","","","Predefined classes.","Returns a glyph class.","Returns a glyph class.","","","","","","","","","","","Returns a class entry.","Returns a class entry.","Additional data.","Entry flags.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If set, advance to the next glyph before going to the new …","If set, remember this glyph as the marked glyph.","Checks that entry has an offset.","If set, push this glyph on the kerning stack.","If set, reset the kerning data (clear the stack).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns kerning at offset.","Produces a new state.","A new state.","Returns the next offset.","","Parses an Extended State Table from a stream.","Parses a lookup table from raw data.","Predefined states.","","","","","","","","","","","","","","","","","","","","","Returns a value associated with the specified glyph.","Returns a value offset.","","","","","An axis value map.","A list of segment maps.","An iterator over maps.","An Axis Variations Table.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of segments.","Maps coordinates.","","","Parses a table from raw data.","The segment maps array — one segment map for each axis …","The modified, normalized coordinate value.","","","","","","","","","","","","","","","","A Color Bitmap Data Table.","","","","","","Returns the argument unchanged.","Returns a raster image for the glyph.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Color Bitmap Location Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Compact Font Format Table.","","","","","","Returns the argument unchanged.","Returns a glyph name.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","A Compact Font Format 2 Table.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","","A character encoding subtable variant.","Glyph was found in the variation encoding table.","A result of a variation glyph mapping.","","","","","","A character encoding subtable.","A format 0 subtable.","A format 10 subtable.","A format 12 subtable.","A format 13 subtable.","A format 14 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of subtables.","An iterator over <code>Subtables</code>.","A Character to Glyph Index Mapping Table.","","","","Glyph should be looked in other, non-variation tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for all codepoints contained in this subtable.","","Subtable encoding.","","First character code of subrange.","First character code covered.","","","","","","","","","","","","","","A subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a subtable at an index.","Just a list of 256 8bit glyph IDs.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Maps a character to a glyph ID.","Resolves a variation of a glyph ID from two code points.","Array of glyph indexes for character codes in the range.","Array of glyph indices for the character codes covered.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current encoding is Unicode compatible.","Returns the number","","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Subtable platform.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A feature names.","A list fo feature names.","An iterator over <code>FeatureNames</code>.","A setting name.","A Feature Name Table.","","","","","","","","","","","","","","","","","","","The index of the default setting in the <code>setting_names</code>.","The feature’s exclusive settings. If set, the feature …","The feature’s ID.","Finds a feature name by ID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a feature name at an index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of feature names.","The <code>name</code> table index for the feature’s name in a …","The <code>name</code> table index for the feature’s name in a …","A list of feature names. Sorted by <code>FeatureName.feature</code>.","","","Parses a table from raw data.","The setting.","The feature’s setting names.","","","","","","","","","","","","","","","","","","","","A Font Variations Table.","A variation axis.","A list of variation axes.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An axis name in the <code>name</code> table.","","","Parses a table from raw data.","","","","","","","","","","","","A glyph class.","","","A Glyph Definition Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns glyph’s class according to Glyph Class …","Returns glyph’s mark attachment class according to Mark …","Returns glyph’s variation delta at a specified index …","Checks that face has Glyph Class Definition Table.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that glyph is a mark according to Mark Glyph Sets …","Parses a table from raw data.","","","","","","","","","","A Glyph Data Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An Anchor Table.","An <code>Anchor</code> parsing helper.","","A <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.","","","A Cursive Attachment Positioning Subtable.","A list of entry and exit <code>Anchor</code> pairs.","A Device Table.","","","","","","A Device Table hinting values.","An array or ligature anchor matrices.","A Mark Array.","","A Mark-to-Base Attachment Positioning Subtable.","","A Mark-to-Ligature Attachment Positioning Subtable.","","A Mark-to-Mark Attachment Positioning Subtable.","","A Pair Adjustment Positioning Subtable.","A <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.","A list of <code>PairSet</code>s.","A glyph positioning lookup subtable enumeration.","","A Single Adjustment Positioning Subtable.","A Value Record.","An array of Value Records.","","A Device Table indexes into Item Variation Store.","An anchors matrix.","A base coverage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of columns in the matrix.","Returns the subtable coverage.","Returns the subtable coverage.","Returns the subtable coverage.","","","Returns an entry <code>Anchor</code> at index.","Returns an exit <code>Anchor</code> at index.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>ValueRecord</code> at index.","Returns a <code>ValueRecord</code> pair using the second glyph.","Returns a value at <code>index</code>.","Returns a <code>ValueRecord</code> pair using specified classes.","Returns an <code>AnchorMatrix</code> at index.","Returns contained data at index.","Returns an <code>Anchor</code> at position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns array’s length.","Returns array’s length.","Returns the number of items.","Returns the array length.","Returns the array length.","","","","","","A mark coverage.","","A list of mark anchors.","","","","","Number of rows in the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal value, in design units.","Horizontal adjustment for advance, in design units — …","A <code>Device</code> table with horizontal adjustment for advance.","Returns X-axis delta.","A <code>Device</code> table with horizontal value.","Horizontal adjustment for placement, in design units.","A <code>Device</code> table with horizontal adjustment for placement.","Vertical value, in design units.","Vertical adjustment for advance, in design units — only …","A <code>Device</code> table with vertical adjustment for advance.","Returns Y-axis delta.","A <code>Device</code> table with vertical value.","Vertical adjustment for placement, in design units.","A <code>Device</code> table with vertical adjustment for placement.","","","","","","","","","","","","","","","","","","","","","A list of glyphs for Alternate Substitution Subtable.","A set of <code>AlternateSet</code>.","A Alternate Substitution Subtable.","","","","","Glyph components for one ligature.","","A <code>Ligature</code> set.","A list of <code>Ligature</code> sets.","A Ligature Substitution Subtable.","","A Multiple Substitution Subtable.","","A Reverse Chaining Contextual Single Substitution Subtable.","A sequence of glyphs for Multiple Substitution Subtable.","A list of <code>Sequence</code> tables.","","A Single Substitution Subtable.","A glyph substitution lookup subtable enumeration.","","Array of alternate glyph IDs, in arbitrary order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyph components for one ligature.","Returns the subtable coverage.","Returns the subtable coverage.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ligature to substitute.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that the current subtable is <em>Reverse Chaining </em>…","","","","","A list of substitute glyphs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Glyph Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An index format used by the Index to Location Table.","","","A Font Header Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A bounding box that large enough to enclose any glyph from …","An index format used by the Index to Location Table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","","","","","Units per EM.","A Horizontal Header Table.","Face ascender.","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>hmtx</code> table.","Parses a table from raw data.","","","","","Horizontal/Vertical Metrics.","A Horizontal/Vertical Metrics Table.","Returns advance for a glyph.","Width/Height advance for <code>hmtx</code>/<code>vmtx</code>.","Side bearings for glyph IDs greater than or equal to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics indexed by glyph ID.","Sum of long metrics + bearings.","","Parses a table from raw data.","Returns side bearing for a glyph.","Left/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.","","","","","","","","","A Horizontal/Vertical Metrics Variations Table.","Returns advance offset for a glyph.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","Returns side bearing offset for a glyph.","","","","","A kerning subtable format.","","","","","A kerning pair.","A kerning subtable.","A format 0 subtable.","A format 2 subtable.","A format 3 subtable.","A list of subtables.","An iterator over kerning subtables.","A Kerning Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns left glyph ID.","Returns the number of subtables.","","Glyphs pair.","A list of kerning pairs.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Returns right glyph ID.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kerning value.","Indicates that subtable is variable.","","","","","A container of Anchor Points used by <code>Subtable4</code>.","A state machine entry.","An extended kerning subtable format.","","","","","","A kerning subtable.","A format 0 subtable.","A format 1 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of extended kerning subtables.","An iterator over extended kerning subtables.","An Extended Kerning Table.","An action index.","Anchor points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mark and current anchor points at action index.","Returns kerning for a pair of glyphs.","Returns kerning at action index.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A list of kerning pairs.","","Parses a table from raw data.","A state table.","A state table.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tuple count.","","","","","","","","","","","","","Indicates that subtable is variable.","","","","","","Long offsets.","Short offsets.","An Index to Location Table.","","","","","","Returns the argument unchanged.","Returns glyph’s range in the <code>glyf</code> table.","Calls <code>U::from(self)</code>.","Returns offsets length.","Parses a table from raw data.","","","","","","","A Maximum Profile Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The total number of glyphs in the face.","Parses a table from raw data.","","","","","A metamorphosis chain.","A list of metamorphosis chains.","An iterator over metamorphosis chains.","","A contextual subtable state table trailing data.","A contextual subtable.","A subtable coverage.","The feature table is used to compute the sub-feature flags …","","A contextual subtable state table trailing data.","An insertion subtable.","","A ligature subtable.","","","A subtable in a metamorphosis chain.","A subtable kind.","A list of subtables in a metamorphosis chain.","An iterator over a metamorphosis chain subtables.","An Extended Glyph Metamorphosis Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of metamorphosis chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ligature components.","A subtable coverage.","A current index.","A current insert index.","Default chain features.","Complement of flags for the settings that this feature and …","Flags for the settings that this feature and setting …","Subtable feature flags.","A list of chain features.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insertion glyphs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, this subtable will be applied to both horizontal …","If true, this subtable will process glyphs in descending …","If true, this subtable will process glyphs in logical order","If true, this subtable will only be applied to vertical …","The type of feature.","A subtable kind.","Ligature actions.","Ligatures.","Returns a Lookup at index.","A mark index.","A marked insert index.","","","","","","Parses a table from raw data.","The feature’s setting (aka selector).","The contextual glyph substitution state table.","A state table.","A state table.","A list of chain subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Metrics Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a metric offset by tag.","Parses a table from raw data.","","","","","","","","A Name Record.","A list of face names.","An iterator over face names.","A platform ID.","A Naming Table.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform-specific encoding ID.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a name at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current Name data has a Unicode encoding.","A language ID.","Returns a number of name records.","A raw name data.","A list of name ID’s.","A Name ID.","A list of names.","","","Parses a table from raw data.","A platform ID.","","","","","","Returns the Name’s data as a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Chained Contextual Lookup Subtable.","A Chained Sequence Rule.","A set of <code>ChainedSequenceRule</code>.","A list of <code>ChainedSequenceRule</code> sets.","A value of Class Definition Table.","A Class Definition Table.","A Contextual Lookup Subtable.","A Coverage Table.","A Feature.","An index in <code>FeatureList</code>.","A list of <code>Feature</code> records.","A Feature Variations Table.","Simple glyph contexts.","Simple glyph contexts.","","","Class-based glyph contexts.","Class-based glyph contexts.","","","Coverage-based glyph contexts.","Coverage-based glyph contexts.","An index in <code>LanguageSystemList</code>.","A Language System Table.","A list of <code>LanguageSystem</code> records.","A Layout Table.","A Lookup Table.","Lookup table flags.","An index in <code>LookupList</code>.","A list of <code>Lookup</code> values.","A trait for parsing Lookup subtables.","A list of lookup subtables.","An iterator over lookup subtables.","A record that describes a range of glyph IDs.","A data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …","A trait to parse item in <code>RecordList</code>.","An iterator over <code>RecordList</code> values.","A Script Table.","An index in <code>ScriptList</code>.","A list of <code>Script</code> records.","A sequence rule record.","A sequence rule.","A set of <code>SequenceRule</code>s.","A list of <code>SequenceRuleSet</code>s.","An index in <code>FeatureVariations</code>.","Contains either glyph IDs or glyph Classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that glyph is present.","Returns the subtable coverage.","Returns the subtable coverage.","Default language.","Last glyph ID in the range","Array of indices into the FeatureList, in arbitrary order.","A list of all supported features.","Returns RecordList value by <code>Tag</code>.","Returns a <code>VariationIndex</code> for variation coordinates.","Returns a <code>Feature</code> at specified indices.","Lookup qualifiers.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parses a subtable at index.","Returns RecordList value by index.","Returns the coverage index of the glyph or <code>None</code> if it is …","Returns the glyph class of the glyph (zero if it is not …","","","","","Returns RecordList value index by <code>Tag</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates an iterator over subtables.","","Checks that RecordList is empty.","List of supported languages, excluding the default one. …","Returns a number of items in the LookupSubtables.","Returns a number of items in the RecordList.","Contains either glyph IDs or glyph Classes.","","","","","A list of all lookups.","","Index into GDEF mark glyph sets structure.","","","Parses raw data.","Parses raw data.","","","","","","","Index of a feature required for this language system.","","A list of all supported scripts.","","First glyph ID in the range","Available subtables.","Script tag.","Language tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coverage Index of first glyph ID in range.","Used to substitute an alternate set of lookup tables to …","","","","","","","","","","","","","","","","","","","","","","","","Array of glyph IDs. Sorted.","Array of glyph ranges. Ordered by <code>RangeRecord.start</code>.","","","","","","","","","A form that is generally cursive in nature.","","","","","A face that is neither italic not obliqued.","A typically-sloped version of the regular face.","","A script metrics used by subscript and superscript.","","","","A face style.","A OS/2 and Windows Metrics Table.","","","","A face weight.","A face width.","","","","","","","","","","","Returns capital height.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if face is bold.","","","Parses a table from raw data.","","Returns strikeout metrics.","Returns style.","Returns subscript metrics.","Returns superscript metrics.","Returns a numeric representation of a weight.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","Returns typographic ascender.","Returns typographic descender.","Returns typographic line gap.","Checks if typographic metrics should be used.","Table version.","Returns weight class.","Returns face width.","Returns Windows ascender.","Returns Windows descender.","Returns x height.","X offset.","Horizontal face size.","Y offset.","Vertical face size.","","A list of glyph names.","A PostScript Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph name by ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flag that indicates that the font is monospaced.","Italic angle in counter-clockwise degrees from the …","Returns names count.","A list of glyph names.","Parses a table from raw data.","","","","","","","","","Underline metrics.","A strike of glyphs.","A list of <code>Strike</code>s.","An iterator over <code>Strikes</code>.","A Standard Bitmap Graphics Table.","Selects the best matching <code>Strike</code> based on <code>pixels_per_em</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph data.","Returns a strike at the index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of glyphs in this strike.","Returns the number of strikes.","","Parses a table from raw data.","The pixels per EM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A list of <code>Strike</code>s.","","","","","","","","","","","","","","","","A list of SVG documents.","An iterator over <code>SvgDocumentsList</code> values.","An SVG Table.","","","","","","","","","","","","","","A list of SVG documents.","Returns a SVG document data by glyph ID.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns SVG document data at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of SVG documents in the list.","","Parses a table from raw data.","","","","","","","","","","","","","A Tracking Table.","A single track.","A track data.","A list of tracks.","An iterator over <code>Tracks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a track at index.","Horizontal track data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of tracks.","The <code>name</code> table index for the track’s name.","","Parses a table from raw data.","A list of sizes.","","","","","A list of tracks.","","","","","","","","","","","","","","","","A track value.","A list of tracking values for each size.","Vertical track data.","A Vertical Header Table.","Face ascender.","","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>vmtx</code> table.","Parses a table from raw data.","","","","","A Vertical Origin Table.","Vertical origin metrics for the Vertical Origin Table.","","","","","","","","","Default origin.","","","Returns the argument unchanged.","Returns the argument unchanged.","Glyph ID.","Returns glyph’s Y origin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics for each glyph.","","Parses a table from raw data.","","","","","","","","","Y coordinate, in the font’s design coordinate system, of …"],"i":[1,2,3,4,4,5,4,5,0,6,7,4,6,5,6,6,5,0,8,0,0,0,0,0,4,4,4,4,4,4,7,9,0,0,0,0,5,0,7,8,5,4,4,4,4,8,8,4,8,5,6,9,0,9,5,0,10,0,0,0,0,0,4,0,11,0,5,6,6,0,0,5,6,6,7,8,4,0,0,0,0,7,4,0,12,13,0,3,14,0,12,13,15,16,17,16,17,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,14,0,12,13,0,12,0,12,13,0,12,13,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,25,0,12,13,2,3,18,19,25,23,26,16,18,17,2,20,12,14,4,2,20,15,3,21,22,10,23,8,0,12,13,1,16,17,4,2,20,15,3,3,21,22,10,23,8,8,24,14,0,23,1,16,18,17,19,4,2,20,20,20,15,3,21,22,10,23,8,24,12,13,14,3,3,14,24,14,0,12,13,0,12,13,16,17,20,14,0,12,13,14,14,14,14,14,14,14,14,14,14,14,0,12,13,0,12,13,0,12,13,14,2,3,0,12,13,22,14,23,0,12,13,26,0,12,13,0,12,13,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,16,18,17,19,14,16,14,14,3,14,14,14,14,0,12,13,0,12,13,16,16,17,14,25,0,12,26,0,12,13,26,0,12,13,25,0,12,13,0,12,13,0,26,14,2,20,15,3,21,22,23,16,17,18,19,14,0,0,12,13,14,11,1,2,3,2,3,23,21,0,12,13,25,16,0,12,13,14,16,14,14,14,14,0,12,13,24,14,14,26,21,3,3,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,3,8,0,12,13,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,1,16,18,17,19,4,2,20,15,3,21,22,10,23,8,24,12,13,14,14,14,14,14,14,15,14,14,14,14,14,14,0,12,13,12,13,0,12,13,12,13,14,22,14,23,23,14,22,22,27,27,23,22,22,27,27,28,0,0,29,30,29,30,29,30,29,30,29,29,29,30,29,30,29,30,29,29,30,30,29,30,29,30,29,30,29,30,29,29,0,0,0,0,0,0,31,32,33,34,35,31,32,33,34,35,0,33,34,31,32,33,34,35,31,32,33,34,35,33,34,31,31,31,32,33,34,35,31,32,33,34,35,31,31,31,31,31,31,32,33,34,35,33,33,31,32,31,34,35,0,31,32,33,34,35,31,32,33,34,35,31,32,33,34,35,31,32,33,34,35,35,31,0,0,0,0,0,0,0,0,36,37,38,39,36,37,38,39,37,38,39,37,38,39,37,38,39,36,37,38,39,37,36,37,38,39,36,38,38,39,36,37,39,39,37,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,0,45,0,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,45,46,47,48,49,50,51,52,53,45,54,44,55,56,57,46,47,48,49,50,51,52,53,45,54,44,55,56,57,47,48,49,50,51,52,53,45,54,44,55,56,57,47,48,49,50,51,52,53,45,54,44,55,56,57,47,48,49,50,51,52,53,55,56,55,45,50,51,47,48,49,50,51,52,53,45,54,44,55,56,57,55,46,47,48,49,50,51,52,53,45,54,44,55,56,57,56,47,47,48,49,50,51,52,53,54,55,55,50,51,46,47,48,49,50,51,52,53,45,54,44,55,56,57,46,56,55,56,45,46,47,48,49,50,51,52,53,54,57,55,57,47,48,49,50,51,52,53,45,54,44,55,56,57,46,47,48,49,50,51,52,53,45,54,44,55,56,57,46,47,48,49,50,51,52,53,45,54,44,55,56,57,46,47,48,49,50,51,52,53,45,54,44,55,56,57,58,59,60,61,62,63,64,65,66,0,0,0,0,0,67,68,69,70,71,67,68,69,70,71,68,69,70,71,68,69,70,71,69,69,69,70,68,69,70,71,67,68,69,70,71,70,67,68,69,70,71,67,70,70,68,69,71,67,68,71,68,69,68,69,70,71,67,68,69,70,71,67,68,69,70,71,67,68,69,70,71,0,0,72,26,72,26,72,26,72,26,72,26,26,26,72,26,72,26,26,72,26,26,26,26,26,72,26,26,72,26,72,26,72,26,72,73,73,0,73,73,0,73,74,73,74,73,74,73,74,73,74,73,73,73,74,74,74,74,74,73,73,74,74,74,73,73,74,73,74,73,74,73,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,76,0,76,76,0,0,0,77,78,77,78,79,0,0,0,76,0,76,0,76,0,76,0,0,0,0,76,0,0,0,79,0,80,80,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,94,77,78,76,89,83,88,88,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,84,85,86,87,91,92,94,82,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,84,86,88,91,92,90,90,95,95,95,80,90,80,90,95,82,76,94,89,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,81,82,79,83,84,77,85,86,87,78,88,89,80,90,91,92,93,94,95,76,93,83,83,81,93,83,83,93,83,83,81,93,83,83,96,97,98,99,98,98,99,100,101,102,103,104,105,106,107,108,109,108,109,110,0,0,0,110,110,111,111,0,110,0,0,0,110,0,110,0,0,0,110,0,0,112,113,114,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,117,111,110,116,112,118,114,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,117,111,115,116,113,112,117,118,114,110,110,118,114,110,116,115,114,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,111,115,116,113,112,117,118,114,110,119,120,119,120,121,122,123,124,125,126,127,0,128,128,128,128,128,128,128,128,128,128,128,128,128,0,129,129,0,129,130,129,130,129,130,129,130,129,129,130,129,130,130,130,129,130,130,129,130,129,130,129,130,129,130,130,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,132,133,132,133,132,133,132,133,132,133,132,133,132,133,132,133,132,132,132,133,132,132,133,133,132,133,132,133,132,133,132,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,135,135,135,135,0,0,0,0,0,0,0,0,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,139,136,135,137,138,140,141,142,143,137,136,135,137,138,139,140,141,142,143,137,140,141,142,137,137,137,136,135,137,138,139,140,141,142,143,138,139,136,138,139,136,140,136,140,141,142,143,136,143,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,136,135,137,138,139,140,141,142,143,136,137,144,145,146,147,0,0,0,148,148,148,148,148,0,0,0,0,0,0,0,0,0,149,150,151,149,152,153,154,150,155,148,156,157,158,159,151,149,152,153,154,150,155,148,156,157,158,159,151,149,152,153,154,150,155,148,156,157,158,159,151,149,152,153,154,150,155,148,156,157,158,159,152,150,151,149,152,153,154,150,155,148,156,157,159,156,151,149,152,153,154,150,155,148,156,157,158,159,154,151,152,153,155,156,156,156,156,151,149,152,153,154,150,155,148,156,157,158,159,157,158,158,151,149,159,152,150,159,151,149,152,153,154,150,155,148,156,157,158,159,151,149,152,153,154,150,155,148,156,157,158,159,151,149,152,153,154,150,155,148,156,157,158,159,156,151,149,152,153,154,150,155,148,156,157,158,159,156,160,161,162,163,164,165,165,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,167,0,168,168,168,168,168,168,168,168,168,168,168,168,168,0,0,0,169,0,0,0,0,169,0,0,169,0,169,169,0,0,0,0,0,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,173,177,171,174,180,170,170,177,180,170,171,172,173,174,175,169,176,177,178,180,181,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,175,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,178,179,181,182,176,176,176,176,170,177,173,173,172,171,174,179,182,170,171,174,183,170,172,173,175,180,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,170,171,172,173,174,175,169,176,177,178,179,180,181,182,183,184,185,186,187,188,0,189,189,189,189,189,189,189,189,189,189,189,189,189,7,7,7,0,0,0,0,0,7,7,7,190,191,192,193,7,190,191,192,193,7,190,191,192,193,7,190,191,192,193,192,191,193,190,7,7,190,191,193,7,190,191,192,193,191,7,190,191,192,193,191,192,190,190,191,190,0,190,193,192,7,193,190,7,190,191,192,193,190,7,190,191,192,193,7,190,191,192,193,7,190,191,192,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,0,0,0,0,0,0,0,0,0,0,195,196,197,198,195,196,197,198,195,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,197,195,196,208,212,209,206,207,211,211,204,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,205,207,197,198,194,194,194,194,207,202,199,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,205,207,207,208,205,207,199,210,203,202,199,206,194,204,200,201,213,214,203,194,208,209,210,212,209,194,206,203,212,204,208,209,210,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,200,201,195,202,203,196,199,204,205,194,206,207,208,209,210,211,212,197,198,194,212,206,215,216,217,215,216,215,216,215,216,216,217,215,218,219,218,220,221,220,222,222,222,221,220,223,224,5,5,6,6,5,6,6,5,9,5,5,5,6,9,9,5,0,5,6,6,0,0,5,6,6,0,0,5,6,9,27,225,5,6,9,27,225,225,5,6,9,27,225,5,6,9,27,225,6,5,6,9,5,6,9,27,5,6,9,27,225,5,5,6,9,27,225,5,6,9,27,5,6,9,27,225,225,5,27,225,6,225,225,225,225,5,6,5,6,9,27,225,5,6,9,27,225,5,6,9,27,225,5,6,9,27,225,225,225,225,225,225,225,225,225,225,225,27,27,27,27,28,0,0,226,227,226,227,226,227,226,227,226,226,227,226,227,226,226,227,227,227,226,227,227,226,227,226,227,226,227,226,227,227,0,0,0,0,228,229,230,231,228,229,230,231,228,230,231,228,230,231,228,230,231,228,229,230,231,228,230,231,229,230,231,228,229,231,230,231,229,228,230,230,228,230,231,228,229,230,231,228,229,230,231,228,229,230,231,228,0,0,0,232,233,234,232,233,234,232,233,234,232,233,234,233,234,232,232,234,232,233,234,232,232,233,234,232,233,232,233,234,232,233,234,232,233,234,232,233,234,232,233,234,0,0,0,0,0,235,236,237,238,239,235,236,237,238,239,236,237,238,239,236,237,238,239,237,238,236,237,238,239,235,236,237,238,239,237,239,235,236,237,238,239,235,237,237,236,235,239,238,236,237,238,239,238,235,236,237,238,239,235,236,237,238,239,235,236,237,238,239,236,236,239,0,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,0,0,241,242,241,242,241,242,241,242,242,241,242,241,242,241,242,241,242,242,241,242,241,242,241,242,241,242,241,242,241],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tag",3]],["u32",0]],[[["face",3]],["i16",0]],null,null,null,null,[[["lazyarray16",3,[["fromdata",8]]],["",0]],["option",4]],[[["lazyarray32",3,[["fromdata",8]]],["",0]],["option",4]],[[["lazyarray16",3,[["fromdata",8]]]],["option",4]],[[["lazyarray32",3,[["fromdata",8]]]],["optionface",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,null,[[["fixed",3]],["fixed",3]],[[["lazyarray16",3,[["clone",8]]]],["lazyarray16",3,[["clone",8]]]],[[["lazyarrayiter16",3,[["clone",8]]]],["lazyarrayiter16",3,[["clone",8]]]],[[["lazyarray32",3,[["clone",8]]]],["lazyarray32",3,[["clone",8]]]],[[["lazyarrayiter32",3,[["clone",8]]]],["lazyarrayiter32",3,[["clone",8]]]],[[["cfferror",4]],["cfferror",4]],[[["glyphid",3]],["glyphid",3]],[[["normalizedcoordinate",3]],["normalizedcoordinate",3]],[[["variation",3]],["variation",3]],[[["tag",3]],["tag",3]],[[["linemetrics",3]],["linemetrics",3]],[[["rect",3]],["rect",3]],[[["rasterimageformat",4]],["rasterimageformat",4]],[[["rasterglyphimage",3]],["rasterglyphimage",3]],[[["faceparsingerror",4]],["faceparsingerror",4]],[[["rawface",3]],["rawface",3]],[[["rawfacetables",3]],["rawfacetables",3]],[[["facetables",3]],["facetables",3]],[[["face",3]],["face",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],null,null,null,[[["glyphid",3],["glyphid",3]],["ordering",4]],[[["tag",3],["tag",3]],["ordering",4]],[[["lazyarrayiter16",3,[["fromdata",8]]]],["usize",0]],[[["lazyarrayiter32",3,[["fromdata",8]]]],["usize",0]],[[["",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]]],null,null,[[],["lazyarray16",3]],[[],["lazyarrayiter16",3,[["fromdata",8]]]],[[],["lazyarray32",3]],[[],["glyphid",3]],[[],["normalizedcoordinate",3]],[[],["rawfacetables",3]],[[["face",3]],["i16",0]],[[["cfferror",4],["cfferror",4]],["bool",0]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["normalizedcoordinate",3],["normalizedcoordinate",3]],["bool",0]],[[["variation",3],["variation",3]],["bool",0]],[[["tag",3],["tag",3]],["bool",0]],[[["linemetrics",3],["linemetrics",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["rasterimageformat",4],["rasterimageformat",4]],["bool",0]],[[["rasterglyphimage",3],["rasterglyphimage",3]],["bool",0]],[[["faceparsingerror",4],["faceparsingerror",4]],["bool",0]],null,null,null,[[["fixed",3],["formatter",3]],["result",6]],[[["lazyarray16",3,[["",26,[["fromdata",8],["debug",8],["copy",8]]]]],["formatter",3]],["result",6]],[[["lazyarray32",3,[["",26,[["fromdata",8],["debug",8],["copy",8]]]]],["formatter",3]],["result",6]],[[["cfferror",4],["formatter",3]],["result",6]],[[["glyphid",3],["formatter",3]],["result",6]],[[["normalizedcoordinate",3],["formatter",3]],["result",6]],[[["variation",3],["formatter",3]],["result",6]],[[["tag",3],["formatter",3]],["result",6]],[[["tag",3],["formatter",3]],["result",6]],[[["linemetrics",3],["formatter",3]],["result",6]],[[["rect",3],["formatter",3]],["result",6]],[[["rasterimageformat",4],["formatter",3]],["result",6]],[[["rasterglyphimage",3],["formatter",3]],["result",6]],[[["faceparsingerror",4],["formatter",3]],["result",6]],[[["faceparsingerror",4],["formatter",3]],["result",6]],[[["rawface",3],["formatter",3]],["result",6]],[[["face",3],["formatter",3]],["result",6]],[[],["option",4,[["u32",0]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]],["normalizedcoordinate",3]],[[["i16",0]],["normalizedcoordinate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tag",3]],[[],["tag",3]],[[["rawfacetables",3]],["result",4,[["face",3],["faceparsingerror",4]]]],[[["u32",0]],["result",4,[["rawface",3],["faceparsingerror",4]]]],[[["u32",0]],["result",4,[["face",3],["faceparsingerror",4]]]],null,null,null,null,null,null,[[["lazyarray16",3,[["fromdata",8]]],["u16",0]],["option",4,[["fromdata",8]]]],[[["lazyarray32",3,[["fromdata",8]]],["u32",0]],["option",4,[["fromdata",8]]]],[[["normalizedcoordinate",3]],["i16",0]],[[["face",3]],["rect",3]],null,null,null,[[["face",3],["glyphid",3]],["option",4,[["rect",3]]]],[[["face",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["face",3],["char",0]],["option",4,[["glyphid",3]]]],[[["face",3],["glyphid",3]],["option",4,[["str",0]]]],[[["face",3],["glyphid",3],["u16",0]],["option",4,[["rasterglyphimage",3]]]],[[["face",3],["glyphid",3]],["option",4]],[[["face",3],["char",0],["char",0]],["option",4,[["glyphid",3]]]],[[["face",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["face",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,[[["face",3]],["bool",0]],[[["glyphid",3],["",0]]],[[["tag",3],["",0]]],null,null,null,[[["rect",3]],["i16",0]],[[["face",3]],["i16",0]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lazyarray16",3,[["fromdata",8]]]]],[[]],[[["lazyarray32",3,[["fromdata",8]]]]],[[]],[[["face",3]],["bool",0]],[[["lazyarray16",3,[["fromdata",8]]]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["tag",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["bool",0]],[[["face",3]],["option",4,[["f32",0]]]],null,null,null,null,null,null,[[["lazyarray16",3,[["fromdata",8]]]],["option",4,[["fromdata",8]]]],[[["lazyarray16",3,[["fromdata",8]]]],["u16",0]],[[["lazyarray32",3,[["fromdata",8]]]],["u32",0]],[[["face",3]],["i16",0]],[[["",0],["f32",0],["f32",0]]],null,null,null,null,null,null,null,null,null,null,[[["",0],["f32",0],["f32",0]]],null,null,null,null,null,null,null,null,[[["face",3]],["names",3]],[[["glyphid",3],["glyphid",3]],["bool",0]],[[["normalizedcoordinate",3],["normalizedcoordinate",3]],["bool",0]],[[["variation",3],["variation",3]],["bool",0]],[[["tag",3],["tag",3]],["bool",0]],[[["linemetrics",3],["linemetrics",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["rasterglyphimage",3],["rasterglyphimage",3]],["bool",0]],[[],["lazyarray16",3,[["fromdata",8]]]],[[],["lazyarray32",3,[["fromdata",8]]]],[[["lazyarrayiter16",3,[["fromdata",8]]]],["option",4]],[[["lazyarrayiter32",3,[["fromdata",8]]]],["option",4]],[[["face",3]],["u16",0]],null,null,null,null,[[["face",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[],["option",4]],[[],["option",4,[["fixed",3]]]],[[],["option",4,[["glyphid",3]]]],[[],["option",4,[["tag",3]]]],[[["glyphid",3],["glyphid",3]],["option",4,[["ordering",4]]]],[[["tag",3],["tag",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,[[["",0],["f32",0],["f32",0],["f32",0],["f32",0]]],[[["lazyarray16",3,[["rangerecord",3]]],["glyphid",3]],["option",4,[["rangerecord",3]]]],null,null,null,[[["face",3],["tag",3],["f32",0]],["option",4]],[[["lazyarray16",3,[["fromdata",8]]],["range",3,[["u16",0]]]],["option",4,[["lazyarray16",3,[["fromdata",8]]]]]],[[["face",3]],["option",4,[["linemetrics",3]]]],[[["face",3]],["style",4]],[[["face",3]],["option",4,[["scriptmetrics",3]]]],[[["face",3]],["option",4,[["scriptmetrics",3]]]],null,null,null,[[["rawface",3],["tag",3]],["option",4]],[[["face",3],["tag",3]],["option",4]],[[["face",3]],["facetables",3]],null,null,[[["tag",3]]],[[["tag",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["linemetrics",3]]]],[[["face",3]],["u16",0]],null,[[["face",3]],["lazyarray16",3,[["variationaxis",3]]]],[[["face",3]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],[[["face",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,[[["face",3]],["weight",4]],[[["rect",3]],["i16",0]],[[["face",3]],["width",4]],null,null,[[["face",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["point",3]],["point",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["point",3]],[[["point",3],["point",3]],["bool",0]],[[["point",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["point",3],["point",3]],["bool",0]],[[],["option",4,[["point",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["lazyarray32",3,[["point",3]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["statetable",3],["glyphid",3]],["option",4,[["u8",0]]]],[[["extendedstatetable",3,[["fromdata",8]]],["glyphid",3]],["option",4,[["u16",0]]]],[[["genericstateentry",3,[["",26,[["clone",8],["fromdata",8]]]]]],["genericstateentry",3,[["",26,[["clone",8],["fromdata",8]]]]]],[[["valueoffset",3]],["valueoffset",3]],[[["statetable",3]],["statetable",3]],[[["extendedstatetable",3,[["clone",8]]]],["extendedstatetable",3,[["clone",8]]]],[[["lookup",3]],["lookup",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["statetable",3],["u16",0],["u8",0]],["option",4,[["stateentry",6]]]],[[["extendedstatetable",3,[["fromdata",8]]],["u16",0],["u16",0]],["option",4,[["genericstateentry",3,[["fromdata",8]]]]]],null,null,[[["genericstateentry",3,[["",26,[["debug",8],["fromdata",8]]]]],["formatter",3]],["result",6]],[[["valueoffset",3],["formatter",3]],["result",6]],[[["statetable",3],["formatter",3]],["result",6]],[[["extendedstatetable",3],["formatter",3]],["result",6]],[[["lookup",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["genericstateentry",3,[["fromdata",8]]]],["bool",0]],[[["genericstateentry",3,[["fromdata",8]]]],["bool",0]],[[["genericstateentry",3,[["fromdata",8]]]],["bool",0]],[[["genericstateentry",3,[["fromdata",8]]]],["bool",0]],[[["genericstateentry",3,[["fromdata",8]]]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["statetable",3],["valueoffset",3]],["option",4,[["i16",0]]]],[[["statetable",3],["u16",0]],["u16",0]],null,[[["valueoffset",3]],["valueoffset",3]],[[],["option",4,[["genericstateentry",3,[["fromdata",8]]]]]],[[["nonzerou16",3],["stream",3]],["option",4,[["extendedstatetable",3,[["fromdata",8]]]]]],[[["nonzerou16",3]],["option",4,[["lookup",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["lookup",3],["glyphid",3]],["option",4,[["u16",0]]]],[[["genericstateentry",3,[["fromdata",8]]]],["valueoffset",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["axisvaluemap",3]],["axisvaluemap",3]],[[["segmentmaps",3]],["segmentmaps",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["axisvaluemap",3],["formatter",3]],["result",6]],[[["segmentmaps",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["segmentmaps",3]]],[[["segmentmaps",3]],["u16",0]],[[["table",3]],["option",4]],[[["segmentmapsiter",3]],["option",4]],[[],["option",4,[["axisvaluemap",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[["table",3],["glyphid",3],["u16",0]],["option",4,[["rasterglyphimage",3]]]],[[]],[[["table",3]],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[["table",3],["glyphid",3]],["option",4,[["str",0]]]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["result",4,[["rect",3],["cfferror",4]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[],["table",3]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["result",4,[["rect",3],["cfferror",4]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullsubtable0",3]],["subtable0",3]],[[["subtable2",3]],["subtable2",3]],[[["subtable4",3]],["subtable4",3]],[[["subtable6",3]],["subtable6",3]],[[["subtable10",3]],["subtable10",3]],[[["subtable12",3]],["subtable12",3]],[[["subtable13",3]],["subtable13",3]],[[["glyphvariationresult",4]],["glyphvariationresult",4]],[[["subtable14",3]],["subtable14",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["subtable0",3],["fnmut",8]]],[[["subtable2",3],["fnmut",8]]],[[["subtable4",3],["fnmut",8]]],[[["subtable6",3],["fnmut",8]]],[[["subtable10",3],["fnmut",8]]],[[["subtable12",3],["fnmut",8]]],[[["subtable13",3],["fnmut",8]]],[[["subtable",3],["fnmut",8]]],[[],["subtables",3]],null,[[["glyphvariationresult",4],["glyphvariationresult",4]],["bool",0]],null,null,[[["subtable0",3],["formatter",3]],["result",6]],[[["subtable2",3],["formatter",3]],["result",6]],[[["subtable4",3],["formatter",3]],["result",6]],[[["subtable6",3],["formatter",3]],["result",6]],[[["subtable10",3],["formatter",3]],["result",6]],[[["subtable12",3],["formatter",3]],["result",6]],[[["subtable13",3],["formatter",3]],["result",6]],[[["glyphvariationresult",4],["formatter",3]],["result",6]],[[["subtable14",3],["formatter",3]],["result",6]],[[["format",4],["formatter",3]],["result",6]],[[["subtable",3],["formatter",3]],["result",6]],[[["subtables",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3],["u16",0]],["option",4,[["subtable",3]]]],null,[[["subtable0",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable2",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable4",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable6",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable10",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable12",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable13",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable14",3],["u32",0],["u32",0]],["option",4,[["glyphvariationresult",4]]]],[[["subtable",3],["u32",0]],["option",4,[["glyphid",3]]]],[[["subtable",3],["u32",0],["u32",0]],["option",4,[["glyphvariationresult",4]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[["subtable",3]],["bool",0]],[[["subtables",3]],["u16",0]],[[["glyphvariationresult",4],["glyphvariationresult",4]],["bool",0]],[[["subtablesiter",3]],["option",4]],[[],["option",4,[["subtable0",3]]]],[[],["option",4,[["subtable2",3]]]],[[],["option",4,[["subtable4",3]]]],[[],["option",4,[["subtable6",3]]]],[[],["option",4,[["subtable10",3]]]],[[],["option",4,[["subtable12",3]]]],[[],["option",4,[["subtable13",3]]]],[[],["option",4,[["subtable14",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["settingname",3]],["settingname",3]],[[["featurename",3]],["featurename",3]],[[["featurenames",3]],["featurenames",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,[[["featurenames",3],["u16",0]],["option",4,[["featurename",3]]]],[[["settingname",3],["formatter",3]],["result",6]],[[["featurename",3],["formatter",3]],["result",6]],[[["featurenames",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["featurenames",3],["u16",0]],["option",4,[["featurename",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["featurenames",3]]],[[["featurenames",3]],["u16",0]],null,null,null,[[["featurenamesiter",3]],["option",4]],[[],["option",4,[["settingname",3]]]],[[],["option",4,[["table",3]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["variationaxis",3]],["variationaxis",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["variationaxis",3],["variationaxis",3]],["bool",0]],[[["variationaxis",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,null,null,[[["variationaxis",3],["variationaxis",3]],["bool",0]],[[],["option",4,[["variationaxis",3]]]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["glyphclass",4]],["glyphclass",4]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["glyphclass",4],["glyphclass",4]],["ordering",4]],[[],["table",3]],[[["glyphclass",4],["glyphclass",4]],["bool",0]],[[["glyphclass",4],["formatter",3]],["result",6]],[[]],[[]],[[["table",3],["glyphid",3]],["option",4,[["glyphclass",4]]]],[[["table",3],["glyphid",3]],["class",6]],[[["table",3],["u16",0],["u16",0]],["option",4,[["f32",0]]]],[[["table",3]],["bool",0]],[[["glyphclass",4],["",0]]],[[]],[[]],[[["table",3],["glyphid",3],["option",4,[["u16",0]]]],["bool",0]],[[],["option",4,[["table",3]]]],[[["glyphclass",4],["glyphclass",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[["table",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[["table",4]],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullhintingdevice",3]],["hintingdevice",3]],[[["variationdevice",3]],["variationdevice",3]],[[["device",4]],["device",4]],[[["valuerecord",3]],["valuerecord",3]],[[["valuerecordsarray",3]],["valuerecordsarray",3]],[[["singleadjustment",4]],["singleadjustment",4]],[[["pairset",3]],["pairset",3]],[[["pairsets",3]],["pairsets",3]],[[["classmatrix",3]],["classmatrix",3]],[[["pairadjustment",4]],["pairadjustment",4]],[[["cursiveanchorset",3]],["cursiveanchorset",3]],[[["cursiveadjustment",3]],["cursiveadjustment",3]],[[["marktobaseadjustment",3]],["marktobaseadjustment",3]],[[["marktoligatureadjustment",3]],["marktoligatureadjustment",3]],[[["ligaturearray",3]],["ligaturearray",3]],[[["markarray",3]],["markarray",3]],[[["anchor",3]],["anchor",3]],[[["anchormatrix",3]],["anchormatrix",3]],[[["marktomarkadjustment",3]],["marktomarkadjustment",3]],[[["positioningsubtable",4]],["positioningsubtable",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["singleadjustment",4]],["coverage",4]],[[["pairadjustment",4]],["coverage",4]],[[["positioningsubtable",4]],["coverage",4]],null,[[],["valuerecord",3]],[[["cursiveanchorset",3],["u16",0]],["option",4,[["anchor",3]]]],[[["cursiveanchorset",3],["u16",0]],["option",4,[["anchor",3]]]],[[["hintingdevice",3],["formatter",3]],["result",6]],[[["variationdevice",3],["formatter",3]],["result",6]],[[["device",4],["formatter",3]],["result",6]],[[["valuerecord",3],["formatter",3]],["result",6]],[[["valuerecordsarray",3],["formatter",3]],["result",6]],[[["singleadjustment",4],["formatter",3]],["result",6]],[[["pairset",3],["formatter",3]],["result",6]],[[["pairsets",3],["formatter",3]],["result",6]],[[["classmatrix",3],["formatter",3]],["result",6]],[[["pairadjustment",4],["formatter",3]],["result",6]],[[["cursiveanchorset",3],["formatter",3]],["result",6]],[[["cursiveadjustment",3],["formatter",3]],["result",6]],[[["marktobaseadjustment",3],["formatter",3]],["result",6]],[[["marktoligatureadjustment",3],["formatter",3]],["result",6]],[[["ligaturearray",3],["formatter",3]],["result",6]],[[["markarray",3],["formatter",3]],["result",6]],[[["anchor",3],["formatter",3]],["result",6]],[[["anchormatrix",3],["formatter",3]],["result",6]],[[["marktomarkadjustment",3],["formatter",3]],["result",6]],[[["positioningsubtable",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["valuerecordsarray",3],["u16",0]],["option",4,[["valuerecord",3]]]],[[["pairset",3],["glyphid",3]],["option",4]],[[["pairsets",3],["u16",0]],["option",4,[["pairset",3]]]],[[["classmatrix",3]],["option",4]],[[["ligaturearray",3],["u16",0]],["option",4,[["anchormatrix",3]]]],[[["markarray",3],["u16",0]],["option",4]],[[["anchormatrix",3],["u16",0],["u16",0]],["option",4,[["anchor",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["valuerecordsarray",3]],["u16",0]],[[["pairsets",3]],["u16",0]],[[["cursiveanchorset",3]],["u16",0]],[[["ligaturearray",3]],["u16",0]],[[["markarray",3]],["u16",0]],null,null,null,null,null,null,null,null,null,null,null,[[["u16",0]],["option",4,[["positioningsubtable",4]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["hintingdevice",3],["u16",0],["option",4]],["option",4,[["i32",0]]]],null,null,null,null,null,null,[[["hintingdevice",3],["u16",0],["option",4]],["option",4,[["i32",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["singlesubstitution",4]],["singlesubstitution",4]],[[["sequence",3]],["sequence",3]],[[["multiplesubstitution",3]],["multiplesubstitution",3]],[[["alternateset",3]],["alternateset",3]],[[["alternatesubstitution",3]],["alternatesubstitution",3]],[[["ligature",3]],["ligature",3]],[[["ligaturesubstitution",3]],["ligaturesubstitution",3]],[[["reversechainsinglesubstitution",3]],["reversechainsinglesubstitution",3]],[[["substitutionsubtable",4]],["substitutionsubtable",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["singlesubstitution",4]],["coverage",4]],[[["substitutionsubtable",4]],["coverage",4]],null,null,null,null,[[["singlesubstitution",4],["formatter",3]],["result",6]],[[["sequence",3],["formatter",3]],["result",6]],[[["multiplesubstitution",3],["formatter",3]],["result",6]],[[["alternateset",3],["formatter",3]],["result",6]],[[["alternatesubstitution",3],["formatter",3]],["result",6]],[[["ligature",3],["formatter",3]],["result",6]],[[["ligaturesubstitution",3],["formatter",3]],["result",6]],[[["reversechainsinglesubstitution",3],["formatter",3]],["result",6]],[[["substitutionsubtable",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["substitutionsubtable",4]],["bool",0]],null,null,[[["u16",0]],["option",4,[["substitutionsubtable",4]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[["table",3],["table",3],["glyphid",3],["outlinebuilder",8]],["option",4,[["rect",3]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["indextolocationformat",4]],["indextolocationformat",4]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indextolocationformat",4],["indextolocationformat",4]],["bool",0]],[[["indextolocationformat",4],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],null,[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["table",3],["glyphid",3]],["option",4,[["u16",0]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["metrics",3]],["metrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["metrics",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[],["option",4,[["metrics",3]]]],[[["u16",0],["nonzerou16",3]],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["i16",0]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["table",3],["glyphid",3]],["option",4,[["f32",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[],["option",4,[["table",3]]]],[[["table",3],["glyphid",3]],["option",4,[["f32",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["kerningpair",3]],["kerningpair",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["subtable0",3]],["subtable0",3]],[[["subtable2",3]],["subtable2",3]],[[["subtable3",3]],["subtable3",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["subtablesiter",3]],[[["kerningpair",3],["formatter",3]],["result",6]],[[["format",4],["formatter",3]],["result",6]],[[["subtable",3],["formatter",3]],["result",6]],[[["subtables",3],["formatter",3]],["result",6]],[[["subtable0",3],["formatter",3]],["result",6]],[[["subtable2",3],["formatter",3]],["result",6]],[[["subtable3",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtable",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable0",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable2",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable3",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["kerningpair",3]],["glyphid",3]],[[["subtables",3]],["u32",0]],[[["subtablesiter",3]],["option",4]],null,null,[[],["option",4,[["kerningpair",3]]]],[[],["option",4,[["subtable0",3]]]],[[["u8",0]],["option",4,[["subtable2",3]]]],[[],["option",4,[["subtable3",3]]]],[[],["option",4,[["table",3]]]],[[["kerningpair",3]],["glyphid",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["subtable0",3]],["subtable0",3]],[[["entrydata",3]],["entrydata",3]],[[["subtable1",3]],["subtable1",3]],[[["subtable2",3]],["subtable2",3]],[[["anchorpoints",3]],["anchorpoints",3]],[[["subtable4",3]],["subtable4",3]],[[["subtable6",3]],["subtable6",3]],[[["format",4]],["format",4]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["subtable1",3]]],[[["subtable4",3]]],[[["subtable0",3],["formatter",3]],["result",6]],[[["entrydata",3],["formatter",3]],["result",6]],[[["subtable1",3],["formatter",3]],["result",6]],[[["subtable2",3],["formatter",3]],["result",6]],[[["anchorpoints",3],["formatter",3]],["result",6]],[[["subtable4",3],["formatter",3]],["result",6]],[[["subtable6",3],["formatter",3]],["result",6]],[[["format",4],["formatter",3]],["result",6]],[[["subtable",3],["formatter",3]],["result",6]],[[["subtables",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["anchorpoints",3],["u16",0]],["option",4]],[[["subtable0",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable1",3],["u16",0]],["option",4,[["i16",0]]]],[[["subtable2",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable6",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],[[["subtable",3],["glyphid",3],["glyphid",3]],["option",4,[["i16",0]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["subtablesiter",3]],["option",4]],null,[[],["option",4,[["entrydata",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",4]],["table",4]],[[["",0],["",0]]],[[["table",4],["formatter",3]],["result",6]],[[]],[[["table",4],["glyphid",3]],["option",4,[["range",3,[["usize",0]]]]]],[[]],[[["table",4]],["u16",0]],[[["nonzerou16",3],["indextolocationformat",4]],["option",4,[["table",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,[[["feature",3]],["feature",3]],[[["contextualentrydata",3]],["contextualentrydata",3]],[[["contextualsubtable",3]],["contextualsubtable",3]],[[["ligaturesubtable",3]],["ligaturesubtable",3]],[[["insertionentrydata",3]],["insertionentrydata",3]],[[["insertionsubtable",3]],["insertionsubtable",3]],[[["subtablekind",4]],["subtablekind",4]],[[["coverage",3]],["coverage",3]],[[["subtable",3]],["subtable",3]],[[["subtables",3]],["subtables",3]],[[["subtablesiter",3]],["subtablesiter",3]],[[["chain",3]],["chain",3]],[[["chains",3]],["chains",3]],[[["chainsiter",3]],["chainsiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,[[["feature",3],["formatter",3]],["result",6]],[[["contextualentrydata",3],["formatter",3]],["result",6]],[[["contextualsubtable",3],["formatter",3]],["result",6]],[[["ligaturesubtable",3],["formatter",3]],["result",6]],[[["insertionentrydata",3],["formatter",3]],["result",6]],[[["insertionsubtable",3],["formatter",3]],["result",6]],[[["subtablekind",4],["formatter",3]],["result",6]],[[["coverage",3],["formatter",3]],["result",6]],[[["subtable",3],["formatter",3]],["result",6]],[[["subtables",3],["formatter",3]],["result",6]],[[["chain",3],["formatter",3]],["result",6]],[[["chains",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subtables",3]]],[[]],[[["chains",3]]],[[]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],[[["coverage",3]],["bool",0]],null,null,null,null,[[["contextualsubtable",3],["u32",0]],["option",4,[["lookup",3]]]],null,null,[[["subtablesiter",3]],["option",4]],[[["chainsiter",3]],["option",4]],[[],["option",4,[["feature",3]]]],[[],["option",4,[["contextualentrydata",3]]]],[[],["option",4,[["insertionentrydata",3]]]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[["table",3],["tag",3]],["option",4,[["f32",0]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["platformid",4]],["platformid",4]],[[["name",3]],["name",3]],[[["names",3]],["names",3]],[[["namesiter",3]],["namesiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["namesiter",3]],["usize",0]],[[],["names",3]],[[],["table",3]],null,[[["platformid",4],["platformid",4]],["bool",0]],[[["platformid",4],["formatter",3]],["result",6]],[[["name",3],["formatter",3]],["result",6]],[[["names",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["names",3],["u16",0]],["option",4,[["name",3]]]],[[]],[[]],[[]],[[]],[[]],[[["names",3]]],[[]],[[["name",3]],["bool",0]],null,[[["names",3]],["u16",0]],null,null,null,null,[[["namesiter",3]],["option",4]],[[],["option",4,[["platformid",4]]]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["name",3]],["option",4,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullcontextlookup",4]],["contextlookup",4]],[[["sequencerule",3]],["sequencerule",3]],[[["sequencelookuprecord",3]],["sequencelookuprecord",3]],[[["chainedcontextlookup",4]],["chainedcontextlookup",4]],[[["chainedsequencerule",3]],["chainedsequencerule",3]],[[["lookup",3]],["lookup",3]],[[["lookupsubtables",3]],["lookupsubtables",3]],[[["lookupflags",3]],["lookupflags",3]],[[["layouttable",3]],["layouttable",3]],[[["recordlist",3,[["",26,[["clone",8],["recordlistitem",8]]]]]],["recordlist",3,[["",26,[["clone",8],["recordlistitem",8]]]]]],[[["script",3]],["script",3]],[[["languagesystem",3]],["languagesystem",3]],[[["feature",3]],["feature",3]],[[["featurevariations",3]],["featurevariations",3]],[[["rangerecord",3]],["rangerecord",3]],[[["coverage",4]],["coverage",4]],[[["classdefinition",4]],["classdefinition",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["coverage",4],["glyphid",3]],["bool",0]],[[["contextlookup",4]],["coverage",4]],[[["chainedcontextlookup",4]],["coverage",4]],null,null,null,null,[[["recordlist",3,[["recordlistitem",8]]],["tag",3]],["option",4,[["recordlistitem",8]]]],[[["featurevariations",3]],["option",4,[["variationindex",6]]]],[[["featurevariations",3],["featureindex",6],["variationindex",6]],["option",4,[["feature",3]]]],null,[[["contextlookup",4],["formatter",3]],["result",6]],[[["sequencerule",3],["formatter",3]],["result",6]],[[["sequencelookuprecord",3],["formatter",3]],["result",6]],[[["chainedcontextlookup",4],["formatter",3]],["result",6]],[[["chainedsequencerule",3],["formatter",3]],["result",6]],[[["lookup",3],["formatter",3]],["result",6]],[[["lookupsubtables",3],["formatter",3]],["result",6]],[[["lookupflags",3],["formatter",3]],["result",6]],[[["layouttable",3],["formatter",3]],["result",6]],[[["recordlist",3,[["",26,[["debug",8],["recordlistitem",8]]]]],["formatter",3]],["result",6]],[[["script",3],["formatter",3]],["result",6]],[[["languagesystem",3],["formatter",3]],["result",6]],[[["feature",3],["formatter",3]],["result",6]],[[["featurevariations",3],["formatter",3]],["result",6]],[[["rangerecord",3],["formatter",3]],["result",6]],[[["coverage",4],["formatter",3]],["result",6]],[[["classdefinition",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lookupsubtables",3],["u16",0]],["option",4,[["lookupsubtable",8]]]],[[["recordlist",3,[["recordlistitem",8]]],["u16",0]],["option",4,[["recordlistitem",8]]]],[[["coverage",4],["glyphid",3]],["option",4,[["u16",0]]]],[[["classdefinition",4],["glyphid",3]],["class",6]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["lookupflags",3]],["bool",0]],[[["recordlist",3,[["recordlistitem",8]]],["tag",3]],["option",4,[["u16",0]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lookupsubtables",3]],["lookupsubtablesiter",3,[["lookupsubtable",8]]]],[[["recordlist",3,[["recordlistitem",8]]]]],[[["recordlist",3,[["recordlistitem",8]]]],["bool",0]],null,[[["lookupsubtables",3]],["u16",0]],[[["recordlist",3,[["recordlistitem",8]]]],["u16",0]],null,null,null,null,null,null,[[["lookupflags",3]],["u8",0]],null,[[["lookupsubtablesiter",3,[["lookupsubtable",8]]]],["option",4]],[[["recordlistiter",3,[["recordlistitem",8]]]],["option",4]],[[["u16",0]],["option",4]],[[["tag",3]],["option",4]],[[],["option",4,[["sequencelookuprecord",3]]]],[[],["option",4,[["lookupflags",3]]]],[[["tag",3]],["option",4,[["script",3]]]],[[["tag",3]],["option",4,[["languagesystem",3]]]],[[["tag",3]],["option",4,[["feature",3]]]],[[],["option",4,[["rangerecord",3]]]],null,[[["lookupflags",3]],["bool",0]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["lookupflags",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["option",4,[["i16",0]]]],[[["weight",4]],["weight",4]],[[["width",4]],["width",4]],[[["style",4]],["style",4]],[[["scriptmetrics",3]],["scriptmetrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["width",4],["width",4]],["ordering",4]],[[],["weight",4]],[[],["width",4]],[[],["style",4]],[[["weight",4],["weight",4]],["bool",0]],[[["width",4],["width",4]],["bool",0]],[[["style",4],["style",4]],["bool",0]],[[["scriptmetrics",3],["scriptmetrics",3]],["bool",0]],[[["weight",4],["formatter",3]],["result",6]],[[["width",4],["formatter",3]],["result",6]],[[["style",4],["formatter",3]],["result",6]],[[["scriptmetrics",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[["u16",0]],["weight",4]],[[]],[[]],[[]],[[]],[[["weight",4],["",0]]],[[["width",4],["",0]]],[[["style",4],["",0]]],[[["scriptmetrics",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["table",3]],["bool",0]],[[["weight",4],["weight",4]],["bool",0]],[[["scriptmetrics",3],["scriptmetrics",3]],["bool",0]],[[],["option",4,[["table",3]]]],[[["width",4],["width",4]],["option",4,[["ordering",4]]]],[[["table",3]],["linemetrics",3]],[[["table",3]],["style",4]],[[["table",3]],["scriptmetrics",3]],[[["table",3]],["scriptmetrics",3]],[[["weight",4]],["u16",0]],[[["width",4]],["u16",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["bool",0]],null,[[["table",3]],["weight",4]],[[["table",3]],["width",4]],[[["table",3]],["i16",0]],[[["table",3]],["i16",0]],[[["table",3]],["option",4,[["i16",0]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["names",3]],["names",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["names",3]],[[["names",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[["names",3],["glyphid",3]],["option",4,[["str",0]]]],[[]],[[]],null,null,[[["names",3]],["u16",0]],null,[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["table",3],["u16",0]],["option",4,[["strike",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["strike",3]],["strike",3]],[[["strikes",3]],["strikes",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["strike",3],["formatter",3]],["result",6]],[[["strikes",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["strike",3],["glyphid",3]],["option",4,[["rasterglyphimage",3]]]],[[["strikes",3],["u32",0]],["option",4,[["strike",3]]]],[[]],[[]],[[]],[[]],[[]],[[["strikes",3]]],[[["strike",3]],["u16",0]],[[["strikes",3]],["u32",0]],[[["strikesiter",3]],["option",4]],[[["nonzerou16",3]],["option",4,[["table",3]]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["svgdocumentslist",3]],["svgdocumentslist",3]],[[["svgdocumentslistiter",3]],["svgdocumentslistiter",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["svgdocumentslistiter",3]],["usize",0]],null,[[["svgdocumentslist",3],["glyphid",3]],["option",4]],[[["svgdocumentslist",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["svgdocumentslist",3],["u16",0]],["option",4]],[[]],[[]],[[]],[[["svgdocumentslist",3]]],[[]],[[["svgdocumentslist",3]],["u16",0]],[[["svgdocumentslistiter",3]],["option",4]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["track",3]],["track",3]],[[["tracks",3]],["tracks",3]],[[["trackdata",3]],["trackdata",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["tracks",3]],[[],["trackdata",3]],[[["track",3],["formatter",3]],["result",6]],[[["tracks",3],["formatter",3]],["result",6]],[[["trackdata",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["tracks",3],["u16",0]],["option",4,[["track",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["tracks",3]]],[[["tracks",3]],["u16",0]],null,[[["tracksiter",3]],["option",4]],[[],["option",4,[["table",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[],["table",3]],null,[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,null,[[],["option",4,[["table",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["verticaloriginmetrics",3]],["verticaloriginmetrics",3]],[[["table",3]],["table",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["verticaloriginmetrics",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[]],[[]],null,[[["table",3],["glyphid",3]],["i16",0]],[[]],[[]],null,[[],["option",4,[["verticaloriginmetrics",3]]]],[[],["option",4,[["table",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[3,"Fixed"],[3,"GlyphId"],[3,"Tag"],[4,"CFFError"],[4,"Weight"],[4,"Width"],[4,"PlatformId"],[4,"FaceParsingError"],[4,"Style"],[4,"RasterImageFormat"],[8,"FromData"],[3,"RawFaceTables"],[3,"FaceTables"],[3,"Face"],[3,"Variation"],[3,"LazyArray16"],[3,"LazyArray32"],[3,"LazyArrayIter16"],[3,"LazyArrayIter32"],[3,"NormalizedCoordinate"],[3,"LineMetrics"],[3,"Rect"],[3,"RasterGlyphImage"],[3,"RawFace"],[8,"OutlineBuilder"],[3,"VariationAxis"],[3,"ScriptMetrics"],[13,"Other"],[3,"Point"],[3,"Table"],[3,"GenericStateEntry"],[3,"ValueOffset"],[3,"StateTable"],[3,"ExtendedStateTable"],[3,"Lookup"],[3,"SegmentMapsIter"],[3,"AxisValueMap"],[3,"SegmentMaps"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[4,"Format"],[4,"GlyphVariationResult"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable4"],[3,"Subtable6"],[3,"Subtable10"],[3,"Subtable12"],[3,"Subtable13"],[3,"Subtable14"],[3,"Subtable"],[3,"Subtables"],[3,"Table"],[13,"ByteEncodingTable"],[13,"HighByteMappingThroughTable"],[13,"SegmentMappingToDeltaValues"],[13,"TrimmedTableMapping"],[13,"TrimmedArray"],[13,"SegmentedCoverage"],[13,"ManyToOneRangeMappings"],[13,"UnicodeVariationSequences"],[13,"Found"],[3,"FeatureNamesIter"],[3,"SettingName"],[3,"FeatureName"],[3,"FeatureNames"],[3,"Table"],[3,"Table"],[4,"GlyphClass"],[3,"Table"],[3,"Table"],[4,"PositioningSubtable"],[4,"SingleAdjustment"],[4,"PairAdjustment"],[4,"Device"],[3,"MarkToBaseAdjustment"],[3,"HintingDevice"],[3,"VariationDevice"],[3,"ValueRecord"],[3,"ValueRecordsArray"],[3,"PairSet"],[3,"PairSets"],[3,"ClassMatrix"],[3,"CursiveAnchorSet"],[3,"CursiveAdjustment"],[3,"MarkToLigatureAdjustment"],[3,"LigatureArray"],[3,"MarkArray"],[3,"Anchor"],[3,"AnchorMatrix"],[3,"MarkToMarkAdjustment"],[13,"Hinting"],[13,"Variation"],[13,"Format2"],[13,"Format1"],[13,"Single"],[13,"Pair"],[13,"Cursive"],[13,"MarkToBase"],[13,"MarkToLigature"],[13,"MarkToMark"],[13,"Context"],[13,"ChainContext"],[13,"Format1"],[13,"Format2"],[4,"SubstitutionSubtable"],[4,"SingleSubstitution"],[3,"AlternateSubstitution"],[3,"AlternateSet"],[3,"ReverseChainSingleSubstitution"],[3,"Sequence"],[3,"MultipleSubstitution"],[3,"Ligature"],[3,"LigatureSubstitution"],[13,"Format1"],[13,"Format2"],[13,"Single"],[13,"Multiple"],[13,"Alternate"],[13,"Ligature"],[13,"Context"],[13,"ChainContext"],[13,"ReverseChainSingle"],[3,"Table"],[4,"IndexToLocationFormat"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Metrics"],[3,"Table"],[4,"Format"],[3,"KerningPair"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable3"],[3,"Table"],[13,"Format0"],[13,"Format1"],[13,"Format2"],[13,"Format3"],[4,"Format"],[3,"EntryData"],[3,"Subtable4"],[3,"Subtable0"],[3,"Subtable1"],[3,"Subtable2"],[3,"AnchorPoints"],[3,"Subtable6"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Table"],[13,"Format0"],[13,"Format1"],[13,"Format2"],[13,"Format4"],[13,"Format6"],[4,"Table"],[13,"Short"],[13,"Long"],[3,"Table"],[4,"SubtableKind"],[3,"Feature"],[3,"ContextualEntryData"],[3,"ContextualSubtable"],[3,"LigatureSubtable"],[3,"InsertionEntryData"],[3,"InsertionSubtable"],[3,"Coverage"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Chain"],[3,"Chains"],[3,"ChainsIter"],[3,"Table"],[13,"Rearrangement"],[13,"Contextual"],[13,"Ligature"],[13,"NonContextual"],[13,"Insertion"],[3,"Table"],[3,"Name"],[3,"Names"],[3,"NamesIter"],[3,"Table"],[3,"LookupFlags"],[4,"ContextLookup"],[4,"ChainedContextLookup"],[4,"Coverage"],[4,"ClassDefinition"],[3,"ChainedSequenceRule"],[3,"LookupSubtablesIter"],[3,"RecordListIter"],[3,"SequenceRule"],[3,"SequenceLookupRecord"],[3,"Lookup"],[3,"LookupSubtables"],[3,"LayoutTable"],[3,"RecordList"],[3,"Script"],[3,"LanguageSystem"],[3,"Feature"],[3,"FeatureVariations"],[3,"RangeRecord"],[8,"LookupSubtable"],[8,"RecordListItem"],[13,"Format2"],[13,"Format3"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format1"],[13,"Format3"],[13,"Format1"],[13,"Format2"],[3,"Table"],[3,"Names"],[3,"Table"],[3,"Table"],[3,"StrikesIter"],[3,"Strike"],[3,"Strikes"],[3,"SvgDocumentsList"],[3,"SvgDocumentsListIter"],[3,"Table"],[3,"TracksIter"],[3,"Track"],[3,"Tracks"],[3,"TrackData"],[3,"Table"],[3,"Table"],[3,"VerticalOriginMetrics"],[3,"Table"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[[["char",0]],["bool",0]],[[["char",0]],["bool",0]]],"p":[]},\
"vecmath":{"doc":"A simple and generic library for vector math.","t":[6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"n":["Matrix2x3","Matrix3","Matrix3x2","Matrix3x4","Matrix4","Matrix4x3","Vector2","Vector3","Vector4","col_mat2x3_row","col_mat3_mul","col_mat3_mul_col","col_mat3_row","col_mat3_transform","col_mat3_transform_pos2","col_mat3_transform_vec2","col_mat3x2_mul","col_mat3x2_mul_col","col_mat3x2_row","col_mat3x2_transform_pos2","col_mat3x2_transform_vec2","col_mat3x4_row","col_mat4_mul","col_mat4_mul_col","col_mat4_row","col_mat4_transform","col_mat4x3_mul","col_mat4x3_mul_col","col_mat4x3_row","col_mat4x3_transform_pos3","col_mat4x3_transform_vec3","mat2x3_add","mat2x3_cast","mat2x3_det","mat2x3_id","mat2x3_inv","mat2x3_inv_det","mat2x3_sub","mat2x3_transposed","mat3_add","mat3_cast","mat3_det","mat3_id","mat3_inv","mat3_inv_det","mat3_sub","mat3_transposed","mat3x2_add","mat3x2_cast","mat3x2_det","mat3x2_id","mat3x2_inv","mat3x2_inv_det","mat3x2_sub","mat3x2_transposed","mat3x4_add","mat3x4_cast","mat3x4_det","mat3x4_id","mat3x4_inv","mat3x4_inv_det","mat3x4_sub","mat3x4_transposed","mat4_add","mat4_cast","mat4_det","mat4_id","mat4_inv","mat4_inv_det","mat4_sub","mat4_transposed","mat4x3_add","mat4x3_cast","mat4x3_det","mat4x3_id","mat4x3_inv","mat4x3_inv_det","mat4x3_sub","mat4x3_transposed","row_mat2x3_col","row_mat2x3_mul","row_mat2x3_mul_row","row_mat2x3_transform_pos2","row_mat2x3_transform_vec2","row_mat3_col","row_mat3_mul","row_mat3_mul_row","row_mat3_transform","row_mat3_transform_pos2","row_mat3_transform_vec2","row_mat3x2_col","row_mat3x4_col","row_mat3x4_mul","row_mat3x4_mul_row","row_mat3x4_transform_pos3","row_mat3x4_transform_vec3","row_mat4_col","row_mat4_mul","row_mat4_mul_row","row_mat4_transform","row_mat4x3_col","traits","vec2_add","vec2_cast","vec2_cross","vec2_dot","vec2_inv_len","vec2_len","vec2_mul","vec2_neg","vec2_normalized","vec2_normalized_sub","vec2_scale","vec2_square_len","vec2_sub","vec3_add","vec3_cast","vec3_cross","vec3_dot","vec3_dot_pos2","vec3_dot_vec2","vec3_inv_len","vec3_len","vec3_mul","vec3_neg","vec3_normalized","vec3_normalized_sub","vec3_scale","vec3_square_len","vec3_sub","vec4_add","vec4_cast","vec4_dot","vec4_dot_pos3","vec4_dot_vec3","vec4_inv_len","vec4_len","vec4_mul","vec4_neg","vec4_normalized","vec4_normalized_sub","vec4_scale","vec4_square_len","vec4_sub","Cast","Float","FromPrimitive","Max","Min","One","Powf","Radians","Signum","Sqrt","Trig","Zero","_180","_360","_90","acos","acosh","asin","asinh","atan","atan2","atanh","cast","cos","cosh","deg_to_rad","from_f32","from_f64","from_i32","from_isize","from_u32","max","min","one","powf","rad_to_deg","signum","sin","sinh","sqrt","tan","tanh","zero"],"q":["vecmath","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vecmath::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A 2x3 matrix.","A 3x3 matrix.","A 3x2 matrix.","A 3x4 matrix.","A 4x4 matrix.","A 4x3 matrix.","A 2D vector.","A 3D vector.","A 4D vector.","Returns a row vector of a column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 3D vector through a matrix.","Transforms a 2D position through column matrix.","Transforms a 2D vector through column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Returns a row vector of a column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 4D vector through a matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a column vector of a row matrix.","Transforms a 3D position through matrix.","Transforms a 3D vector through matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 2x3 matrix.","Computes inverse determinant of a 2x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x3 matrix.","Computes inverse determinant of a 3x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x2 matrix.","Computes inverse determinant of a 3x2 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x4 matrix.","Computes inverse determinant of a 3x4 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a 4x4 matrix.","Constructs identity matrix.","Computes the inverse of a 4x4 matrix.","Computes the inverse determinant of a 4x4 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 4x3 matrix.","Computes inverse determinant of a 4x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 3D vector through a matrix.","Transforms a 2D position through row matrix.","Transforms a 2D vector through row matrix.","Returns a column vector of a row matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 3D position through matrix.","Transforms a 3D vector through matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 4D vector through a matrix.","Returns a column vector of a row matrix.","Various useful traits","Adds two vectors.","Converts to another vector type.","Computes the cross product.","Computes the dot product.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Adds two vectors.","Converts to another vector type.","Computes the cross product.","Computes the dot product.","Computes transformed position component.","Computes transformed vector component.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Adds two vectors.","Converts to another vector type.","Computes the dot product.","Computes transformed position component.","Computes transformed vector component.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Casts into another type.","Convenience trait for floats.","Trait for converting from different numeric types","Maximum value.","Minimum value.","Number 1.","Floating number power.","Useful constants for radians.","The sign of the number.","Square root.","Basic trigonometry functions","Number 0.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Returns inverse cosine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse sine of self.","Returns inverse hyperbolic sine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and other …","Returns inverse hyperbolic tangent of self.","Casts into other type.","Returns cosine of self.","Returns hyperbolic cosine of self.","Convert a value to radians from degrees. Equivalent to …","from a f32","from a f64","from a i32","from a isze","from a u32","Returns the maximum value of self or other.","Returns the minimum value of self or other.","Returns 1.","Returns floating power of the number.","Convert a value to degrees from radians. Equivalent to …","Returns number representing the sign of self","Returns sine of self.","Returns hyperbolic sine of self.","Returns square root.","Returns tangent of self.","Returns hyperbolic tangent of self.","Returns 0."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,3,2,2,1,4,4,4,4,4,5,6,7,8,1,9,2,2,10,2,2,11],"f":[null,null,null,null,null,null,null,null,null,[[["matrix2x3",6,[["copy",8]]],["usize",0]],["vector2",6,[["copy",8]]]],[[["matrix3",6],["matrix3",6]],["matrix3",6]],[[["matrix3",6],["matrix3",6],["usize",0]],["vector3",6]],[[["matrix3",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix3",6],["vector3",6]],["vector3",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3x2",6],["matrix3x2",6]],["matrix3x2",6]],[[["matrix3x2",6],["matrix3x2",6],["usize",0]],["vector2",6]],[[["matrix3x2",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix3x2",6],["vector2",6]],["vector2",6]],[[["matrix3x2",6],["vector2",6]],["vector2",6]],[[["matrix3x4",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix4",6],["matrix4",6]],["matrix4",6]],[[["matrix4",6],["matrix4",6],["usize",0]],["vector4",6]],[[["matrix4",6,[["copy",8]]],["usize",0]],["vector4",6,[["copy",8]]]],[[["matrix4",6],["vector4",6]],["vector4",6]],[[["matrix4x3",6],["matrix4x3",6]],["matrix4x3",6]],[[["matrix4x3",6],["matrix4x3",6],["usize",0]],["vector3",6]],[[["matrix4x3",6,[["copy",8]]],["usize",0]],["vector4",6,[["copy",8]]]],[[["matrix4x3",6],["vector3",6]],["vector3",6]],[[["matrix4x3",6],["vector3",6]],["vector3",6]],[[["matrix2x3",6],["matrix2x3",6]],["matrix2x3",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix2x3",6]]],[[],["matrix2x3",6]],[[["matrix2x3",6]],["matrix2x3",6]],[[["matrix2x3",6]]],[[["matrix2x3",6],["matrix2x3",6]],["matrix2x3",6]],[[["matrix2x3",6,[["copy",8]]]],["matrix3x2",6,[["copy",8]]]],[[["matrix3",6],["matrix3",6]],["matrix3",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3",6]]],[[],["matrix3",6]],[[["matrix3",6]],["matrix3",6]],[[["matrix3",6]]],[[["matrix3",6],["matrix3",6]],["matrix3",6]],[[["matrix3",6,[["copy",8]]]],["matrix3",6,[["copy",8]]]],[[["matrix3x2",6],["matrix3x2",6]],["matrix3x2",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3x2",6]]],[[],["matrix3x2",6]],[[["matrix3x2",6]],["matrix3x2",6]],[[["matrix3x2",6]]],[[["matrix3x2",6],["matrix3x2",6]],["matrix3x2",6]],[[["matrix3x2",6,[["copy",8]]]],["matrix2x3",6,[["copy",8]]]],[[["matrix3x4",6],["matrix3x4",6]],["matrix3x4",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix3x4",6]]],[[],["matrix3x4",6]],[[["matrix3x4",6]],["matrix3x4",6]],[[["matrix3x4",6]]],[[["matrix3x4",6],["matrix3x4",6]],["matrix3x4",6]],[[["matrix3x4",6,[["copy",8]]]],["matrix4x3",6,[["copy",8]]]],[[["matrix4",6],["matrix4",6]],["matrix4",6]],[[["matrix4",6]],["matrix4",6]],[[["matrix4",6]]],[[],["matrix4",6]],[[["matrix4",6]],["matrix4",6]],[[["matrix4",6]]],[[["matrix4",6],["matrix4",6]],["matrix4",6]],[[["matrix4",6,[["copy",8]]]],["matrix4",6,[["copy",8]]]],[[["matrix4x3",6],["matrix4x3",6]],["matrix4x3",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4x3",6]]],[[],["matrix4x3",6]],[[["matrix4x3",6]],["matrix4x3",6]],[[["matrix4x3",6]]],[[["matrix4x3",6],["matrix4x3",6]],["matrix4x3",6]],[[["matrix4x3",6,[["copy",8]]]],["matrix3x4",6,[["copy",8]]]],[[["matrix2x3",6,[["copy",8]]],["usize",0]],["vector2",6,[["copy",8]]]],[[["matrix2x3",6],["matrix2x3",6]],["matrix2x3",6]],[[["matrix2x3",6],["matrix2x3",6],["usize",0]],["vector3",6]],[[["matrix2x3",6],["vector2",6]],["vector2",6]],[[["matrix2x3",6],["vector2",6]],["vector2",6]],[[["matrix3",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix3",6],["matrix3",6]],["matrix3",6]],[[["matrix3",6],["matrix3",6],["usize",0]],["vector3",6]],[[["matrix3",6],["vector3",6]],["vector3",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3",6],["vector2",6]],["vector2",6]],[[["matrix3x2",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix3x4",6,[["copy",8]]],["usize",0]],["vector3",6,[["copy",8]]]],[[["matrix3x4",6],["matrix3x4",6]],["matrix3x4",6]],[[["matrix3x4",6],["matrix3x4",6],["usize",0]],["vector4",6]],[[["matrix3x4",6],["vector3",6]],["vector3",6]],[[["matrix3x4",6],["vector3",6]],["vector3",6]],[[["matrix4",6,[["copy",8]]],["usize",0]],["vector4",6,[["copy",8]]]],[[["matrix4",6],["matrix4",6]],["matrix4",6]],[[["matrix4",6],["matrix4",6],["usize",0]],["vector4",6]],[[["matrix4",6],["vector4",6]],["vector4",6]],[[["matrix4x3",6,[["copy",8]]],["usize",0]],["vector4",6,[["copy",8]]]],null,[[["vector2",6],["vector2",6]],["vector2",6]],[[["vector2",6]],["vector2",6]],[[["vector2",6],["vector2",6]]],[[["vector2",6],["vector2",6]]],[[["vector2",6]]],[[["vector2",6]]],[[["vector2",6],["vector2",6]],["vector2",6]],[[["vector2",6]],["vector2",6]],[[["vector2",6]],["vector2",6]],[[["vector2",6],["vector2",6]],["vector2",6]],[[["vector2",6]],["vector2",6]],[[["vector2",6]]],[[["vector2",6],["vector2",6]],["vector2",6]],[[["vector3",6],["vector3",6]],["vector3",6]],[[["vector3",6]],["vector3",6]],[[["vector3",6],["vector3",6]],["vector3",6]],[[["vector3",6],["vector3",6]]],[[["vector3",6],["vector2",6]]],[[["vector3",6],["vector2",6]]],[[["vector3",6]]],[[["vector3",6]]],[[["vector3",6],["vector3",6]],["vector3",6]],[[["vector3",6]],["vector3",6]],[[["vector3",6]],["vector3",6]],[[["vector3",6],["vector3",6]],["vector3",6]],[[["vector3",6]],["vector3",6]],[[["vector3",6]]],[[["vector3",6],["vector3",6]],["vector3",6]],[[["vector4",6],["vector4",6]],["vector4",6]],[[["vector4",6]],["vector4",6]],[[["vector4",6],["vector4",6]]],[[["vector4",6],["vector3",6]]],[[["vector4",6],["vector3",6]]],[[["vector4",6]]],[[["vector4",6]]],[[["vector4",6],["vector4",6]],["vector4",6]],[[["vector4",6]],["vector4",6]],[[["vector4",6]],["vector4",6]],[[["vector4",6],["vector4",6]],["vector4",6]],[[["vector4",6]],["vector4",6]],[[["vector4",6]]],[[["vector4",6],["vector4",6]],["vector4",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0]]],[[["f64",0]]],[[["i32",0]]],[[["isize",0]]],[[["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Radians"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"],[8,"Max"],[8,"Min"],[8,"One"],[8,"Powf"],[8,"Signum"],[8,"Sqrt"],[8,"Zero"]]},\
"viewport":{"doc":"A library for storing viewport information","t":[3,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12],"n":["Viewport","abs_transform","borrow","borrow_mut","clone","clone_into","draw_size","eq","fmt","from","into","ne","rect","to_owned","try_from","try_into","type_id","window_size"],"q":["viewport","","","","","","","","","","","","","","","","",""],"d":["Stores viewport information.","Computes absolute transform for 2D graphics, which uses a …","","","","","The size of frame buffer in pixels.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Viewport in pixels. <code>[x, y, width, height]</code> where <code>(x, y)</code> is …","","","","","The size of window in points."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["viewport",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["viewport",3]],["viewport",3]],[[["",0],["",0]]],null,[[["viewport",3],["viewport",3]],["bool",0]],[[["viewport",3],["formatter",3]],["result",6]],[[]],[[]],[[["viewport",3],["viewport",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null],"p":[[3,"Viewport"]]},\
"weezl":{"doc":"LZW decoder and encoder","t":[4,3,13,13,13,4,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitOrder","BufferResult","Done","InvalidCode","Lsb","LzwError","LzwStatus","Msb","NoProgress","Ok","StreamResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","bytes_written","clone","clone","clone","clone_into","clone_into","clone_into","consumed_in","consumed_out","decode","encode","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","status","status","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Decoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_bytes","from","from","from","has_ended","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch","Encoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","encode","encode","encode","encode_all","encode_all","encode_bytes","finish","from","from","from","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch"],"q":["weezl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weezl::decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weezl::encode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The order of bits in bytes.","The result of a coding operation on a pair of buffer.","No more data will be produced because an end marker was …","The input contained an invalid code.","The least significant bit is processed first.","The error kind after unsuccessful coding of an LZW stream.","The status after successful coding of an LZW stream.","The most significant bit is processed first.","No bytes were read or written and no internal state …","Everything went well.","The result of coding into an output stream.","","","","","","","","","","","The total number of bytes consumed from the reader.","The total number of bytes written into the writer.","","","","","","","The number of bytes consumed from the input buffer.","The number of bytes written into the output buffer.","A module for all decoding needs.","A module for all encoding needs.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The status after returning from the write call.","The possible error that occurred.","","","","","","","","","","","","","","","","","","","","The state for decoding data with an LZW algorithm.","A decoding stream sink.","A decoding sink into a vector.","","","","","","","Decode a single chunk of lzw encoded data.","Decode data from a reader.","Decode data from a slice.","Decode data from a reader, requiring an end marker.","Decode data from a slice, requiring an end marker.","Decode some bytes from <code>inp</code> and write result to <code>out</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Check if the decoding has finished.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a decoder into a writer.","Construct a decoder into a vector.","Create a new decoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate decode buffer.","Set the size of the intermediate decode buffer.","","","","","","","","","","Create a TIFF compatible decoder with the specified bit …","The state for encoding data with an LZW algorithm.","A encoding stream sink.","A encoding sink into a vector.","","","","","","","Encode a single chunk of data.","Encode data from a reader.","Encode data from a slice.","Encode data from a reader and an end marker.","Decode data from a reader, adding an end marker.","Encode some bytes from <code>inp</code> into <code>out</code>.","Mark the encoding as in the process of finishing.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a encoder into a writer.","Construct an encoder into a vector.","Create a new encoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate encode buffer.","Set the size of the intermediate encode buffer.","","","","","","","","","","Create a TIFF compatible encoder with the specified bit …"],"i":[0,0,1,2,3,0,0,3,1,1,0,4,5,3,1,2,4,5,3,1,2,5,5,3,1,2,3,1,2,4,4,0,0,3,1,2,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,2,4,5,3,1,2,4,5,3,1,2,4,5,3,1,2,0,0,0,6,7,8,6,7,8,6,7,8,7,8,6,6,7,8,6,6,7,8,6,6,6,6,7,7,6,7,8,6,7,8,6,7,8,6,0,0,0,9,10,11,9,10,11,9,10,11,10,11,9,9,9,10,11,9,10,11,9,9,9,9,10,10,9,10,11,9,10,11,9,10,11,9],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["bitorder",4]],["bitorder",4]],[[["lzwstatus",4]],["lzwstatus",4]],[[["lzwerror",4]],["lzwerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["bitorder",4],["formatter",3]],["result",6]],[[["lzwstatus",4],["formatter",3]],["result",6]],[[["lzwerror",4],["formatter",3]],["result",6]],[[["lzwerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["decoder",3]],["result",4,[["vec",3,[["u8",0]]],["lzwerror",4]]]],[[["intostream",3,[["write",8]]],["bufread",8]],["streamresult",3]],[[["intovec",3]],["vectorresult",3]],[[["intostream",3,[["write",8]]],["bufread",8]],["streamresult",3]],[[["intovec",3]],["vectorresult",3]],[[["decoder",3]],["bufferresult",3]],[[]],[[]],[[]],[[["decoder",3]],["bool",0]],[[]],[[]],[[]],[[["decoder",3],["write",8]],["intostream",3,[["write",8]]]],[[["decoder",3],["vec",3]],["intovec",3]],[[["bitorder",4],["u8",0]],["decoder",3]],[[["decoder",3]]],[[["intostream",3,[["write",8]]]]],[[["intostream",3,[["write",8]]],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bitorder",4],["u8",0]],["decoder",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["encoder",3]],["result",4,[["vec",3,[["u8",0]]],["lzwerror",4]]]],[[["intostream",3,[["write",8]]],["bufread",8]],["streamresult",3]],[[["intovec",3]],["vectorresult",3]],[[["intostream",3,[["write",8]]],["bufread",8]],["streamresult",3]],[[["intovec",3]],["vectorresult",3]],[[["encoder",3]],["bufferresult",3]],[[["encoder",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["encoder",3],["write",8]],["intostream",3,[["write",8]]]],[[["encoder",3],["vec",3]],["intovec",3]],[[["bitorder",4],["u8",0]],["encoder",3]],[[["encoder",3]]],[[["intostream",3,[["write",8]]]]],[[["intostream",3,[["write",8]]],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bitorder",4],["u8",0]],["encoder",3]]],"p":[[4,"LzwStatus"],[4,"LzwError"],[4,"BitOrder"],[3,"BufferResult"],[3,"StreamResult"],[3,"Decoder"],[3,"IntoStream"],[3,"IntoVec"],[3,"Encoder"],[3,"IntoStream"],[3,"IntoVec"]]},\
"window":{"doc":"Window storage and interfacing traits.","t":[8,3,8,3,8,3,6,3,3,8,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,10,11,11,11,11,10,11,11,11,11,11,12,10,11,11,11,11,11,11,11,10,11,11,11,11,12,10,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,10,11,11,11,10,11,10,11,11,11,10,11,11,11,11,10,11,10,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,12,12],"n":["AdvancedWindow","Api","BuildFromWindowSettings","NoWindow","OpenGLWindow","Position","ProcAddress","Size","UnsupportedGraphicsApiError","Window","WindowSettings","api","automatic_close","automatic_close","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_window_settings","build_from_window_settings","capture_cursor","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","controllers","decorated","directx","draw_size","draw_size","eq","eq","eq","exit_on_esc","exit_on_esc","expected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","fullscreen","get_automatic_close","get_automatic_close","get_automatic_close","get_controllers","get_decorated","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_fullscreen","get_maybe_graphics_api","get_position","get_position","get_proc_address","get_resizable","get_samples","get_size","get_srgb","get_title","get_title","get_title","get_transparent","get_vsync","graphics_api","height","hide","hide","into","into","into","into","into","into","is_current","is_directx","is_metal","is_opengl","is_vulkan","major","make_current","maybe_graphics_api","metal","minor","ne","ne","ne","new","new","opengl","partial_cmp","poll_event","poll_event","position","resizable","samples","set_automatic_close","set_automatic_close","set_automatic_close","set_capture_cursor","set_capture_cursor","set_controllers","set_decorated","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_fullscreen","set_graphics_api","set_maybe_graphics_api","set_position","set_position","set_resizable","set_samples","set_should_close","set_should_close","set_size","set_size","set_size","set_srgb","set_title","set_title","set_title","set_transparent","set_vsync","should_close","should_close","show","show","size","size","size","srgb","swap_buffers","swap_buffers","title","title","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vsync","vulkan","wait_event","wait_event","wait_event_timeout","wait_event_timeout","width","x","y"],"q":["windowd":["Trait representing a window with the most features that …","Stores graphics API version.","Constructs a window from a <code>WindowSettings</code> object.","A window without user interface, often used in server …","Trait for OpenGL specific operations on a window.","Structure to store the window position.","The type of an OpenGL function address.","Structure to store the window size.","An error for when a graphics API is unsupported.","Trait representing the minimum requirements for defining a …","Settings structure for window behavior.","A string identifying the API.","Sets whether the window will automatically close when …","Sets whether built windows should automatically close when …","","","","","","","","","","","","","Builds window from the given settings.","Builds the window from a <code>WindowSettings</code> object.","Errors","Sets whether to capture/grab the cursor.","","","","","","","","","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Creates a new DirectX version.","Gets the draw size of the window.","","","","","Sets whether to exit when pressing the Esc button.","Sets whether built windows should exit when the Esc key is …","A list of supported graphics APIs.","","","","","","","","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Sets whether built windows will be fullscreen.","Gets whether the window will automatically close when …","","Gets whether built windows should automatically close when …","Gets whether built windows should listen to controller …","Gets whether built windows should be decorated.","Gets whether to exit when pressing esc.","","Gets whether built windows should exit when the Esc key is …","Gets whether built windows will be fullscreen.","Gets the graphics API version of built windows.","Gets the position of window.","","Returns the address of the specified OpenGL function if it …","Gets whether built windows should be resizable.","Gets the number of samples to use for anti-aliasing.","Gets the size of built windows.","Gets whether built windows should use hardware accelerated …","Gets a copy of the title of the window.","","Gets the title of built windows.","Gets whether built windows should be transparent.","Gets whether built windows should use vsync.","Sets the graphics API version of built windows.","The height.","Hides the window.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this window’s gl context is the current …","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Major version.","Make the window’s gl context the current gl context.","Sets graphics API version of built windows.","Creates a new Metal version.","Minor version.","","","","Creates a new <code>NoWindow</code>.","Creates window settings with defaults.","Creates a new OpenGL version.","","Polls an input event from the window.","","Sets the position of window.","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Sets whether the window will automatically close when …","","Sets whether built windows should automatically close when …","Sets whether to capture/grab the cursor.","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Sets whether to exit when pressing esc.","","Sets whether built windows should exit when the Esc key is …","Sets whether built windows will be fullscreen.","Sets graphics API version of built windows.","Sets graphics API version of built windows.","Sets the position of window.","","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Tells the window to close or stay open.","","Sets the window size.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Sets the title of the window.","","Sets the title of built windows.","Sets whether built windows should be transparent.","Sets whether built windows should use vsync.","Returns true if the window should close.","","Shows the window.","","Gets the size of the window.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Swaps render buffers.","","Sets title on window.","Sets the title of built windows.","","","","","","Sets whether built windows should be transparent.","","","","","","","","","","","","","","","","","","","Sets whether built windows should use vsync.","Creates a new Vulkan version.","Wait indefinitely for an input event to be available from …","","Wait for an input event to be available from the window or …","","The width.","The x coordinate.","The y coordinate."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,4,5,6,7,3,1,4,5,6,7,3,3,8,5,2,1,6,7,3,1,6,7,3,1,3,3,1,9,5,1,6,7,2,3,4,1,4,4,5,6,7,3,4,1,4,5,6,6,6,6,6,7,7,7,3,3,2,5,3,3,3,2,5,3,3,3,2,5,10,3,3,3,3,2,5,3,3,3,3,6,2,5,1,4,5,6,7,3,10,1,1,1,1,1,10,3,1,1,1,6,7,5,3,1,1,9,5,2,3,3,2,5,3,2,5,3,3,2,5,3,3,3,3,2,5,3,3,9,5,2,5,3,3,2,5,3,3,3,9,5,2,5,9,5,3,3,9,5,2,3,1,6,7,3,4,3,1,4,5,6,7,3,1,4,5,6,7,3,1,4,5,6,7,3,3,1,9,5,9,5,6,7,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["windowsettings",3]],["result",4,[["buildfromwindowsettings",8],["box",3,[["error",8]]]]]],[[["windowsettings",3]],["result",4,[["box",3,[["error",8]]]]]],[[["windowsettings",3]],["result",4,[["nowindow",3],["box",3,[["error",8]]]]]],[[["bool",0]]],[[["version",3]],["version",3]],[[["size",3]],["size",3]],[[["position",3]],["position",3]],[[["windowsettings",3]],["windowsettings",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["version",3],["version",3]],["ordering",4]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],[[["",0]],["size",3]],[[["nowindow",3]],["size",3]],[[["version",3],["version",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["bool",0]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],null,[[["version",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["unsupportedgraphicsapierror",3],["formatter",3]],["result",4,[["error",3]]]],[[["nowindow",3],["formatter",3]],["result",6]],[[["size",3],["formatter",3]],["result",6]],[[["position",3],["formatter",3]],["result",6]],[[["windowsettings",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[]],[[],["position",3]],[[],["position",3]],[[]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["option",4,[["api",3]]]],[[["",0]],["option",4,[["position",3]]]],[[["nowindow",3]],["option",4,[["position",3]]]],[[["",0],["str",0]],["procaddress",6]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["u8",0]],[[["windowsettings",3]],["size",3]],[[["windowsettings",3]],["bool",0]],[[["",0]],["string",3]],[[["nowindow",3]],["string",3]],[[["windowsettings",3]],["string",3]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3]],["bool",0]],[[["windowsettings",3],["into",8,[["api",3]]]],["windowsettings",3]],null,[[["",0]]],[[["nowindow",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],[[["version",3]],["bool",0]],null,[[["",0]]],[[["windowsettings",3],["option",4,[["into",8,[["api",3]]]]]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],null,[[["version",3],["version",3]],["bool",0]],[[["size",3],["size",3]],["bool",0]],[[["position",3],["position",3]],["bool",0]],[[["windowsettings",3]],["nowindow",3]],[[["into",8,[["string",3]]],["into",8,[["size",3]]]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],[[["version",3],["version",3]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["event",4]]]],[[["nowindow",3]],["option",4,[["event",4]]]],[[["into",8,[["position",3]]]]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["windowsettings",3],["u8",0]],["windowsettings",3]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["into",8,[["api",3]]]]],[[["windowsettings",3],["option",4,[["into",8,[["api",3]]]]]]],[[["",0],["into",8,[["position",3]]]]],[[["nowindow",3],["into",8,[["position",3]]]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["u8",0]]],[[["",0],["bool",0]]],[[["nowindow",3],["bool",0]]],[[["",0],["into",8,[["size",3]]]]],[[["nowindow",3],["into",8,[["size",3]]]]],[[["windowsettings",3],["size",3]]],[[["windowsettings",3],["bool",0]]],[[["",0],["string",3]]],[[["nowindow",3],["string",3]]],[[["windowsettings",3],["string",3]]],[[["windowsettings",3],["bool",0]]],[[["windowsettings",3],["bool",0]]],[[["",0]],["bool",0]],[[["nowindow",3]],["bool",0]],[[["",0]]],[[["nowindow",3]]],[[["",0]],["size",3]],[[["nowindow",3]],["size",3]],[[["windowsettings",3],["size",3]],["windowsettings",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["",0]]],[[["nowindow",3]]],[[["string",3]]],[[["windowsettings",3],["string",3]],["windowsettings",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["windowsettings",3],["bool",0]],["windowsettings",3]],[[["u32",0],["u32",0]],["version",3]],[[["",0]],["event",4]],[[["nowindow",3]],["event",4]],[[["",0],["duration",3]],["option",4,[["event",4]]]],[[["nowindow",3],["duration",3]],["option",4,[["event",4]]]],null,null,null],"p":[[3,"Api"],[8,"AdvancedWindow"],[3,"WindowSettings"],[3,"UnsupportedGraphicsApiError"],[3,"NoWindow"],[3,"Size"],[3,"Position"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"OpenGLWindow"]]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","t":[0,0,0,0,0,0,0,13,13,3,3,13,13,3,3,8,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,4,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,18,13,13,13,13,13,13,13,13,6,13,13,13,13,13,6,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,6,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,3,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,13,4,8,8,13,13,8,8,11,11,11,11,11,11,11,11,10,10,10,11,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,8,16,10,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,3,3,3,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","0","0","0","0","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Down","DroppedFile","E","ElementState","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadPressure","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","0","axis","button","codepoint","delta","delta","state","value","0","0","0","device_id","event","event","window_id","0","altitude_angle","force","max_possible_force","0","0","0","1","requested_resume","requested_resume","start","start","0","0","0","0","0","0","0","0","0","axis","button","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","position","pressure","scale_factor","stage","state","value","0","ControlFlow","EventLoop","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","Poll","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_proxy","default","deref","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hide_application","hide_other_applications","into","into","into","into","into","ne","ne","new","primary_monitor","run","run_return","send_event","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_user_event","0","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","ne","ne","ns_screen","partial_cmp","partial_cmp","position","refresh_rate","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","macos","run_return","Accessory","ActivationPolicy","EventLoopWindowTargetExtMacOS","MonitorHandleExtMacOS","Prohibited","Regular","WindowBuilderExtMacOS","WindowExtMacOS","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","has_shadow","hide_application","hide_other_applications","into","native_id","ns_screen","ns_view","ns_window","set_has_shadow","set_simple_fullscreen","simple_fullscreen","to_owned","try_from","try_into","type_id","with_activation_policy","with_disallow_hidpi","with_fullsize_content_view","with_has_shadow","with_movable_by_window_background","with_resize_increments","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","EventLoopExtRunReturn","UserEvent","run_return","Alias","AllScroll","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","Cell","ColResize","ContextMenu","Copy","Critical","Crosshair","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","Informational","Light","Move","NResize","NeResize","NeswResize","NoDrop","NotAllowed","NsResize","NwResize","NwseResize","OsError","Progress","RowResize","SResize","SeResize","SwResize","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","Window","WindowAttributes","WindowBuilder","WindowId","ZoomIn","ZoomOut","always_on_top","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","current_monitor","decorations","default","default","default","default","drop","dummy","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_rgba","fullscreen","fullscreen","has_shadow","hash","hash","id","inner_position","inner_size","inner_size","into","into","into","into","into","into","into","into","into","into","max_inner_size","maximized","min_inner_size","ne","ne","new","new","ns_view","ns_window","outer_position","outer_size","partial_cmp","primary_monitor","raw_window_handle","request_redraw","request_user_attention","resizable","scale_factor","set_always_on_top","set_cursor_grab","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_fullscreen","set_has_shadow","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_simple_fullscreen","set_title","set_visible","set_window_icon","simple_fullscreen","source","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visible","window","window_icon","with_activation_policy","with_always_on_top","with_decorations","with_disallow_hidpi","with_fullscreen","with_fullsize_content_view","with_has_shadow","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_movable_by_window_background","with_resizable","with_resize_increments","with_title","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","with_transparent","with_visible","with_window_icon","0","byte_count","height","pixel_count","width","width_x_height","0","0"],"q":["winit","","","","","","","winit::dpi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::dpi::Position","","winit::dpi::Size","","winit::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::error::ExternalError","","winit::eventwinit::event::DeviceEvent","","","","","","","","winit::event::Event","","","","","","","winit::event::Force","","","","winit::event::MouseButton","winit::event::MouseScrollDelta","","","winit::event::StartCause","","","","winit::event::WindowEvent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::event_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::event_loop::ControlFlow","winit::monitor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::platform","","winit::platform::macos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::platform::run_return","","","winit::window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","winit::window::BadIcon","","","","","","winit::window::Fullscreen",""],"d":["UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","","A file has been dropped into the window.","","Describes the input state of a key.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis.  This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad pressure event.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy <code>DeviceId</code>, useful for unit testing. The …","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","","","","","","","","","","","","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","","(x, y) change in position in unspecified units.","","","","","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","","Set by the user callback given to the <code>EventLoop::run</code> …","Provides a way to retrieve events from the system and from …","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","When the current loop iteration finishes, immediately …","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Builds a new event loop with a <code>()</code> as the user event type.","Returns the primary monitor of the system.","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","","","","","","","","","","","","","","","","","","","","Builds a new event loop.","","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode. <strong>Note</strong>: the …","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.","Corresponds to <code>NSApplicationActivationPolicy</code>.","Additional methods on <code>EventLoopWindowTarget</code> that are …","Additional methods on <code>MonitorHandle</code> that are specific to …","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to MacOS.","","","","","","","","Returns the argument unchanged.","Returns whether or not the window has shadow.","Hide the entire application. In most applications this is …","Hide the other applications. In most applications this is …","Calls <code>U::from(self)</code>.","Returns the identifier of the monitor for Cocoa.","Returns a pointer to the NSScreen representing this …","Returns a pointer to the cocoa <code>NSView</code> that is used by this …","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …","Sets whether or not the window has shadow.","Toggles a fullscreen mode that doesn’t require a new …","Returns whether or not the window is in simple fullscreen …","","","","","Sets the activation policy for the window being built.","","Makes the window content appear behind the titlebar.","","Enables click-and-drag behavior for the entire window, not …","Build window with <code>resizeIncrements</code> property. Values must …","Hides the window title.","Hides the window titlebar buttons.","Hides the window titlebar.","Makes the titlebar transparent and allows the content to …","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","","","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","","Platform-specific","A simple crosshair.","Describes the appearance of the mouse cursor.","","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Platform-specific","","Indicates something is to be moved.","","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","Progress indicator. Shows that processing is being done. …","","","","","Indicates text that may be selected or edited.","","Platform-specific","","","Program busy indicator.","Represents a window.","Attributes to use when creating a window.","Object that allows you to build windows.","Identifier of a window. Unique for each window.","","","Whether the window should always be on top of other …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","Returns the monitor on which the window currently resides.","Whether the window should have borders and bars.","","","","","","Returns a dummy <code>WindowId</code>, useful for unit testing. The …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an <code>Icon</code> from 32bpp RGBA data.","Gets the window’s current fullscreen state.","Whether the window should be set as fullscreen upon …","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","The dimensions of the window. If this is <code>None</code>, some …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum dimensions a window can be, If this is <code>None</code>, …","Whether the window should be maximized upon creation.","The minimum dimensions a window can be, If this is <code>None</code>, …","","","Creates a new Window for platforms where this is …","Initializes a new <code>WindowBuilder</code> with default values.","","","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Emits a <code>WindowEvent::RedrawRequested</code> event in the …","Requests user attention to the window, this has no effect …","Whether the window is resizable or not.","Returns the scale factor that can be used to map logical …","Change whether or not the window will always be on top of …","Grabs the cursor, preventing it from leaving the window.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","Sets the window to fullscreen or back.","","Sets location of IME candidate box in client area …","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","","Modifies the title of the window.","Modifies the window’s visibility.","Sets the window icon. On Windows and X11, this is …","","","The title of the window in the title bar.","","","","","","","","","","Whether the the window should be transparent. If this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window should be immediately visible upon …","The attributes to use to create the window.","The window icon.","","Sets whether or not the window will always be on top of …","Sets whether the window should have a border, a title bar, …","","Sets the window fullscreen state.","","","Requests the window to be of specific dimensions.","Sets a maximum dimension size for the window.","Requests maximized mode.","Sets a minimum dimension size for the window.","","Sets whether the window is resizable or not.","","Requests a specific title for the window.","","","","","Sets whether the background of the window should be …","Sets whether the window will be initially hidden or …","Sets the window icon.","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0,0,0,3,4,5,6,1,2,3,4,5,6,1,2,7,3,4,5,6,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,3,3,4,4,4,5,5,5,6,6,6,1,1,1,2,2,2,7,4,6,3,5,6,5,6,3,3,3,4,4,4,5,5,5,6,6,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,4,6,1,2,3,4,5,6,1,2,3,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,0,5,6,3,4,3,4,8,9,10,11,0,12,0,12,0,12,13,14,12,13,14,13,13,12,12,13,13,14,14,12,13,14,12,13,14,13,12,13,14,12,13,14,12,13,14,12,13,14,15,16,17,18,17,17,19,17,17,17,17,17,0,20,17,17,17,19,0,17,18,17,21,22,17,17,20,17,17,17,17,17,20,20,20,17,17,17,20,0,23,0,17,20,17,0,17,22,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,20,0,17,17,17,17,20,20,17,24,17,17,17,17,17,19,17,17,17,17,17,17,17,17,17,17,0,20,17,17,17,17,18,17,17,25,17,26,23,17,17,23,17,17,25,17,20,0,19,0,20,19,0,20,19,20,22,17,17,17,17,17,23,17,17,21,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,25,17,17,17,17,17,17,26,17,17,24,17,27,17,17,17,17,17,17,17,17,20,23,23,27,19,20,24,23,17,25,17,17,18,20,0,17,17,17,17,17,17,0,22,17,23,17,17,17,19,20,0,20,0,20,17,17,17,17,23,17,0,17,17,17,24,17,17,17,17,17,17,17,17,0,23,17,17,17,17,18,18,18,18,18,18,18,18,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,28,17,18,18,18,18,18,30,18,28,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,18,18,18,18,30,23,24,20,28,19,29,22,30,21,27,25,26,17,18,18,18,18,18,28,29,22,27,25,17,18,30,18,18,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,18,18,30,18,23,29,23,24,20,28,19,29,30,21,25,26,18,21,18,28,17,18,30,18,29,18,18,29,18,18,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,20,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,23,24,20,28,19,29,22,30,21,27,25,26,17,18,18,29,31,32,33,34,35,36,33,32,37,38,39,40,41,40,41,42,43,43,43,44,45,46,45,47,48,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,60,59,65,58,61,61,62,60,59,66,60,62,65,66,65,59,58,67,0,0,0,0,0,68,68,68,68,69,70,69,71,68,67,70,69,71,68,67,71,68,67,71,68,67,70,68,70,68,67,70,69,71,68,67,67,70,69,71,68,67,67,69,69,70,69,71,68,67,68,67,70,69,70,70,71,71,68,67,67,70,69,71,68,67,70,69,71,68,67,70,69,71,68,67,70,72,0,0,73,73,74,73,74,73,74,73,74,73,74,73,74,73,73,74,73,74,73,73,74,73,74,74,73,74,74,73,74,74,73,74,73,74,73,74,73,73,74,73,74,73,74,74,0,0,75,0,0,0,75,75,0,0,75,75,75,75,75,75,75,75,76,77,77,75,78,78,76,76,76,76,76,75,75,75,75,79,79,79,79,79,79,79,79,79,79,0,80,80,81,81,81,0,82,83,81,81,81,81,84,81,0,85,81,83,81,81,82,0,81,81,81,81,0,84,85,81,81,81,81,81,81,81,81,81,83,81,81,81,81,81,81,0,0,81,81,81,0,0,0,0,81,81,86,87,87,83,88,89,90,86,81,82,85,84,87,83,88,89,90,86,81,82,85,84,90,88,89,90,86,81,82,85,84,88,89,90,86,81,82,85,84,89,87,86,90,86,81,84,87,89,89,81,82,85,84,87,83,83,88,89,90,86,81,82,85,84,87,83,88,89,90,86,81,82,85,84,88,87,86,87,89,81,87,87,87,86,87,83,88,89,90,86,81,82,85,84,86,86,86,89,82,87,90,87,87,87,87,89,87,87,87,87,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,83,86,88,89,90,86,81,82,85,84,83,86,87,83,88,89,90,86,81,82,85,84,87,83,88,89,90,86,81,82,85,84,87,83,88,89,90,86,81,82,85,84,86,90,86,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,92,93,93,93,93,94,95],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["pixel",8]],[[["logicalposition",3,[["pixel",8]]]],["logicalposition",3,[["pixel",8]]]],[[["physicalposition",3,[["pixel",8]]]],["physicalposition",3,[["pixel",8]]]],[[["logicalsize",3,[["pixel",8]]]],["logicalsize",3,[["pixel",8]]]],[[["physicalsize",3,[["pixel",8]]]],["physicalsize",3,[["pixel",8]]]],[[["logicalposition",3,[["clone",8]]]],["logicalposition",3,[["clone",8]]]],[[["physicalposition",3,[["clone",8]]]],["physicalposition",3,[["clone",8]]]],[[["logicalsize",3,[["clone",8]]]],["logicalsize",3,[["clone",8]]]],[[["physicalsize",3,[["clone",8]]]],["physicalsize",3,[["clone",8]]]],[[["size",4]],["size",4]],[[["position",4]],["position",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["logicalposition",3,[["partialeq",8]]],["logicalposition",3]],["bool",0]],[[["physicalposition",3,[["partialeq",8]]],["physicalposition",3]],["bool",0]],[[["logicalsize",3,[["partialeq",8]]],["logicalsize",3]],["bool",0]],[[["physicalsize",3,[["partialeq",8]]],["physicalsize",3]],["bool",0]],[[["size",4],["size",4]],["bool",0]],[[["position",4],["position",4]],["bool",0]],[[["logicalposition",3,[["debug",8]]],["formatter",3]],["result",6]],[[["physicalposition",3,[["debug",8]]],["formatter",3]],["result",6]],[[["logicalsize",3,[["debug",8]]],["formatter",3]],["result",6]],[[["physicalsize",3,[["debug",8]]],["formatter",3]],["result",6]],[[["size",4],["formatter",3]],["result",6]],[[["position",4],["formatter",3]],["result",6]],[[]],[[],["logicalposition",3,[["pixel",8]]]],[[],["logicalposition",3,[["pixel",8]]]],[[],["physicalposition",3,[["pixel",8]]]],[[]],[[],["physicalposition",3,[["pixel",8]]]],[[],["logicalsize",3,[["pixel",8]]]],[[],["logicalsize",3,[["pixel",8]]]],[[]],[[],["physicalsize",3,[["pixel",8]]]],[[],["physicalsize",3,[["pixel",8]]]],[[]],[[["logicalsize",3,[["pixel",8]]]],["size",4]],[[]],[[["physicalsize",3,[["pixel",8]]]],["size",4]],[[]],[[["logicalposition",3,[["pixel",8]]]],["position",4]],[[["physicalposition",3,[["pixel",8]]]],["position",4]],[[["f64",0]]],[[["into",8,[["logicalposition",3,[["pixel",8]]]]],["f64",0]],["physicalposition",3,[["pixel",8]]]],[[["into",8,[["logicalsize",3,[["pixel",8]]]]],["f64",0]],["physicalsize",3,[["pixel",8]]]],[[["into",8,[["physicalposition",3,[["pixel",8]]]]],["f64",0]],["logicalposition",3,[["pixel",8]]]],[[["into",8,[["physicalsize",3,[["pixel",8]]]]],["f64",0]],["logicalsize",3,[["pixel",8]]]],[[["physicalsize",3,[["hash",8]]],["",0]]],null,null,[[["logicalposition",3,[["pixel",8]]]]],[[]],[[["logicalposition",3,[["pixel",8]]]]],[[["physicalposition",3,[["pixel",8]]]]],[[]],[[["physicalposition",3,[["pixel",8]]]]],[[]],[[["logicalsize",3,[["pixel",8]]]]],[[["logicalsize",3,[["pixel",8]]]]],[[["physicalsize",3,[["pixel",8]]]]],[[["physicalsize",3,[["pixel",8]]]]],[[]],[[]],[[]],[[["logicalposition",3,[["partialeq",8]]],["logicalposition",3]],["bool",0]],[[["physicalposition",3,[["partialeq",8]]],["physicalposition",3]],["bool",0]],[[["logicalsize",3,[["partialeq",8]]],["logicalsize",3]],["bool",0]],[[["physicalsize",3,[["partialeq",8]]],["physicalsize",3]],["bool",0]],[[["size",4],["size",4]],["bool",0]],[[["position",4],["position",4]],["bool",0]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[["into",8,[["size",4]]]],["size",4]],[[["into",8,[["position",4]]]],["position",4]],[[["physicalposition",3,[["pixel",8]]],["f64",0]],["logicalposition",3,[["pixel",8]]]],[[["physicalsize",3,[["pixel",8]]],["f64",0]],["logicalsize",3,[["pixel",8]]]],[[["size",4],["f64",0]],["logicalsize",3,[["pixel",8]]]],[[["position",4],["f64",0]],["logicalposition",3,[["pixel",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["logicalposition",3,[["pixel",8]]],["f64",0]],["physicalposition",3,[["pixel",8]]]],[[["logicalsize",3,[["pixel",8]]],["f64",0]],["physicalsize",3,[["pixel",8]]]],[[["size",4],["f64",0]],["physicalsize",3,[["pixel",8]]]],[[["position",4],["f64",0]],["physicalposition",3,[["pixel",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["f64",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["notsupportederror",3]],["notsupportederror",3]],[[["",0],["",0]]],[[["externalerror",4],["formatter",3]],["result",4,[["error",3]]]],[[["externalerror",4],["formatter",3]],["result",6]],[[["notsupportederror",3],["formatter",3]],["result",4,[["error",3]]]],[[["notsupportederror",3],["formatter",3]],["result",4,[["error",3]]]],[[["oserror",3],["formatter",3]],["result",6]],[[["oserror",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifiersstate",3]],[[["modifiersstate",3]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3]],["u32",0]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstateevent",4,[["clone",8]]]],["event",4,[["clone",8]]]],[[["startcause",4]],["startcause",4]],[[["windowevent",4]],["windowevent",4]],[[["deviceid",3]],["deviceid",3]],[[["deviceevent",4]],["deviceevent",4]],[[["keyboardinput",3]],["keyboardinput",3]],[[["touchphase",4]],["touchphase",4]],[[["touch",3]],["touch",3]],[[["force",4]],["force",4]],[[["elementstate",4]],["elementstate",4]],[[["mousebutton",4]],["mousebutton",4]],[[["mousescrolldelta",4]],["mousescrolldelta",4]],[[["virtualkeycode",4]],["virtualkeycode",4]],[[["modifiersstate",3]],["modifiersstate",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["deviceid",3],["deviceid",3]],["ordering",4]],[[["virtualkeycode",4],["virtualkeycode",4]],["ordering",4]],[[["modifiersstate",3],["modifiersstate",3]],["ordering",4]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["modifiersstate",3]],["bool",0]],[[],["modifiersstate",3]],null,[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[],["deviceid",3]],[[],["modifiersstate",3]],[[["event",4,[["partialeq",8]]],["event",4]],["bool",0]],[[["startcause",4],["startcause",4]],["bool",0]],[[["windowevent",4],["windowevent",4]],["bool",0]],[[["deviceid",3],["deviceid",3]],["bool",0]],[[["deviceevent",4],["deviceevent",4]],["bool",0]],[[["keyboardinput",3],["keyboardinput",3]],["bool",0]],[[["touchphase",4],["touchphase",4]],["bool",0]],[[["touch",3],["touch",3]],["bool",0]],[[["force",4],["force",4]],["bool",0]],[[["elementstate",4],["elementstate",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["mousescrolldelta",4],["mousescrolldelta",4]],["bool",0]],[[["virtualkeycode",4],["virtualkeycode",4]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["modifiersstate",3],["intoiterator",8]]],[[["event",4,[["debug",8]]],["formatter",3]],["result",6]],[[["startcause",4],["formatter",3]],["result",6]],[[["windowevent",4],["formatter",3]],["result",6]],[[["deviceid",3],["formatter",3]],["result",6]],[[["deviceevent",4],["formatter",3]],["result",6]],[[["keyboardinput",3],["formatter",3]],["result",6]],[[["touchphase",4],["formatter",3]],["result",6]],[[["touch",3],["formatter",3]],["result",6]],[[["force",4],["formatter",3]],["result",6]],[[["elementstate",4],["formatter",3]],["result",6]],[[["mousebutton",4],["formatter",3]],["result",6]],[[["mousescrolldelta",4],["formatter",3]],["result",6]],[[["virtualkeycode",4],["formatter",3]],["result",6]],[[["modifiersstate",3],["formatter",3]],["result",6]],[[["modifiersstate",3],["formatter",3]],["result",6]],[[["modifiersstate",3],["formatter",3]],["result",6]],[[["modifiersstate",3],["formatter",3]],["result",6]],[[["modifiersstate",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["option",4,[["modifiersstate",3]]]],[[["u32",0]],["modifiersstate",3]],[[["u32",0]],["modifiersstate",3]],[[["intoiterator",8]],["modifiersstate",3]],[[["deviceid",3],["",0]]],[[["keyboardinput",3],["",0]]],[[["touchphase",4],["",0]]],[[["elementstate",4],["",0]]],[[["mousebutton",4],["",0]]],[[["virtualkeycode",4],["",0]]],[[["modifiersstate",3],["",0]]],null,[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modifiersstate",3]],["bool",0]],[[["modifiersstate",3]],["bool",0]],null,[[["modifiersstate",3]],["bool",0]],[[["event",4]],["result",4,[["event",4],["event",4]]]],null,[[["event",4,[["partialeq",8]]],["event",4]],["bool",0]],[[["startcause",4],["startcause",4]],["bool",0]],[[["windowevent",4],["windowevent",4]],["bool",0]],[[["deviceid",3],["deviceid",3]],["bool",0]],[[["deviceevent",4],["deviceevent",4]],["bool",0]],[[["keyboardinput",3],["keyboardinput",3]],["bool",0]],[[["touch",3],["touch",3]],["bool",0]],[[["force",4],["force",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["mousescrolldelta",4],["mousescrolldelta",4]],["bool",0]],[[["modifiersstate",3],["modifiersstate",3]],["bool",0]],[[["force",4]],["f64",0]],[[["modifiersstate",3]],["modifiersstate",3]],[[["deviceid",3],["deviceid",3]],["option",4,[["ordering",4]]]],[[["virtualkeycode",4],["virtualkeycode",4]],["option",4,[["ordering",4]]]],[[["modifiersstate",3],["modifiersstate",3]],["option",4,[["ordering",4]]]],null,[[["modifiersstate",3],["modifiersstate",3]]],null,[[["modifiersstate",3],["modifiersstate",3],["bool",0]]],[[["modifiersstate",3]],["bool",0]],null,[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3],["modifiersstate",3]]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["event",4]],["option",4,[["event",4]]]],[[["windowevent",4]],["option",4,[["windowevent",4]]]],[[["modifiersstate",3],["modifiersstate",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["modifiersstate",3],["modifiersstate",3]],["modifiersstate",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventloopwindowtarget",3]],["iterator",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["eventloopproxy",3]],["eventloopproxy",3]],[[["controlflow",4]],["controlflow",4]],[[["eventloopclosed",3,[["clone",8]]]],["eventloopclosed",3,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["eventloop",3]],["eventloopproxy",3]],[[],["controlflow",4]],[[["eventloop",3]],["eventloopwindowtarget",3]],[[["controlflow",4],["controlflow",4]],["bool",0]],[[["eventloopclosed",3,[["partialeq",8]]],["eventloopclosed",3]],["bool",0]],[[["eventloop",3],["formatter",3]],["result",6]],[[["eventloopwindowtarget",3],["formatter",3]],["result",6]],[[["eventloopproxy",3],["formatter",3]],["result",6]],[[["controlflow",4],["formatter",3]],["result",6]],[[["eventloopclosed",3],["formatter",3]],["result",6]],[[["eventloopclosed",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["eventloopclosed",3,[["hash",8]]],["",0]]],[[["eventloopwindowtarget",3]]],[[["eventloopwindowtarget",3]]],[[]],[[]],[[]],[[]],[[]],[[["controlflow",4],["controlflow",4]],["bool",0]],[[["eventloopclosed",3,[["partialeq",8]]],["eventloopclosed",3]],["bool",0]],[[],["eventloop",3]],[[["eventloopwindowtarget",3]],["option",4,[["monitorhandle",3]]]],[[["eventloop",3]],["never",0]],[[["eventloop",3]]],[[["eventloopproxy",3]],["result",4,[["eventloopclosed",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["eventloop",3]],null,null,null,[[["videomode",3]],["u16",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["videomode",3]],["videomode",3]],[[["monitorhandle",3]],["monitorhandle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["videomode",3],["videomode",3]],["ordering",4]],[[["monitorhandle",3],["monitorhandle",3]],["ordering",4]],[[["videomode",3],["videomode",3]],["bool",0]],[[["monitorhandle",3],["monitorhandle",3]],["bool",0]],[[["videomode",3],["formatter",3]],["result",6]],[[["videomode",3],["formatter",3]],["result",6]],[[["monitorhandle",3],["formatter",3]],["result",6]],[[]],[[]],[[["videomode",3],["",0]]],[[]],[[]],[[["videomode",3]],["monitorhandle",3]],[[["monitorhandle",3]],["option",4,[["string",3]]]],[[["monitorhandle",3]],["u32",0]],[[["videomode",3],["videomode",3]],["bool",0]],[[["monitorhandle",3],["monitorhandle",3]],["bool",0]],[[["monitorhandle",3]],["option",4,[["c_void",0]]]],[[["videomode",3],["videomode",3]],["option",4,[["ordering",4]]]],[[["monitorhandle",3],["monitorhandle",3]],["option",4,[["ordering",4]]]],[[["monitorhandle",3]],["physicalposition",3,[["i32",0]]]],[[["videomode",3]],["u16",0]],[[["monitorhandle",3]],["f64",0]],[[["videomode",3]],["physicalsize",3,[["u32",0]]]],[[["monitorhandle",3]],["physicalsize",3,[["u32",0]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["monitorhandle",3]],["iterator",8]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["activationpolicy",4]],["activationpolicy",4]],[[["",0],["",0]]],[[],["activationpolicy",4]],[[["activationpolicy",4],["activationpolicy",4]],["bool",0]],[[["activationpolicy",4],["formatter",3]],["result",6]],[[]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[]],[[["",0]],["u32",0]],[[["",0]],["option",4,[["c_void",0]]]],[[["",0]],["c_void",0]],[[["",0]],["c_void",0]],[[["",0],["bool",0]]],[[["",0],["bool",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["activationpolicy",4]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["logicalsize",3,[["f64",0]]]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],[[["bool",0]],["windowbuilder",3]],null,null,[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["window",3]],["iterator",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["windowbuilder",3],["eventloopwindowtarget",3]],["result",4,[["window",3],["oserror",3]]]],[[["icon",3]],["icon",3]],[[["windowid",3]],["windowid",3]],[[["windowbuilder",3]],["windowbuilder",3]],[[["windowattributes",3]],["windowattributes",3]],[[["cursoricon",4]],["cursoricon",4]],[[["fullscreen",4]],["fullscreen",4]],[[["theme",4]],["theme",4]],[[["userattentiontype",4]],["userattentiontype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["windowid",3],["windowid",3]],["ordering",4]],[[["window",3]],["option",4,[["monitorhandle",3]]]],null,[[],["windowbuilder",3]],[[],["windowattributes",3]],[[],["cursoricon",4]],[[],["userattentiontype",4]],[[["window",3]]],[[],["windowid",3]],[[["windowid",3],["windowid",3]],["bool",0]],[[["cursoricon",4],["cursoricon",4]],["bool",0]],[[["fullscreen",4],["fullscreen",4]],["bool",0]],[[["theme",4],["theme",4]],["bool",0]],[[["userattentiontype",4],["userattentiontype",4]],["bool",0]],[[["window",3],["formatter",3]],["result",6]],[[["badicon",4],["formatter",3]],["result",6]],[[["badicon",4],["formatter",3]],["result",6]],[[["icon",3],["formatter",3]],["result",4,[["error",3]]]],[[["windowid",3],["formatter",3]],["result",6]],[[["windowbuilder",3],["formatter",3]],["result",6]],[[["windowattributes",3],["formatter",3]],["result",6]],[[["cursoricon",4],["formatter",3]],["result",6]],[[["fullscreen",4],["formatter",3]],["result",6]],[[["theme",4],["formatter",3]],["result",6]],[[["userattentiontype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,[["u8",0]]],["u32",0],["u32",0]],["result",4,[["icon",3],["badicon",4]]]],[[["window",3]],["option",4,[["fullscreen",4]]]],null,[[["window",3]],["bool",0]],[[["windowid",3],["",0]]],[[["cursoricon",4],["",0]]],[[["window",3]],["windowid",3]],[[["window",3]],["result",4,[["physicalposition",3,[["i32",0]]],["notsupportederror",3]]]],[[["window",3]],["physicalsize",3,[["u32",0]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["windowid",3],["windowid",3]],["bool",0]],[[["fullscreen",4],["fullscreen",4]],["bool",0]],[[["eventloopwindowtarget",3]],["result",4,[["window",3],["oserror",3]]]],[[],["windowbuilder",3]],[[["window",3]],["c_void",0]],[[["window",3]],["c_void",0]],[[["window",3]],["result",4,[["physicalposition",3,[["i32",0]]],["notsupportederror",3]]]],[[["window",3]],["physicalsize",3,[["u32",0]]]],[[["windowid",3],["windowid",3]],["option",4,[["ordering",4]]]],[[["window",3]],["option",4,[["monitorhandle",3]]]],[[["window",3]],["rawwindowhandle",4]],[[["window",3]]],[[["window",3],["option",4,[["userattentiontype",4]]]]],null,[[["window",3]],["f64",0]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]],["result",4,[["externalerror",4]]]],[[["window",3],["cursoricon",4]]],[[["window",3],["into",8,[["position",4]]]],["result",4,[["externalerror",4]]]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]]],[[["window",3],["option",4,[["fullscreen",4]]]]],[[["window",3],["bool",0]]],[[["window",3],["into",8,[["position",4]]]]],[[["window",3],["into",8,[["size",4]]]]],[[["window",3],["option",4,[["into",8,[["size",4]]]]]]],[[["window",3],["bool",0]]],[[["window",3],["option",4,[["into",8,[["size",4]]]]]]],[[["window",3],["bool",0]]],[[["window",3],["into",8,[["position",4]]]]],[[["window",3],["bool",0]]],[[["window",3],["bool",0]],["bool",0]],[[["window",3],["str",0]]],[[["window",3],["bool",0]]],[[["window",3],["option",4,[["icon",3]]]]],[[["window",3]],["bool",0]],[[["badicon",4]],["option",4,[["error",8]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["windowbuilder",3],["activationpolicy",4]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["option",4,[["fullscreen",4]]]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["into",8,[["size",4]]]],["windowbuilder",3]],[[["windowbuilder",3],["into",8,[["size",4]]]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["into",8,[["size",4]]]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["logicalsize",3,[["f64",0]]]],["windowbuilder",3]],[[["windowbuilder",3],["into",8,[["string",3]]]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["bool",0]],["windowbuilder",3]],[[["windowbuilder",3],["option",4,[["icon",3]]]],["windowbuilder",3]],null,null,null,null,null,null,null,null],"p":[[4,"Size"],[4,"Position"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[8,"Pixel"],[13,"Physical"],[13,"Logical"],[13,"Physical"],[13,"Logical"],[4,"ExternalError"],[3,"NotSupportedError"],[3,"OsError"],[13,"NotSupported"],[13,"Os"],[4,"VirtualKeyCode"],[3,"ModifiersState"],[4,"DeviceEvent"],[4,"WindowEvent"],[4,"Force"],[4,"TouchPhase"],[4,"Event"],[4,"StartCause"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"ElementState"],[3,"DeviceId"],[3,"KeyboardInput"],[3,"Touch"],[13,"Key"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"NewEvents"],[13,"UserEvent"],[13,"RedrawRequested"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Normalized"],[13,"Calibrated"],[13,"Other"],[13,"LineDelta"],[13,"PixelDelta"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"Resized"],[13,"Moved"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"ReceivedCharacter"],[13,"Focused"],[13,"ModifiersChanged"],[13,"Touch"],[13,"ThemeChanged"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[3,"EventLoopClosed"],[4,"ControlFlow"],[3,"EventLoopWindowTarget"],[3,"EventLoop"],[3,"EventLoopProxy"],[13,"WaitUntil"],[3,"VideoMode"],[3,"MonitorHandle"],[4,"ActivationPolicy"],[8,"WindowExtMacOS"],[8,"EventLoopWindowTargetExtMacOS"],[8,"MonitorHandleExtMacOS"],[8,"WindowBuilderExtMacOS"],[8,"EventLoopExtRunReturn"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"BadIcon"],[4,"UserAttentionType"],[4,"Theme"],[3,"WindowAttributes"],[3,"Window"],[3,"Icon"],[3,"WindowId"],[3,"WindowBuilder"],[13,"OsError"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[13,"Exclusive"],[13,"Borderless"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
